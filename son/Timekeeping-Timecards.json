{
  "swagger" : "2.0", 
  "produces" : null, 
  "host" : "", 
  "info" : {
    "description" : "Rest APIs", 
    "title" : "Rest APIs", 
    "version" : "1.0"
  }, 
  "basePath" : "/", 
  "tags" : [ {
    "description" : "<p markdown=\"1\">From here you may browse our library of API resources, organized hierarchically by domain, or major functional area, logical subgroup, API resource, and all available operations against that resource. For more information about the concepts and technology behind our API, refer to the [Getting started](C:636f581c-50a8-41a7-af43-e5057f9c20bd) documentation.</p><p>Our platform provides a powerful application programming interface and documentation to help you develop secure, scalable, and high-performance applications that leverage the full breadth of capabilities offered by our backend services.</p><p markdown=\"1\">The Workforce Management suite's API is founded on a pragmatic implementation of the [representational state transfer](http://en.wikipedia.org/wiki/Representational_State_Transfer) architectural style and allows access to your organization's workforce management data using common HTTP methods and the [JSON](http://www.json.org) interchange format.</p>", 
    "name" : "API"
  }, {
    "description" : "This resource allows you to retrieve Timecard Add-On columns for a specified Timecard Add-On type.", 
    "name" : "Timecard Add-On Columns", 
    "x-parent" : "Timekeeping Timecards"
  }, {
    "description" : "<p>This resource allows you retrieve and manipulate Timecard Add-On profiles.</p><p>A Timecard Add-On profile allows you to customize a Timecard Add-On view, which determines what each employee sees in their Timecard Add-On user interface. Such view settings include the columns displayed and their labels, widths, and default visibilities.</p>", 
    "name" : "Timecard Add-On Profiles", 
    "x-parent" : "Timekeeping Timecards"
  }, {
    "description" : "This resource allows you to retrieve all available Timecard Add-On types.", 
    "name" : "Timecard Add-On Types", 
    "x-parent" : "Timekeeping Timecards"
  }, {
    "description" : "<p>The Timecard Approvals for Employee resource allows the logged-in employee to add, retrieve, and delete (remove) approval of his or her own timecard.", 
    "name" : "Timecard Approvals for Employee", 
    "x-parent" : "Timekeeping Timecards"
  }, {
    "description" : "<p>The Timecard Approvals for Manager resource allows a manager to add, retrieve, and delete (remove) manager approval of employee timecards.</p><p>Typically, after employees approve their timecards, a manager also reviews and approves them. Depending on the manager's access, the manager may also be able remove her approval to edit employee timecards or even edit them without removing her approval.</p><p>When employee timecards are ready for payroll processing, the manager signs off their timecards. Depending on the manager's access, she may also be able to remove her signoff to make additional changes. She cannot remove the approval after the timecard is signed off unless she removes her signoff first.</p><p>Before a manager approves or signs off a timecard, she should resolve any exceptions.</p>", 
    "name" : "Timecard Approvals for Manager", 
    "x-parent" : "Timekeeping Timecards"
  }, {
    "description" : "<p>This resource allows you to retrieve, approve, or refuse timecard changes submitted by employees.</p>", 
    "name" : "Timecard Changes", 
    "x-parent" : "Timekeeping Timecards"
  }, {
    "description" : "<p>This resource allows you to retrieve timecard changes submitted by employees and designed to use in Reports.</p>", 
    "name" : "Timecard Changes for Reports", 
    "x-parent" : "Timekeeping Timecards"
  }, {
    "description" : "This resource allows you to access a range of metrics related to employee timecards, such as averages, exception counts, data related to full time and part time employees, projected, scheduled, actual, and corrected totals, accrual transactions and summaries, and total summaries broken down by projected, scheduled, and actual for shift totals and daily totals.", 
    "name" : "Timecard Metrics", 
    "x-parent" : "Timekeeping Timecards"
  }, {
    "description" : "<p>This resource allows you access to timecard settings. Operations against this resource allow you to create, read, update, and delete timecard settings data.</p><p>A timecard setting allows you to define what each employee sees in his or her timecard user interface. Such settings include the types of actions each employee can perform and which addons are displayed.</p><p>These settings apply only to the suite's main user interface and do not allow control over any aspect of third-party user interfaces built on the API.</p>", 
    "name" : "Timecard Settings", 
    "x-parent" : "Timekeeping Timecards"
  }, {
    "description" : "<p>This powerful resource allows you to retrieve and update employee timecards as either an employee or a manager.</p><p>You can retrieve an employee's timecard as an employee or manager, or retrieve a list of timecards for multiple employees by providing employee identifiers or Hyperfind query details.</p><p>You can update virtually any aspect of an employee timecard, including totals, exceptions, punches, comments on punches and paycode edits, transfers, cost centers, pay rules, and annotations. Timecard updates support Pay from Schedule functionality. Please see the request model for each update operation for more information about incorporating timecards into your application.</p><h3>Qualifiers</h3><p>The following qualifiers apply to operations against the Timecard resource:</p><ul><li>The Hyperfind qualifier is the Hyperfind name.</li><li>The Symbolic Period qualifier is the pay period name.</li><li>The Employee qualifier is the person number.</li></ul>", 
    "name" : "Timecards", 
    "x-parent" : "Timekeeping Timecards"
  }, {
    "description" : "<p>This domain allows you to access and configure Timekeeping timecards, which allow employees to enter their time, confirm the accuracy of work records, confirm that no unauthorized edits were made, and, in some cases, correct exceptions.</p><p markdown=\"1\">Refer to the [Timekeeping overview](C:ad29a8be-acb9-4507-b489-3f67c4a2e4ae) topic in [Domain overviews](C:f2ccfb74-38e7-466a-a7c7-acddc3d2d00c) for more information.</p>", 
    "name" : "Timekeeping Timecards", 
    "x-parent" : "API"
  } ], 
  "paths" : {
    "/v1/timekeeping/employee_timecard" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns an employee timecard. Required parameters include employee ID or person number along with a date range or symbolic period ID.", 
        "operationId" : "Retrieve Timecard as Employee", 
        "parameters" : [ {
          "description" : "Determines the objects returned in the timecard request response. If a unique resource is not specified in the request, all resources are returned. Possible values include: PROCESSED_SEGMENTS, PROJECTS, PUNCHES, WORKED_SHIFTS, PAYCODE_EDITS, MOVE_AMOUNTS, HOURS_WORKED, HOLIDAY_CREDITS, EXCEPTIONS, EXTENDED_EXCEPTIONS, TOTAL_SUMMARY, DAILY_TOTAL_SUMMARY, ITEM_TOTAL_SUMMARY, TOTALS, SIGNOFF, REMOVE_SIGNOFF, APPROVAL, REMOVE_APPROVAL, TOTALIZE, SAVE, HISTORICAL_CORRECTIONS, OVERTIME_SUMMARY, OVERTIME_DETAILS, TIMECARD_LAST_UPDATED_BY_SOMEELSE, OTA, HAS_PENDING_CHANGES, HAS_MOVE_AMOUNTS, MISSINGTIME_GROUP, TOTALIZATION_STATUS,  ACTIVITY_SEGMENTS, ACTIVITY_SHIFTS, ACTIVITY_TOTALS", 
          "enum" : [ "PROCESSED_SEGMENTS, PROJECTS, PUNCHES, WORKED_SHIFTS, PAYCODE_EDITS, MOVE_AMOUNTS, HOURS_WORKED, HOLIDAY_CREDITS, EXCEPTIONS, EXTENDED_EXCEPTIONS, TOTAL_SUMMARY, DAILY_TOTAL_SUMMARY, ITEM_TOTAL_SUMMARY, TOTALS, SIGNOFF, REMOVE_SIGNOFF, APPROVAL, REMOVE_APPROVAL, TOTALIZE, SAVE, HISTORICAL_CORRECTIONS, OVERTIME_SUMMARY, OVERTIME_DETAILS, TIMECARD_LAST_UPDATED_BY_SOMEELSE, OTA, HAS_PENDING_CHANGES, HAS_MOVE_AMOUNTS, MISSINGTIME_GROUP, TOTALIZATION_STATUS,  ACTIVITY_SEGMENTS, ACTIVITY_SHIFTS, ACTIVITY_TOTALS" ], 
          "in" : "query", 
          "name" : "select", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The start date in ISO_LOCAL_DATE format (YYYY-MM-DD). Mutually exclusive with symbolic period, but either a symbolic period or a date range consisting of a start date and end date is required.", 
          "in" : "query", 
          "name" : "start_date", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The end date in ISO_LOCAL_DATE format (YYYY-MM-DD). Mutually exclusive with symbolic period, but either a symbolic period or a date range consisting of a start date and end date is required.", 
          "in" : "query", 
          "name" : "end_date", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "A symbolic identifier that represents a timeframe or a span of time. Mutually exclusive with start date and end date, but either a symbolic period or a date range consisting of a start date and end date is required.", 
          "enum" : [ "Previous_Payperiod", "Current_Payperiod", "Next_Payperiod", "Current_SchedPeriod", "Previous_SchedPeriod", "Next_SchedPeriod", "Week_to_Date", "Last_Week", "Yesterday", "Range_Of_Dates", "Range_of_Relative_Dates", "Specific_Date", "Relative_Specific_Date", "Today" ], 
          "in" : "query", 
          "name" : "symbolic_period_id", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "An ID that uniquely identifies an employee. This is not a person number.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "employee_id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "A unique identifier for a person. This is not an employee ID.", 
          "in" : "query", 
          "name" : "person_number", 
          "required" : true, 
          "type" : "string"
        }, {
          "default" : true, 
          "description" : "A Boolean indicator of whether or not to break up a worked shift at calendar day midnight when the shift crosses from one calendar day to another.", 
          "in" : "query", 
          "name" : "breakUpAtMidnight", 
          "required" : false, 
          "type" : "boolean"
        }, {
          "default" : true, 
          "description" : "A Boolean indicator of whether or not to include phantom punches.", 
          "in" : "query", 
          "name" : "include_phantom_punches", 
          "required" : false, 
          "type" : "boolean"
        }, {
          "default" : false, 
          "description" : "A Boolean indicator of whether or not to include Kinds Of Time segments.", 
          "in" : "query", 
          "name" : "include_kind_of_time_segments", 
          "required" : false, 
          "type" : "boolean"
        }, {
          "default" : true, 
          "description" : "A Boolean indicator of whether or not totals should be shown when they are for for paycodes that have been configured to be hidden.", 
          "in" : "query", 
          "name" : "show_totals_with_hidden_paycodes", 
          "required" : false, 
          "type" : "boolean"
        }, {
          "description" : "The ID of the desired activity for retrieval of the activity data types.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "activity_id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "The name of the desired activity for retrieval of the activity data types.", 
          "in" : "query", 
          "name" : "activity_name", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The ID of the desired shift for retrieval of the activity data types.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "shift_id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "A Boolean indicator of whether or not to consolidate scheduled segments of a worked shift.", 
          "in" : "query", 
          "name" : "consolidate_schedule_segments", 
          "required" : false, 
          "type" : "boolean"
        }, {
          "description" : "The criteria by which totals have been rolled up.", 
          "enum" : [ "ALL", "SHIFT", "TIMEITEM", "DAILY", "PERIOD_TO_DATE", "ACTIVITY_EVENT", "RAW" ], 
          "in" : "query", 
          "name" : "totals_rollup_by", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The date for which or until which totals are calculated in ISO_LOCAL_DATE format (YYYY-MM-DD). Must be within the given start_date and end_date or the time frame represented by a provided symbolic timeframe ID.", 
          "in" : "query", 
          "name" : "context_date", 
          "required" : false, 
          "type" : "string"
        }, {
          "default" : true, 
          "description" : "A Boolean indicator of whether or not totals include combined paycodes.", 
          "in" : "query", 
          "name" : "totals_include_combined_paycodes", 
          "required" : false, 
          "type" : "boolean"
        }, {
          "description" : "The Associate Object ID (AOID) of a person in the system.", 
          "in" : "query", 
          "name" : "aoid", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The Client Object ID (COID) of a person in the system.", 
          "in" : "query", 
          "name" : "coid", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved timecard by employee and timeframe", 
            "schema" : {
              "$ref" : "#/definitions/TimeCardForRest"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Atleast two attributes must be provided</li><li>Start Date & End Date must be in ISO_LOCAL_DATE format</li><li>Time Frame id must be provided</li><li>[WTK-145020] - The following value is invalid: select.</li><li>[WTK-112002] - Missing object ref for object ref lookup</li><li>[WTK-145051] - Service Limits are exceeded when you request the {SERVICE_NAME}  for {NUMBER_ENTRIES} employees and {NUMBER_DAYS} days. Submit the request again but with a number of employees that does not exceed the service limit {LIMIT}.</li><li>[WTK-145025] - Please provide person number OR employee ID OR AOID.</li><li>[WTK-145026] - Please provide COID along with AOID.</li><li>[WTK-145027] - No person exist for the provided AOID/COID in our system.</li></ul>"
          }
        }, 
        "summary" : "Returns an employee timecard by employee and timeframe.", 
        "tags" : [ "Timecards" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates a timecard for an employee as an employee. You can add, update, or delete punches, paycode edits, hours worked, and/or exception Comments.</p> <p><b>Notes for Removing and Updating Punches, Paycode Edits, and Hours Worked</b><p> <li>When updating Punches, provide at least the punch ID, punchDtm, and employee</li> <li>When updating paycodes, provide at least the employee, paycode, amountType, applyDate, and the duration (durationInDays, durationinHours, or moneyAmount)</li> <li>When updating Hours Worked, provide at least hours worked ID, employee, duration, and startDateTime.</li><p><b>Note:</b> You cannot combine <code>calculateTotalsRequest</code> with any other <code>do</code> properties in the same request payload.</p>", 
        "operationId" : "Update Timecard as Employee", 
        "parameters" : [ {
          "description" : "The Update Timecard as Employee request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/TimeCardUpdateRequest"
          }
        }, {
          "in" : "header", 
          "name" : "udmHeader", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully updated timecard for an employee", 
            "schema" : {
              "$ref" : "#/definitions/TimeCardForRest"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Timecard changes request is required </li></ul>"
          }
        }, 
        "summary" : "Updates a timecard for an employee as an employee.", 
        "tags" : [ "Timecards" ]
      }
    }, 
    "/v1/timekeeping/employee_timecard/multi_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of timecards based on the employees or Hyperfind details provided. Required parameters include employee ID or person number along with a date range or symbolic period ID.</p><p>When <code>WORKED_SHIFTS</code> and <code>PUNCHES</code> are specified together in the request payload, the response automatically expands to include the day before and the day after the requested span in the punch object. For example, if you specify a single day in the request, the response includes punches for that day, the day before, and the day after.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of employees and the number of days that can be processed in a single request.</p><ul><li>The <strong>Number of Employees</strong> cannot exceed 500.</li><li>The <strong>Number of Days</strong> cannot exceed 365.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>", 
        "operationId" : "Retrieve Timecards as Employee", 
        "parameters" : [ {
          "description" : "The Retrieve Timecards as Employee request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Timecard find criteria"
          }
        }, {
          "default" : false, 
          "description" : "A Boolean indicator of whether or not processing continues if errors are encountered. Defaults to false.", 
          "in" : "query", 
          "name" : "partial_success", 
          "required" : false, 
          "type" : "boolean"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved timecards by employees/hyperfind and timeframe", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/TimeCardForRest"
              }, 
              "type" : "array"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Timecard changes request is required </li></ul>"
          }
        }, 
        "summary" : "Returns a list of timecards matching specified search criteria.", 
        "tags" : [ "Timecards" ]
      }
    }, 
    "/v1/timekeeping/employee_timecard_approvals" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation deletes/removes timecard approvals for the  logged-in employee and given date range.", 
        "operationId" : "Remove Timecard Approvals as Employee", 
        "parameters" : [ {
          "description" : "The start date of range for which approvals should be deleted.  This field can be ommitted if a symbolic period is specified.", 
          "in" : "query", 
          "name" : "start_date", 
          "required" : true, 
          "type" : "string"
        }, {
          "description" : "The end date of range for which approvals should be deleted. This field can be ommitted if a symbolic period is specified.", 
          "in" : "query", 
          "name" : "end_date", 
          "required" : true, 
          "type" : "string"
        }, {
          "description" : "The internal system identifier of a symbolic period for which approvals should be deleted.  This field can be ommitted if an explicit date range or symbolicPeriod is provided.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "symbolic_period_id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "The symbolic id of the symbolic period for which approvals should be deleted.  This field can be ommitted if an explicit date range or symbolicPeriodId is provided.", 
          "in" : "query", 
          "name" : "symbolic_period", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "Deletion successful."
          }, 
          "400" : {
            "description" : "Bad request. Deletion unsuccessful."
          }
        }, 
        "summary" : "Deletes/removes employee timecard approval for the logged-in employee and given date range.", 
        "tags" : [ "Timecard Approvals for Employee" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a list of timecard approvals within a date range.", 
        "operationId" : "Retrieve Timecard Approvals as Employee", 
        "parameters" : [ {
          "description" : "The start date of range for which approvals should be retrieved.  This field can be ommitted if a symbolic period is specified.", 
          "in" : "query", 
          "name" : "start_date", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The end date of range for which approvals should be retrieved. This field can be ommitted if a symbolic period is specified.", 
          "in" : "query", 
          "name" : "end_date", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The internal system identifier of a symbolic period for which approvals should be retrieved.  This field can be ommitted if an explicit date range or symbolicPeriod is provided.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "symbolic_period_id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "The symbolic ID of the symbolic period for which approvals should be retrieved.  This field can be ommitted if an explicit date range or symbolicPeriodId is provided.", 
          "in" : "query", 
          "name" : "symbolic_period", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/ApprovalResponseForRest"
              }, 
              "type" : "array"
            }
          }, 
          "400" : {
            "description" : "Bad Request: retrieval unsuccessful."
          }
        }, 
        "summary" : "Returns a list of timecard approvals for the  logged-in employee and given date range.", 
        "tags" : [ "Timecard Approvals for Employee" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation adds employee timecard approval for the  logged-in employee and given date range.", 
        "operationId" : "Approve Timecard as Employee", 
        "parameters" : [ {
          "description" : "The Approve Timecard as Employee request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/CommonDateRange"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Approval successful."
          }, 
          "400" : {
            "description" : "Bad Request: Approval unsuccessful."
          }
        }, 
        "summary" : "Adds a timecard approval.", 
        "tags" : [ "Timecard Approvals for Employee" ]
      }
    }, 
    "/v1/timekeeping/setup/timecard_addon_columns" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns Timecard Add-On columns by Timecard Add-On type.", 
        "operationId" : "Retrieve Timecard Add-On Columns", 
        "parameters" : [ {
          "description" : "The name of a Timecard Add-On type.", 
          "in" : "query", 
          "name" : "type", 
          "required" : true, 
          "type" : "string"
        }, {
          "description" : "The group of a Timecard Add-On type.", 
          "in" : "query", 
          "name" : "group", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved Timecard Add-On columns.", 
            "schema" : {
              "$ref" : "#/definitions/Key for MDUI related entities"
            }
          }
        }, 
        "summary" : "Returns Timecard Add-On columns.", 
        "tags" : [ "Timecard Add-On Columns" ]
      }
    }, 
    "/v1/timekeeping/setup/timecard_addon_profiles" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of all Timecard Add-On profiles.</p><br /><p>The associated Access Control Point is DISPLAY_PROFILES.</p>", 
        "operationId" : "Retrieve All Timecard Add-On Profiles", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of all Timecard Addon profiles.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/Timecard Add-On Profile"
              }, 
              "type" : "array"
            }
          }, 
          "403" : {
            "description" : "The current user does not have the permissions necessary to perform that operation."
          }
        }, 
        "summary" : "Returns a list of all Timecard Add-On profiles.", 
        "tags" : [ "Timecard Add-On Profiles" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation creates a Timecard Add-On profile.</p><br /><p>The associated Access Control Point is DISPLAY_PROFILES.</p>", 
        "operationId" : "Create Timecard Add-On Profile", 
        "parameters" : [ {
          "description" : "The Create Timecard Add-On Profile request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Timecard Add-On Profile"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "successful operation", 
            "schema" : {
              "$ref" : "#/definitions/Timecard Configuration object"
            }
          }, 
          "201" : {
            "description" : "Successfully created a Timecard Addon profile.", 
            "schema" : {
              "$ref" : "#/definitions/Timecard Add-On Profile"
            }
          }, 
          "403" : {
            "description" : "The current user does not have the permissions necessary to perform that operation."
          }
        }, 
        "summary" : "Creates a Timecard Add-On profile.", 
        "tags" : [ "Timecard Add-On Profiles" ]
      }
    }, 
    "/v1/timekeeping/setup/timecard_addon_profiles/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation deletes a Timecard Add-On profile by ID.</p><br /><p>The associated Access Control Point is DISPLAY_PROFILES.</p>", 
        "operationId" : "Delete Timecard Add-On Profile by ID", 
        "parameters" : [ {
          "description" : "The ID of a Timecard Add-On profile.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "Successfully deleted a Timecard Addon profile by ID."
          }, 
          "403" : {
            "description" : "The current user does not have the permissions necessary to perform that operation."
          }
        }, 
        "summary" : "Deletes a Timecard Add-On profile.", 
        "tags" : [ "Timecard Add-On Profiles" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a Timecard Add-On profile by ID.</p><br /><p>The associated Access Control Point is DISPLAY_PROFILES.</p>", 
        "operationId" : "Retrieve Timecard Add-On Profile by ID", 
        "parameters" : [ {
          "description" : "The ID of a Timecard Add-On profile.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a Timecard Addon profile by ID.", 
            "schema" : {
              "$ref" : "#/definitions/Timecard Configuration object"
            }
          }, 
          "403" : {
            "description" : "The current user does not have the permissions necessary to perform that operation."
          }
        }, 
        "summary" : "Returns a Timecard Add-On profile.", 
        "tags" : [ "Timecard Add-On Profiles" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates a Timecard Add-On profile by ID.</p><br /><p>The associated Access Control Point is DISPLAY_PROFILES.</p>", 
        "operationId" : "Update Timecard Add-On Profile by ID", 
        "parameters" : [ {
          "description" : "The ID of a Timecard Add-On profile.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "The Update Timecard Add-On Profile by ID request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Timecard Add-On Profile"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully updated the Timecard Addon profile by ID.", 
            "schema" : {
              "$ref" : "#/definitions/Timecard Add-On Profile"
            }
          }, 
          "403" : {
            "description" : "The current user does not have the permissions necessary to perform that operation."
          }
        }, 
        "summary" : "Updates a Timecard Add-On profile.", 
        "tags" : [ "Timecard Add-On Profiles" ]
      }
    }, 
    "/v1/timekeeping/setup/timecard_addon_types" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns Timecard Add-On types.</p><br /><p>The associated Access Control Point is DISPLAY_PROFILES.</p>", 
        "operationId" : "Retrieve Timecard Add-On Types", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved Timecard Add-On types.", 
            "schema" : {
              "$ref" : "#/definitions/Key for MDUI related entities"
            }
          }
        }, 
        "summary" : "Returns Timecard Add-On types.", 
        "tags" : [ "Timecard Add-On Types" ]
      }
    }, 
    "/v1/timekeeping/setup/timecard_settings" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a list of all Timecard settings.", 
        "operationId" : "Retrieve All Timecard Settings", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of all Timecard settings.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/Timecard Configuration object"
              }, 
              "type" : "array"
            }
          }, 
          "403" : {
            "description" : "The current user does not have the permissions necessary to perform that operation."
          }
        }, 
        "summary" : "Returns a list of all Timecard settings.", 
        "tags" : [ "Timecard Settings" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation creates a Timecard setting.", 
        "operationId" : "Create Timecard Setting", 
        "parameters" : [ {
          "description" : "Data Transfer Object (DTO) of the Timecard setting.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Timecard Configuration object"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "successful operation", 
            "schema" : {
              "$ref" : "#/definitions/Timecard Configuration object"
            }
          }, 
          "201" : {
            "description" : "Successfully created a Timecard setting.", 
            "schema" : {
              "$ref" : "#/definitions/Timecard Configuration object"
            }
          }, 
          "400" : {
            "description" : "Bad Request: cannot convert to Timecard Setting"
          }, 
          "403" : {
            "description" : "The current user does not have the permissions necessary to perform that operation."
          }
        }, 
        "summary" : "Creates a Timecard setting.", 
        "tags" : [ "Timecard Settings" ]
      }
    }, 
    "/v1/timekeeping/setup/timecard_settings/multi_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a list of Timecard settings by object references.", 
        "operationId" : "Retrieve Timecard Settings", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/MultiReadRequest"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of Timecard settings.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/Timecard Configuration object"
              }, 
              "type" : "array"
            }
          }, 
          "207" : {
            "description" : "WTK-180653 - Partially retrieved a list of Timecard settings. Some of the specified object references do not exist."
          }, 
          "400" : {
            "description" : "Bad Request."
          }, 
          "403" : {
            "description" : "The current user is not authorized to access Timecard settings."
          }, 
          "404" : {
            "description" : "WTK-180654 - The specified Timecard setting object references do not exist."
          }
        }, 
        "summary" : "Returns a list of Timecard settings.", 
        "tags" : [ "Timecard Settings" ]
      }
    }, 
    "/v1/timekeeping/setup/timecard_settings/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation deletes a Timecard setting by ID.", 
        "operationId" : "Delete Timecard Setting by ID", 
        "parameters" : [ {
          "description" : "The ID of the Timecard setting.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "Successfully deleted a Timecard setting by ID."
          }, 
          "403" : {
            "description" : "The current user does not have the permissions necessary to perform that operation."
          }, 
          "404" : {
            "description" : "A Timecard setting with the specified ID was not found."
          }
        }, 
        "summary" : "Deletes a Timecard setting.", 
        "tags" : [ "Timecard Settings" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a Timecard setting by ID.", 
        "operationId" : "Retrieve Timecard Setting by ID", 
        "parameters" : [ {
          "description" : "The ID of the Timecard setting.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a Timecard setting by ID.", 
            "schema" : {
              "$ref" : "#/definitions/Timecard Configuration object"
            }
          }, 
          "403" : {
            "description" : "The current user does not have the permissions necessary to perform that operation."
          }, 
          "404" : {
            "description" : "A Timecard setting with the specified ID was not found."
          }
        }, 
        "summary" : "Returns a Timecard setting.", 
        "tags" : [ "Timecard Settings" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation updates a Timecard setting by ID.", 
        "operationId" : "Update Timecard Setting by ID", 
        "parameters" : [ {
          "description" : "The ID of the Timecard setting.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "Data Transfer Object (DTO) of the Timecard setting.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Timecard Configuration object"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully updated the Timecard setting by ID.", 
            "schema" : {
              "$ref" : "#/definitions/Timecard Configuration object"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>The specified ID must already exist.</li></ul>"
          }, 
          "403" : {
            "description" : "The current user does not have the permissions necessary to perform that operation."
          }, 
          "404" : {
            "description" : "A Timecard setting with the specified ID was not found."
          }
        }, 
        "summary" : "Updates a Timecard setting.", 
        "tags" : [ "Timecard Settings" ]
      }
    }, 
    "/v1/timekeeping/timecard" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a manager timecard. Required parameters include employee ID or person number along with a date range or symbolic period ID.", 
        "operationId" : "Retrieve Timecard as Manager", 
        "parameters" : [ {
          "description" : "Determines the objects returned in the timecard request response. If a unique resource is not specified in the request, all resources are returned. Possible values include: PROCESSED_SEGMENTS, PROJECTS, PUNCHES, WORKED_SHIFTS, PAYCODE_EDITS, MOVE_AMOUNTS, HOURS_WORKED, HOLIDAY_CREDITS, EXCEPTIONS, EXTENDED_EXCEPTIONS, TOTAL_SUMMARY, DAILY_TOTAL_SUMMARY, ITEM_TOTAL_SUMMARY, TOTALS, SIGNOFF, REMOVE_SIGNOFF, APPROVAL,REMOVE_APPROVAL, TOTALIZE, SAVE, HISTORICAL_CORRECTIONS, OVERTIME_SUMMARY, OVERTIME_DETAILS, TIMECARD_LAST_UPDATED_BY_SOMEELSE, OTA, HAS_PENDING_CHANGES, HAS_MOVE_AMOUNTS, MISSINGTIME_GROUP, TOTALIZATION_STATUS, ACTIVITY_SEGMENTS, ACTIVITY_SHIFTS, ACTIVITY_TOTALS", 
          "enum" : [ "PROCESSED_SEGMENTS, PROJECTS, PUNCHES, WORKED_SHIFTS, PAYCODE_EDITS, MOVE_AMOUNTS, HOURS_WORKED, HOLIDAY_CREDITS, EXCEPTIONS, EXTENDED_EXCEPTIONS, TOTAL_SUMMARY, DAILY_TOTAL_SUMMARY, ITEM_TOTAL_SUMMARY, TOTALS, SIGNOFF, REMOVE_SIGNOFF, APPROVAL,REMOVE_APPROVAL, TOTALIZE, SAVE, HISTORICAL_CORRECTIONS, OVERTIME_SUMMARY, OVERTIME_DETAILS, TIMECARD_LAST_UPDATED_BY_SOMEELSE, OTA, HAS_PENDING_CHANGES, HAS_MOVE_AMOUNTS, MISSINGTIME_GROUP, TOTALIZATION_STATUS, ACTIVITY_SEGMENTS, ACTIVITY_SHIFTS, ACTIVITY_TOTALS" ], 
          "in" : "query", 
          "name" : "select", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The start date in ISO_LOCAL_DATE format (YYYY-MM-DD). Mutually exclusive with symbolic period, but either a symbolic period or a date range consisting of a start date and end date is required.", 
          "in" : "query", 
          "name" : "start_date", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The end date in ISO_LOCAL_DATE format (YYYY-MM-DD). Mutually exclusive with symbolic period, but either a symbolic period or a date range consisting of a start date and end date is required.", 
          "in" : "query", 
          "name" : "end_date", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "A symbolic identifier that represents a timeframe or a span of time. Mutually exclusive with start date and end date, but either a symbolic period or a date range consisting of a start date and end date is required.", 
          "enum" : [ "Previous_Payperiod", "Current_Payperiod", "Next_Payperiod", "Current_SchedPeriod", "Previous_SchedPeriod", "Next_SchedPeriod", "Week_to_Date", "Last_Week", "Yesterday", "Range_Of_Dates", "Range_of_Relative_Dates", "Specific_Date", "Relative_Specific_Date", "Today" ], 
          "in" : "query", 
          "name" : "symbolic_period_id", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "An ID that uniquely identifies an employee. This is not a person number.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "employee_id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "A unique identifier for a person. This is not an employee ID.", 
          "in" : "query", 
          "name" : "person_number", 
          "required" : true, 
          "type" : "string"
        }, {
          "default" : true, 
          "description" : "A Boolean indicator of whether or not to break up a worked shift at calendar day midnight when the shift crosses from one calendar day to another.", 
          "in" : "query", 
          "name" : "breakUpAtMidnight", 
          "required" : false, 
          "type" : "boolean"
        }, {
          "default" : true, 
          "description" : "A Boolean indicator of whether or not to include phantom punches.", 
          "in" : "query", 
          "name" : "include_phantom_punches", 
          "required" : false, 
          "type" : "boolean"
        }, {
          "default" : false, 
          "description" : "A Boolean indicator of whether or not to include Kinds Of Time segments.", 
          "in" : "query", 
          "name" : "include_kind_of_time_segments", 
          "required" : false, 
          "type" : "boolean"
        }, {
          "default" : true, 
          "description" : "A Boolean indicator of whether or not totals should be shown when they are for for paycodes that have been configured to be hidden.", 
          "in" : "query", 
          "name" : "show_totals_with_hidden_paycodes", 
          "required" : false, 
          "type" : "boolean"
        }, {
          "description" : "The ID of the desired activity for retrieval of the activity data types.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "activity_id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "The name of the desired activity for retrieval of the activity data types.", 
          "in" : "query", 
          "name" : "activity_name", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The ID of the desired shift for retrieval of the activity data types.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "shift_id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "A Boolean indicator of whether or not to consolidate scheduled segments of a worked shift.", 
          "in" : "query", 
          "name" : "consolidate_schedule_segments", 
          "required" : false, 
          "type" : "boolean"
        }, {
          "description" : "The criteria by which totals have been rolled up.", 
          "enum" : [ "ALL", "SHIFT", "TIMEITEM", "DAILY", "PERIOD_TO_DATE", "ACTIVITY_EVENT", "RAW" ], 
          "in" : "query", 
          "name" : "totals_rollup_by", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The date for which or until which totals are calculated in ISO_LOCAL_DATE format (YYYY-MM-DD). Must be within the given start_date and end_date or the time frame represented by a provided symbolic timeframe ID.", 
          "in" : "query", 
          "name" : "context_date", 
          "required" : false, 
          "type" : "string"
        }, {
          "default" : true, 
          "description" : "A Boolean indicator of whether or not totals include combined paycodes.", 
          "in" : "query", 
          "name" : "totals_include_combined_paycodes", 
          "required" : false, 
          "type" : "boolean"
        }, {
          "description" : "The Associate Object ID (AOID) of a person in the system.", 
          "in" : "query", 
          "name" : "aoid", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The Client Object ID (COID) of a person in the system.", 
          "in" : "query", 
          "name" : "coid", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved timecard by employee and timeframe", 
            "schema" : {
              "$ref" : "#/definitions/TimeCardForRest"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Atleast two attributes must be provided</li><li>Start Date & End Date must be in ISO_LOCAL_DATE format</li><li>Time Frame id must be provided</li><li>[WTK-145025] - Please provide person number OR employee ID OR AOID.</li><li>[WTK-145026] - Please provide COID along with AOID.</li><li>[WTK-145027] - No person exist for the provided AOID/COID in our system.</li></ul>"
          }
        }, 
        "summary" : "Returns a manager timecard by employee and timeframe.", 
        "tags" : [ "Timecards" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates a timecard for an employee as a manager. You can add, update, or delete punches, paycode edits, hours worked, and/or exception Comments. <p><b>Notes for Removing and Updating Punches, Paycode Edits, and Hours Worked</b><p> <li>When updating Punches, provide at least the punch ID, punchDtm, and employee</li> <li>When updating paycodes, provide at least the employee, paycode, amountType, applyDate, and the duration (durationInDays, durationinHours, or moneyAmount)</li> <li>When updating Hours Worked, provide at least hours worked ID, employee, duration, and startDateTime.</li><p><b>Note:</b> You cannot combine <code>calculateTotalsRequest</code> with any other <code>do</code> properties in the same request payload.</p>", 
        "operationId" : "Update Timecard as Manager", 
        "parameters" : [ {
          "description" : "Update Timecard as Manager", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/TimeCardUpdateRequest"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully updated timecard for an employee", 
            "schema" : {
              "$ref" : "#/definitions/TimeCardForRest"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Timecard changes request is required </li></ul>"
          }
        }, 
        "summary" : "Updates a timecard for an employee as a manager.", 
        "tags" : [ "Timecards" ]
      }
    }, 
    "/v1/timekeeping/timecard/changes" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a list of timecard changes for the specified search criteria.", 
        "operationId" : "Retrieve Timecard Changes", 
        "parameters" : [ {
          "description" : "The start date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "in" : "query", 
          "name" : "start_date", 
          "required" : true, 
          "type" : "string"
        }, {
          "description" : "The end date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "in" : "query", 
          "name" : "end_date", 
          "required" : true, 
          "type" : "string"
        }, {
          "description" : "A symbolic identifier that represents a timeframe or a span of time.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "symbolic_period_id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "An ID that uniquely identifies an employee. This is not a person number.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "employee_id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "A unique identifier for a person. This is not an employee ID.", 
          "in" : "query", 
          "name" : "person_number", 
          "required" : true, 
          "type" : "string"
        }, {
          "description" : "The status of timecard changes.", 
          "enum" : [ "SUBMITTED", "APPROVED", "REFUSED" ], 
          "in" : "query", 
          "name" : "status", 
          "required" : true, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of timecard changes.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/Timecard change"
              }, 
              "type" : "array"
            }
          }, 
          "400" : {
            "description" : "Invalid URL parameter value."
          }, 
          "403" : {
            "description" : "Access right violation: you are not allowed to access this employee."
          }
        }, 
        "summary" : "Returns timecard changes.", 
        "tags" : [ "Timecard Changes" ]
      }
    }, 
    "/v1/timekeeping/timecard/changes/multi_update" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation updates the statuses associated with one or more timecard changes.", 
        "operationId" : "Update Timecard Change Statuses", 
        "parameters" : [ {
          "description" : "A list of timecard change statuses.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/Timecard change status"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully updated a list of timecard change statuses.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/Timecard change"
              }, 
              "type" : "array"
            }
          }, 
          "207" : {
            "description" : "Partially succeeded in updating timecard change statuses."
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>WTK-180902 - Request body must be specified.</li></ul>"
          }
        }, 
        "summary" : "Updates timecard change statuses.", 
        "tags" : [ "Timecard Changes" ]
      }
    }, 
    "/v1/timekeeping/timecard/changes/reports/multi_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of timecard changes designed to use in Reports for the specified search criteria.</p><p><strong>Note:</strong> The only value currently supported by the <code>select</code> property is <code>timecardChanges</code>.</p>", 
        "operationId" : "Retrieve Timecard Changes for Reports", 
        "parameters" : [ {
          "description" : "The Retrieve Timecard Changes for Reports request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Timecard Changes Report Request"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of timecard changes.", 
            "schema" : {
              "$ref" : "#/definitions/Timecard Changes Report Response"
            }
          }, 
          "400" : {
            "description" : "Invalid URL parameter value."
          }, 
          "403" : {
            "description" : "Access right violation: you are not allowed to access this employee's timecard changes."
          }
        }, 
        "summary" : "Returns timecard changes.", 
        "tags" : [ "Timecard Changes for Reports" ]
      }
    }, 
    "/v1/timekeeping/timecard/changes/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a timecard change by ID.", 
        "operationId" : "Retrieve Timecard Change by ID", 
        "parameters" : [ {
          "description" : "The ID of a timecard change.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a timecard change.", 
            "schema" : {
              "$ref" : "#/definitions/Timecard change"
            }
          }, 
          "400" : {
            "description" : "Invalid parameter value."
          }, 
          "403" : {
            "description" : "Access right violation: you are not allowed to access this employee."
          }, 
          "404" : {
            "description" : "Timecard change with the requested ID has not been found."
          }
        }, 
        "summary" : "Returns a timecard change.", 
        "tags" : [ "Timecard Changes" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation updates the status of a timecard change.", 
        "operationId" : "Update Timecard Change Status", 
        "parameters" : [ {
          "description" : "The ID of a timecard change.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "The new status of a timecard change.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Timecard change status"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully updated the status of a timecard change.", 
            "schema" : {
              "$ref" : "#/definitions/Timecard change"
            }
          }, 
          "400" : {
            "description" : "Request body must be specified correctly."
          }, 
          "403" : {
            "description" : "Access right violation: you are not allowed to access this employee."
          }, 
          "404" : {
            "description" : "Timecard change with the requested ID has not been found."
          }
        }, 
        "summary" : "Updates the status of a timecard change.", 
        "tags" : [ "Timecard Changes" ]
      }
    }, 
    "/v1/timekeeping/timecard/multi_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of timecards based on the employees or Hyperfind details provided. Required parameters include employee ID or person number along with a date range or symbolic period ID.</p><p>When <code>WORKED_SHIFTS</code> and <code>PUNCHES</code> are specified together in the request payload, the response automatically expands to include the day before and the day after the requested span in the punch object. For example, if you specify a single day in the request, the response includes punches for that day, the day before, and the day after.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of employees and the number of days that can be processed in a single request.</p><ul><li>The <strong>Number of Employees</strong> cannot exceed 500.</li><li>The <strong>Number of Days</strong> cannot exceed 365.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>", 
        "operationId" : "Retrieve Timecards as Manager", 
        "parameters" : [ {
          "description" : "The Retrieve Timecards as Manager request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Timecard find criteria"
          }
        }, {
          "default" : false, 
          "description" : "A Boolean indicator of whether or not processing continues if errors are encountered. Defaults to false.", 
          "in" : "query", 
          "name" : "partial_success", 
          "required" : false, 
          "type" : "boolean"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved timecards by employees/hyperfind and timeframe", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/TimeCardForRest"
              }, 
              "type" : "array"
            }
          }, 
          "207" : {
            "description" : "Retrieved timecards of employees with partial success.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/APIExceptionDetailResult"
              }, 
              "type" : "array"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>[WTK-112000] - Missing id for object ref lookup. </li> <li>[WTK-112001] - Missing qualifier for object ref lookup. </li> <li>[WTK-112002] - Missing object ref for object ref lookup. </li> <li>[WTK-112003] - Missing {resolver} resolver. </li> <li>[WTK-112004] - ObjectRef with id: {id} could not be found. </li> <li>[WTK-112005] - ObjectRef with qualifier: {qualifier} could not be found. </li> <li>[WTK-113028] - Totals data cannot be retrieved. Enable the Timekeeping System Setting 'site.timekeeping.CompressedWorkWeek.enabled'. </li> <li>[WTK-113029] - The 'forWorkWeek' property only supports the '0', '1', or '2' symbolicPeriod id. </li> <li>[WTK-145007] - Please provide timeframe start & end date OR symbolic timeframe to select timecard data. </li> <li>[WTK-145011] - A worked shift must be selected to return actual kinds of time. </li> <li>[WTK-145016] - Worked span missing punch details are not available in multi_read operations. </li> <li>[WTK-145051] - Service Limits are exceeded when you request the {SERVICE_NAME}  for {NUMBER_ENTRIES} employees and {NUMBER_DAYS} days. Submit the request again but with a number of employees that does not exceed the service limit {LIMIT}. </li> <li>Timecard changes request is required </li> </ul>"
          }
        }, 
        "summary" : "Returns a list of timecards matching specified search criteria.", 
        "tags" : [ "Timecards" ]
      }
    }, 
    "/v1/timekeeping/timecard_approvals" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation deletes/removes manager timecard approvals for the given employee and date range.", 
        "operationId" : "Remove Timecard Approvals as Manager", 
        "parameters" : [ {
          "description" : "The person number of an employee for which approvals should be deleted.", 
          "in" : "query", 
          "name" : "person_num", 
          "required" : true, 
          "type" : "string"
        }, {
          "description" : "The internal system id of an employee for which approvals should be deleted.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "employee_id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "The start date of range for which approvals should be deleted.  This field can be ommitted if a symbolic period is specified.", 
          "in" : "query", 
          "name" : "start_date", 
          "required" : true, 
          "type" : "string"
        }, {
          "description" : "The end date of range for which approvals should be deleted. This field can be ommitted if a symbolic period is specified.", 
          "in" : "query", 
          "name" : "end_date", 
          "required" : true, 
          "type" : "string"
        }, {
          "description" : "The internal system identifier of a symbolic period for which approvals should be deleted.  This field can be ommitted if an explicit date range or symbolicPeriod is provided.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "symbolic_period_id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "The symbolic id of the symbolic period for which approvals should be deleted.  This field can be ommitted if an explicit date range or symbolicPeriodId is provided.", 
          "in" : "query", 
          "name" : "symbolic_period", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "Deletion successful."
          }, 
          "400" : {
            "description" : "Bad Request: Deletion unsuccessful."
          }
        }, 
        "summary" : "Deletes/removes manager timecard approval for the given employee and date range.", 
        "tags" : [ "Timecard Approvals for Manager" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a list of timecard approvals within a date range.", 
        "operationId" : "Retrieve Timecard Approvals as Manager", 
        "parameters" : [ {
          "description" : "The person number of an employee for which approvals should be retrieved.", 
          "in" : "query", 
          "name" : "person_num", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The internal system id of an employee for which approvals should be retrieved.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "employee_id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "The start date of range for which approvals should be retrieved.  This field can be ommitted if a symbolic period is specified.", 
          "in" : "query", 
          "name" : "start_date", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The end date of range for which approvals should be retrieved. This field can be ommitted if a symbolic period is specified.", 
          "in" : "query", 
          "name" : "end_date", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The internal system identifier of a symbolic period for which approvals should be retrieved.  This field can be ommitted if an explicit date range or symbolicPeriod is provided.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "symbolic_period_id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "The symbolic id of the symbolic period for which approvals should be retrieved.  This field can be ommitted if an explicit date range or symbolicPeriodId is provided.", 
          "in" : "query", 
          "name" : "symbolic_period", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The Associate Object ID (AOID) of a person in the system", 
          "in" : "query", 
          "name" : "aoid", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The Client Object ID (COID) of a person in the system.", 
          "in" : "query", 
          "name" : "coid", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/ApprovalResponseForRest"
              }, 
              "type" : "array"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>retrieval unsuccessful.</li><li>[WTK-160014] - Missing required input: {inputName}.</li><li>[WTK-112002] - Missing object ref for object ref lookup</li><li>[WCO-116010] - The parameter {paramName} is invalid.</li><li>[WTK-160015] - An explicit or symbolic date range must be specified.</li><li>[WTK-160012] - That employee does not exist.</li><li>[WTK-115003] - The time frame selected contains both locked and unlocked periods, please narrow your time frame to one or the other. The last payroll locked date is {PRLD}</li><li>[WTK-145025] - Please provide person number OR employee ID OR AOID.</li><li>[WTK-145026] - Please provide COID along with AOID.</li><li>[WTK-145027] - No person exist for the provided AOID/COID in our system.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of timecard approvals for the given employee and date range.", 
        "tags" : [ "Timecard Approvals for Manager" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation adds manager timecard approval for the given employee and date range.", 
        "operationId" : "Approve Timecard as Manager", 
        "parameters" : [ {
          "description" : "Request context and entities or entity ids", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Manager Approval Transaction request"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Approval successful."
          }, 
          "400" : {
            "description" : "Bad Request: Approval unsuccessful."
          }
        }, 
        "summary" : "Adds a timecard approval.", 
        "tags" : [ "Timecard Approvals for Manager" ]
      }
    }, 
    "/v1/timekeeping/timecard_metrics/multi_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns timecard data for a set of employees or locations.</p><br /><p>The data included in the response can be specified via the <code>select</code> property. Search criteria includes the following: FTPTDATA_ALL, FTPTDATA, AVERAGING, SCHEDULED_TOTALS, PROJECTED_TOTALS, PROJECTED_TOTALS_ONLY_CORRECTIONS, PROJECTED_TOTALS_EXCLUDE_CORRECTIONS, ACTUAL_TOTALS, ACTUAL_TOTALS_ONLY_CORRECTIONS, ACTUAL_TOTALS_EXCLUDE_CORRECTIONS, EXCEPTION_TOTAL, EXCEPTION_TOTAL_UNREVIEWED, EXCEPTION_TOTAL_EMPLOYEE_JUSTIFIED, EXCEPTION_TOTAL_MANAGER_JUSTIFIED, EXCEPTION_TOTAL_AUTO_RESOLVED, SHIFT_ACTUAL_TOTAL_SUMMARY, SHIFT_SCHEDULED_TOTAL_SUMMARY, SHIFT_PROJECTED_TOTAL_SUMMARY, DAILY_ACTUAL_TOTAL_SUMMARY, DAILY_SCHEDULED_TOTAL_SUMMARY, DAILY_PROJECTED_TOTAL_SUMMARY, ACCRUAL_SUMMARY, ACCRUAL_TRANSACTIONS, ABSENCE_EXCEPTION, ISR_DAILY, ISR_SUMMARY.</p><br /><ul><li>FTPTDATA_ALL -- For each employee and pay code, this full time and part time data contains the number of weeks from a specified date range, the total number of hours worked during those weeks, and the average weekly hours worked.</li><li>FTPTDATA -- For each employee and pay code, this full time and part time data contains the number of weeks from a specified date range, the total number of hours worked during those weeks (including partial weeks), the number of worked weeks (a worked week is defined as having worked hours greater than 0 during that week), and the average weekly hours worked.</li><li>AVERAGING -- The average totals for a specified timeframe based on pay code and other selected rollup types.</li><li>SCHEDULED_TOTALS -- The totals from scheduled items.</li><li>PROJECTED_TOTALS -- The totals from projected items, including totals from historical corrections.</li><li>PROJECTED_TOTALS_ONLY_CORRECTIONS -- The totals from historical corrections based on a projection.</li><li>PROJECTED_TOTALS_EXCLUDE_CORRECTIONS -- The totals from a projection that exclude historical corrections.</li><li>ACTUAL_TOTALS -- The totals from actual worked items. <strong>Note:</strong> For security reasons, when selecting ACTUAL_TOTALS, your application should call this operation with the parameter partial_success set to true. In addition to providing better error handling, the parameter also correctly validates that the calling user has access to all the returned employee totals.</li><li>ACTUAL_TOTALS_ONLY_CORRECTIONS -- The totals from historical corrections for actual worked items.</li><li>ACTUAL_TOTALS_EXCLUDE_CORRECTIONS -- The totals from actual worked items that exclude historical corrections.</li><li>EXCEPTION_TOTAL -- The total number of exceptions.</li><li>EXCEPTION_TOTAL_UNREVIEWED -- The total number of unreviewed exceptions.</li><li>EXCEPTION_TOTAL_EMPLOYEE_JUSTIFIED -- The total number of employee justified exceptions.</li><li>EXCEPTION_TOTAL_MANAGER_JUSTIFIED -- The total number of manager justified exceptions.</li><li>EXCEPTION_TOTAL_AUTO_RESOLVED -- The total number of auto-resolved exceptions.</li><li>SHIFT_ACTUAL_TOTAL_SUMMARY -- The number of hours for actual worked items by shift.</li><li>SHIFT_SCHEDULED_TOTAL_SUMMARY -- The number of hours for scheduled work items by shift.</li><li>SHIFT_PROJECTED_TOTAL_SUMMARY -- The number of hours for projected work items by shift.</li><li>DAILY_ACTUAL_TOTAL_SUMMARY -- The number of hours for actual worked items by day.</li><li>DAILY_SCHEDULED_TOTAL_SUMMARY -- The number of hours for scheduled work items by day.</li><li>DAILY_PROJECTED_TOTAL_SUMMARY -- The number of hours for projected work items by day.</li><li>ACCRUAL_SUMMARY -- A daily summary of accruals and various balances for tracking periods.</li><li>ACCRUAL_TRANSACTIONS -- A list of accrual transactions within a specified timeframe.</li><li>ABSENCE_EXCEPTION -- A list of exceptions during a specified timeframe that are due to employee absence from scheduled shifts.</li><li>ISR_DAILY -- A Boolean indicator of whether or not to include summary report.</li><li>ISR_SUMMARY -- A Boolean indicator of whether or not to include daily report.</li></ul><br /><h2>Service limit</h2><p>A service limit constrains the number of employees multiplied by the number of days that can be processed in a single request.</p><ul><li>The <strong>Number of Employees</strong> multiplied by the <strong>Number of Days</strong> cannot exceed 280,000.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p><br /><h2>Multiple Assignments feature</h2><p>If the Multiple Assignments feature switch is on, the attribute count of the response is computed based on exceptions and assignments and the <code>position</code> property appears in the response body. If the feature switch is off, the attribute count of the response is computed based on exceptions. The <code>position</code> property only supports the following <code>select</code> parameters in the request payload:</p><ul><li>EXCEPTION_TOTAL</li><li>EXCEPTION_TOTAL_UNREVIEWED</li><li>EXCEPTION_TOTAL_EMPLOYEE_JUSTIFIED</li><li>EXCEPTION_TOTAL_MANAGER_JUSTIFIED</li><li>EXCEPTION_TOTAL_AUTO_RESOLVED</li></ul><h3>Request example</h3><p>The following request payload demonstrates a valid call when the Multiple Assignments feature is enabled:</p><pre><code>{<br />    \"select\": [<br />        \"EXCEPTION_TOTAL\",<br />        \"EXCEPTION_TOTAL_UNREVIEWED\",<br />        \"EXCEPTION_TOTAL_EMPLOYEE_JUSTIFIED\",<br />        \"EXCEPTION_TOTAL_MANAGER_JUSTIFIED\",<br />        \"EXCEPTION_TOTAL_AUTO_RESOLVED\"<br />    ],<br />    \"where\": {<br />        \"employeeSet\": {<br />            \"dateRange\": {<br />                \"startDate\":\"2022-06-28\",<br />                \"endDate\":\"2022-07-28\"<br />            },<br />            \"employees\": {<br />                \"ids\": [],<br />                \"qualifiers\": [],<br />                \"refs\": [<br />                    {<br />                        \"id\": 243<br />                    },<br />                    {<br />                        \"id\": 244<br />                    }<br />                ]<br />            }<br />        },<br />        \"includeApprovingManagers\": false<br />    },<br />    \"rollupContext\": {<br />        \"byEmployee\": true,<br />        \"byPaycode\": true,<br />        \"byDate\": true,<br />        \"byDateRange\": false,<br />        \"byOrg\": false,<br />        \"byLaborCategory\": false<br />    }<br />}</code></pre><h3>Response example</h3><p>The following response body demonstrates a success response when the Multiple Assignments feature is enabled:</p><pre><code>[<br />  {<br />    \"employeeId\": {<br />      \"id\": 244,<br />      \"qualifier\": \"20336\",<br />      \"name\": \"20336\"<br />    },<br />    \"exceptioncounts\": [<br />      {<br />        \"uniqueId\": \"244:19:-244\",<br />        \"employee\": {<br />          \"id\": 244,<br />          \"qualifier\": \"20336\",<br />          \"name\": \"20336\"<br />        },<br />        \"exceptionType\": {<br />          \"id\": 19,<br />          \"name\": \"SHORT_TOTAL_BREAK\",<br />          \"description\": \"SHORT_TOTAL_BREAK_DSC\",<br />          \"displayName\": \"Short Total Break\",<br />          \"category\": \"BREAK_EXCEPTIONS\"<br />        },<br />        \"count\": 1,<br />        \"position\": {<br />          \"id\": -244,<br />          \"qualifier\": \"Assignment\",<br />          \"name\": \"Assignment\"<br />        }<br />      },<br />      {<br />        \"uniqueId\": \"244:16:-244\",<br />        \"employee\": {<br />          \"id\": 244,<br />          \"qualifier\": \"20336\",<br />          \"name\": \"20336\"<br />        },<br />        \"exceptionType\": {<br />          \"id\": 16,<br />          \"name\": \"MISSED_OUT_PUNCH\",<br />          \"description\": \"MISSED_OUT_PUNCH_DSC\",<br />          \"displayName\": \"Missed Out Punch\",<br />          \"category\": \"OUT_PUNCH_EXCEPTIONS\"<br />        },<br />        \"count\": 1,<br />        \"position\": {<br />          \"id\": -244,<br />          \"qualifier\": \"Assignment\",<br />          \"name\": \"Assignment\"<br />        }<br />      },<br />      {<br />        \"uniqueId\": \"244:10:-244\",<br />        \"employee\": {<br />          \"id\": 244,<br />          \"qualifier\": \"20336\",<br />          \"name\": \"20336\"<br />        },<br />        \"exceptionType\": {<br />          \"id\": 10,<br />          \"name\": \"UNEXCUSED_ABSENCE\",<br />          \"description\": \"UNEXCUSED_ABSENCE_DSC\",<br />          \"displayName\": \"Unexcused Absence\",<br />          \"category\": \"ABSENCE_EXCEPTIONS\"<br />        },<br />        \"count\": 1,<br />        \"position\": {<br />          \"id\": -244,<br />          \"qualifier\": \"Assignment\",<br />          \"name\": \"Assignment\"<br />        }<br />      }<br />    ],<br />    \"exceptioncountsUnreviewed\": [<br />      {<br />        \"uniqueId\": \"244:19:-244\",<br />        \"employee\": {<br />          \"id\": 244,<br />          \"qualifier\": \"20336\",<br />          \"name\": \"20336\"<br />        },<br />        \"exceptionType\": {<br />          \"id\": 19,<br />          \"name\": \"SHORT_TOTAL_BREAK\",<br />          \"description\": \"SHORT_TOTAL_BREAK_DSC\",<br />          \"displayName\": \"Short Total Break\",<br />          \"category\": \"BREAK_EXCEPTIONS\"<br />        },<br />        \"count\": 1,<br />        \"position\": {<br />          \"id\": -244,<br />          \"qualifier\": \"Assignment\",<br />          \"name\": \"Assignment\"<br />        }<br />      },<br />      {<br />        \"uniqueId\": \"244:16:-244\",<br />        \"employee\": {<br />          \"id\": 244,<br />          \"qualifier\": \"20336\",<br />          \"name\": \"20336\"<br />        },<br />        \"exceptionType\": {<br />          \"id\": 16,<br />          \"name\": \"MISSED_OUT_PUNCH\",<br />          \"description\": \"MISSED_OUT_PUNCH_DSC\",<br />          \"displayName\": \"Missed Out Punch\",<br />          \"category\": \"OUT_PUNCH_EXCEPTIONS\"<br />        },<br />        \"count\": 1,<br />        \"position\": {<br />          \"id\": -244,<br />          \"qualifier\": \"Assignment\",<br />          \"name\": \"Assignment\"<br />        }<br />      },<br />      {<br />        \"uniqueId\": \"244:10:-244\",<br />        \"employee\": {<br />          \"id\": 244,<br />          \"qualifier\": \"20336\",<br />          \"name\": \"20336\"<br />        },<br />        \"exceptionType\": {<br />          \"id\": 10,<br />          \"name\": \"UNEXCUSED_ABSENCE\",<br />          \"description\": \"UNEXCUSED_ABSENCE_DSC\",<br />          \"displayName\": \"Unexcused Absence\",<br />          \"category\": \"ABSENCE_EXCEPTIONS\"<br />        },<br />        \"count\": 1,<br />        \"position\": {<br />          \"id\": -244,<br />          \"qualifier\": \"Assignment\",<br />          \"name\": \"Assignment\"<br />        }<br />      }<br />    ]<br />  },<br />  {<br />    \"employeeId\": {<br />      \"id\": 243,<br />      \"qualifier\": \"20335\",<br />      \"name\": \"20335\"<br />    },<br />    \"exceptioncounts\": [<br />      {<br />        \"uniqueId\": \"243:10:126\",<br />        \"employee\": {<br />          \"id\": 243,<br />          \"qualifier\": \"20335\",<br />          \"name\": \"20335\"<br />        },<br />        \"exceptionType\": {<br />          \"id\": 10,<br />          \"name\": \"UNEXCUSED_ABSENCE\",<br />          \"description\": \"UNEXCUSED_ABSENCE_DSC\",<br />          \"displayName\": \"Unexcused Absence\",<br />          \"category\": \"ABSENCE_EXCEPTIONS\"<br />        },<br />        \"count\": 1,<br />        \"position\": {<br />          \"id\": 126,<br />          \"qualifier\": \"Assignment1\",<br />          \"name\": \"Assignment1\"<br />        }<br />      },<br />      {<br />        \"uniqueId\": \"243:10:-243\",<br />        \"employee\": {<br />          \"id\": 243,<br />          \"qualifier\": \"20335\",<br />          \"name\": \"20335\"<br />        },<br />        \"exceptionType\": {<br />          \"id\": 10,<br />          \"name\": \"UNEXCUSED_ABSENCE\",<br />          \"description\": \"UNEXCUSED_ABSENCE_DSC\",<br />          \"displayName\": \"Unexcused Absence\",<br />          \"category\": \"ABSENCE_EXCEPTIONS\"<br />        },<br />        \"count\": 1,<br />        \"position\": {<br />          \"id\": -243,<br />          \"qualifier\": \"Assignment\",<br />          \"name\": \"Assignment\"<br />        }<br />      }<br />    ],<br />    \"exceptioncountsUnreviewed\": [<br />      {<br />        \"uniqueId\": \"243:10:126\",<br />        \"employee\": {<br />          \"id\": 243,<br />          \"qualifier\": \"20335\",<br />          \"name\": \"20335\"<br />        },<br />        \"exceptionType\": {<br />          \"id\": 10,<br />          \"name\": \"UNEXCUSED_ABSENCE\",<br />          \"description\": \"UNEXCUSED_ABSENCE_DSC\",<br />          \"displayName\": \"Unexcused Absence\",<br />          \"category\": \"ABSENCE_EXCEPTIONS\"<br />        },<br />        \"count\": 1,<br />        \"position\": {<br />          \"id\": 126,<br />          \"qualifier\": \"Assignment1\",<br />          \"name\": \"Assignment1\"<br />        }<br />      },<br />      {<br />        \"uniqueId\": \"243:10:-243\",<br />        \"employee\": {<br />          \"id\": 243,<br />          \"qualifier\": \"20335\",<br />          \"name\": \"20335\"<br />        },<br />        \"exceptionType\": {<br />          \"id\": 10,<br />          \"name\": \"UNEXCUSED_ABSENCE\",<br />          \"description\": \"UNEXCUSED_ABSENCE_DSC\",<br />          \"displayName\": \"Unexcused Absence\",<br />          \"category\": \"ABSENCE_EXCEPTIONS\"<br />        },<br />        \"count\": 1,<br />        \"position\": {<br />          \"id\": -243,<br />          \"qualifier\": \"Assignment\",<br />          \"name\": \"Assignment\"<br />        }<br />      }<br />    ]<br />  }<br />]</code></pre>", 
        "operationId" : "Retrieve Timecard Data for Multiple Employees", 
        "parameters" : [ {
          "description" : "The set of conditions used by a retrieve timecard data request for one or more employees.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/TimeCardDataFindRequest"
          }
        }, {
          "default" : false, 
          "description" : "A Boolean indicator of whether or not processing continues if errors are encountered. Defaults to false.", 
          "in" : "query", 
          "name" : "partial_success", 
          "required" : false, 
          "type" : "boolean"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved timecard data for one or more employees.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/TimeCardData"
              }, 
              "type" : "array"
            }
          }, 
          "207" : {
            "description" : "Retrieved timecard data for one or more employee with partial success.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/APIExceptionDetailResult"
              }, 
              "type" : "array"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p> <ul> <li>[WTK-112000] - Missing id for object ref lookup. </li> <li>[WTK-112001] - Missing qualifier for object ref lookup. </li> <li>[WTK-112002] - Missing object ref for object ref lookup. </li> <li>[WTK-112003] - Missing {resolver} resolver. </li> <li>[WTK-112004] - ObjectRef with id: {id} could not be found. </li> <li>[WTK-112005] - ObjectRef with qualifier: {qualifier} could not be found. </li> <li>[WTK-113028] - Totals data cannot be retrieved. Enable the Timekeeping System Setting 'site.timekeeping.CompressedWorkWeek.enabled'. </li> <li>[WTK-113029] - The 'forWorkWeek' property only supports the '0', '1', or '2' symbolicPeriod id. </li> <li>[WTK-145051] - Service Limits are exceeded when you request the {SERVICE_NAME}  for {NUMBER_ENTRIES} employees and {NUMBER_DAYS} days. Submit the request again but with a number of employees that does not exceed the service limit {LIMIT}. </li> <li>[WTK-147500] - Timekeeping timecarddata service was accessed with a bad reference. </li> <li>At least one employee is required. </li> </ul>"
          }
        }, 
        "summary" : "Returns timecard data matching the specified search criteria.", 
        "tags" : [ "Timecard Metrics" ]
      }
    }
  }, 
  "schemes" : null, 
  "definitions" : {
    "TimeCardForRest" : {
      "description" : "Timecard data holding punches, workshifts, hours worked, paycode edits, work holiday credits, exceptions, total summary, and totals.", 
      "properties" : {
        "activitySegments" : {
          "description" : "A list of activity segments associated with a timecard.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Activity Segment"
          }, 
          "type" : "array"
        }, 
        "activityShifts" : {
          "description" : "A list of activity shifts associated with a timecard.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Activity Shift"
          }, 
          "type" : "array"
        }, 
        "activityTeamMembershipBundles" : {
          "description" : "@v1.0.timecard.apimodelproperty.activityteammembershipbundles.description", 
          "items" : {
            "$ref" : "#/definitions/Timecard Activity Team Membership Bundle"
          }, 
          "type" : "array"
        }, 
        "activityTeamMemberships" : {
          "description" : "A list of activity team memberships associated with a timecard.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Activity Team Membership"
          }, 
          "type" : "array"
        }, 
        "activityTotals" : {
          "description" : "A list of activity totals associated with a timecard.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Total"
          }, 
          "type" : "array"
        }, 
        "dailyTotalSummary" : {
          "items" : {
            "$ref" : "#/definitions/Timecard Daily Total Summary"
          }, 
          "type" : "array"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "An ID that uniquely identifies an employee. This is not a person number."
        }, 
        "endDate" : {
          "description" : "The latest end date associated with a timecard in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "type" : "string"
        }, 
        "exceptions" : {
          "description" : "A list of exception objects associated with a timecard.", 
          "items" : {
            "$ref" : "#/definitions/Timecard TK Exception"
          }, 
          "type" : "array"
        }, 
        "extendedExceptions" : {
          "items" : {
            "$ref" : "#/definitions/Timecard TK Extended Exception"
          }, 
          "type" : "array"
        }, 
        "hasMoveAmounts" : {
          "description" : "A Boolean indicator of whether or not an employee has Timecard move amounts.", 
          "type" : "boolean"
        }, 
        "hasPendingChanges" : {
          "description" : "A Boolean indicator of whether or not an employee has any pending timecard changes.", 
          "type" : "boolean"
        }, 
        "historicalCorrections" : {
          "description" : "A list of historical corrections associated with a timecard.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Historical Correction"
          }, 
          "type" : "array"
        }, 
        "hoursWorked" : {
          "description" : "The total number of hours worked on a timecard.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Hours Worked"
          }, 
          "type" : "array"
        }, 
        "itemTotalSummary" : {
          "description" : "A list of item total summaries associated with a timecard.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Item Total Summary"
          }, 
          "type" : "array"
        }, 
        "lastUpdates" : {
          "items" : {
            "$ref" : "#/definitions/LastTimecardUpdateBySomeelse"
          }, 
          "type" : "array"
        }, 
        "missingTimeGroups" : {
          "description" : "A list of missing time groups associated with a timecard.", 
          "items" : {
            "$ref" : "#/definitions/Timecard TK MissingTime Group"
          }, 
          "type" : "array"
        }, 
        "moveAmounts" : {
          "description" : "A list of Timecard move amounts.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Move Amount"
          }, 
          "type" : "array"
        }, 
        "ota" : {
          "description" : "A list of overtime data per employee associated with a timecard.", 
          "items" : {
            "$ref" : "#/definitions/OvertimeInfoBulkRetrieval"
          }, 
          "type" : "array"
        }, 
        "overtimeInfoForDates" : {
          "additionalProperties" : {
            "$ref" : "#/definitions/OvertimeInfo"
          }, 
          "type" : "object"
        }, 
        "payCodeEdits" : {
          "description" : "A list of paycode edit objects.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Pay Code Edit"
          }, 
          "type" : "array"
        }, 
        "processedSegments" : {
          "description" : "A list of Processed segments associated with a timecard.", 
          "items" : {
            "$ref" : "#/definitions/Processed Segment"
          }, 
          "type" : "array"
        }, 
        "projects" : {
          "items" : {
            "$ref" : "#/definitions/Project"
          }, 
          "type" : "array"
        }, 
        "punches" : {
          "description" : "A list of the punches associated with a timecard.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Punch"
          }, 
          "type" : "array"
        }, 
        "scheduleShifts" : {
          "description" : "An array of schedule shifts.", 
          "items" : {
            "$ref" : "#/definitions/SchedulingShift"
          }, 
          "type" : "array"
        }, 
        "startDate" : {
          "description" : "The earliest start date associated with a timecard in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "type" : "string"
        }, 
        "totalSummary" : {
          "description" : "A list of hours and cost summaries associated with a timecard.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Hours And Cost Summary"
          }, 
          "type" : "array"
        }, 
        "totalizationStatus" : {
          "description" : "A enum value of totalization status associated with a timecard.", 
          "enum" : [ "up_to_date", "require_totalization" ], 
          "type" : "string"
        }, 
        "totals" : {
          "description" : "A list of timecard totals associated with a timecard.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Total"
          }, 
          "type" : "array"
        }, 
        "workHolidayCredits" : {
          "description" : "A list of work holiday credits associated with a timecard.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Work Holiday Edit"
          }, 
          "type" : "array"
        }, 
        "workedShifts" : {
          "description" : "A list of worked shift objects.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Worked Shift"
          }, 
          "type" : "array"
        }, 
        "workedSpansMissingPunches" : {
          "description" : "A list of qualifying missed punches within a specified date range.", 
          "items" : {
            "items" : {
              "$ref" : "#/definitions/LightWorkedSpan"
            }, 
            "type" : "array"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "TimeCardUpdateRequest" : {
      "properties" : {
        "do" : {
          "$ref" : "#/definitions/TimeCardUpdateDoStatementRequest"
        }, 
        "where" : {
          "$ref" : "#/definitions/Defines the where clause used in the selection of a timecard."
        }
      }, 
      "type" : "object"
    }, 
    "Timecard find criteria" : {
      "description" : "Timecard find criteria for multiple employees or a Hyperfind.", 
      "properties" : {
        "multiReadOptions" : {
          "$ref" : "#/definitions/TimeCardMultiReadOptions", 
          "description" : "A set of options by which timecard request results are filtered."
        }, 
        "select" : {
          "description" : "Determines the objects returned in the timecard request response. If a unique resource is not specified in the request, all resources are returned. Possible values include: PROCESSED_SEGMENTS, PROJECTS, PUNCHES , WORKED_SHIFTS, PAYCODE_EDITS, HOURS_WORKED, HOLIDAY_CREDITS, EXCEPTIONS, EXTENDED_EXCEPTIONS, TOTAL_SUMMARY, DAILY_TOTAL_SUMMARY, ITEM_TOTAL_SUMMARY, TOTALS, SIGNOFF,REMOVE_SIGNOFF,APPROVAL,REMOVE_APPROVAL,TOTALIZE,SAVE, HISTORICAL_CORRECTIONS, OVERTIME_SUMMARY, OVERTIME_DETAILS, TIMECARD_LAST_UPDATED_BY_SOMEELSE, OTA, HAS_PENDING_CHANGES", 
          "items" : {
            "enum" : [ "PROJECTS", "PUNCHES", "WORKED_SHIFTS", "PAYCODE_EDITS", "MOVE_AMOUNTS", "HOURS_WORKED", "HOLIDAY_CREDITS", "EXCEPTIONS", "EXTENDED_EXCEPTIONS", "TOTAL_SUMMARY", "DAILY_TOTAL_SUMMARY", "ITEM_TOTAL_SUMMARY", "TOTALS", "SIGNOFF", "REMOVE_SIGNOFF", "APPROVAL", "REMOVE_APPROVAL", "TOTALIZE", "SAVE", "HISTORICAL_CORRECTIONS", "OVERTIME_SUMMARY", "OVERTIME_DETAILS", "TIMECARD_LAST_UPDATED_BY_SOMEELSE", "OTA", "HAS_PENDING_CHANGES", "HAS_MOVE_AMOUNTS", "MISSINGTIME_GROUP", "TOTALIZATION_STATUS", "ACTIVITY_SEGMENTS", "ACTIVITY_SHIFTS", "ACTIVITY_TOTALS", "ACTIVITY_TEAM_MEMBERSHIPS", "ACTIVITY_TEAM_MEMBERSHIP_BUNDLES", "SCHEDULE_SHIFT", "WORKED_SPANS_MISSING_PUNCHES", "PROCESSED_SEGMENTS" ], 
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "where" : {
          "$ref" : "#/definitions/Timecard Time Card Where", 
          "description" : "Criteria definition of a timecard request. Only one criteria can be specified per request."
        }
      }, 
      "required" : [ "where" ], 
      "type" : "object"
    }, 
    "ApprovalResponseForRest" : {
      "description" : "Entity containing information about an approval.", 
      "properties" : {
        "approvalDate" : {
          "description" : "The date to which this timecard approval applies", 
          "format" : "date", 
          "type" : "string"
        }, 
        "approvingManager" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "If applicable, an ObjectRef representing the manager who has made this approval"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "An ObjectRef representing the subject employee"
        }, 
        "enteredOnDTM" : {
          "description" : "A LocalDateTime representing the date and time this approval was made", 
          "type" : "string"
        }, 
        "isEmployeeApproved" : {
          "description" : "Boolean indicator of whether or not this is an employee approval", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "CommonDateRange" : {
      "description" : "Model for date range.", 
      "properties" : {
        "endDate" : {
          "description" : "The end date associated with date range.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "startDate" : {
          "description" : "The start date associated with date range.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "symbolicPeriod" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "A reference to the symbolic Period object."
        }
      }, 
      "type" : "object"
    }, 
    "Key for MDUI related entities" : {
      "description" : "Key with ID and name for the Metadata Driven User Interface (MDUI).", 
      "properties" : {
        "id" : {
          "description" : "Internal ID of the entity.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "Displayed name of the entity.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Add-On Profile" : {
      "description" : "An object container for all properties related to Timecard Addon configuration.", 
      "properties" : {
        "activityEventAuditColumns" : {
          "description" : "A collection of Activity Event Audit columns associated with an Audits Timecard Add-On profile.", 
          "items" : {
            "$ref" : "#/definitions/Add-On column"
          }, 
          "type" : "array"
        }, 
        "activityResultAuditColumns" : {
          "description" : "A collection of Activity Result Audit columns associated with an Audits Timecard Add-On profile.", 
          "items" : {
            "$ref" : "#/definitions/Add-On column"
          }, 
          "type" : "array"
        }, 
        "addOnColumns" : {
          "description" : "A collection of add-on columns associated with a Timecard Add-On profile.", 
          "items" : {
            "$ref" : "#/definitions/Add-On column"
          }, 
          "type" : "array"
        }, 
        "addOnGroupByTypes" : {
          "description" : "A collection of add-on group options associated with a Timecard Add-On profile.", 
          "items" : {
            "$ref" : "#/definitions/Key for MDUI related entities"
          }, 
          "type" : "array"
        }, 
        "addOnType" : {
          "$ref" : "#/definitions/Key for MDUI related entities", 
          "description" : "The type of the timecard add-on to which the Timecard Add-On profile applies."
        }, 
        "afterSignOffAuditsColumns" : {
          "description" : "A collection of After Sign-Off Audits columns associated with an Audits Timecard Add-On profile.", 
          "items" : {
            "$ref" : "#/definitions/Add-On column"
          }, 
          "type" : "array"
        }, 
        "approvalDetailColumns" : {
          "description" : "A collection of Approval Detail columns associated with an Audits Timecard Add-On profile.", 
          "items" : {
            "$ref" : "#/definitions/Add-On column"
          }, 
          "type" : "array"
        }, 
        "auditsColumns" : {
          "description" : "A collection of Audits columns associated with an Audits Timecard Add-On profile.", 
          "items" : {
            "$ref" : "#/definitions/Add-On column"
          }, 
          "type" : "array"
        }, 
        "commentsColumns" : {
          "description" : "A collection of Comments columns associated with an Audits Timecard Add-On profile.", 
          "items" : {
            "$ref" : "#/definitions/Add-On column"
          }, 
          "type" : "array"
        }, 
        "description" : {
          "description" : "The description of a Timecard Add-On profile.", 
          "type" : "string"
        }, 
        "detailViewColumns" : {
          "description" : "A collection of Detail View columns associated with a Historical Corrections Timecard Add-On profile.", 
          "items" : {
            "$ref" : "#/definitions/Add-On column"
          }, 
          "type" : "array"
        }, 
        "hiddenAccrualCodes" : {
          "description" : "A collection of hidden accrual codes associated with a Timecard Add-On profile.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef"
          }, 
          "type" : "array"
        }, 
        "hiddenPayCodes" : {
          "description" : "A collection of hidden pay codes associated with a Timecard Add-On profile.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef"
          }, 
          "type" : "array"
        }, 
        "id" : {
          "description" : "The ID of a Timecard Add-On profile.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The displayed name of a Timecard Add-On profile.", 
          "type" : "string"
        }, 
        "showWages" : {
          "description" : "A Boolean indicator of whether or not to display the Wages on a timecard.", 
          "type" : "boolean"
        }, 
        "signOffAndApprovalColumns" : {
          "description" : "A collection of Signoff & Approval columns associated with an Audits Timecard Add-On profile.", 
          "items" : {
            "$ref" : "#/definitions/Add-On column"
          }, 
          "type" : "array"
        }, 
        "summaryViewColumns" : {
          "description" : "A collection of Summary View columns associated with a Historical Corrections Timecard Add-On profile.", 
          "items" : {
            "$ref" : "#/definitions/Add-On column"
          }, 
          "type" : "array"
        }, 
        "teamMembershipAuditColumns" : {
          "description" : "@v1.0.timecardaddonprofile.apimodelproperty.teammembershipauditcolumns.description", 
          "items" : {
            "$ref" : "#/definitions/Add-On column"
          }, 
          "type" : "array"
        }, 
        "version" : {
          "description" : "The version of a Timecard Add-On profile. The version number is used for optimistic locking.", 
          "format" : "int32", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Configuration object" : {
      "description" : "Object container for all properties related to timecard configuration.", 
      "properties" : {
        "accrualsAddOnProfile" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "A reference to an accruals add-on profile."
        }, 
        "addOnOrder" : {
          "description" : "An ordered collection providing the IDs of add-ons to display on a project timecard.", 
          "items" : {
            "$ref" : "#/definitions/Key for MDUI related entities"
          }, 
          "type" : "array"
        }, 
        "allowRoundedPunchToggle" : {
          "description" : "A Boolean indicator of whether or not to allow rounded punches.", 
          "type" : "boolean"
        }, 
        "auditsAddOnProfile" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "A reference to an audits add-on profile."
        }, 
        "autoResolveAnomalyIndicator" : {
          "description" : "A Boolean indicator of whether or not to utilize the auto-resolve anomaly indicator.", 
          "type" : "boolean"
        }, 
        "canEditFutureTimecard" : {
          "description" : "A Boolean indicator of whether or not users can edit their future timecards.", 
          "type" : "boolean"
        }, 
        "columnsOrder" : {
          "description" : "An ordered collection with IDs of columns to display on a timecard.", 
          "items" : {
            "$ref" : "#/definitions/Key for MDUI related entities"
          }, 
          "type" : "array"
        }, 
        "concurrencyAnomalyIndicator" : {
          "description" : "A Boolean indicator of whether or not to display the Concurrency Anomaly Indicator on a timecard.", 
          "type" : "boolean"
        }, 
        "defaultPayCodes" : {
          "description" : "The IDs of predefined paycodes that are shown on a timecard by default.", 
          "items" : {
            "$ref" : "#/definitions/Key for MDUI related entities"
          }, 
          "type" : "array"
        }, 
        "description" : {
          "description" : "A full description of the Timecard Setting.", 
          "type" : "string"
        }, 
        "enableEnhancedMultiApprovalShading" : {
          "description" : "A Boolean indicator of whether or not to display the Include Enhanced Multi Approval Shading on a timecard.", 
          "type" : "boolean"
        }, 
        "fourPunchRow" : {
          "description" : "A Boolean indicator of whether or not to display an additional pair of in and out punch columns on a timecard.", 
          "type" : "boolean"
        }, 
        "hidePaidCorrection" : {
          "description" : "A Boolean indicator of whether or not the default state of the filter enabled by <code>paidCorrectionFilterEnabled</code> is set to hide paid corrections. The default value is false, which reveals both paid and unpaid corrections.", 
          "type" : "boolean"
        }, 
        "historicalCorrectionsAddOnProfile" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "A reference to a historical corrections add-on profile."
        }, 
        "id" : {
          "description" : "The ID of the Timecard Setting.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "idleAnomalyIndicator" : {
          "description" : "A Boolean indicator of whether or not to display the Idle Anomaly Indicator on a timecard.", 
          "type" : "boolean"
        }, 
        "includeActivityAllocation" : {
          "description" : "A Boolean indicator of whether or not to display the Activity Allocation on a timecard.", 
          "type" : "boolean"
        }, 
        "includeActivityDailyActual" : {
          "description" : "A Boolean indicator of whether or not to display the Activity Daily Actual on a timecard.", 
          "type" : "boolean"
        }, 
        "includeActivityDailyAllocated" : {
          "description" : "A Boolean indicator of whether or not to display the Activity Daily Allocated on a timecard.", 
          "type" : "boolean"
        }, 
        "includeActivityDailyVariance" : {
          "description" : "A Boolean indicator of whether or not to display the Activity Daily Variance on a timecard.", 
          "type" : "boolean"
        }, 
        "includeActivityEvent" : {
          "description" : "A Boolean indicator of whether or not to display the Activity name and duration on a timecard.", 
          "type" : "boolean"
        }, 
        "includeActivitySummary" : {
          "description" : "A Boolean indicator of whether or not to include the Activity Summary column.", 
          "type" : "boolean"
        }, 
        "includeActivityTotalActual" : {
          "description" : "A Boolean indicator of whether or not to display the Activity Total Actual on a timecard.", 
          "type" : "boolean"
        }, 
        "includeActivityTotalAllocated" : {
          "description" : "A Boolean indicator of whether or not to display the Activity Total Allocated on a timecard.", 
          "type" : "boolean"
        }, 
        "includeActivityTotalVariance" : {
          "description" : "A Boolean indicator of whether or not to display the Activity Total Variance on a timecard.", 
          "type" : "boolean"
        }, 
        "includeDailyTotals" : {
          "description" : "A Boolean indicator of whether or not to include the Daily Totals column for an hourly timecard.", 
          "type" : "boolean"
        }, 
        "includeDailyTotalsRow" : {
          "description" : "A Boolean indicator of whether or not to include the Daily Totals row for a project timecard.", 
          "type" : "boolean"
        }, 
        "includeOvertimes" : {
          "description" : "A Boolean indicator of whether or not to display an overtime icon on a timecard.", 
          "type" : "boolean"
        }, 
        "includePeriodTotals" : {
          "description" : "A Boolean indicator of whether or not to include the Period Totals column for a project timecard.", 
          "type" : "boolean"
        }, 
        "includePhantomPunches" : {
          "description" : "A Boolean indicator of whether or not to include phantom punches.", 
          "type" : "boolean"
        }, 
        "includeRollupTotalsColumn" : {
          "description" : "A Boolean indicator of whether or not to include the Week Totals column for an hourly timecard.", 
          "type" : "boolean"
        }, 
        "includeSchedule" : {
          "description" : "A Boolean indicator of whether or not to include the Schedule column for an hourly timecard.", 
          "type" : "boolean"
        }, 
        "includeScheduleRow" : {
          "description" : "A Boolean indicator of whether or not to include the Schedule row for a project timecard.", 
          "type" : "boolean"
        }, 
        "includeShiftDetails" : {
          "description" : "A Boolean indicator of whether or not to display shift details (\"purple punches\") on a timecard.", 
          "type" : "boolean"
        }, 
        "includeShiftTotals" : {
          "description" : "A Boolean indicator of whether or not to include the Shift Totals column for an hourly timecard.", 
          "type" : "boolean"
        }, 
        "includeShowShiftDetailsButton" : {
          "description" : "A Boolean indicator of whether or not to display the Show Shift Details button on a timecard.", 
          "type" : "boolean"
        }, 
        "includeTimeframeTotalsColumn" : {
          "description" : "A Boolean indicator of whether or not to include the Timeframe Totals column for a project timecard.", 
          "type" : "boolean"
        }, 
        "includeTransfer" : {
          "description" : "A Boolean indicator of whether or not to include the Transfer column for an hourly timecard.", 
          "type" : "boolean"
        }, 
        "includeTransferColumn" : {
          "description" : "A Boolean indicator of whether or not to include the Transfer column for a project timecard.", 
          "type" : "boolean"
        }, 
        "label" : {
          "description" : "A short description of the Timecard Setting.", 
          "type" : "string"
        }, 
        "mismatchResultsAnomalyIndicator" : {
          "description" : "A Boolean indicator of whether or not to utilize the mismatch results anomaly indicator.", 
          "type" : "boolean"
        }, 
        "missingResultsAnomalyIndicator" : {
          "description" : "A Boolean indicator of whether or not to display the Missing Results Anomaly Indicator on a timecard.", 
          "type" : "boolean"
        }, 
        "name" : {
          "description" : "Displayed name of the Timecard Setting.", 
          "type" : "string"
        }, 
        "numberOfFutureDays" : {
          "description" : "The number of days into the future (from today) that users can edit their timecards.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "orphanAnomalyIndicator" : {
          "description" : "A Boolean indicator of whether or not to utilize the orphan anomaly indicator.", 
          "type" : "boolean"
        }, 
        "overAllocationAnomalyIndicator" : {
          "description" : "A Boolean indicator of whether or not to display the Allocation Anomaly Indicator on a timecard.", 
          "type" : "boolean"
        }, 
        "paidCorrectionFilterEnabled" : {
          "description" : "A Boolean indicator of whether or not a Paid Corrections filter control is displayed on the Historical Corrections tab. The default value is true.", 
          "type" : "boolean"
        }, 
        "payCodeExceptionsShowIn" : {
          "description" : "The IDs of exceptions to display on a project timecard.", 
          "items" : {
            "$ref" : "#/definitions/Key for MDUI related entities"
          }, 
          "type" : "array"
        }, 
        "projectViewStartDay" : {
          "$ref" : "#/definitions/Key for MDUI related entities", 
          "description" : "The starting day of a week for a project timecard."
        }, 
        "punchSet" : {
          "$ref" : "#/definitions/Key for MDUI related entities", 
          "description" : "The MDUI punch set related to a Timecard setting."
        }, 
        "rowsOrder" : {
          "description" : "An ordered collection providing the IDs of rows to display on a project timecard.", 
          "items" : {
            "$ref" : "#/definitions/Key for MDUI related entities"
          }, 
          "type" : "array"
        }, 
        "showInactiveAssignmentsInTimecard" : {
          "description" : "A Boolean indicator of whether or not to show inactive assignments in the timecard.", 
          "type" : "boolean"
        }, 
        "startDayOfWeek" : {
          "$ref" : "#/definitions/Key for MDUI related entities", 
          "description" : "The starting day of a week for an hourly timecard."
        }, 
        "targetHoursAddOnProfile" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "A reference to a target hours add-on profile."
        }, 
        "timecardType" : {
          "$ref" : "#/definitions/Key for MDUI related entities", 
          "description" : "The type of the timecard to which the Timecard Setting applies."
        }, 
        "totalsAddOnProfile" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "A reference to a totals add-on profile."
        }, 
        "version" : {
          "description" : "Version of the Timecard Setting used for optimistic locking.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "workAddOnProfile" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "A reference to a work add-on profile."
        }
      }, 
      "type" : "object"
    }, 
    "MultiReadRequest" : {
      "description" : "Model for Locale Policy multi-read requests.", 
      "properties" : {
        "exclusiveObjectRefList" : {
          "items" : {
            "$ref" : "#/definitions/ObjectRef"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "where" : {
          "$ref" : "#/definitions/ObjectRefList", 
          "description" : "The context used when retrieving locale policies."
        }
      }, 
      "type" : "object"
    }, 
    "Timecard change" : {
      "description" : "The timecard change model.", 
      "properties" : {
        "accepted" : {
          "description" : "A Boolean indicator of whether or not a Timecard change is accepted.", 
          "type" : "boolean"
        }, 
        "activityName" : {
          "description" : "The name of an activity.", 
          "type" : "string"
        }, 
        "activitySegmentId" : {
          "description" : "The ID of an activity segment associated with a timecard change.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "activityTeam" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "A reference to an activity team associated with a timecard change."
        }, 
        "activityTransfer" : {
          "description" : "The transfer of an activity segment associated with a timecard change.", 
          "type" : "string"
        }, 
        "breakRule" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "The break rule applied to the punch to which a timecard change applies."
        }, 
        "changeDateTime" : {
          "description" : "The date and time when a timecard change was made in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "changeType" : {
          "description" : "The type of an action of a timecard change.", 
          "enum" : [ "INSERT", "UPDATE", "DELETE" ], 
          "type" : "string"
        }, 
        "commentsNotes" : {
          "description" : "A reference to a list of Comments associated with a timecard change. This object can have multiple Comments with multiple Notes for each Comment.", 
          "items" : {
            "$ref" : "#/definitions/Entity that contains Comment and Note information"
          }, 
          "type" : "array"
        }, 
        "currentStatus" : {
          "$ref" : "#/definitions/RequestStatus", 
          "description" : "The status of a timecard change."
        }, 
        "dataSource" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "A reference to the data source of the timecard change, if one exists. Normally, this indicates that the context object came from a different source, such as a clock, device, or an external data source such as an import or interface."
        }, 
        "deductRule" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "The deduct rule applied to the punch to which a timecard change applies."
        }, 
        "durationDateLocalized" : {
          "description" : "The duration (in hours) of the activity event.", 
          "type" : "string"
        }, 
        "durationInDays" : {
          "description" : "The duration (in days) of the pay code edit to which a timecard change applies.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "durationInHours" : {
          "description" : "The duration (in hours) of the pay code edit to which a timecard change applies.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "durationLocalized" : {
          "description" : "The duration of the activity event.", 
          "type" : "string"
        }, 
        "editByType" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "A reference to the type of the user who made a timecard change. Indicates whether the change was made by the employee or by someone else."
        }, 
        "elementType" : {
          "description" : "The type of an element of a timecard change.", 
          "enum" : [ "PUNCH", "PAYCODEEDIT", "HOURSWORKED", "ACTIVITY_SEGMENT" ], 
          "type" : "string"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "A reference to the employee who made a timecard change."
        }, 
        "endDateTime" : {
          "description" : "The end date and time of the pay code edit to which a timecard change applies in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "endDateTimeLocalized" : {
          "description" : "The stop date and time of the activity event.", 
          "type" : "string"
        }, 
        "enteredOnDateTime" : {
          "description" : "The \"entered on\" date and time of the punch to which a timecard change applies in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "hasComments" : {
          "description" : "A Boolean indicator of whether or not a Comment is associated with a timecard change.", 
          "type" : "boolean"
        }, 
        "id" : {
          "description" : "The ID of a timecard change.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "isCancelDeduct" : {
          "description" : "A Boolean indicator of whether or not to cancel a meal deduction associated with the punch to which a timecard change applies.", 
          "type" : "boolean"
        }, 
        "isExceptionResolved" : {
          "description" : "A Boolean indicator of whether or not an exception is resolved for a punch to which a timecard change applies.", 
          "type" : "boolean"
        }, 
        "moneyAmount" : {
          "description" : "The amount (as a decimal value representing money) of the pay code edit to which a timecard change applies.", 
          "type" : "number"
        }, 
        "orderNum" : {
          "description" : "The order number of the activity event.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "orgJob" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "The organization job applied to a timecard change."
        }, 
        "overrideAccrualAmount" : {
          "description" : "The number of accrual days overridden by the pay code edit to which a timecard change applies.", 
          "type" : "number"
        }, 
        "overrideType" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "The override type of the punch to which a timecard change applies."
        }, 
        "paycode" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "A reference to a pay code object associated with the pay code edit to which a timecard change applies."
        }, 
        "position" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the position of the employee assigned to a pay code edit."
        }, 
        "punchDtm" : {
          "description" : "The date and time of the punch to which a timecard change applies in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "punchId" : {
          "description" : "The ID of the punch to which a timecard change applies.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "requestStatusChanges" : {
          "description" : "The list of status changes of a timecard change.", 
          "items" : {
            "$ref" : "#/definitions/RequestStatusChange"
          }, 
          "type" : "array"
        }, 
        "resultSegmentsCount" : {
          "description" : "The number of result segments expressed as an integer.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "scheduleAmountType" : {
          "description" : "The schedule amount type of the pay code edit to which a timecard change applies. Valid values include AMOUNT_NOT_FROM_SCHEDULE, FULL_DAY_AMOUNT_FROM_SCHEDULE, HALF_DAY_AMOUNT_FROM_SCHEDULE, FULL_DAY_AMOUNT_FROM_CONTRACT, HALF_DAY_AMOUNT_FROM_CONTRACT, FIRST_HALF_DAY_AMOUNT_FROM_CONTRACT, SECOND_HALF_DAY_AMOUNT_FROM_CONTRACT, FULL_DAY_AMOUNT_FROM_PATTERN, FROM_EMPLOYMENT_TERM, FIRST_HALF_DAY_AMOUNT_FROM_SCHEDULE, SECOND_HALF_DAY_AMOUNT_FROM_SCHEDULE, HALF_DAY_AMOUNT_FROM_PATTERN, FIRST_HALF_DAY_AMOUNT_FROM_PATTERN, and SECOND_HALF_DAY_AMOUNT_FROM_PATTERN.", 
          "enum" : [ "AMOUNT_NOT_FROM_SCHEDULE", "FULL_DAY_AMOUNT_FROM_SCHEDULE", "HALF_DAY_AMOUNT_FROM_SCHEDULE", "FULL_DAY_AMOUNT_FROM_CONTRACT", "HALF_DAY_AMOUNT_FROM_CONTRACT", "FIRST_HALF_DAY_AMOUNT_FROM_CONTRACT", "SECOND_HALF_DAY_AMOUNT_FROM_CONTRACT", "FULL_DAY_AMOUNT_FROM_PATTERN", "FROM_EMPLOYMENT_TERM", "FIRST_HALF_DAY_AMOUNT_FROM_SCHEDULE", "SECOND_HALF_DAY_AMOUNT_FROM_SCHEDULE", "HALF_DAY_AMOUNT_FROM_PATTERN", "FIRST_HALF_DAY_AMOUNT_FROM_PATTERN", "SECOND_HALF_DAY_AMOUNT_FROM_PATTERN" ], 
          "type" : "string"
        }, 
        "startDateTime" : {
          "description" : "The start date and time of the pay code edit to which a timecard change applies in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "startDateTimeLocalized" : {
          "description" : "The start date and time of the activity event.", 
          "type" : "string"
        }, 
        "timeZone" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "The time zone of a timecard change."
        }, 
        "transactionDateTime" : {
          "description" : "The date and time to which a timecard change applies in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "transferString" : {
          "description" : "An ordered, semi-colon separated list of Labor Category Entries and Cost Center.", 
          "type" : "string"
        }, 
        "updateDateTime" : {
          "description" : "The date and time of an update to the punch or pay code edit to which a timecard change applies in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "userEnteredPosition" : {
          "description" : "A Boolean indicator of whether or not a position was set by a user. When false, the position was set by the system.", 
          "type" : "boolean"
        }, 
        "workRule" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "The work rule applied to a timecard change."
        }
      }, 
      "type" : "object"
    }, 
    "Timecard change status" : {
      "description" : "Timecard change status", 
      "properties" : {
        "id" : {
          "description" : "The ID of a timecard change.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "status" : {
          "description" : "The status of a timecard change.", 
          "enum" : [ "SUBMITTED", "APPROVED", "REFUSED", "APPROVED_BY_GROUP_EDIT" ], 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Changes Report Request" : {
      "description" : "Timecard change request model.", 
      "properties" : {
        "select" : {
          "description" : "<p>The select criteria of a timecard change request. The only value currently supported by this property is <code>timecardChanges</code>.</p>", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "where" : {
          "$ref" : "#/definitions/Defines the where clause used in the selection of a timecard changes.", 
          "description" : "The where criteria of a timecard change request. Only one criteria can be specified per request."
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Changes Report Response" : {
      "description" : "Timecard change response", 
      "properties" : {
        "timecardChanges" : {
          "description" : "A list of timecard changes.", 
          "items" : {
            "$ref" : "#/definitions/Timecard change for report"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "APIExceptionDetailResult" : {
      "properties" : {
        "error" : {
          "$ref" : "#/definitions/APIException"
        }, 
        "success" : {
          "type" : "object"
        }
      }, 
      "type" : "object"
    }, 
    "Manager Approval Transaction request" : {
      "description" : "Entity containing necessary data for an Approval request.", 
      "properties" : {
        "dateRange" : {
          "$ref" : "#/definitions/CommonDateRange", 
          "description" : "An explicit or symbolic date range for the approval request."
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "An ObjectRef representing the subject employee"
        }
      }, 
      "type" : "object"
    }, 
    "TimeCardDataFindRequest" : {
      "description" : "Entity containing necessary data for Timecard Data Find request.", 
      "properties" : {
        "multiReadOptions" : {
          "$ref" : "#/definitions/TimeCardDataMultiReadOptions", 
          "description" : "A set of options by which timecard data request results are filtered."
        }, 
        "options" : {
          "$ref" : "#/definitions/TimeCardDataOptions", 
          "description" : "A set of optional parameters for Timecard metrics."
        }, 
        "rollupContext" : {
          "$ref" : "#/definitions/TimeCardDataRollupContext", 
          "description" : "Object that defines how the data in a timecard data response is rolled up and returned."
        }, 
        "select" : {
          "description" : "Objects returned by the timecard data request. If a unique resource is not specified in the request, all resources are returned, except GROUPED_HOURS_TOTALS. Valid values include: FTPTDATA_ALL, FTPTDATA, AVERAGING, SCHEDULED_TOTALS, PROJECTED_TOTALS, PROJECTED_TOTALS_ONLY_CORRECTIONS, PROJECTED_TOTALS_EXCLUDE_CORRECTIONS, ACTUAL_TOTALS, ACTUAL_TOTALS_ONLY_CORRECTIONS, ACTUAL_TOTALS_EXCLUDE_CORRECTIONS, EXCEPTION_TOTAL, SHIFT_ACTUAL_TOTAL_SUMMARY, SHIFT_SCHEDULED_TOTAL_SUMMARY, SHIFT_PROJECTED_TOTAL_SUMMARY, DAILY_ACTUAL_TOTAL_SUMMARY, DAILY_SCHEDULED_TOTAL_SUMMARY, DAILY_PROJECTED_TOTAL_SUMMARY, ACCRUAL_SUMMARY, ACCRUAL_TRANSACTIONS, ABSENCE_EXCEPTION, GROUPED_HOURS_TOTALS, ISR_DAILY, ISR_SUMMARY. Refer to the main description of the Retrieve Timecard Data for Multiple Employees API operation for more information about each select parameter.", 
          "items" : {
            "enum" : [ "ISR_DAILY", "ISR_SUMMARY", "FTPTDATA_ALL", "FTPTDATA", "AVERAGING", "SCHEDULED_TOTALS", "PROJECTED_TOTALS", "PROJECTED_TOTALS_ONLY_CORRECTIONS", "PROJECTED_TOTALS_EXCLUDE_CORRECTIONS", "ACTUAL_TOTALS", "ACTUAL_TOTALS_ONLY_CORRECTIONS", "ACTUAL_TOTALS_EXCLUDE_CORRECTIONS", "EXCEPTION_TOTAL", "EXCEPTION_TOTAL_UNREVIEWED", "EXCEPTION_TOTAL_EMPLOYEE_JUSTIFIED", "EXCEPTION_TOTAL_MANAGER_JUSTIFIED", "EXCEPTION_TOTAL_AUTO_RESOLVED", "SHIFT_ACTUAL_TOTAL_SUMMARY", "SHIFT_SCHEDULED_TOTAL_SUMMARY", "SHIFT_PROJECTED_TOTAL_SUMMARY", "DAILY_ACTUAL_TOTAL_SUMMARY", "DAILY_SCHEDULED_TOTAL_SUMMARY", "DAILY_PROJECTED_TOTAL_SUMMARY", "ACCRUAL_SUMMARY", "ACCRUAL_TRANSACTIONS", "ABSENCE_EXCEPTION", "TOTALS", "GROUPED_HOURS_TOTALS" ], 
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "where" : {
          "$ref" : "#/definitions/TimeCardDataWhere", 
          "description" : "This is the criteria definition of a timecard data request. Only one criteria can be specified per request."
        }
      }, 
      "required" : [ "where" ], 
      "type" : "object"
    }, 
    "TimeCardData" : {
      "description" : "Entity containing necessary data for the Timecard Data resource.", 
      "properties" : {
        "absenceExceptionData" : {
          "$ref" : "#/definitions/Absenceexceptiondata", 
          "description" : "Entity containing necessary information for abscence exceptions."
        }, 
        "absenceExceptionsWithPosition" : {
          "description" : "A list containing information for abscence exceptions with position.", 
          "items" : {
            "$ref" : "#/definitions/absenceexceptionwithposition"
          }, 
          "type" : "array"
        }, 
        "accrualSummaryData" : {
          "items" : {
            "$ref" : "#/definitions/AccrualSummaryData"
          }, 
          "type" : "array"
        }, 
        "accrualTransactions" : {
          "description" : "The Accrual Transactions object.", 
          "items" : {
            "$ref" : "#/definitions/AccrualTransactionData"
          }, 
          "type" : "array"
        }, 
        "actualTotals" : {
          "description" : "Entity containing necessary information for actual totals data.", 
          "items" : {
            "$ref" : "#/definitions/TotalsData"
          }, 
          "type" : "array"
        }, 
        "actualTotalsExcludeCorrections" : {
          "description" : "Entity containing necessary information for actual totals without corrections.", 
          "items" : {
            "$ref" : "#/definitions/TotalsData"
          }, 
          "type" : "array"
        }, 
        "actualTotalsOnlyCorrections" : {
          "description" : "Entity containing necessary information for actual totals with only corrections.", 
          "items" : {
            "$ref" : "#/definitions/TotalsData"
          }, 
          "type" : "array"
        }, 
        "averaging" : {
          "description" : "Entity containing necessary information for averaging data.", 
          "items" : {
            "$ref" : "#/definitions/AveragingData"
          }, 
          "type" : "array"
        }, 
        "dailyActualTotalSummary" : {
          "description" : "Entity containing necessary information for daily actual total summary data.", 
          "items" : {
            "$ref" : "#/definitions/TotalSummaryData"
          }, 
          "type" : "array"
        }, 
        "dailyProjectedTotalSummary" : {
          "description" : "Entity containing necessary information for daily projected total summary data.", 
          "items" : {
            "$ref" : "#/definitions/TotalSummaryData"
          }, 
          "type" : "array"
        }, 
        "dailyScheduledTotalSummary" : {
          "description" : "Entity containing necessary information for daily scheduled total summary data.", 
          "items" : {
            "$ref" : "#/definitions/TotalSummaryData"
          }, 
          "type" : "array"
        }, 
        "employeeId" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "An ID that uniquely identifies an employee. This is not a person number."
        }, 
        "exceptioncounts" : {
          "description" : "Entity containing necessary information for exception counts data.", 
          "items" : {
            "$ref" : "#/definitions/ExceptioncountData"
          }, 
          "type" : "array"
        }, 
        "exceptioncountsAutoResolved" : {
          "description" : "Entity containing necessary information for auto-resolved exception counts data.", 
          "items" : {
            "$ref" : "#/definitions/ExceptioncountData"
          }, 
          "type" : "array"
        }, 
        "exceptioncountsEmployeeJustified" : {
          "description" : "Entity containing necessary information for employee justified exception counts data.", 
          "items" : {
            "$ref" : "#/definitions/ExceptioncountData"
          }, 
          "type" : "array"
        }, 
        "exceptioncountsManagerJustified" : {
          "description" : "Entity containing necessary information for manager justified exception counts data.", 
          "items" : {
            "$ref" : "#/definitions/ExceptioncountData"
          }, 
          "type" : "array"
        }, 
        "exceptioncountsUnreviewed" : {
          "description" : "A list containing unreviewed exception count data.", 
          "items" : {
            "$ref" : "#/definitions/ExceptioncountData"
          }, 
          "type" : "array"
        }, 
        "ftptData" : {
          "description" : "Entity containing necessary information for FullTimePartTime (FTPT) data with worked weeks included.", 
          "items" : {
            "$ref" : "#/definitions/FTPTData"
          }, 
          "type" : "array"
        }, 
        "ftptDataAll" : {
          "description" : "Entity containing necessary information for FullTimePartTime (FTPT) data with all weeks included.", 
          "items" : {
            "$ref" : "#/definitions/FTPTData"
          }, 
          "type" : "array"
        }, 
        "groupedHoursTotals" : {
          "description" : "A list containing grouped totals with summarized hours, wages, and days.", 
          "items" : {
            "$ref" : "#/definitions/TotalsData"
          }, 
          "type" : "array"
        }, 
        "musterReportDailyData" : {
          "description" : "A list containing muster report daily data.", 
          "items" : {
            "$ref" : "#/definitions/MusterReportDailyData"
          }, 
          "type" : "array"
        }, 
        "musterReportSummaryData" : {
          "description" : "A list containing muster report summary data.", 
          "items" : {
            "$ref" : "#/definitions/MusterReportSummaryData"
          }, 
          "type" : "array"
        }, 
        "projectedTotals" : {
          "description" : "Entity containing necessary information for projected totals data.", 
          "items" : {
            "$ref" : "#/definitions/TotalsData"
          }, 
          "type" : "array"
        }, 
        "projectedTotalsExcludeCorrections" : {
          "description" : "Entity containing necessary information for projected totals without corrections.", 
          "items" : {
            "$ref" : "#/definitions/TotalsData"
          }, 
          "type" : "array"
        }, 
        "projectedTotalsOnlyCorrections" : {
          "description" : "Entity containing necessary information for projected totals with only corrections.", 
          "items" : {
            "$ref" : "#/definitions/TotalsData"
          }, 
          "type" : "array"
        }, 
        "scheduledTotals" : {
          "description" : "Entity containing necessary information for scheduled totals data.", 
          "items" : {
            "$ref" : "#/definitions/TotalsData"
          }, 
          "type" : "array"
        }, 
        "shiftActualTotalSummary" : {
          "description" : "Entity containing necessary information for shift actual total summary data.", 
          "items" : {
            "$ref" : "#/definitions/TotalSummaryData"
          }, 
          "type" : "array"
        }, 
        "shiftProjectedTotalSummary" : {
          "description" : "Entity containing necessary information for shift projected total summary data.", 
          "items" : {
            "$ref" : "#/definitions/TotalSummaryData"
          }, 
          "type" : "array"
        }, 
        "shiftScheduledTotalSummary" : {
          "description" : "Entity containing necessary information for shift scheduled total summary data.", 
          "items" : {
            "$ref" : "#/definitions/TotalSummaryData"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Activity Segment" : {
      "description" : "Entity describing an Activity Segment for an employee.", 
      "properties" : {
        "accepted" : {
          "description" : "A Boolean indicator of whether or not the segment is accepted.", 
          "type" : "boolean"
        }, 
        "activity" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to an activity."
        }, 
        "approved" : {
          "description" : "A Boolean indicator of whether or not the activity is approved.", 
          "type" : "boolean"
        }, 
        "approvedByEmployee" : {
          "description" : "A Boolean indicator of whether or not the activity is employee-approved.", 
          "type" : "boolean"
        }, 
        "commentNotes" : {
          "description" : "A reference to a list of Comments. This object can have multiple Comments with multiple Notes for each Comment.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Comment Note"
          }, 
          "type" : "array"
        }, 
        "concurrentWithPrevious" : {
          "description" : "A Boolean indicator of whether or not an activity segment is concurrent with prior segment(s).", 
          "type" : "boolean"
        }, 
        "costCenter" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the CostCenter object for the activity segment transfer."
        }, 
        "createdDateTime" : {
          "description" : "The date and time this record was created in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).", 
          "type" : "string"
        }, 
        "dataSourceId" : {
          "description" : "The ID of the data source.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "direct" : {
          "description" : "A Boolean indicator of whether or not the activity is direct.", 
          "type" : "boolean"
        }, 
        "durationDate" : {
          "description" : "The duration date of the activity in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "durationInSeconds" : {
          "description" : "The duration in seconds of the activity.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "durationOrder" : {
          "description" : "The order number of an activity duration segment.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "editByTypeId" : {
          "description" : "The ID of the edit by type.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object."
        }, 
        "emptyTransfer" : {
          "description" : "A Boolean indicator of whether or not the activity segment has an empty transfer.", 
          "type" : "boolean"
        }, 
        "endDateTime" : {
          "description" : "The date and time of the end of the activity in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).", 
          "type" : "string"
        }, 
        "endTimezone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The time zone of the end of the activity."
        }, 
        "eventTypeId" : {
          "description" : "The ID of an event type.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "hasComments" : {
          "description" : "A Boolean indicator of whether or not a Comment is associated with an activity segment.", 
          "type" : "boolean"
        }, 
        "hoursAllocatedType" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to an hours allocation type."
        }, 
        "id" : {
          "description" : "The ID of an activity segment.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "laborAccountId" : {
          "description" : "The ID of the labor account, which combines the cost center and labor categories.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "laborCategories" : {
          "description" : "A list of labor category entry lists containing the labor categories associated with an activity segment transfer.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Activity Segment Labor Category Transfer"
          }, 
          "type" : "array"
        }, 
        "mismatchedResults" : {
          "description" : "A read-only property that includes mismatched results.", 
          "readOnly" : true, 
          "type" : "boolean"
        }, 
        "missingResults" : {
          "description" : "A read-only property that includes missing results.", 
          "readOnly" : true, 
          "type" : "boolean"
        }, 
        "orgJob" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The job associated with an activity for the activity segment transfer."
        }, 
        "orgJobId" : {
          "description" : "The ID of a job associated with an activity.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "reordered" : {
          "description" : "A Boolean indicator of whether or not type operation is reordered.", 
          "type" : "boolean"
        }, 
        "resultSegments" : {
          "description" : "A reference to a list of Activity Result Segments.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Activity Result Segment"
          }, 
          "type" : "array"
        }, 
        "startDateTime" : {
          "description" : "The date and time of the start of the activity in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).", 
          "type" : "string"
        }, 
        "startTimezone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The time zone of the start of the activity."
        }, 
        "transactionType" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the form type."
        }, 
        "unitId" : {
          "description" : "The ID of the unit.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "updatedDateTime" : {
          "description" : "The date and time this record was last updated in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).", 
          "type" : "string"
        }, 
        "weightValueAmount" : {
          "description" : "The amount (as a decimal value representing money) of the activity.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "wfaTransId" : {
          "description" : "A reference to the form.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "workRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the Work Rule for the activity segment transfer."
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Activity Shift" : {
      "description" : "Entity describing an activity shift object for the timecard resource.", 
      "properties" : {
        "activitySpans" : {
          "description" : "A reference to a list of activity spans.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Activity Span"
          }, 
          "type" : "array"
        }, 
        "shiftTotal" : {
          "$ref" : "#/definitions/Timecard Activity Shift Total", 
          "description" : "The shift totals associated with an activity."
        }, 
        "workShiftId" : {
          "description" : "The ID of the worked shift.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Activity Team Membership Bundle" : {
      "description" : "Entity describing an activity team membership bundle.", 
      "properties" : {
        "activityEffectiveTeamMemberships" : {
          "description" : "A reference to a list of activity effective team memberships.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Activity Effective Team Membership"
          }, 
          "type" : "array"
        }, 
        "activityTeamMembership" : {
          "$ref" : "#/definitions/Timecard Activity Team Membership", 
          "description" : "A reference to an activity team membership."
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Activity Team Membership" : {
      "description" : "Entity describing an activity team membership for an employee.", 
      "properties" : {
        "createdDateTime" : {
          "description" : "The date and time this record was created in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).", 
          "type" : "string"
        }, 
        "dataSourceId" : {
          "description" : "The ID of the data source.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "editByTypeId" : {
          "description" : "The ID of the edit by type.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom an activity team membership applies."
        }, 
        "endDateTime" : {
          "description" : "The date and time of the end of the activity team membership in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).", 
          "type" : "string"
        }, 
        "endTimezone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The time zone of the end of the activity the team membership."
        }, 
        "id" : {
          "description" : "The ID of the activity team membership.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "softClosed" : {
          "description" : "The boolean flag that shows to use or not team`s default membership length.", 
          "type" : "boolean"
        }, 
        "startDateTime" : {
          "description" : "The date and time of the start of the activity team membership in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).", 
          "type" : "string"
        }, 
        "startTimezone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The time zone of the start of the activity the team membership."
        }, 
        "systemGeneratedEnd" : {
          "description" : "@v1.0.activityteammembership.apimodelproperty.systemgeneratedend.description", 
          "type" : "string"
        }, 
        "systemGeneratedEndTimezone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "@v1.0.activityteammembership.apimodelproperty.systemgeneratedendtimezone.description"
        }, 
        "team" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The ID of the activity team definition."
        }, 
        "updatedDateTime" : {
          "description" : "The date and time this record was last updated in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Total" : {
      "description" : "Entity containing information regarding totals for an employee.", 
      "properties" : {
        "aggregatedTotals" : {
          "description" : "A list of aggregated totals objects.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Aggregated Total"
          }, 
          "type" : "array"
        }, 
        "employeeContext" : {
          "$ref" : "#/definitions/Timecard Employee Context", 
          "description" : "Contextual information that describes an employee."
        }, 
        "totalContext" : {
          "$ref" : "#/definitions/TotalContext", 
          "description" : "Contextual information that describes totals."
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Daily Total Summary" : {
      "description" : "Entity containing information regarding an item total summary object.", 
      "properties" : {
        "applyDate" : {
          "description" : "The date to which the daily total summary applies.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "cumulativeTotal" : {
          "description" : "The total cumulative hours up to the date of this total summary object in a pay period.", 
          "type" : "number"
        }, 
        "dailyTotalAmount" : {
          "additionalProperties" : {
            "type" : "number"
          }, 
          "description" : "The total hours for each amount type in this total summary object.", 
          "type" : "object"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the punch applies."
        }, 
        "hoursAndCostSummaries" : {
          "additionalProperties" : {
            "items" : {
              "$ref" : "#/definitions/Timecard Hours And Cost Summary"
            }, 
            "type" : "array"
          }, 
          "description" : "The hours and cost summaries associated with this daily total summary per amount type.", 
          "type" : "object"
        }
      }, 
      "type" : "object"
    }, 
    "ObjectRef Entity" : {
      "description" : "ObjectRef contains an id and qualifier and either field should be able to uniquely identify an Object", 
      "properties" : {
        "id" : {
          "description" : "Object Ref Id", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "qualifier" : {
          "description" : "Object Ref Unique qualifier", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard TK Exception" : {
      "description" : "Entity representing a Timekeeping exception (TKException) related to a timecard.", 
      "properties" : {
        "applyDate" : {
          "description" : "The date to which an exception applies in ISO_LOCAL_DATE format (YYYY-MM-DD). This property is read only.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "commentsNotes" : {
          "description" : "A reference to a list of Comments. This object can have multiple Comments with multiple Notes for each Comment. This property is read only.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Comment Note"
          }, 
          "type" : "array"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the punch applies. This property is read only."
        }, 
        "endDateTime" : {
          "description" : "The end date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss). This property is read only.", 
          "type" : "string"
        }, 
        "endException" : {
          "type" : "boolean"
        }, 
        "endTimeZone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The end timezone where the exception was entered. Normally, this is the default or home timezone for the employee, but the exception can include a different timezone as necessary. This property is read only."
        }, 
        "eventDate" : {
          "format" : "date", 
          "type" : "string"
        }, 
        "exceptionType" : {
          "description" : "<p>The Timekeeping exception type.</p><p>The names, descriptions, and categories enumerated in <code>name</code>, <code>description</code>, and <code>category</code> are linked to one another and listed in the same sequence in each property. For example, for the Early In exception type, the <code>name</code> is EARLY_IN, the <code>description</code> is EARLY_IN_DSC, and the <code>category</code> is IN_PUNCH_EXCEPTIONS.</p>", 
          "properties" : {
            "category" : {
              "description" : "The category of a Timekeeping exception type. Possible values include the following, which include repetitions so the sequence matches the sequencing in <code>name</code> and <code>description</code>: SHIFT_EXCEPTIONS, SHIFT_EXCEPTIONS, IN_PUNCH_EXCEPTIONS, IN_PUNCH_EXCEPTIONS, IN_PUNCH_EXCEPTIONS, OUT_PUNCH_EXCEPTIONS, OUT_PUNCH_EXCEPTIONS, OUT_PUNCH_EXCEPTIONS, ABSENCE_EXCEPTIONS, ABSENCE_EXCEPTIONS, BREAK_EXCEPTIONS, BREAK_EXCEPTIONS, SHIFT_EXCEPTIONS, SHIFT_EXCEPTIONS, IN_PUNCH_EXCEPTIONS, OUT_PUNCH_EXCEPTIONS, SHIFT_EXCEPTIONS, BREAK_EXCEPTIONS, BREAK_EXCEPTIONS, BREAK_EXCEPTIONS, BREAK_EXCEPTIONS, MISCELLANEOUS_EXCEPTIONS, MISCELLANEOUS_EXCEPTIONS, MISCELLANEOUS_EXCEPTIONS, SHIFT_EXCEPTIONS, MISCELLANEOUS_EXCEPTIONS.", 
              "type" : "string"
            }, 
            "description" : {
              "description" : "The description of a Timekeeping exception type. Possible values include: CANCELLED_DEDUCTION_DSC, CORE_HOURS_VIOLATION_DSC, VERY_EARLY_IN_DSC, EARLY_IN_DSC, LATE_IN_DSC, EARLY_OUT_DSC, LATE_OUT_DSC, VERY_LATE_OUT_DSC, EXCUSED_ABSENCE_DSC, UNEXCUSED_ABSENCE_DSC, SHORT_BREAK_DSC, LONG_BREAK_DSC, SHORT_SHIFT_DSC, LONG_SHIFT_DSC, MISSED_IN_PUNCH_DSC, MISSED_OUT_PUNCH_DSC, UNSCHEDULED_DSC, LONG_TOTAL_BREAK_DSC, SHORT_TOTAL_BREAK_DSC, BONUS_APPLIED_DSC, BREAK_OUT_OF_SEQUENCE_DSC, HOLIDAY_SCHEDULE_VIOLATION_DSC, MINIMUM_DAYS_ACTIVE_VIOLATION_DSC, MINIMUM_DAYS_EMPLOYED_VIOLATION_DSC, INVALID_NAMED_DURATION_DSC, WORK_HISTORY_VIOLATION_DSC.", 
              "type" : "string"
            }, 
            "displayName" : {
              "description" : "The display name of a Timekeeping exception type.", 
              "type" : "string"
            }, 
            "id" : {
              "description" : "The ID of a Timekeeping exception type.", 
              "type" : "integer"
            }, 
            "name" : {
              "description" : "The name of a Timekeeping exception type. Possible values include: CANCELLED_DEDUCTION, CORE_HOURS_VIOLATION, VERY_EARLY_IN, EARLY_IN, LATE_IN, EARLY_OUT, LATE_OUT, VERY_LATE_OUT, EXCUSED_ABSENCE, UNEXCUSED_ABSENCE, SHORT_BREAK, LONG_BREAK, SHORT_SHIFT, LONG_SHIFT, MISSED_IN_PUNCH, MISSED_OUT_PUNCH, UNSCHEDULED, LONG_TOTAL_BREAK, SHORT_TOTAL_BREAK, BONUS_APPLIED, BREAK_OUT_OF_SEQUENCE, HOLIDAY_SCHEDULE_VIOLATION, MINIMUM_DAYS_ACTIVE_VIOLATION, MINIMUM_DAYS_EMPLOYED_VIOLATION, INVALID_NAMED_DURATION, WORK_HISTORY_VIOLATION.", 
              "type" : "string"
            }
          }, 
          "type" : "object"
        }, 
        "id" : {
          "description" : "The ID of the exception. This property is read only.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "isExcusedAbsence" : {
          "description" : "A Boolean indicator of whether or not the exception involves an excused absence. This property is read only.", 
          "type" : "boolean"
        }, 
        "isUnExcusedAbsence" : {
          "description" : "A Boolean indicator of whether or not the exception involves an unexcused absence. This property is read only.", 
          "type" : "boolean"
        }, 
        "justifiableEndDateTime" : {
          "description" : "The end date and time of a justifiable missing time span in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS). This property is read only.", 
          "type" : "string"
        }, 
        "justifiableStartDateTime" : {
          "description" : "The start date and time of a justifiable missing time span in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS). This property is read only.", 
          "type" : "string"
        }, 
        "justifications" : {
          "description" : "A list of missing time justifications for this exception. This property is read only.", 
          "items" : {
            "$ref" : "#/definitions/TKJustification"
          }, 
          "type" : "array"
        }, 
        "justifiedTimes" : {
          "description" : "A list of justified times for this exception. This property is read only.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Pay Code Edit"
          }, 
          "type" : "array"
        }, 
        "missingTimeStatus" : {
          "$ref" : "#/definitions/MissingTimeStatusModel", 
          "description" : "The missing time status related to this exception. This property is read only."
        }, 
        "orgJob" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "Provides the organization job object to which the exception applies. Normally, this is the default or home job for the employee. This property is read only."
        }, 
        "overLimitInHours" : {
          "description" : "The amount (in hours) that exceeds the limit defined by the exception associated with the pay code edit. This property is read only.", 
          "type" : "number"
        }, 
        "position" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the position assigned to this exception."
        }, 
        "punchEvent" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to a punch with an associated exception. This property is read only."
        }, 
        "reviewed" : {
          "type" : "boolean"
        }, 
        "scheduleItem" : {
          "$ref" : "#/definitions/Schedule Exception", 
          "description" : "The schedule shift violated by an exception. This property is read only."
        }, 
        "startDateTime" : {
          "description" : "The start date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss). This property is read only.", 
          "type" : "string"
        }, 
        "startException" : {
          "type" : "boolean"
        }, 
        "startTimeZone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "Start timezone where the exception was entered. Normally, this is the default or home timezone for the employee, but the exception can include a different timezone as necessary. This property is read only."
        }, 
        "transfer" : {
          "type" : "boolean"
        }, 
        "undoJustificationEnabled" : {
          "description" : "A Boolean indicator that shows whether or not the undo action is available for the justification. This property is read only.", 
          "type" : "boolean"
        }, 
        "userEnteredPosition" : {
          "description" : "A Boolean indicator of whether or not a position was set by a user. When false, the position was set by the system.", 
          "type" : "boolean"
        }, 
        "violationInHours" : {
          "description" : "The total number of hours violated which caused an exception. This property is read only.", 
          "type" : "number"
        }, 
        "workRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The work rule violated by an exception. This property is read only."
        }, 
        "workedShift" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The worked shift in which an exception occurred. This property is read only."
        }
      }, 
      "type" : "object"
    }, 
    "Timecard TK Extended Exception" : {
      "description" : "Entity representing a Timekeeping extended exception (TKExtendedException) related to a timecard.", 
      "properties" : {
        "actualDateTime" : {
          "description" : "The date and time the employee actually punched in or punched out in relation to an exception. This property is read only.", 
          "type" : "string"
        }, 
        "applyDate" : {
          "description" : "The date to which an exception applies in ISO_LOCAL_DATE format (YYYY-MM-DD). This property is read only.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "comments" : {
          "description" : "The comma separate string for multiple comments related to an exception. This property is read only.", 
          "type" : "string"
        }, 
        "commentsNotes" : {
          "description" : "A reference to a list of Comments. This object can have multiple Comments with multiple Notes for each Comment. This property is read only.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Comment Note"
          }, 
          "type" : "array"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the punch applies. This property is read only."
        }, 
        "endDateTime" : {
          "description" : "The end date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss). This property is read only.", 
          "type" : "string"
        }, 
        "endException" : {
          "type" : "boolean"
        }, 
        "endTimeZone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The end timezone where the exception was entered. Normally, this is the default or home timezone for the employee, but the exception can include a different timezone as necessary. This property is read only."
        }, 
        "eventDate" : {
          "format" : "date", 
          "type" : "string"
        }, 
        "exceptionType" : {
          "description" : "<p>The Timekeeping exception type.</p><p>The names, descriptions, and categories enumerated in <code>name</code>, <code>description</code>, and <code>category</code> are linked to one another and listed in the same sequence in each property. For example, for the Early In exception type, the <code>name</code> is EARLY_IN, the <code>description</code> is EARLY_IN_DSC, and the <code>category</code> is IN_PUNCH_EXCEPTIONS.</p>", 
          "properties" : {
            "category" : {
              "description" : "The category of a Timekeeping exception type. Possible values include the following, which include repetitions so the sequence matches the sequencing in <code>name</code> and <code>description</code>: SHIFT_EXCEPTIONS, SHIFT_EXCEPTIONS, IN_PUNCH_EXCEPTIONS, IN_PUNCH_EXCEPTIONS, IN_PUNCH_EXCEPTIONS, OUT_PUNCH_EXCEPTIONS, OUT_PUNCH_EXCEPTIONS, OUT_PUNCH_EXCEPTIONS, ABSENCE_EXCEPTIONS, ABSENCE_EXCEPTIONS, BREAK_EXCEPTIONS, BREAK_EXCEPTIONS, SHIFT_EXCEPTIONS, SHIFT_EXCEPTIONS, IN_PUNCH_EXCEPTIONS, OUT_PUNCH_EXCEPTIONS, SHIFT_EXCEPTIONS, BREAK_EXCEPTIONS, BREAK_EXCEPTIONS, BREAK_EXCEPTIONS, BREAK_EXCEPTIONS, MISCELLANEOUS_EXCEPTIONS, MISCELLANEOUS_EXCEPTIONS, MISCELLANEOUS_EXCEPTIONS, SHIFT_EXCEPTIONS, MISCELLANEOUS_EXCEPTIONS.", 
              "type" : "string"
            }, 
            "description" : {
              "description" : "The description of a Timekeeping exception type. Possible values include: CANCELLED_DEDUCTION_DSC, CORE_HOURS_VIOLATION_DSC, VERY_EARLY_IN_DSC, EARLY_IN_DSC, LATE_IN_DSC, EARLY_OUT_DSC, LATE_OUT_DSC, VERY_LATE_OUT_DSC, EXCUSED_ABSENCE_DSC, UNEXCUSED_ABSENCE_DSC, SHORT_BREAK_DSC, LONG_BREAK_DSC, SHORT_SHIFT_DSC, LONG_SHIFT_DSC, MISSED_IN_PUNCH_DSC, MISSED_OUT_PUNCH_DSC, UNSCHEDULED_DSC, LONG_TOTAL_BREAK_DSC, SHORT_TOTAL_BREAK_DSC, BONUS_APPLIED_DSC, BREAK_OUT_OF_SEQUENCE_DSC, HOLIDAY_SCHEDULE_VIOLATION_DSC, MINIMUM_DAYS_ACTIVE_VIOLATION_DSC, MINIMUM_DAYS_EMPLOYED_VIOLATION_DSC, INVALID_NAMED_DURATION_DSC, WORK_HISTORY_VIOLATION_DSC.", 
              "type" : "string"
            }, 
            "displayName" : {
              "description" : "The display name of a Timekeeping exception type.", 
              "type" : "string"
            }, 
            "id" : {
              "description" : "The ID of a Timekeeping exception type.", 
              "type" : "integer"
            }, 
            "name" : {
              "description" : "The name of a Timekeeping exception type. Possible values include: CANCELLED_DEDUCTION, CORE_HOURS_VIOLATION, VERY_EARLY_IN, EARLY_IN, LATE_IN, EARLY_OUT, LATE_OUT, VERY_LATE_OUT, EXCUSED_ABSENCE, UNEXCUSED_ABSENCE, SHORT_BREAK, LONG_BREAK, SHORT_SHIFT, LONG_SHIFT, MISSED_IN_PUNCH, MISSED_OUT_PUNCH, UNSCHEDULED, LONG_TOTAL_BREAK, SHORT_TOTAL_BREAK, BONUS_APPLIED, BREAK_OUT_OF_SEQUENCE, HOLIDAY_SCHEDULE_VIOLATION, MINIMUM_DAYS_ACTIVE_VIOLATION, MINIMUM_DAYS_EMPLOYED_VIOLATION, INVALID_NAMED_DURATION, WORK_HISTORY_VIOLATION.", 
              "type" : "string"
            }
          }, 
          "type" : "object"
        }, 
        "id" : {
          "description" : "The ID of the exception. This property is read only.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "isExcusedAbsence" : {
          "description" : "A Boolean indicator of whether or not the exception involves an excused absence. This property is read only.", 
          "type" : "boolean"
        }, 
        "isUnExcusedAbsence" : {
          "description" : "A Boolean indicator of whether or not the exception involves an unexcused absence. This property is read only.", 
          "type" : "boolean"
        }, 
        "justifiableEndDateTime" : {
          "description" : "The end date and time of a justifiable missing time span in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS). This property is read only.", 
          "type" : "string"
        }, 
        "justifiableStartDateTime" : {
          "description" : "The start date and time of a justifiable missing time span in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS). This property is read only.", 
          "type" : "string"
        }, 
        "justifications" : {
          "description" : "A list of missing time justifications for this exception. This property is read only.", 
          "items" : {
            "$ref" : "#/definitions/TKJustification"
          }, 
          "type" : "array"
        }, 
        "justifiedTimes" : {
          "description" : "A list of justified times for this exception. This property is read only.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Pay Code Edit"
          }, 
          "type" : "array"
        }, 
        "missingTimeStatus" : {
          "$ref" : "#/definitions/MissingTimeStatusModel", 
          "description" : "The missing time status related to this exception. This property is read only."
        }, 
        "orgJob" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "Provides the organization job object to which the exception applies. Normally, this is the default or home job for the employee. This property is read only."
        }, 
        "overLimitInHours" : {
          "description" : "The amount (in hours) that exceeds the limit defined by the exception associated with the pay code edit. This property is read only.", 
          "type" : "number"
        }, 
        "position" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the position assigned to this exception."
        }, 
        "punchEvent" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to a punch with an associated exception. This property is read only."
        }, 
        "reviewed" : {
          "type" : "boolean"
        }, 
        "scheduleItem" : {
          "$ref" : "#/definitions/Schedule Exception", 
          "description" : "The schedule shift violated by an exception. This property is read only."
        }, 
        "scheduledDateTime" : {
          "description" : "The date and time the employee was scheduled to punch in or punch out in relation to an exception. This property is read only.", 
          "type" : "string"
        }, 
        "startDateTime" : {
          "description" : "The start date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss). This property is read only.", 
          "type" : "string"
        }, 
        "startException" : {
          "type" : "boolean"
        }, 
        "startTimeZone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "Start timezone where the exception was entered. Normally, this is the default or home timezone for the employee, but the exception can include a different timezone as necessary. This property is read only."
        }, 
        "transfer" : {
          "type" : "boolean"
        }, 
        "undoJustificationEnabled" : {
          "description" : "A Boolean indicator that shows whether or not the undo action is available for the justification. This property is read only.", 
          "type" : "boolean"
        }, 
        "userEnteredPosition" : {
          "description" : "A Boolean indicator of whether or not a position was set by a user. When false, the position was set by the system.", 
          "type" : "boolean"
        }, 
        "violationInHours" : {
          "description" : "The total number of hours violated which caused an exception. This property is read only.", 
          "type" : "number"
        }, 
        "workRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The work rule violated by an exception. This property is read only."
        }, 
        "workedShift" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The worked shift in which an exception occurred. This property is read only."
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Historical Correction" : {
      "description" : "Contextual object describing a historical correction.", 
      "properties" : {
        "applyDate" : {
          "description" : "The date to which a historical correction applies in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "commentsNotes" : {
          "description" : "A reference to a list of Comments. This object can have multiple Comments with multiple Notes for each Comment.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Comment Note"
          }, 
          "type" : "array"
        }, 
        "dataSource" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the data source, if one exists, related to a historical correction."
        }, 
        "durationInDays" : {
          "description" : "The duration (in days) of the historical correction.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "durationInHours" : {
          "description" : "The duration (in hours) of the historical correction.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the historical correction applies."
        }, 
        "id" : {
          "description" : "The ID of the historical correction.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "includeInTotals" : {
          "description" : "Specifies whether the total for the historical correction is included for the apply date.", 
          "type" : "boolean"
        }, 
        "isAged" : {
          "description" : "A Boolean indicator of whether or not the apply date of the historical correction is on or before the signoff through date.", 
          "type" : "boolean"
        }, 
        "isPending" : {
          "description" : "A Boolean indicator of whether or not the historical correction is in a pending (not saved) state.", 
          "type" : "boolean"
        }, 
        "moneyAmount" : {
          "description" : "The amount (as a decimal value representing money) of the historical correction.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "orgJob" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The organizational job in the business structure."
        }, 
        "originalDate" : {
          "description" : "The historical date of the historical correction in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "originalDurationInDays" : {
          "description" : "The duration (in days) prior to the historical correction.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "originalDurationInHours" : {
          "description" : "The duration (in hours) prior to the historical correction.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "originalMoneyAmount" : {
          "description" : "The amount (as a decimal value representing money) prior to the historical correction.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "payCodeType" : {
          "description" : "An enumeration of the pay code type in the form of CASCADE or REGULAR.", 
          "type" : "string"
        }, 
        "paycode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the pay code associated with a historical correction."
        }, 
        "position" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the position associated with a historical correction."
        }, 
        "transfer" : {
          "$ref" : "#/definitions/Timecard Transfer", 
          "description" : "Provides the organization job or labor category to which this historical correction applies."
        }, 
        "userEnteredCostCenter" : {
          "$ref" : "#/definitions/CostCenter", 
          "description" : "The user-entered Cost Center."
        }, 
        "userEnteredLaborCategories" : {
          "$ref" : "#/definitions/LaborCategories", 
          "description" : "The user-entered labor categories."
        }, 
        "wagePaycode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the wage pay code associated with a historical correction."
        }, 
        "wages" : {
          "description" : "The wage amount (as a decimal value representing money) of the historical correction.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "workRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The work rule associated with a timestamp context."
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Hours Worked" : {
      "description" : "Entity containing information regarding the number of hours worked per week in a given date range.", 
      "properties" : {
        "approvableByManager" : {
          "type" : "boolean"
        }, 
        "commentsAvailable" : {
          "description" : "A Boolean indicator of whether or not a Comment is associated with the hours worked.", 
          "type" : "boolean"
        }, 
        "commentsNotes" : {
          "description" : "A reference to a list of Comments. This object can have multiple Comments with multiple Notes for each Comment.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Comment Note"
          }, 
          "type" : "array"
        }, 
        "costCenter" : {
          "$ref" : "#/definitions/CostCenter", 
          "description" : "A reference to the CostCenter object which contains the cost center information and labor account ID for the hours worked."
        }, 
        "dataSource" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the data source, if one exists. Normally, this indicates that the hours worked came from a different source, such as a clock, device, or an external data source such as an import or interface."
        }, 
        "durationInHours" : {
          "description" : "The duration (in hours) of the hours worked.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "editByType" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the type of the user who made the change. Indicates whether the change was made by the employee or by someone else."
        }, 
        "editable" : {
          "description" : "A Boolean indicator of whether or not the hours worked is editable.", 
          "type" : "boolean"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the hours worked apply."
        }, 
        "endDateTime" : {
          "description" : "The end date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "exceptions" : {
          "description" : "A list of exception objects associated with the hours worked.", 
          "items" : {
            "$ref" : "#/definitions/Timecard TK Exception"
          }, 
          "type" : "array"
        }, 
        "id" : {
          "description" : "The ID of the hours worked.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "itemId" : {
          "description" : "The ID of the time item.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "job" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the job object, which is a groupByType."
        }, 
        "laborCategories" : {
          "$ref" : "#/definitions/LaborCategories", 
          "description" : "A reference to the LaborCategories object which contains a list of labor category entries and each entry's associated labor category."
        }, 
        "orgJob" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The organizational job in the business structure."
        }, 
        "position" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the position assigned to this hours worked."
        }, 
        "startDateTime" : {
          "description" : "The start date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "systemGenerated" : {
          "description" : "A Boolean indicator of whether or not the hours worked transaction was generated by the system.", 
          "type" : "boolean"
        }, 
        "transfer" : {
          "$ref" : "#/definitions/Timecard Transfer", 
          "description" : "Provides the organization job object to which the punch associated with the hours worked applies. Commonly, this is only used when the punch is charged against a job other than the default or home job for the employee."
        }, 
        "userEnteredCostCenter" : {
          "$ref" : "#/definitions/CostCenter", 
          "description" : "The user-entered Cost Center."
        }, 
        "userEnteredLaborCategories" : {
          "$ref" : "#/definitions/LaborCategories", 
          "description" : "The user-entered labor categories."
        }, 
        "userEnteredPosition" : {
          "description" : "A Boolean indicator of whether or not a position was set by a user. When false, the position was set by the system.", 
          "type" : "boolean"
        }, 
        "workRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The work rule associated with a timestamp context."
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Item Total Summary" : {
      "description" : "Entity containing information regarding an item total summary object.", 
      "properties" : {
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the punch applies."
        }, 
        "endApplyDate" : {
          "description" : "Ending apply date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "hoursAndCostSummaries" : {
          "description" : "The hours and cost summaries associated with this item total summary.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Hours And Cost Summary"
          }, 
          "type" : "array"
        }, 
        "itemHours" : {
          "description" : "The total number of hours for this item within a date range.", 
          "type" : "number"
        }, 
        "itemId" : {
          "description" : "The ID of the time item.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "position" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the position associated with an item total summary."
        }, 
        "startApplyDate" : {
          "description" : "Starting apply date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "format" : "date", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "LastTimecardUpdateBySomeelse" : {
      "properties" : {
        "employeeId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "isEditedInSignedOff" : {
          "type" : "boolean"
        }, 
        "updateByPersonFullName" : {
          "type" : "string"
        }, 
        "updateDateTime" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard TK MissingTime Group" : {
      "description" : "Entity describing a missing time group.", 
      "properties" : {
        "employeeId" : {
          "description" : "An ID that uniquely identifies an employee. This is not a person number.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "exceptions" : {
          "description" : "A list of missing time exceptions in this group.", 
          "items" : {
            "$ref" : "#/definitions/Timecard TK Exception"
          }, 
          "type" : "array"
        }, 
        "missingTimeEnd" : {
          "description" : "The missing time end date and time of this group in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "missingTimeStart" : {
          "description" : "The missing time start date and time of this group in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Move Amount" : {
      "description" : "The Timecard Move Amount model.", 
      "properties" : {
        "amountType" : {
          "description" : "An enumeration of the Timecard move amount type.", 
          "enum" : [ "HOUR", "DAY", "MONEY" ], 
          "type" : "string"
        }, 
        "applyDate" : {
          "description" : "The date to which a Timecard move amount applies in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "commentsAvailable" : {
          "description" : "A Boolean indicator of whether or not Comments are associated with a Timecard move amount.", 
          "type" : "boolean"
        }, 
        "commentsNotes" : {
          "description" : "A reference to a list of Comments. This object can have multiple Comments with multiple Notes for each Comment.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Comment Note"
          }, 
          "type" : "array"
        }, 
        "dataSource" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the data source, if one exists. Normally, this indicates that the hours worked came from a different source, such as a clock, device, or an external data source such as an import or interface."
        }, 
        "durationInDays" : {
          "description" : "The duration (in days) of the Timecard move amount.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "durationInHours" : {
          "description" : "The duration (in hours) of the Timecard move amount.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "editByType" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the type of the user who made the change. Indicates whether the change was made by the employee or by someone else."
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the Timecard move amount applies."
        }, 
        "id" : {
          "description" : "The ID of a Timecard move amount.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "itemId" : {
          "description" : "The ID of the time item.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "moneyAmount" : {
          "description" : "The amount (as a decimal value representing money) of the Timecard move amount.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "moneyAmountCurrency" : {
          "$ref" : "#/definitions/Currency data object reference", 
          "description" : "A reference to the currency object that contains a currency code along with a money amount."
        }, 
        "sourceCostCenter" : {
          "$ref" : "#/definitions/CostCenter", 
          "description" : "A reference to the source cost center."
        }, 
        "sourceLaborCategories" : {
          "$ref" : "#/definitions/LaborCategories", 
          "description" : "A list of references to the source labor categories."
        }, 
        "sourceOrgJob" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the source organizational job."
        }, 
        "sourcePaycode" : {
          "$ref" : "#/definitions/ObjectRef Entity"
        }, 
        "sourcePosition" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the position assigned to the original total item."
        }, 
        "sourceUserEnteredCostCenter" : {
          "$ref" : "#/definitions/CostCenter", 
          "description" : "A reference to the user-entered source cost center."
        }, 
        "sourceUserEnteredLaborCategories" : {
          "$ref" : "#/definitions/LaborCategories", 
          "description" : "A list of references to the user-entered source labor categories."
        }, 
        "sourceWorkRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the source work rule associated with a Timecard move amount."
        }, 
        "systemGenerated" : {
          "description" : "A Boolean indicator of whether or not a Timecard move amount is system-generated.", 
          "type" : "boolean"
        }, 
        "targetCostCenter" : {
          "$ref" : "#/definitions/CostCenter", 
          "description" : "A reference to the target cost center."
        }, 
        "targetLaborCategories" : {
          "$ref" : "#/definitions/LaborCategories", 
          "description" : "A list of references to the target labor categories."
        }, 
        "targetOrgJob" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the target organizational job."
        }, 
        "targetPaycode" : {
          "$ref" : "#/definitions/ObjectRef Entity"
        }, 
        "targetUserEnteredCostCenter" : {
          "$ref" : "#/definitions/CostCenter", 
          "description" : "A reference to the user-entered target cost center."
        }, 
        "targetUserEnteredLaborCategories" : {
          "$ref" : "#/definitions/LaborCategories", 
          "description" : "A list of references to the user-entered target labor categories."
        }, 
        "targetWorkRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the target work rule associated with a Timecard move amount."
        }
      }, 
      "type" : "object"
    }, 
    "OvertimeInfoBulkRetrieval" : {
      "properties" : {
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity"
        }, 
        "overtimeInfo" : {
          "items" : {
            "$ref" : "#/definitions/OvertimeInfo"
          }, 
          "type" : "array"
        }, 
        "overtimeSummary" : {
          "$ref" : "#/definitions/OvertimeSummary"
        }
      }, 
      "type" : "object"
    }, 
    "OvertimeInfo" : {
      "description" : "Response object for REST API. It holds all overtime information for a date.", 
      "properties" : {
        "approvalSegments" : {
          "description" : "A list of overtimes which are reviewed, either approved or denied status.", 
          "items" : {
            "$ref" : "#/definitions/ApprovalSegment for overtime. Holds overtime review (a)information."
          }, 
          "type" : "array"
        }, 
        "approvedAmount" : {
          "description" : "The total approved overtime duration in seconds.", 
          "type" : "number"
        }, 
        "commentCount" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "deniedAmount" : {
          "description" : "The total denied overtime duration in seconds.", 
          "type" : "number"
        }, 
        "effectiveDate" : {
          "description" : "The effective date of an OvertimeInfo object. This date may be associated with multiple overtime events and approvals or denials.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The employee information associated with an overtime event."
        }, 
        "otStateIndicator" : {
          "description" : "OvertimeInfo object can have multiple overtimes for a date. The indicator value conveys the overall overtime review state for a date.", 
          "enum" : [ "otaIrrelevant", "otaPending", "otaReviewed", "otaPendingAndReviewed" ], 
          "type" : "string"
        }, 
        "overtimeSegments" : {
          "description" : "A list of overtime events for a date. Each overtime event's time window can be in a pending, approved, or denied status or an irrelevant status, which indicates the overtime event may not need to be reviewed.", 
          "items" : {
            "$ref" : "#/definitions/The OvertimeSegment object contains information for a specific time window."
          }, 
          "type" : "array"
        }, 
        "pendingAmount" : {
          "description" : "The total pending overtime duration in seconds.", 
          "type" : "number"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Pay Code Edit" : {
      "description" : "Contextual object describing a pay code edit.", 
      "properties" : {
        "amountType" : {
          "description" : "The name of the symbolic value used to create this pay code edit.", 
          "enum" : [ "HOUR", "DAY", "MONEY" ], 
          "type" : "string"
        }, 
        "applyDate" : {
          "description" : "The date to which a pay code edit applies.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "approvableByManager" : {
          "type" : "boolean"
        }, 
        "commentsAvailable" : {
          "description" : "A Boolean indicator of whether or not a Comment is associated with a pay code edit.", 
          "type" : "boolean"
        }, 
        "commentsNotes" : {
          "description" : "A reference to a list of Comments. This object can have multiple Comments with multiple Notes for each Comment.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Comment Note"
          }, 
          "type" : "array"
        }, 
        "costCenter" : {
          "$ref" : "#/definitions/CostCenter", 
          "description" : "A reference to the cost center of a pay code edit. The <code>userenteredcostcenter</code> property determines whether or not the cost center was entered by the user."
        }, 
        "dataSource" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the data source, if one exists. Normally, this indicates that the pay code edit came from a different source, such as a clock, device, or an external data source such as an import or interface."
        }, 
        "durationInDays" : {
          "description" : "The duration in days of a pay code edit.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "durationInHours" : {
          "description" : "The duration (in hours) of the pay code edit.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "editByType" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the type of the user who made the change. Indicates whether the change was made by the employee or by someone else."
        }, 
        "editable" : {
          "description" : "A Boolean indicator of whether or not a pay code edit is editable.", 
          "type" : "boolean"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee assigned to a pay code edit. Null if the pay code edit is open (unassigned)."
        }, 
        "endDateTime" : {
          "description" : "The end date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "exceptions" : {
          "description" : "A list of exception objects associated with a pay code edit.", 
          "items" : {
            "$ref" : "#/definitions/Timecard TK Exception"
          }, 
          "type" : "array"
        }, 
        "id" : {
          "description" : "The ID of a pay code edit.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "itemId" : {
          "description" : "The ID of the time item.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "laborCategories" : {
          "$ref" : "#/definitions/LaborCategories", 
          "description" : "A list of references to the labor categories and selected entries of a pay code edit."
        }, 
        "moneyAmount" : {
          "description" : "The amount of money associated with a pay code edit.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "moneyAmountCurrency" : {
          "$ref" : "#/definitions/Currency data object reference", 
          "description" : "A reference to the currency object that contains a currency code along with a money amount."
        }, 
        "orgJob" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "Provides the organization job object to which the pay code edit applies. Normally, this is the default or home job for the employee."
        }, 
        "overrideAcrrualAmount" : {
          "description" : "The amount of override accrual days. Must be a value between -1 to 1.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "paycode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the pay code associated with a pay code edit."
        }, 
        "phantomSpans" : {
          "description" : "A list of two 2 PhantomSpans for a duration pay code in a day divide. When a duration pay code spans across two days, the shift is split into two phantom spans. The first goes from shift start time to the end of the day. The second goes from start of day to end of shift.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Paycode Phantom Span"
          }, 
          "type" : "array"
        }, 
        "position" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the position of the employee assigned to a pay code edit."
        }, 
        "scheduleAmountType" : {
          "description" : "An enumeration of the schedule amount.", 
          "enum" : [ "AMOUNT_NOT_FROM_SCHEDULE", "FULL_DAY_AMOUNT_FROM_SCHEDULE", "HALF_DAY_AMOUNT_FROM_SCHEDULE", "FULL_DAY_AMOUNT_FROM_CONTRACT", "HALF_DAY_AMOUNT_FROM_CONTRACT", "FIRST_HALF_DAY_AMOUNT_FROM_CONTRACT", "SECOND_HALF_DAY_AMOUNT_FROM_CONTRACT", "FULL_DAY_AMOUNT_FROM_PATTERN", "FROM_EMPLOYMENT_TERM", "FIRST_HALF_DAY_AMOUNT_FROM_SCHEDULE", "SECOND_HALF_DAY_AMOUNT_FROM_SCHEDULE", "HALF_DAY_AMOUNT_FROM_PATTERN", "FIRST_HALF_DAY_AMOUNT_FROM_PATTERN", "SECOND_HALF_DAY_AMOUNT_FROM_PATTERN" ], 
          "type" : "string"
        }, 
        "scheduledShiftIds" : {
          "description" : "A list of scheduled shift IDs assiciated with pay code edits.", 
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array"
        }, 
        "startDateTime" : {
          "description" : "The start date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "systemGenerated" : {
          "description" : "A Boolean indicator of whether or not the pay code edit was generated by the system.", 
          "type" : "boolean"
        }, 
        "transfer" : {
          "$ref" : "#/definitions/Timecard Transfer", 
          "description" : "Provides the organization job object to which the punch associated with the pay code edit applies. Normally, this is only used when the punch is charged against a job other than the default or home job for the employee."
        }, 
        "updateDate" : {
          "format" : "date", 
          "type" : "string"
        }, 
        "userEnteredCostCenter" : {
          "$ref" : "#/definitions/CostCenter", 
          "description" : "The user-entered Cost Center."
        }, 
        "userEnteredLaborCategories" : {
          "$ref" : "#/definitions/LaborCategories", 
          "description" : "The user-entered labor categories."
        }, 
        "userEnteredPosition" : {
          "description" : "A Boolean indicator of whether or not a position was set by a user. When false, the position was set by the system.", 
          "type" : "boolean"
        }, 
        "workRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The work rule associated with a timestamp context."
        }
      }, 
      "type" : "object"
    }, 
    "Processed Segment" : {
      "description" : "Entity describing a Processed Segment object for the timecard resource.", 
      "properties" : {
        "applyDate" : {
          "description" : "Processed Segment apply date.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "costCenter" : {
          "$ref" : "#/definitions/CostCenter", 
          "description" : "The Cost Center of the Processed Segment."
        }, 
        "durationInDays" : {
          "description" : "Processed Segment duration in days.", 
          "type" : "number"
        }, 
        "durationInSeconds" : {
          "description" : "Processed Segment duration in seconds.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the Processed Segment applies."
        }, 
        "endDateTime" : {
          "description" : "Processed Segment end date and time.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID of the Processed Segment.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "inProgress" : {
          "description" : "A Boolean indicator that shows whether or not a Processed Segment is in progress.", 
          "type" : "boolean"
        }, 
        "itemId" : {
          "description" : "The Item ID of the Processed Segment.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "laborAccountId" : {
          "description" : "The Labor Account Id of the Processed Segment.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "laborCategories" : {
          "$ref" : "#/definitions/LaborCategories", 
          "description" : "The Labor Categories of the Processed Segment."
        }, 
        "moneyAmount" : {
          "description" : "Processed Segment money amount.", 
          "type" : "number"
        }, 
        "orderNumber" : {
          "description" : "The Order number of the Processed Segment.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "orgJob" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The Organisation Job of the Processed Segment."
        }, 
        "paycode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The Pay Code of the Processed Segment."
        }, 
        "projected" : {
          "description" : "A Boolean indicator that shows whether or not a Processed Segment is projected.", 
          "type" : "boolean"
        }, 
        "roundedEndDateTime" : {
          "description" : "Processed Segment rounded end date and time.", 
          "type" : "string"
        }, 
        "roundedStartDateTime" : {
          "description" : "Processed Segment rounded start date and time.", 
          "type" : "string"
        }, 
        "segmentTypeId" : {
          "description" : "The ID of the time entity segment type.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "startDateTime" : {
          "description" : "Processed Segment start date and time.", 
          "type" : "string"
        }, 
        "transfer" : {
          "$ref" : "#/definitions/Timecard Transfer", 
          "description" : "The Transfer of the Processed Segment."
        }, 
        "workrule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The Work Rule of the Processed Segment."
        }
      }, 
      "type" : "object"
    }, 
    "Project" : {
      "properties" : {
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "payCodeEdit" : {
          "type" : "boolean"
        }, 
        "transfer" : {
          "$ref" : "#/definitions/ITransfer"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Punch" : {
      "description" : "Entity describing a punch object for the timecard resource.", 
      "properties" : {
        "attestationPunchEdit" : {
          "description" : "A Boolean indicator of whether or not the punch is entered as an Attestation punch edit.", 
          "type" : "boolean"
        }, 
        "breakRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the Break Rule to be applied during calculation of totals resulting from the punch."
        }, 
        "cancelDeduct" : {
          "type" : "boolean"
        }, 
        "commentsNotes" : {
          "description" : "A reference to a list of Comments. This object can have multiple Comments with multiple Notes for each Comment.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Comment Note"
          }, 
          "type" : "array"
        }, 
        "costCenter" : {
          "$ref" : "#/definitions/CostCenter", 
          "description" : "A reference to the CostCenter object which contains the cost center information and labor account ID for each punch."
        }, 
        "dataSource" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the data source, if one exists. Normally, this indicates that the punch came from a different source, such as a clock, device, or an external data source such as an import or interface."
        }, 
        "deductRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the Deduct Rule to be applied during calculation of totals resulting from the punch."
        }, 
        "editByType" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the type of the user who made the change. Indicates whether the change was made by the employee or by someone else."
        }, 
        "editable" : {
          "type" : "boolean"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the punch applies."
        }, 
        "enteredOnDtm" : {
          "description" : "The date and time stamp for when this punch transaction was entered through the API.", 
          "type" : "string"
        }, 
        "exceptionResolved" : {
          "type" : "boolean"
        }, 
        "exceptions" : {
          "description" : "A list of exception objects associated with a punch.", 
          "items" : {
            "$ref" : "#/definitions/Timecard TK Exception"
          }, 
          "type" : "array"
        }, 
        "geoLocation" : {
          "$ref" : "#/definitions/PunchGeoLocation", 
          "description" : "The Geolocation object associated with a punch."
        }, 
        "hasComments" : {
          "description" : "A Boolean indicator that shows whether or not a Comment is associated with a punch.", 
          "type" : "boolean"
        }, 
        "id" : {
          "description" : "The ID of the punch transaction.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "isPhantom" : {
          "description" : "A Boolean indicator of whether or not the punch is a phantom punch.", 
          "type" : "boolean"
        }, 
        "isScheduled" : {
          "description" : "A Boolean indicator of whether or not the punch is generated from a scheduled worked span.", 
          "type" : "boolean"
        }, 
        "laborCategories" : {
          "$ref" : "#/definitions/LaborCategories", 
          "description" : "A reference to the LaborCategories object which contains a list of labor category entries and each entry's associated labor category."
        }, 
        "location" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the GPS Location object which applies to this punch. This indicates where the punch was actually made and is tied to Geofencing operations from mobile devices."
        }, 
        "orgJob" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "Provides the organization job object to which the punch applies. Normally, this is the default or home job for the employee."
        }, 
        "originalPunchDtm" : {
          "description" : "The date and time stamp for the original punch in ISO_LOCAL_DATE_TIME.", 
          "type" : "string"
        }, 
        "position" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the position assigned to this punch."
        }, 
        "punchDtm" : {
          "description" : "The date and time stamp for the punch in ISO_LOCAL_DATE_TIME.", 
          "type" : "string"
        }, 
        "roundedPunchDtm" : {
          "description" : "The rounded punch date and time.", 
          "type" : "string"
        }, 
        "timeZone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The timezone where the punch was entered. Normally, this is the default or home timezone for the employee, but the punch can include a different timezone as necessary."
        }, 
        "transfer" : {
          "$ref" : "#/definitions/Timecard Transfer", 
          "description" : "Provides the organization job object to which the punch applies. Normally, this is only used when the punch is charged against a job other than the default or home job for the employee."
        }, 
        "typeOverride" : {
          "$ref" : "#/definitions/Timecard Type Override", 
          "description" : "Provides the type override object which indicates whether this punch object is an in punch, out punch, or a break rule. Break Rule overloads the property."
        }, 
        "updatedOnDtm" : {
          "description" : "The date and time stamp for when this punch transaction was last updated.", 
          "type" : "string"
        }, 
        "userEnteredCostCenter" : {
          "$ref" : "#/definitions/CostCenter", 
          "description" : "The user-entered Cost Center."
        }, 
        "userEnteredLaborCategories" : {
          "$ref" : "#/definitions/LaborCategories", 
          "description" : "The user-entered labor categories."
        }, 
        "userEnteredPosition" : {
          "description" : "A Boolean indicator of whether or not a position was set by a user. When false, the position was set by the system.", 
          "type" : "boolean"
        }, 
        "validateAsTimestamp" : {
          "description" : "A Boolean indicator of whether or not the punch is entered as a timestamp.", 
          "type" : "boolean"
        }, 
        "workRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the Work Rule to be applied during calculation of totals resulting from the punch."
        }
      }, 
      "type" : "object"
    }, 
    "SchedulingShift" : {
      "description" : "Entity that contain TimeElement information", 
      "properties" : {
        "applyDate" : {
          "description" : "The date to which an time applies.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "commentNotes" : {
          "description" : "The list of IDs of commentNote objects attached to this shift.", 
          "items" : {
            "$ref" : "#/definitions/SchedulingCommentNote"
          }, 
          "type" : "array"
        }, 
        "dataElementType" : {
          "description" : "An enumeration of all data element types.", 
          "enum" : [ "PUNCH", "PAYCODEEDIT", "LEAVEEDIT", "HOURSWORKED", "NAMEDDURATION", "ONCALL", "CORRECTIONS", "HOURSANDCOST", "PROJECTED_HOURS_AND_COST", "SCHEDULE_HOURS_AND_COST", "TOTAL", "PROJECTED_TOTAL", "SCHEDULE_TOTAL", "WORKSHIFTSEGMENT", "PROCESSEDSEGMENT", "KINDOFTIMESEGMENT", "EXCEPTION", "EXCEPTION_COMMENTS", "WORKITEM", "ACCRUALEDIT", "WORKITEMTOSCHEDULEITEM", "ACCRUALBALANCE", "ACCRUALTRANSACTION", "ENCUMBEREDACCRUALBALANCE", "WORKHOLIDAY", "SIGNOFF", "CARRYFORWARD", "LEAVEEDITSEGMENT", "PAYCODETOTAL", "ACCRUAL_REPORTING_PERIOD", "PERSONALITY", "PAYCODEEDIT_COMMENTS", "HOURSWORKED_COMMENTS", "PROJECTED_PAYCODETOTAL", "SCHEDULED_PAYCODETOTAL", "ACCRUALBALANCE_NOSQL", "ENCUMBEREDACCRUALBALANCE_NOSQL", "ACCRUAL_REPORTING_PERIOD_NOSQL", "TIMECARDANNOTATION", "ACTUALKINDSOFTIME", "ACTIVITY_SEGMENT" ], 
          "type" : "string"
        }, 
        "deleted" : {
          "description" : "A Boolean indicator of whether or not the shift is deleted.", 
          "readOnly" : true, 
          "type" : "boolean"
        }, 
        "elementId" : {
          "description" : "The ID of the time element.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "elementType" : {
          "description" : "An enumeration of all time item types.", 
          "enum" : [ "PUNCH", "PAYCODEEDIT", "LEAVEEDIT", "LEAVEEDITSEGMENT", "HOURSWORKED", "NAMEDDURATION", "ONCALL", "CORRECTIONS", "HOURSANDCOST", "TOTAL", "WORKSHIFTSEGMENT", "PROCESSEDSEGMENT", "EXCEPTION", "WORKITEM", "ACCRUALEDIT", "DAILYTOTAL", "SHIFTTOTAL", "WORKEDSHIFT", "WORKEDSPAN", "ENCUMBEREDACCRUALBALANCE", "ACCRUALBALANCE", "APPROVAL", "SIGNOFF", "WORKHOLIDAY", "TOTALSUMMARY", "TOTALS", "ACCRUAL_REPORTING_PERIOD", "ITEMTOTAL", "PERSONALITY", "TIMECARDANNOTATION", "ACTIVITY_SEGMENT" ], 
          "type" : "string"
        }, 
        "employee" : {
          "$ref" : "#/definitions/SchedulingObjectRef", 
          "description" : "A reference to the employee assigned to this shift. Null if the shift is open."
        }, 
        "employeeId" : {
          "description" : "A reference to the employee object.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "endDateTime" : {
          "description" : "The end date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "eventDate" : {
          "description" : "The date to which the event applies.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "generated" : {
          "description" : "A Boolean indicator of whether or not the shift was generated by the Scheduling engine.", 
          "type" : "boolean"
        }, 
        "id" : {
          "description" : "The ID of the shift.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "label" : {
          "description" : "The label of this shift.", 
          "type" : "string"
        }, 
        "locked" : {
          "description" : "A Boolean indicator of whether or not the shift is locked.", 
          "type" : "boolean"
        }, 
        "onCall" : {
          "readOnly" : true, 
          "type" : "boolean"
        }, 
        "oncallShift" : {
          "type" : "boolean"
        }, 
        "open" : {
          "description" : "A Boolean indicator of whether or not the shift is open.", 
          "readOnly" : true, 
          "type" : "boolean"
        }, 
        "position" : {
          "$ref" : "#/definitions/SchedulingObjectRef", 
          "description" : "A reference to the position assigned to this shift."
        }, 
        "positionId" : {
          "description" : "The ID of the position assigned to this time element.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "posted" : {
          "description" : "A Boolean indicator of whether or not the shift is posted.", 
          "type" : "boolean"
        }, 
        "postedNotificationPending" : {
          "description" : "A Boolean indicator of whether or not the notification to the employee of the posted shift is pending.", 
          "type" : "boolean"
        }, 
        "postedNotified" : {
          "description" : "A Boolean indicator of whether or not the employee has been notified of the posted shift.", 
          "type" : "boolean"
        }, 
        "relations" : {
          "description" : "The list of relations of the shift.", 
          "items" : {
            "$ref" : "#/definitions/SchedulingShiftRelation"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "segments" : {
          "description" : "The list of segments of this shift ordered by start date and time.", 
          "items" : {
            "$ref" : "#/definitions/SchedulingShiftSegment"
          }, 
          "type" : "array"
        }, 
        "selfServiced" : {
          "description" : "A Boolean indicator of whether or not a shift is self-service. This property is read only.", 
          "type" : "boolean"
        }, 
        "startDateTime" : {
          "description" : "The start date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "transfer" : {
          "$ref" : "#/definitions/ITransfer", 
          "description" : "The transfer associated with the time element."
        }, 
        "userEnteredPosition" : {
          "description" : "A Boolean indicator of whether or not a position was set by a user. When false, the position was set by the system.", 
          "type" : "boolean"
        }, 
        "version" : {
          "description" : "The version of this shift.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Hours And Cost Summary" : {
      "description" : "Entity containing information regarding an hours and cost summary object.", 
      "properties" : {
        "amountType" : {
          "description" : "An enumeration of the type of the amount.", 
          "type" : "string"
        }, 
        "applyDate" : {
          "description" : "The date to which the hours and cost summary applies.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "durationInDays" : {
          "description" : "The duration (in days) of the hours and cost summary.", 
          "type" : "number"
        }, 
        "durationInHours" : {
          "description" : "The duration (in hours) of the hours and cost summary.", 
          "type" : "number"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the punch applies."
        }, 
        "endDateTime" : {
          "description" : "The end date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "fromShift" : {
          "type" : "boolean"
        }, 
        "id" : {
          "description" : "The ID of the hours and cost summary object.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "position" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the punch applies."
        }, 
        "startDateTime" : {
          "description" : "The start date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "timeItemId" : {
          "description" : "The ID of the time item.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "wages" : {
          "description" : "The money amount calculated in totals as wages.", 
          "type" : "number"
        }, 
        "wagesCurrency" : {
          "$ref" : "#/definitions/Currency data object reference", 
          "description" : "A reference to the currency object that contains a currency code along with a wages amount."
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Work Holiday Edit" : {
      "description" : "Entity containing information regarding a work holiday edit.", 
      "properties" : {
        "amountType" : {
          "description" : "An enumeration of the type of the amount.", 
          "enum" : [ "HOUR", "DAY", "MONEY" ], 
          "type" : "string"
        }, 
        "applyDate" : {
          "description" : "The date to which a work holiday edit applies.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "commentsNotes" : {
          "description" : "A reference to a list of Comments. This object can have multiple Comments with multiple Notes for each Comment.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Comment Note"
          }, 
          "type" : "array"
        }, 
        "costCenter" : {
          "$ref" : "#/definitions/CostCenter", 
          "description" : "A reference to the CostCenter object which contains the cost center information and labor account ID for each work holiday edit."
        }, 
        "durationInDays" : {
          "description" : "The duration (in days) of the work holiday edit.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "durationInHours" : {
          "description" : "The duration (in hours) of the work holiday edit.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "editable" : {
          "description" : "A Boolean indicator of whether or not a work holiday edit is editable.", 
          "type" : "boolean"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the work holiday edit applies."
        }, 
        "endDateTime" : {
          "description" : "The end date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "exceptions" : {
          "description" : "A list of exception objects associated with a work holiday edit.", 
          "items" : {
            "$ref" : "#/definitions/Timecard TK Exception"
          }, 
          "type" : "array"
        }, 
        "holidayDisplayName" : {
          "description" : "A string identifier that describes the holiday.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID of the work holiday edit transaction.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "laborCategories" : {
          "$ref" : "#/definitions/LaborCategories", 
          "description" : "A reference to the LaborCategories object which contains a list of labor category entries and each entry's associated labor category."
        }, 
        "moneyAmount" : {
          "description" : "The amount (as a decimal value representing money) of the work holiday edit.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "moneyAmountCurrency" : {
          "$ref" : "#/definitions/Currency data object reference", 
          "description" : "A reference to the currency object that contains a currency code along with a money amount."
        }, 
        "position" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the position assigned to this work holiday edit."
        }, 
        "scheduleAmountType" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "An enumeration of the schedule amount."
        }, 
        "startDateTime" : {
          "description" : "The start date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "systemGenerated" : {
          "description" : "A Boolean indicator of whether or not the work holiday edit was generated by the system.", 
          "type" : "boolean"
        }, 
        "transfer" : {
          "$ref" : "#/definitions/Timecard Transfer", 
          "description" : "Provides the organization job object to which the punch associated with the work holiday edit applies. Normally, this is only used when the punch is charged against a job other than the default or home job for the employee."
        }, 
        "userEnteredPosition" : {
          "description" : "A Boolean indicator of whether or not a position was set by a user. When false, the position was set by the system.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Worked Shift" : {
      "description" : "Entity describing an employee's worked shift.", 
      "properties" : {
        "consolidatedScheduleSegments" : {
          "description" : "A Boolean indicator of whether or not schedule segments of the worked shift have been consolidated.", 
          "type" : "boolean"
        }, 
        "dataSource" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the data source, if one exists. Normally, this indicates that the context object came from a different source, such as a clock, device, or an external data source such as an import or interface."
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the worked shift applies."
        }, 
        "endDateTime" : {
          "description" : "The end date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "endTimezone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The end timezone where the worked shift was entered. Normally, this is the default or home timezone for the employee, but the worked shift can include a different timezone as necessary."
        }, 
        "fromSchedule" : {
          "type" : "boolean"
        }, 
        "id" : {
          "description" : "The ID of a worked shift.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "inProgress" : {
          "description" : "A Boolean indicator of whether or not a returned worked shift is currently in progress.", 
          "type" : "boolean"
        }, 
        "kindOfTimeSegments" : {
          "description" : "The list of Kind Of Time Segment objects.", 
          "items" : {
            "$ref" : "#/definitions/KindOfTimeSegmentDTO"
          }, 
          "type" : "array"
        }, 
        "position" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the position assigned to this worked shift."
        }, 
        "projected" : {
          "type" : "boolean"
        }, 
        "roundedEndDateTime" : {
          "description" : "An optional field containing the end date and time based on configured rounding rules.", 
          "type" : "string"
        }, 
        "roundedEndTimezone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "An optional field containing the end timezone based on configured rounding rules."
        }, 
        "roundedStartDateTime" : {
          "description" : "An optional field containing the start date and time based on configured rounding rules.", 
          "type" : "string"
        }, 
        "roundedStartTimezone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "An optional field containing the start timezone based on configured rounding rules."
        }, 
        "scheduledShiftIds" : {
          "description" : "The list of IDs for a scheduled shift.", 
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array"
        }, 
        "shiftTotalHours" : {
          "description" : "Total number of hours for a worked shift.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "startDateTime" : {
          "description" : "The start date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "startTimezone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "Start timezone where the worked shift was entered. Normally, this is the default or home timezone for the employee, but the worked shift can include a different timezone as necessary."
        }, 
        "transactionDateTime" : {
          "description" : "The date and time stamp for when this worked shift transaction was entered through the API.", 
          "type" : "string"
        }, 
        "unscheduledEndDateTime" : {
          "description" : "A string parameter that represents the end date and time for an unscheduled shift.", 
          "type" : "string"
        }, 
        "unscheduledStartDateTime" : {
          "description" : "A string parameter that represents the start date and time for an unscheduled shift.", 
          "type" : "string"
        }, 
        "unscheduledWorkRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A string parameter that represents the work rule for an unscheduled shift."
        }, 
        "userEnteredPosition" : {
          "description" : "A Boolean indicator of whether or not a position was set by a user. When false, the position was set by the system.", 
          "type" : "boolean"
        }, 
        "workedSpans" : {
          "description" : "Contains a list of workedSpan objects.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Worked Span"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "LightWorkedSpan" : {
      "properties" : {
        "endPunch" : {
          "$ref" : "#/definitions/Timecard Punch"
        }, 
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "startPunch" : {
          "$ref" : "#/definitions/Timecard Punch"
        }
      }, 
      "type" : "object"
    }, 
    "TimeCardUpdateDoStatementRequest" : {
      "properties" : {
        "accrualValidationOptimization" : {
          "description" : "A Boolean indicator of whether or not to perform accrual validation optimization.", 
          "type" : "boolean"
        }, 
        "activitySegments" : {
          "$ref" : "#/definitions/Timecard ActivitySegment Changes", 
          "description" : "A reference to the activity segments object."
        }, 
        "activityTeamMemberships" : {
          "$ref" : "#/definitions/Timecard ActivityTeamMembership Changes", 
          "description" : "A reference to the activity team membership object."
        }, 
        "attestationProcessId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "baseTransfer" : {
          "description" : "A list of base transfers from the request.", 
          "items" : {
            "$ref" : "#/definitions/Timecard BaseTransfer"
          }, 
          "type" : "array"
        }, 
        "calculateTotalsRequest" : {
          "$ref" : "#/definitions/Timecard Calculate Totals Request", 
          "description" : "The request object used to calculate totals with respect to historical corrections. If this object is supplied, no other update actions can be included in the same request payload."
        }, 
        "enableEditsRequest" : {
          "$ref" : "#/definitions/Enable Edits Request", 
          "description" : "The Enable Edits request context to enable edits of signed-off time following payroll processing."
        }, 
        "exceptions" : {
          "$ref" : "#/definitions/Timecard Exception Changes", 
          "description" : "A list of exception objects associated with a pay code edit."
        }, 
        "historicalCorrections" : {
          "$ref" : "#/definitions/Timecard Historical Correction Changes", 
          "description" : "Historical Corrections update information."
        }, 
        "hoursWorked" : {
          "$ref" : "#/definitions/Timecard Hours Worked Changes", 
          "description" : "The hours worked with insertions, updates, and deletion information."
        }, 
        "includeExceptions" : {
          "description" : "A Boolean indicator of whether or not to include exceptions as part of the response.", 
          "type" : "boolean"
        }, 
        "moveAmounts" : {
          "$ref" : "#/definitions/Timecard Move Amount Changes", 
          "description" : "A list of Timecard move amounts."
        }, 
        "onBehalfOfEmployee" : {
          "description" : "A Boolean indicator of whether or not to allow an authorized user to make punches on behalf of an employee.", 
          "type" : "boolean"
        }, 
        "onlyReturnChangedEntities" : {
          "description" : "A Boolean indicator of whether or not to only return changed entities.", 
          "type" : "boolean"
        }, 
        "onlyValidate" : {
          "description" : "A Boolean indicator of whether or not to save timecard changes or to call the Totalizer without saving any changes.", 
          "type" : "boolean"
        }, 
        "overrideAccrualsWarnings" : {
          "description" : "A Boolean indicator of whether or not to include override accrual warnings.", 
          "type" : "boolean"
        }, 
        "overtimeApprovals" : {
          "$ref" : "#/definitions/Timecard Overtime Approval Changes", 
          "description" : "The request context for overtime reviews, which allows you to add new or remove existing overtime approvals or denials."
        }, 
        "payCodeEdits" : {
          "$ref" : "#/definitions/Timecard Pay Code Edit Changes", 
          "description" : "<p>The pay code edit actions with insert, update, and delete information.</p><p><strong>Note:</strong> The pay code edit <code>ID</code> is <strong>required</strong> for update and delete operations.</p>"
        }, 
        "performActionChanges" : {
          "description" : "Defines the action to perform in the form of a string. Valid values include: SignOff, Remove SignOff, Approval, and Remove Approval.", 
          "type" : "string"
        }, 
        "punches" : {
          "$ref" : "#/definitions/Timecard Punch Changes", 
          "description" : "A Boolean indicator of whether or not the currently logged-in user has the manager role."
        }, 
        "scheduleShifts" : {
          "$ref" : "#/definitions/Timecard schedule shift Changes", 
          "description" : "The Timecard schedule shift changes."
        }
      }, 
      "type" : "object"
    }, 
    "Defines the where clause used in the selection of a timecard." : {
      "description" : "Entity describing the where clause used in the retrieval and update of a timecard.", 
      "properties" : {
        "dateRange" : {
          "$ref" : "#/definitions/TKTimeCardDateRange", 
          "description" : "The date range used in the retrieval or update of a timecard."
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "Reference to the Employee object. Represents the employee for whom to retrieve or update a timecard for."
        }
      }, 
      "required" : [ "dateRange" ], 
      "type" : "object"
    }, 
    "TimeCardMultiReadOptions" : {
      "description" : "Entity defining all possible criteria by which timecard request results can be filtered.", 
      "properties" : {
        "breakSpanAtMidnight" : {
          "description" : "A Boolean indicator of whether or not to break a worked shift at calendar day midnight when the shift crosses from one calendar day to another.", 
          "type" : "boolean"
        }, 
        "combineWorkShiftAtMidnight" : {
          "description" : "A Boolean indicator of whether or not to combine worked shifts at midnight.", 
          "type" : "boolean"
        }, 
        "consolidateScheduleSegments" : {
          "description" : "A Boolean indicator of whether or not to consolidate scheduled segments of a worked shift.", 
          "type" : "boolean"
        }, 
        "exceptionOptions" : {
          "$ref" : "#/definitions/TimekeepingExceptionOptions", 
          "description" : "An object which provides exception filtering options."
        }, 
        "forWorkWeek" : {
          "description" : "A Boolean indicator of whether or not totals (actual, scheduled, or projected) are retrieved by work week. A work week can be Previous Work Week, Current Work Week, or Next Work Week.", 
          "type" : "boolean"
        }, 
        "includeKindOfTimeSegments" : {
          "description" : "A Boolean indicator of whether or not to include the Actual Kind Of Time in the timecard.", 
          "type" : "boolean"
        }, 
        "includePhantomPunches" : {
          "description" : "A Boolean indicator of whether or not to include phantom punches. The default value is false.", 
          "type" : "boolean"
        }, 
        "showTotalsWithHiddenPaycodes" : {
          "description" : "A Boolean indicator of whether or not totals should be shown when they are for for paycodes that have been configured to be hidden. The default value is true.", 
          "type" : "boolean"
        }, 
        "totalsIncludeCombinedPaycodes" : {
          "description" : "A Boolean indicator of whether or not totals include combined paycodes.", 
          "type" : "boolean"
        }, 
        "totalsRollupBy" : {
          "description" : "The criteria by which totals are rolled up. Valid values include ALL, SHIFT, TIMEITEM, DAILY, PERIOD_TO_DATE, ACTIVITY_EVENT, and RAW.", 
          "enum" : [ "ALL", "SHIFT", "TIMEITEM", "DAILY", "PERIOD_TO_DATE", "ACTIVITY_EVENT", "RAW" ], 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Time Card Where" : {
      "description" : "Entity defining the timecard where object which stores employee and Hyperfind data.", 
      "properties" : {
        "activity" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the desired activity for retrieval of activity data types."
        }, 
        "dateRange" : {
          "$ref" : "#/definitions/TKTimeCardDateRange", 
          "description" : "The date range used for searching."
        }, 
        "employees" : {
          "$ref" : "#/definitions/TimekeepingObjectRefList", 
          "description" : "A list of references for the employees object."
        }, 
        "hyperFind" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The Hyperfind data used for searching."
        }, 
        "resolveSymbolicTimeFrame" : {
          "description" : "A Boolean indicator of whether or not to resolve the symbolic timeframe.", 
          "type" : "boolean"
        }, 
        "shiftId" : {
          "description" : "The ID of the desired shift for retrieval of activity data types.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "required" : [ "dateRange", "employees", "hyperFind" ], 
      "type" : "object"
    }, 
    "ObjectRef" : {
      "description" : "The HCA object reference object model.", 
      "properties" : {
        "id" : {
          "description" : "The ID associated with an object reference.", 
          "format" : "int64", 
          "readOnly" : true, 
          "type" : "integer"
        }, 
        "qualifier" : {
          "description" : "The qualifier associated with an object reference.", 
          "readOnly" : true, 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Add-On column" : {
      "description" : "An object container for all properties related to the Addon Column configuration.", 
      "properties" : {
        "addOnColumn" : {
          "$ref" : "#/definitions/Key for MDUI related entities", 
          "description" : "The add-on column key for MDUI."
        }, 
        "label" : {
          "description" : "The label (or name) of an add-on column that is displayed in the Timecard Add-On user interface. The label can be customized.", 
          "type" : "string"
        }, 
        "visible" : {
          "description" : "A Boolean indicator of whether or not to display the add-on column in the Timecard Add-On user interface by default.", 
          "type" : "boolean"
        }, 
        "width" : {
          "description" : "The width value of an add-on column in the Timecard Add-On user interface.", 
          "format" : "int32", 
          "type" : "integer"
        }
      }, 
      "required" : [ "addOnColumn" ], 
      "type" : "object"
    }, 
    "ObjectRefList" : {
      "description" : "Model describing a collection of object references.", 
      "properties" : {
        "ids" : {
          "description" : "The list of references by ID.", 
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "qualifiers" : {
          "description" : "The qualifier of the object reference, such as name.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "refs" : {
          "description" : "The object references.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Entity that contains Comment and Note information" : {
      "description" : "Entity that contains Comment and Note information", 
      "properties" : {
        "comment" : {
          "$ref" : "#/definitions/Entity that contains Comment information", 
          "description" : "A Comment associated with a given operation."
        }, 
        "id" : {
          "description" : "The ID of a set of Comments and attached Notes.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "notes" : {
          "description" : "The Notes associated with a Comment.", 
          "items" : {
            "$ref" : "#/definitions/Entity that contains Note information"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "RequestStatus" : {
      "description" : "Model describing the details of a request status.", 
      "properties" : {
        "id" : {
          "description" : "The ID of a request status.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The localized name of a request status.", 
          "type" : "string"
        }, 
        "symbolicId" : {
          "description" : "The symbolic ID of a request status.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "RequestStatusChange" : {
      "description" : "Model describing the details of a request status change.", 
      "properties" : {
        "changeDateTime" : {
          "description" : "The date and time of the change to a request status in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss). The date and time are specified according to Greenwich Mean Time (GMT).", 
          "type" : "string"
        }, 
        "fromStatus" : {
          "$ref" : "#/definitions/RequestStatus", 
          "description" : "The previous status of a request."
        }, 
        "personName" : {
          "description" : "The name of the person who changed the status of a request.", 
          "type" : "string"
        }, 
        "toStatus" : {
          "$ref" : "#/definitions/RequestStatus", 
          "description" : "The new status of a request."
        }
      }, 
      "type" : "object"
    }, 
    "Defines the where clause used in the selection of a timecard changes." : {
      "description" : "Entity describing the where clause used in the retrieval and updating of a timecard change.", 
      "properties" : {
        "dateRange" : {
          "$ref" : "#/definitions/CommonDateRange", 
          "description" : "The date range used in the retrieval or updating of a timecard change."
        }, 
        "employees" : {
          "$ref" : "#/definitions/ObjectRefList", 
          "description" : "A reference to the Employee object. Represents the employee for whom a timecard change is retrieved."
        }
      }, 
      "type" : "object"
    }, 
    "Timecard change for report" : {
      "description" : "Timecard change for Reports", 
      "properties" : {
        "changeDateTime" : {
          "description" : "The date and time of a timecard change in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "changeType" : {
          "description" : "The type of an action of a timecard change.", 
          "enum" : [ "ADD", "UPDATE", "DELETE" ], 
          "type" : "string"
        }, 
        "dataSource" : {
          "description" : "The functional area name where the modification was made: timecard, clock, etc.", 
          "type" : "string"
        }, 
        "durationInDays" : {
          "description" : "The duration (in days) of the pay code edit.", 
          "type" : "number"
        }, 
        "durationInHours" : {
          "description" : "The duration (in hours) of the pay code edit.", 
          "type" : "number"
        }, 
        "elementType" : {
          "description" : "The Punch or Paycode stored in a timecard change.", 
          "enum" : [ "PUNCH", "PAYCODEEDIT", "HOURSWORKED", "ACTIVITY_SEGMENT" ], 
          "type" : "string"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "A reference to the employee who made a timecard change."
        }, 
        "hasComments" : {
          "description" : "A Boolean indicator of whether or not a Comment is associated with a timecard change.", 
          "type" : "boolean"
        }, 
        "id" : {
          "description" : "The ID of a timecard change.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "moneyAmount" : {
          "description" : "The amount (as a decimal value representing money) of the pay code edit.", 
          "type" : "number"
        }, 
        "paycode" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "A reference to the paycode applied to the timecard change."
        }, 
        "position" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the position of the employee assigned to a pay code edit."
        }, 
        "status" : {
          "description" : "The status of a timecard change.", 
          "enum" : [ "SUBMITTED", "APPROVED", "REFUSED" ], 
          "type" : "string"
        }, 
        "statusChangeDateTime" : {
          "description" : "The date and time of a timecard change approval or rejection in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "transactionDateTime" : {
          "description" : "The date and time to which a timecard change applies in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "userEnteredPosition" : {
          "description" : "A Boolean indicator of whether or not a position was set by a user. When false, the position was set by the system.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "APIException" : {
      "properties" : {
        "argsDetail" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "cause" : {
          "$ref" : "#/definitions/Throwable"
        }, 
        "errorCode" : {
          "type" : "string"
        }, 
        "errorsDetails" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "extraDetails" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "inputDetail" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "limitsDetail" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "locale" : {
          "$ref" : "#/definitions/Locale"
        }, 
        "localizedMessage" : {
          "type" : "string"
        }, 
        "message" : {
          "type" : "string"
        }, 
        "metadata" : {
          "type" : "object"
        }, 
        "multiOpsResults" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "overridable" : {
          "type" : "boolean"
        }, 
        "overrideHTTPStatusCode" : {
          "enum" : [ "OK", "CREATED", "ACCEPTED", "NO_CONTENT", "RESET_CONTENT", "PARTIAL_CONTENT", "MOVED_PERMANENTLY", "FOUND", "SEE_OTHER", "NOT_MODIFIED", "USE_PROXY", "TEMPORARY_REDIRECT", "BAD_REQUEST", "UNAUTHORIZED", "PAYMENT_REQUIRED", "FORBIDDEN", "NOT_FOUND", "METHOD_NOT_ALLOWED", "NOT_ACCEPTABLE", "PROXY_AUTHENTICATION_REQUIRED", "REQUEST_TIMEOUT", "CONFLICT", "GONE", "LENGTH_REQUIRED", "PRECONDITION_FAILED", "REQUEST_ENTITY_TOO_LARGE", "REQUEST_URI_TOO_LONG", "UNSUPPORTED_MEDIA_TYPE", "REQUESTED_RANGE_NOT_SATISFIABLE", "EXPECTATION_FAILED", "INTERNAL_SERVER_ERROR", "NOT_IMPLEMENTED", "BAD_GATEWAY", "SERVICE_UNAVAILABLE", "GATEWAY_TIMEOUT", "HTTP_VERSION_NOT_SUPPORTED" ], 
          "type" : "string"
        }, 
        "overrideMessage" : {
          "type" : "string"
        }, 
        "reportingAttribute" : {
          "type" : "string"
        }, 
        "reportingValue" : {
          "type" : "string"
        }, 
        "results" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "stackTrace" : {
          "items" : {
            "$ref" : "#/definitions/StackTraceElement"
          }, 
          "type" : "array"
        }, 
        "suppressed" : {
          "items" : {
            "$ref" : "#/definitions/Throwable"
          }, 
          "type" : "array"
        }, 
        "userParameters" : {
          "additionalProperties" : {
            "type" : "string"
          }, 
          "type" : "object"
        }
      }, 
      "type" : "object"
    }, 
    "TimeCardDataMultiReadOptions" : {
      "description" : "The Timecard data multi_read options model.", 
      "properties" : {
        "forWorkWeek" : {
          "description" : "A Boolean indicator of whether or not totals (actual, scheduled, or projected) are retrieved by work week. A work week can be Previous Work Week, Current Work Week, or Next Work Week.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "TimeCardDataOptions" : {
      "description" : "Entity contains optional parameters for timecard metrics.", 
      "properties" : {
        "correctionOption" : {
          "description" : "The correction options. Valid values include INCLUDE_CORRECTIONS, ONLY_CORRECTIONS, and EXCLUDE_CORRECTIONS. The default value is EXCLUDE_CORRECTIONS.", 
          "enum" : [ "INCLUDE_CORRECTIONS", "ONLY_CORRECTIONS", "EXCLUDE_CORRECTIONS" ], 
          "type" : "string"
        }, 
        "roundHoursAmountPerLocalePolicy" : {
          "description" : "A Boolean indicator of whether or not to round the amount of hours.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "TimeCardDataRollupContext" : {
      "description" : "Entity containing necessary data for the Timecard Data rollup context.", 
      "properties" : {
        "anchorDate" : {
          "description" : "A date used to define the first day of the week in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "byDate" : {
          "description" : "A Boolean indicator of whether or not to roll up totals data by date.", 
          "type" : "boolean"
        }, 
        "byDateRange" : {
          "description" : "A Boolean indicator of whether or not to roll up the date range to only show the values as of the last day of the provided date range in the dailySummaries section of accrual balance data.", 
          "type" : "boolean"
        }, 
        "byEmployee" : {
          "description" : "A Boolean indicator of whether or not to roll up totals data by employee.", 
          "type" : "boolean"
        }, 
        "byJob" : {
          "type" : "boolean"
        }, 
        "byLaborCategory" : {
          "description" : "A Boolean indicator of whether or not to roll up totals data by labor category.", 
          "type" : "boolean"
        }, 
        "byOrg" : {
          "description" : "A Boolean indicator of whether or not to roll up totals data by organization.", 
          "type" : "boolean"
        }, 
        "byPaycode" : {
          "description" : "A Boolean indicator of whether or not to roll up totals data by paycode.", 
          "type" : "boolean"
        }, 
        "byPosition" : {
          "description" : "A Boolean indicator of whether or not to roll up totals data by position.", 
          "type" : "boolean"
        }, 
        "groupBy" : {
          "description" : "The roll-up group by type. Valid values include WEEKLY, which is mandatory if passing a grouped hours request.", 
          "enum" : [ "WEEKLY" ], 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "TimeCardDataWhere" : {
      "description" : "Entity containing necessary data for the Timecard Data Where context.", 
      "properties" : {
        "accruals" : {
          "$ref" : "#/definitions/TimekeepingObjectRefList", 
          "description" : "A list of references for the Accrual object."
        }, 
        "contributingDays" : {
          "description" : "A set of contributing week days in ISO-8601 format, from 1 (Monday) to 7 (Sunday).", 
          "items" : {
            "format" : "int32", 
            "type" : "integer"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "employeeSet" : {
          "$ref" : "#/definitions/TimeCardDataWhereEmployee", 
          "description" : "A list of references for the employees object."
        }, 
        "exceptionTypes" : {
          "$ref" : "#/definitions/TimekeepingObjectRefList", 
          "description" : "A list of references for the ExceptionType object."
        }, 
        "includeApprovingManagers" : {
          "description" : "A Boolean indicator of whether or not to include approving managers.", 
          "type" : "boolean"
        }, 
        "paycodes" : {
          "$ref" : "#/definitions/TimekeepingObjectRefList", 
          "description" : "A list of references for the Paycode object."
        }, 
        "rollUpByJobId" : {
          "description" : "A Boolean indicator of whether or not to roll up totals data by Job ID.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "Absenceexceptiondata" : {
      "description" : "Entity containing necessary data for Absence Exceptions.", 
      "properties" : {
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object."
        }, 
        "isExcusedAbsence" : {
          "description" : "A Boolean indicator of whether or not the employee has any excused absences.", 
          "type" : "boolean"
        }, 
        "isUnexcusedAbsence" : {
          "description" : "A Boolean indicator of whether or not the employee has any unexcused absences.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "absenceexceptionwithposition" : {
      "description" : "Entity containing necessary data for Absence Exceptions with position.", 
      "properties" : {
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object."
        }, 
        "isExcusedAbsence" : {
          "description" : "A Boolean indicator of whether or not the employee has any excused absences.", 
          "type" : "boolean"
        }, 
        "isUnexcusedAbsence" : {
          "description" : "A Boolean indicator of whether or not the employee has any unexcused absences.", 
          "type" : "boolean"
        }, 
        "position" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the position object."
        }, 
        "uniqueId" : {
          "description" : "The unique identifier for an absenceExceptionWithPosition object.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "AccrualSummaryData" : {
      "description" : "Entity containing necessary data for Accrual Summary Data.", 
      "properties" : {
        "accrualCode" : {
          "$ref" : "#/definitions/AccrualCode", 
          "description" : "The AccrualCode object associated with the accrual summary data."
        }, 
        "dailySummaries" : {
          "description" : "A reference to a list of AccrualDailySummaryData objects.", 
          "items" : {
            "$ref" : "#/definitions/AccrualDailySummaryData"
          }, 
          "type" : "array"
        }, 
        "effectiveDateRange" : {
          "description" : "The effective date range of the accrual summary data.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The employee Object Ref associated with the summary."
        }, 
        "endDateTime" : {
          "description" : "The end date/time of the summary.", 
          "type" : "string"
        }, 
        "reportingPeriodSummaries" : {
          "description" : "A reference to a list of AccrualReportingPeriodSummaryData objects.", 
          "items" : {
            "$ref" : "#/definitions/AccrualReportingPeriodSummaryData"
          }, 
          "type" : "array"
        }, 
        "startDateTime" : {
          "description" : "The start date/time of the summary.", 
          "type" : "string"
        }, 
        "startingBalanceForPeriod" : {
          "$ref" : "#/definitions/AccrualBalanceData", 
          "description" : "The starting balance of the accrual summary data."
        }, 
        "uniqueId" : {
          "description" : "The ID of the summary.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "AccrualTransactionData" : {
      "description" : "Entity containing necessary data for Accrual Transaction Data.", 
      "properties" : {
        "accrualCode" : {
          "$ref" : "#/definitions/AccrualCode", 
          "description" : "The AccrualCode object associated with the accrual transaction data."
        }, 
        "accrualCodeAmountType" : {
          "description" : "The amount type of the accrual code in this transaction.", 
          "enum" : [ "HOUR", "DAY", "MONEY" ], 
          "type" : "string"
        }, 
        "accrualTransId" : {
          "description" : "The ID of the accrual transaction.", 
          "type" : "string"
        }, 
        "carryForwardDaysAmount" : {
          "description" : "The carry forward amount (in days) of the accrual transaction.", 
          "type" : "number"
        }, 
        "carryForwardHoursAmount" : {
          "description" : "The carry forward amount (in hours) of the accrual transaction.", 
          "type" : "number"
        }, 
        "carryForwardMoneyAmount" : {
          "description" : "The carry forward money amount of the accrual transaction.", 
          "type" : "number"
        }, 
        "carryForwardMoneyAmountCurrency" : {
          "$ref" : "#/definitions/Currency data object reference", 
          "description" : "A reference to the carry-forward currency object that contains a currency code along with an original money amount."
        }, 
        "dataSource" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the data source, if one exists. Normally, this indicates that the context object came from a different source, such as a clock, device, or an external data source such as an import or interface."
        }, 
        "daysAmount" : {
          "description" : "The amount (in days) of the accrual transaction.", 
          "type" : "number"
        }, 
        "disqualified" : {
          "type" : "boolean"
        }, 
        "editedBy" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the person who updated the accrual transaction."
        }, 
        "effectiveDate" : {
          "description" : "The effective date of the accrual summary data.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object."
        }, 
        "endDate" : {
          "description" : "The end date of the accrual transaction.", 
          "type" : "string"
        }, 
        "enteredOnDateTime" : {
          "description" : "The date and time the accrual transaction was entered.", 
          "type" : "string"
        }, 
        "excluded" : {
          "description" : "A Boolean indicator of whether or not the accrual transaction is excluded.", 
          "type" : "boolean"
        }, 
        "fromTransition" : {
          "type" : "boolean"
        }, 
        "grantDaysAmount" : {
          "description" : "The grant amount (in days) of the accrual transaction.", 
          "type" : "number"
        }, 
        "grantHoursAmount" : {
          "description" : "The grant amount (in hours) of the accrual transaction.", 
          "type" : "number"
        }, 
        "grantMoneyAmount" : {
          "description" : "The grant money amount of the accrual transaction.", 
          "type" : "number"
        }, 
        "grantMoneyAmountCurrency" : {
          "$ref" : "#/definitions/Currency data object reference", 
          "description" : "A reference to the grant currency object that contains a currency code along with an original money amount."
        }, 
        "hoursAmount" : {
          "description" : "The amount (in hours) of the accrual transaction.", 
          "type" : "number"
        }, 
        "limitDaysAmount" : {
          "description" : "The limit amount (in days) of the accrual transaction.", 
          "type" : "number"
        }, 
        "limitHoursAmount" : {
          "description" : "The limit amount (in hours) of the accrual transaction.", 
          "type" : "number"
        }, 
        "limitMoneyAmount" : {
          "description" : "The limit money amount of the accrual transaction.", 
          "type" : "number"
        }, 
        "limitMoneyAmountCurrency" : {
          "$ref" : "#/definitions/Currency data object reference", 
          "description" : "A reference to the limit currency object that contains a currency code along with an original money amount."
        }, 
        "moneyAmount" : {
          "description" : "The money amount of the accrual transaction.", 
          "type" : "number"
        }, 
        "moneyAmountCurrency" : {
          "$ref" : "#/definitions/Currency data object reference", 
          "description" : "A reference to the currency object that contains a currency code along with an original money amount."
        }, 
        "newFTEAmt" : {
          "description" : "The new FTE amount of this accrual transaction.", 
          "type" : "number"
        }, 
        "oldFTEAmt" : {
          "description" : "The old FTE amount of this accrual transaction.", 
          "type" : "number"
        }, 
        "onProbation" : {
          "type" : "boolean"
        }, 
        "originalDate" : {
          "description" : "The original date of the accrual transaction.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "originalDaysAmount" : {
          "description" : "The original amount (in days) of the accrual transaction.", 
          "type" : "number"
        }, 
        "originalHoursAmount" : {
          "description" : "The original amount (in hours) of the accrual transaction.", 
          "type" : "number"
        }, 
        "originalMoneyAmount" : {
          "description" : "The original money amount of the accrual transaction.", 
          "type" : "number"
        }, 
        "originalMoneyAmountCurrency" : {
          "$ref" : "#/definitions/Currency data object reference", 
          "description" : "A reference to the original currency object that contains a currency code along with an original money amount."
        }, 
        "payCode" : {
          "$ref" : "#/definitions/PayCode", 
          "description" : "A reference to the payCode object, which is a groupByType."
        }, 
        "person" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the person object."
        }, 
        "probationDaysAmount" : {
          "description" : "The probation amount (in days) of the accrual transaction.", 
          "type" : "number"
        }, 
        "probationHoursAmount" : {
          "description" : "The probation amount (in hours) of the accrual transaction.", 
          "type" : "number"
        }, 
        "probationMoneyAmount" : {
          "description" : "The probation money amount of the accrual transaction.", 
          "type" : "number"
        }, 
        "probationMoneyAmountCurrency" : {
          "$ref" : "#/definitions/Currency data object reference", 
          "description" : "A reference to the probation currency object that contains a currency code along with an original money amount."
        }, 
        "spcededByReset" : {
          "description" : "A Boolean indicator of whether or not the accrual transaction is spcededbyreset.", 
          "type" : "boolean"
        }, 
        "suspended" : {
          "description" : "A Boolean indicator of whether or not the accrual transaction is suspended.", 
          "type" : "boolean"
        }, 
        "systemGeneratedNum" : {
          "description" : "The system generated integer of this accrual transaction.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "toAccrualCode" : {
          "$ref" : "#/definitions/AccrualCode", 
          "description" : "The accrual code of the accrual transaction."
        }, 
        "toPerson" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the person object associated with this transaction."
        }, 
        "type" : {
          "description" : "The type of accrual transaction.", 
          "enum" : [ "TAKEN", "GRANT", "ACCRUAL_RESET", "EARNING_ADJUSTMENT", "LIMIT_ADJUSTMENT", "MAXIMUM_BALANCE_LIMIT_ADJUSTMENT", "PROBATION", "PROBATION_END", "TRANSFER_FROM_EMPLOYEE", "TRANSFER_TO_EMPLOYEE_TRANSACTION", "ACCRUAL_CARRYFORWARD", "SELECTIVELY_APPLIED_ACCRUAL", "MAXIMUM_CARRYOVERLIMIT_ADJUSTMENT", "MINIMUM_CARRYOVERLIMIT_ADJUSTMENT", "TRANSFER", "GRANT_EXPIRATION", "PROBATION_START", "EXPIRING_GRANT", "PROBATION_RESTART", "LIMIT_ADJUSTED_CARRYFOWARD", "PROBATIONARY_LIMIT_ADJUSTED_CARRYFOWARD", "VESTED_LIMIT_ADJUSTED_CARRYFOWARD", "TAKEN_EXPIRATION", "COMBINED_TAKINGS_EXPIRATION" ], 
          "type" : "string"
        }, 
        "typeStr" : {
          "description" : "A string associated with the type of accrual transaction.", 
          "type" : "string"
        }, 
        "updateDatetm" : {
          "description" : "The date and time of the update made to the accrual transaction.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "TotalsData" : {
      "description" : "Entity containing necessary data for Totals Data.", 
      "properties" : {
        "amountType" : {
          "description" : "An enumeration of the type of the amount.", 
          "type" : "string"
        }, 
        "applyDate" : {
          "description" : "The date to which the totals are applied when totals are derived from more than one day.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "approvingManagers" : {
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }, 
        "approvingManagersDataviewFields" : {
          "$ref" : "#/definitions/ApprovingManagersDataviewFields"
        }, 
        "combined" : {
          "description" : "A Boolean indicator of whether or not the total is combined.", 
          "type" : "boolean"
        }, 
        "contributingDaysOfWeek" : {
          "description" : "A set of contributing week days in ISO-8601 format, from 1 (Monday) to 7 (Sunday).", 
          "items" : {
            "format" : "int32", 
            "type" : "integer"
          }, 
          "type" : "array"
        }, 
        "costCenter" : {
          "$ref" : "#/definitions/CostCenter", 
          "description" : "A reference to the CostCenter object which contains the cost center information and labor account ID for each total."
        }, 
        "daysAmount" : {
          "description" : "The amount (in days) of a worked shift.", 
          "type" : "number"
        }, 
        "daysAmount1" : {
          "description" : "An alternate amount (in days) of a worked shift.", 
          "type" : "number"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object."
        }, 
        "endDate" : {
          "description" : "The end date of a date range of grouped totals in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "hoursAmount" : {
          "description" : "The amount (in hours) of a worked shift.", 
          "type" : "number"
        }, 
        "hoursAmount1" : {
          "description" : "An alternative amount (in hours) of a worked shift.", 
          "type" : "number"
        }, 
        "isFromCorrection" : {
          "description" : "A Boolean indicator of whether or not the totals data is from a correction.", 
          "type" : "boolean"
        }, 
        "job" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the Job object, which is a groupByType."
        }, 
        "jobTransfer" : {
          "description" : "A Boolean indicator of whether or not the totals object contains a job transfer.", 
          "type" : "boolean"
        }, 
        "laborCategories" : {
          "$ref" : "#/definitions/LaborCategories", 
          "description" : "A reference to the LaborCategories object which contains a list of labor category entries and each entry's associated labor category for each total."
        }, 
        "laborTransfer" : {
          "description" : "A Boolean indicator of whether or not the totals object contains a labor transfer.", 
          "type" : "boolean"
        }, 
        "managerApprovalNeeded" : {
          "description" : "A Boolean indicator of whether or not there is a total that has not been approved by a manager.", 
          "type" : "boolean"
        }, 
        "payCode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the payCode object, which is a groupByType."
        }, 
        "payPeriodNumber" : {
          "description" : "The pay period number.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "payPeriodWeek" : {
          "description" : "The pay period week.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "position" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the associated position object."
        }, 
        "signedOff" : {
          "description" : "A Boolean indicator of whether or not the pay period is signed off.", 
          "type" : "boolean"
        }, 
        "startDate" : {
          "description" : "The start date of a date range of grouped totals in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "uniqueId" : {
          "description" : "A unique ID for totals data. Required for Information Access data delivery.", 
          "type" : "string"
        }, 
        "wageAddition" : {
          "description" : "Wage addition.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "wageMultiplier" : {
          "description" : "Wage multiplier.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "wages" : {
          "description" : "Total wages.", 
          "type" : "number"
        }, 
        "wages1" : {
          "description" : "Total scheduled wages.", 
          "type" : "number"
        }, 
        "wages1Currency" : {
          "$ref" : "#/definitions/Currency data object reference", 
          "description" : "A reference to the currency object that contains a currency code along with a wages amount for scheduled wages."
        }, 
        "wagesCurrency" : {
          "$ref" : "#/definitions/Currency data object reference", 
          "description" : "A reference to the currency object that contains a currency code along with a wages amount."
        }, 
        "workWeekApplyDateTime" : {
          "description" : "The date and time for which the totals are applied in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss). This property is returned when the <code>forWorkWeek</code> request payload Boolean is 'true'.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "AveragingData" : {
      "description" : "Entity containing necessary data for Averaging Data.", 
      "properties" : {
        "actualAmount" : {
          "description" : "The actual amount.", 
          "type" : "number"
        }, 
        "actualThroughSelectedDayHours" : {
          "description" : "Actual through selected day hours.", 
          "type" : "number"
        }, 
        "actualThroughSelectedDayHoursMinusAveragingTargetHours" : {
          "description" : "Actual through selected day hours minus averaging target hours.", 
          "type" : "number"
        }, 
        "amount" : {
          "description" : "The amount of time of a worked shift.", 
          "type" : "number"
        }, 
        "amountFrom" : {
          "description" : "A string representing the from amount.", 
          "type" : "string"
        }, 
        "averagingTargetHoursMinusActualThroughSelectedDayHours" : {
          "description" : "Averaging target hours minus actual through selected day hours.", 
          "type" : "number"
        }, 
        "avgReportingPeriod" : {
          "description" : "The average reporting period.", 
          "type" : "string"
        }, 
        "datePatternType" : {
          "description" : "The date pattern type.", 
          "type" : "string"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object."
        }, 
        "endDate" : {
          "description" : "The end date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "type" : "string"
        }, 
        "includeInAveragingDataview" : {
          "description" : "A Boolean indicator of whether or not to include the associated elements in the averaging dataview.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "projectedHours" : {
          "description" : "Projected hours.", 
          "type" : "number"
        }, 
        "startDate" : {
          "description" : "The start date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "type" : "string"
        }, 
        "targetAmount" : {
          "description" : "The target amount.", 
          "type" : "number"
        }, 
        "targetThroughSelectedDayHours" : {
          "description" : "Target through selected day hours.", 
          "type" : "number"
        }, 
        "variance" : {
          "description" : "The variance.", 
          "type" : "number"
        }, 
        "varianceActualHoursMinusTargetThroughSelectedDayHours" : {
          "description" : "Variance actual hours minus target through selected day hours.", 
          "type" : "number"
        }, 
        "varianceProjectedHoursMinusTargetHours" : {
          "description" : "Variance projected hours minus target hours.", 
          "type" : "number"
        }, 
        "varianceTargetHoursMinusActualThroughSelectedDayHours" : {
          "description" : "Variance target hours minus actual through selected day hours.", 
          "type" : "number"
        }
      }, 
      "type" : "object"
    }, 
    "TotalSummaryData" : {
      "description" : "Entity containing necessary data for TotalSummary Data.", 
      "properties" : {
        "amountType" : {
          "description" : "The type of the amount.", 
          "type" : "string"
        }, 
        "applyDate" : {
          "description" : "The date to which the total summary is applied when totals are derived from more than one day.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "combined" : {
          "description" : "A Boolean indicator of whether or not the total summary is combined.", 
          "type" : "boolean"
        }, 
        "daysAmount" : {
          "description" : "The amount (in days) of a worked shift.", 
          "type" : "number"
        }, 
        "durationInHours" : {
          "description" : "The amount (in hours) of a worked shift.", 
          "type" : "number"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object."
        }, 
        "job" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The job associated with the summary."
        }, 
        "managerApprovalNeeded" : {
          "description" : "A Boolean indicator of whether or not there is a total that has not been approved by a manager.", 
          "type" : "boolean"
        }, 
        "payCode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the payCode object, which is a groupByType."
        }, 
        "position" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the associated position object."
        }, 
        "timeEntityItemType" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The type of the time entity item associated with the total summary."
        }, 
        "uniqueId" : {
          "description" : "A unique ID for totals data. Required for Information Access data delivery.", 
          "type" : "string"
        }, 
        "wages" : {
          "description" : "The amount of wages.", 
          "type" : "number"
        }, 
        "wagesCurrency" : {
          "$ref" : "#/definitions/Currency data object reference", 
          "description" : "A reference to the currency object that contains a currency code along with a wages amount."
        }
      }, 
      "type" : "object"
    }, 
    "ExceptioncountData" : {
      "description" : "Entity containing necessary data for Exception count Data.", 
      "properties" : {
        "count" : {
          "description" : "the number of exceptions.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object."
        }, 
        "exceptionType" : {
          "description" : "<p>The Timekeeping exception type.</p><p>The names, descriptions, and categories enumerated in <code>name</code>, <code>description</code>, and <code>category</code> are linked to one another and listed in the same sequence in each property. For example, for the Early In exception type, the <code>name</code> is EARLY_IN, the <code>description</code> is EARLY_IN_DSC, and the <code>category</code> is IN_PUNCH_EXCEPTIONS.</p>", 
          "properties" : {
            "category" : {
              "description" : "The category of a Timekeeping exception type. Possible values include the following, which include repetitions so the sequence matches the sequencing in <code>name</code> and <code>description</code>: SHIFT_EXCEPTIONS, SHIFT_EXCEPTIONS, IN_PUNCH_EXCEPTIONS, IN_PUNCH_EXCEPTIONS, IN_PUNCH_EXCEPTIONS, OUT_PUNCH_EXCEPTIONS, OUT_PUNCH_EXCEPTIONS, OUT_PUNCH_EXCEPTIONS, ABSENCE_EXCEPTIONS, ABSENCE_EXCEPTIONS, BREAK_EXCEPTIONS, BREAK_EXCEPTIONS, SHIFT_EXCEPTIONS, SHIFT_EXCEPTIONS, IN_PUNCH_EXCEPTIONS, OUT_PUNCH_EXCEPTIONS, SHIFT_EXCEPTIONS, BREAK_EXCEPTIONS, BREAK_EXCEPTIONS, BREAK_EXCEPTIONS, BREAK_EXCEPTIONS, MISCELLANEOUS_EXCEPTIONS, MISCELLANEOUS_EXCEPTIONS, MISCELLANEOUS_EXCEPTIONS, SHIFT_EXCEPTIONS, MISCELLANEOUS_EXCEPTIONS.", 
              "type" : "string"
            }, 
            "description" : {
              "description" : "The description of a Timekeeping exception type. Possible values include: CANCELLED_DEDUCTION_DSC, CORE_HOURS_VIOLATION_DSC, VERY_EARLY_IN_DSC, EARLY_IN_DSC, LATE_IN_DSC, EARLY_OUT_DSC, LATE_OUT_DSC, VERY_LATE_OUT_DSC, EXCUSED_ABSENCE_DSC, UNEXCUSED_ABSENCE_DSC, SHORT_BREAK_DSC, LONG_BREAK_DSC, SHORT_SHIFT_DSC, LONG_SHIFT_DSC, MISSED_IN_PUNCH_DSC, MISSED_OUT_PUNCH_DSC, UNSCHEDULED_DSC, LONG_TOTAL_BREAK_DSC, SHORT_TOTAL_BREAK_DSC, BONUS_APPLIED_DSC, BREAK_OUT_OF_SEQUENCE_DSC, HOLIDAY_SCHEDULE_VIOLATION_DSC, MINIMUM_DAYS_ACTIVE_VIOLATION_DSC, MINIMUM_DAYS_EMPLOYED_VIOLATION_DSC, INVALID_NAMED_DURATION_DSC, WORK_HISTORY_VIOLATION_DSC.", 
              "type" : "string"
            }, 
            "displayName" : {
              "description" : "The display name of a Timekeeping exception type.", 
              "type" : "string"
            }, 
            "id" : {
              "description" : "The ID of a Timekeeping exception type.", 
              "type" : "integer"
            }, 
            "name" : {
              "description" : "The name of a Timekeeping exception type. Possible values include: CANCELLED_DEDUCTION, CORE_HOURS_VIOLATION, VERY_EARLY_IN, EARLY_IN, LATE_IN, EARLY_OUT, LATE_OUT, VERY_LATE_OUT, EXCUSED_ABSENCE, UNEXCUSED_ABSENCE, SHORT_BREAK, LONG_BREAK, SHORT_SHIFT, LONG_SHIFT, MISSED_IN_PUNCH, MISSED_OUT_PUNCH, UNSCHEDULED, LONG_TOTAL_BREAK, SHORT_TOTAL_BREAK, BONUS_APPLIED, BREAK_OUT_OF_SEQUENCE, HOLIDAY_SCHEDULE_VIOLATION, MINIMUM_DAYS_ACTIVE_VIOLATION, MINIMUM_DAYS_EMPLOYED_VIOLATION, INVALID_NAMED_DURATION, WORK_HISTORY_VIOLATION.", 
              "type" : "string"
            }
          }, 
          "type" : "object"
        }, 
        "uniqueId" : {
          "description" : "The unique ID for this exception count.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "FTPTData" : {
      "description" : "Entity containing necessary data for FullTimePartTime Data.", 
      "properties" : {
        "averageAllWeeklyHours" : {
          "description" : "The average weekly hours (in whole hours) in a time period.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "averageWorkedWeeklyHours" : {
          "description" : "The average weekly hours worked in a time period.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object."
        }, 
        "hoursWorked" : {
          "description" : "The number of hours worked in a time period.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "numberofAllWeeks" : {
          "description" : "The number of weeks (in whole weeks) in a time period.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "numberofWorkedWeeks" : {
          "description" : "The number of worked weeks in a specified time period.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "paycode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the payCode object, which is a groupByType."
        }
      }, 
      "type" : "object"
    }, 
    "MusterReportDailyData" : {
      "description" : "Entity containing necessary data for the MusterReportDailyData object.", 
      "properties" : {
        "date" : {
          "description" : "The date associated with a MusterReportDailyData object in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object associated with a MusterReportDailyData object."
        }, 
        "error" : {
          "description" : "A Boolean indicator of whether or not the DailyStatus object has an error status.", 
          "type" : "boolean"
        }, 
        "status" : {
          "description" : "The status code of a MusterReportDailyData object.", 
          "type" : "string"
        }, 
        "uniqueId" : {
          "description" : "The unique identifier of a MusterReportDailyData object.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "MusterReportSummaryData" : {
      "description" : "Entity containing necessary data for the MusterReportSummaryData object.", 
      "properties" : {
        "count" : {
          "description" : "The number of related statuses associated with a MusterReportSummaryData object. Allowable values are floats greater than zero with a step of 0.5.", 
          "format" : "float", 
          "type" : "number"
        }, 
        "description" : {
          "description" : "The description associated with a MusterReportSummaryData object.", 
          "type" : "string"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object associated with a MusterReportSummaryData object."
        }, 
        "status" : {
          "description" : "The status code of a MusterReportSummaryData object.", 
          "type" : "string"
        }, 
        "uniqueId" : {
          "description" : "The unique identifier of a MusterReportSummaryData object.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Comment Note" : {
      "description" : "Entity describing a set of Comments and attached Notes.", 
      "properties" : {
        "comment" : {
          "$ref" : "#/definitions/Timecard Comment", 
          "description" : "A Comment associated with a given operation."
        }, 
        "id" : {
          "description" : "The ID of this set of Comments and attached Notes.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "notes" : {
          "description" : "The Notes associated with a Comment.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Note"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Activity Segment Labor Category Transfer" : {
      "description" : "Entity containing information regarding a transfer of a labor category.", 
      "properties" : {
        "laborCategoryDef" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the associated labor category object."
        }, 
        "laborCategoryEntry" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the labor entry object."
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Activity Result Segment" : {
      "description" : "Entity describing an Activity Result Segment for an Activity Segment.", 
      "properties" : {
        "activitySegmentId" : {
          "description" : "The ID of an Activity Segment.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "childResultSegments" : {
          "description" : "A reference to a list of child Activity Result Segments.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Activity Result Segment"
          }, 
          "type" : "array"
        }, 
        "createdDateTime" : {
          "description" : "The date and time this record was created in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "dataSourceId" : {
          "description" : "The ID of the Data Source.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "dateTimeResult" : {
          "description" : "The DateTime result for the Activity Result Segment.", 
          "type" : "string"
        }, 
        "decimalResult" : {
          "description" : "The decimal result for the Activity Result Segment.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "deleted" : {
          "description" : "A Boolean indicator of whether or not the Activity Result Segment is deleted.", 
          "type" : "boolean"
        }, 
        "effectiveDateTime" : {
          "description" : "The effective date and time associated with an Activity Result Segment in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "fieldDefinition" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the Field Definition."
        }, 
        "id" : {
          "description" : "The ID of an Activity Result Segment.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "numericResult" : {
          "description" : "The numeric result for the Activity Result Segment.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "resultCode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the Result Code."
        }, 
        "textResult" : {
          "description" : "The text result for the Activity Result Segment.", 
          "type" : "string"
        }, 
        "timeResult" : {
          "description" : "The time result for the Activity Result Segment.", 
          "type" : "string"
        }, 
        "updatedDateTime" : {
          "description" : "The date and time this record was last updated in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Activity Span" : {
      "description" : "Entity describing an activity span object for the timecard resource. The activity span contains the activity processed segment and its associated activity segment. The activity span does not contain an activity segment if the processed activity segment is system genrated like orphans, meal breaks or idle.", 
      "properties" : {
        "activityProcessedSegments" : {
          "description" : "A reference to a list of activity processed segments.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Activity Processed Segment"
          }, 
          "type" : "array"
        }, 
        "activitySegment" : {
          "$ref" : "#/definitions/Timecard Activity Segment", 
          "description" : "A reference to an activity segment."
        }, 
        "efficiencies" : {
          "$ref" : "#/definitions/Timecard Activity Efficiency", 
          "description" : "A reference to activity efficiency."
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Activity Shift Total" : {
      "description" : "Entity describing an activity shift totals object for the timecard resource.", 
      "properties" : {
        "actual" : {
          "description" : "The actual value of an activity shift total, which adds up the duration of all activities within the shift regardless of type, including system-generated activities.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "allocated" : {
          "description" : "The allocated value of an activity shift total, which is a sum of all the allocated seconds for all activities in a shift.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "variance" : {
          "description" : "The variance value of an activity shift total, which is a sum of the overages of all activities in a shift.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Activity Effective Team Membership" : {
      "description" : "Entity describing an activity effective team membership.", 
      "properties" : {
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom an activity effective team membership applies."
        }, 
        "endDateTime" : {
          "description" : "The date and time of the end of the activity effective team membership in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).", 
          "type" : "string"
        }, 
        "endTimezone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The time zone of the end of the activity effective team membership."
        }, 
        "id" : {
          "description" : "The ID of the activity effective team membership.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "membershipId" : {
          "description" : "The ID of activity team membership which associated with this activity effective team membership.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "startDateTime" : {
          "description" : "The date and time of the start of the activity effective team membership in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).", 
          "type" : "string"
        }, 
        "startTimezone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The time zone of the start of the activity effective team membership."
        }, 
        "team" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The ID of the activity team definition."
        }, 
        "workItemId" : {
          "description" : "The Work Item ID associated with this activity effective team membership.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Aggregated Total" : {
      "description" : "Entity containing the necessary data for an aggregated total.", 
      "properties" : {
        "activity" : {
          "$ref" : "#/definitions/ObjectRef Entity"
        }, 
        "amount" : {
          "description" : "The amount of time of a worked shift.", 
          "type" : "number"
        }, 
        "amountCurrency" : {
          "$ref" : "#/definitions/Currency data object reference"
        }, 
        "amountType" : {
          "enum" : [ "HOUR", "DAY", "MONEY" ], 
          "type" : "string"
        }, 
        "applyDate" : {
          "description" : "The date to which the totals are applied when totals are derived from more than one day.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "approvableByManager" : {
          "description" : "A Boolean indicator of whether or not the aggregated total is approvable by the logged-in manager.", 
          "type" : "boolean"
        }, 
        "costCenter" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "Provides totals based on the cost center groupByType."
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the punch applies."
        }, 
        "endDateTime" : {
          "type" : "string"
        }, 
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "job" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the job object, which is a groupByType."
        }, 
        "jobTransfer" : {
          "description" : "A Boolean indicator of whether or not the totals object contains a job transfer.", 
          "type" : "boolean"
        }, 
        "laborCategory" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the labor category object, which is a groupByType."
        }, 
        "laborCategoryTransfer" : {
          "description" : "A Boolean indicator of whether or not the totals object contains a labor category.", 
          "type" : "boolean"
        }, 
        "location" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the GPS location object which applies to this punch. This indicates where the punch was actually made and is tied to Geofencing operations from mobile devices."
        }, 
        "managerApprovalNeeded" : {
          "description" : "A Boolean indicator of whether or not there is a total that has not been approved by a manager.", 
          "type" : "boolean"
        }, 
        "orgJob" : {
          "$ref" : "#/definitions/ObjectRef Entity"
        }, 
        "originalDate" : {
          "format" : "date", 
          "type" : "string"
        }, 
        "originalDurationInDays" : {
          "type" : "number"
        }, 
        "originalDurationInHours" : {
          "type" : "number"
        }, 
        "originalMoneyAmount" : {
          "type" : "number"
        }, 
        "originalMoneyAmountCurrency" : {
          "$ref" : "#/definitions/Currency data object reference"
        }, 
        "payCode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the payCode object, which is a groupByType."
        }, 
        "payPeriodNumber" : {
          "description" : "A number representing a pay period.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "payPeriodWeek" : {
          "description" : "A number representing a pay period week.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "position" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the position associated with an aggregated total."
        }, 
        "startDateTime" : {
          "type" : "string"
        }, 
        "timeItemId" : {
          "description" : "The ID of the time item.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "timeItemType" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the timeItemType object, which is a rollup type."
        }, 
        "wages" : {
          "description" : "The money amount calculated in totals as wages.", 
          "type" : "number"
        }, 
        "wagesCurrency" : {
          "$ref" : "#/definitions/Currency data object reference"
        }, 
        "workRule" : {
          "$ref" : "#/definitions/ObjectRef Entity"
        }, 
        "workWeekApplyDateTime" : {
          "description" : "The date and time for which the totals are applied in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss). This property is returned when the <code>forWorkWeek</code> request payload Boolean is 'true'.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Employee Context" : {
      "description" : "Entity describing an employee context object.", 
      "properties" : {
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the employee context applies."
        }, 
        "timezone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The employee's current timezone or the timezone in which a transfer was entered."
        }
      }, 
      "type" : "object"
    }, 
    "TotalContext" : {
      "description" : "Entity describing a total context object.", 
      "properties" : {
        "totalAggregationType" : {
          "description" : "null", 
          "type" : "string"
        }, 
        "totalGroupByType" : {
          "description" : "null", 
          "type" : "string"
        }, 
        "totalType" : {
          "description" : "null", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "TKJustification" : {
      "description" : "Entity describing justification for a missing time exception.", 
      "properties" : {
        "durationInHours" : {
          "description" : "The duration in hours of a justification.", 
          "format" : "double", 
          "readOnly" : true, 
          "type" : "number"
        }, 
        "endDateTime" : {
          "description" : "The end date and time of a justification in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "fromManager" : {
          "description" : "A Boolean indicator of whether or not a justification is from a manager.", 
          "readOnly" : true, 
          "type" : "boolean"
        }, 
        "id" : {
          "description" : "The ID of a justification.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "paycode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The paycode associated with a justification."
        }, 
        "requireManagerApproval" : {
          "description" : "A Boolean indicator of whether or not the paycode used for a justification requires a manager's approval.", 
          "type" : "boolean"
        }, 
        "startDateTime" : {
          "description" : "The start date and time of a justification in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "MissingTimeStatusModel" : {
      "description" : "Object describing the missing time status of an exception.", 
      "properties" : {
        "displayName" : {
          "description" : "The localized missing time status display name.", 
          "enum" : [ "1=Not Applicable,2=Pending,3=Employee Justified,4=Manager Justified" ], 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID of the missing time status ranging from 1 to 4.", 
          "enum" : [ 1, 2, 3, 4 ], 
          "format" : "int32", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "Schedule Exception" : {
      "description" : "Timekeeping Schedule Exception information.", 
      "properties" : {
        "id" : {
          "description" : "The ID of the schedule exception.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "payCode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the pay code associated with a schedule exception."
        }, 
        "schedulePunchDtm" : {
          "description" : "The date and time stamp for the punch associated with the schedule exception in ISO_LOCAL_DATE_TIME.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Transfer" : {
      "description" : "Entity containing information regarding a transfer.", 
      "properties" : {
        "laborAccountId" : {
          "description" : "The ID of the labor account associated with a transfer.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "orgJobId" : {
          "description" : "The ID of the organizational job associated with a transfer.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "systemGenerated" : {
          "description" : "A Boolean indicator of whether or not a transfer is system-generated.", 
          "type" : "boolean"
        }, 
        "transferString" : {
          "description" : "An ordered, semi-colon separated list of Labor Category Entries and Cost Center.", 
          "type" : "string"
        }, 
        "workRuleId" : {
          "description" : "The violated work rule which caused an exception associated with a transfer.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "CostCenter" : {
      "description" : "Model for an org map location for widgets.", 
      "properties" : {
        "costCenter" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The description of a cost center."
        }, 
        "referenceId" : {
          "description" : "The labor account ID associated with a cost center.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "LaborCategories" : {
      "description" : "Model for labor categories transfer.", 
      "properties" : {
        "entries" : {
          "description" : "Labor category entries.", 
          "items" : {
            "$ref" : "#/definitions/Labor Category Entry"
          }, 
          "type" : "array"
        }, 
        "laborString" : {
          "description" : "Labor account string.", 
          "type" : "string"
        }, 
        "referenceId" : {
          "description" : "The ID of the labor account.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "Currency data object reference" : {
      "description" : "Currency data object contains an amount value and currency code and either field should be able to uniquely identify an Object", 
      "properties" : {
        "amount" : {
          "description" : "Monetary value", 
          "format" : "double", 
          "type" : "number"
        }, 
        "currencyCode" : {
          "description" : "Associate currency ISO code", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "OvertimeSummary" : {
      "properties" : {
        "approvalsCount" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "denialsCount" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "hasComments" : {
          "type" : "boolean"
        }, 
        "hasPendingOvertime" : {
          "type" : "boolean"
        }, 
        "pendingCount" : {
          "format" : "int32", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "ApprovalSegment for overtime. Holds overtime review (a)information." : {
      "description" : "ApprovalSegment is overtime Review object containing approval/denial of overtime.", 
      "properties" : {
        "action" : {
          "description" : "Overtime review action (approve/deny) for the ApprovalSegment.", 
          "enum" : [ "approve", "deny" ], 
          "type" : "string"
        }, 
        "amount" : {
          "description" : "The total duration in seconds from start to end of the ApprovalSegment.", 
          "type" : "number"
        }, 
        "applyDate" : {
          "description" : "ApprovalSegment is counted towards this date.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "commentsAvailable" : {
          "description" : "A Boolean indicator of whether or not Comments were included in a created ApprovalSegment.", 
          "type" : "boolean"
        }, 
        "commentsNotes" : {
          "description" : "A reference to a list of Comments included during creation of an ApprovalSegment. This object can have multiple Comments with multiple Notes for each Comment.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Comment Note"
          }, 
          "type" : "array"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The employee information associated with an ApprovalSegment."
        }, 
        "endDateTime" : {
          "description" : "The end date and time for the ApprovalSegment.", 
          "type" : "string"
        }, 
        "reviewedDate" : {
          "description" : "The date when the overtime review action (approve/deny) occured.", 
          "type" : "string"
        }, 
        "reviewerName" : {
          "description" : "The user who took the overtime review action (approve/deny).", 
          "type" : "string"
        }, 
        "startDateTime" : {
          "description" : "The start date and time for the ApprovalSegment.", 
          "type" : "string"
        }
      }, 
      "required" : [ "action", "applyDate", "employee", "endDateTime", "startDateTime" ], 
      "type" : "object"
    }, 
    "The OvertimeSegment object contains information for a specific time window." : {
      "description" : "The OvertimeSegment object contains information for a specific time window.", 
      "properties" : {
        "amount" : {
          "description" : "The total duration in seconds from start to end for the current overtime segment.", 
          "type" : "number"
        }, 
        "applyDate" : {
          "description" : "The OvertimeSegment is counted towards this date.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "endDateTime" : {
          "description" : "The end date and time for an overtime segment in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "overtimeDetailSegments" : {
          "description" : "A list of overtime time windows. An overtime segment can be comprised of multiple adjacent overtime detail segments (actual time windows).", 
          "items" : {
            "$ref" : "#/definitions/OvertimeDetailSegment has information about a single overtime time window."
          }, 
          "type" : "array"
        }, 
        "overtimeStatus" : {
          "description" : "The overtime segment can be in a pending, approved, or denied status.", 
          "enum" : [ "pending", "approved", "denied" ], 
          "type" : "string"
        }, 
        "startDateTime" : {
          "description" : "The start date and time for an overtime segment in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "workItemId" : {
          "description" : "The Work Item Id associated with the OvertimeSegment.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Paycode Phantom Span" : {
      "description" : "Timekeeping phantom span information.", 
      "properties" : {
        "endDateTime" : {
          "description" : "The end date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "startDateTime" : {
          "description" : "The start date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "startTimePhantom" : {
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "ITransfer" : {
      "properties" : {
        "editable" : {
          "type" : "boolean"
        }, 
        "laborAccountId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "orgJobId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "systemGenerated" : {
          "type" : "boolean"
        }, 
        "transferString" : {
          "type" : "string"
        }, 
        "workRuleId" : {
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "PunchGeoLocation" : {
      "properties" : {
        "accuracy" : {
          "format" : "double", 
          "type" : "number"
        }, 
        "deviceId" : {
          "type" : "string"
        }, 
        "geoLocationData" : {
          "$ref" : "#/definitions/GeoLocationData"
        }, 
        "geoLocationInfo" : {
          "readOnly" : true, 
          "type" : "string"
        }, 
        "geofenceMethodId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "latitude" : {
          "format" : "double", 
          "type" : "number"
        }, 
        "locationId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "locationType" : {
          "enum" : [ "COARSE", "FINE" ], 
          "type" : "string"
        }, 
        "longitude" : {
          "format" : "double", 
          "type" : "number"
        }, 
        "outsideOfGeofence" : {
          "type" : "boolean"
        }, 
        "unverified" : {
          "type" : "boolean"
        }, 
        "updateTime" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Type Override" : {
      "description" : "Entity describing a rule override for a timecard.", 
      "properties" : {
        "associatedRuleId" : {
          "description" : "The ID of the associated rule.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "associatedRuleName" : {
          "description" : "The name of the associated rule.", 
          "type" : "string"
        }, 
        "description" : {
          "description" : "Description of the type override.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "Object Ref Id", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "qualifier" : {
          "description" : "Object Ref Unique qualifier", 
          "type" : "string"
        }, 
        "typeOverrideId" : {
          "description" : "The ID of the type override.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "SchedulingCommentNote" : {
      "description" : "Model describing the details of a scheduling comment and attached notes.", 
      "properties" : {
        "comment" : {
          "$ref" : "#/definitions/SchedulingComment", 
          "description" : "The name of the comment and attached notes."
        }, 
        "id" : {
          "description" : "The ID for the comment and attached notes.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "notes" : {
          "description" : "A list of notes that are attached to a comment.", 
          "items" : {
            "$ref" : "#/definitions/SchedulingNote"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "SchedulingObjectRef" : {
      "description" : "The HCA object reference object model.", 
      "properties" : {
        "id" : {
          "description" : "The ID associated with an object reference.", 
          "format" : "int64", 
          "readOnly" : true, 
          "type" : "integer"
        }, 
        "localizedQualifier" : {
          "description" : "The localized qualifier of the object reference. The value of this property is imported from the Setup Data component by means of an XLS file.", 
          "type" : "string"
        }, 
        "qualifier" : {
          "description" : "The qualifier associated with an object reference.", 
          "readOnly" : true, 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "SchedulingShiftRelation" : {
      "description" : "Model containing the informations of a reference in relation to a shift.", 
      "properties" : {
        "active" : {
          "description" : "Boolean flag indicating that the relation to the shift's source is active.", 
          "type" : "boolean"
        }, 
        "from" : {
          "$ref" : "#/definitions/SchedulingObjectRef"
        }, 
        "relationType" : {
          "description" : "Entity relation type.", 
          "type" : "string"
        }, 
        "targetRef" : {
          "$ref" : "#/definitions/SchedulingObjectRef", 
          "description" : "The ID for the relationship between the pay code edit and schedule."
        }, 
        "targetVersion" : {
          "description" : "The version of the source pay code edit.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "type" : {
          "description" : "The shift source type, such as pattern or schedule group.", 
          "enum" : [ "FROM_GROUPITEM_TO_ITEM", "FROM_PCE_TO_ORIGINAL_SHIFT", "FROM_PCE_TO_CURRENT_SHIFT", "FROM_PATTERNITEM_TO_ITEM", "FROM_SHIFTTEMPLATE_TO_SHIFT", "FROM_SCHEDULE_ITEM_TO_CALENDAR_DATE", "FROM_SCHEDULE_ITEM_TO_EXTERNAL_ID", "FROM_SHIFT_TO_SELF_SCHEDULE_REQUEST", "FROM_SHIFT_TO_OPEN_SHIFT_REQUEST", "FROM_SHIFT_TO_PREDICTIVE_SCHEDULING_TAG", "FROM_SHIFT_TO_COVER_REQUEST_INITIATOR", "FROM_SHIFT_TO_COVER_REQUEST_RECIPIENT", "FROM_SHIFT_TO_SWAP_SHIFT_REQUEST", "FROM_PARTIAL_SHIFT_TO_ORIGINAL_SHIFT", "FROM_OSR_PARTIAL_SHIFT_TO_ORIGINAL_SHIFT", "FROM_COVER_PARTIAL_SHIFT_TO_ORIGINAL_SHIFT", "FROM_ITEM_TO_ANCESTOR_SHIFT" ], 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "SchedulingShiftSegment" : {
      "description" : "Model containing the informations of a shift segment.", 
      "properties" : {
        "costCenter" : {
          "$ref" : "#/definitions/SchedulingCostCenterReference", 
          "description" : "A reference to the cost center assigned to this shift segment."
        }, 
        "coverageSpans" : {
          "items" : {
            "$ref" : "#/definitions/CoverageSpans"
          }, 
          "type" : "array"
        }, 
        "endDateTime" : {
          "description" : "The inclusive end date and  time of the shift segment in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID for the shift segment.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "laborCategories" : {
          "$ref" : "#/definitions/SchedulingLaborCategories", 
          "description" : "A reference to the labor category of this shift segment."
        }, 
        "orgJobProperties" : {
          "$ref" : "#/definitions/OrgJobProperties", 
          "description" : "Shift segment properties, e.g. segment color."
        }, 
        "orgJobRef" : {
          "$ref" : "#/definitions/SchedulingObjectRef", 
          "description" : "A reference to the business structure job of this shift segment."
        }, 
        "primaryCostCenter" : {
          "$ref" : "#/definitions/SchedulingCostCenterReference", 
          "description" : "A reference to the primary cost center assigned to this shift segment."
        }, 
        "primaryLaborCategories" : {
          "$ref" : "#/definitions/SchedulingLaborCategories", 
          "description" : "A reference to the primary payer cost center of the employee assigned to this shift segment."
        }, 
        "primaryOrgJobRef" : {
          "$ref" : "#/definitions/SchedulingObjectRef", 
          "description" : "A reference to the primary business structure job of the employee assigned to this shift segment."
        }, 
        "primaryWorkruleRef" : {
          "$ref" : "#/definitions/SchedulingObjectRef", 
          "description" : "A reference to the primary work rule of the employee assigned to this shift segment."
        }, 
        "segmentTags" : {
          "description" : "A collection of the segment tags of this shift segment.", 
          "items" : {
            "$ref" : "#/definitions/SchedulingShiftSegmentTag"
          }, 
          "type" : "array"
        }, 
        "segmentTypeRef" : {
          "$ref" : "#/definitions/SchedulingObjectRef", 
          "description" : "The type of shift segment (such as REGULAR_SEGMENT, TRANSFER_SEGMENT, BREAK_SEGMENT)"
        }, 
        "shiftSegmentDetailTypeId" : {
          "$ref" : "#/definitions/SchedulingObjectRef", 
          "description" : "A reference to the details of this shift segment."
        }, 
        "skillCertProfileRefs" : {
          "description" : "A list of references to the skill certifications required for this shift segment.", 
          "items" : {
            "$ref" : "#/definitions/SchedulingObjectRef"
          }, 
          "type" : "array"
        }, 
        "startDateTime" : {
          "description" : "The inclusive start date and time of the shift segment in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "type" : "string"
        }, 
        "transferCostCenter" : {
          "description" : "A Boolean indicator of whether or not there is a transfer cost center for this shift segment.", 
          "type" : "boolean"
        }, 
        "transferLaborCategories" : {
          "description" : "A Boolean indicator of whether or not a the labor category is a transfer.", 
          "type" : "boolean"
        }, 
        "transferOrgJob" : {
          "description" : "A Boolean indicator of whether or not the business structure job is a transfer.", 
          "type" : "boolean"
        }, 
        "transferString" : {
          "description" : "An ordered, semi-colon separated list of Labor Category Entries and Cost Center.", 
          "type" : "string"
        }, 
        "transferWorkrule" : {
          "description" : "A Boolean indicator of whether or not the work rule is a transfer.", 
          "type" : "boolean"
        }, 
        "userEnteredCostCenter" : {
          "description" : "A Boolean indicator of whether or not a cost center was entered by the user for this shift segment.", 
          "type" : "boolean"
        }, 
        "userEnteredLaborCategories" : {
          "$ref" : "#/definitions/SchedulingLaborCategories", 
          "description" : "A reference to the labor category entered by the user for this shift segment."
        }, 
        "userEnteredOrgJob" : {
          "description" : "A Boolean indicator of whether or not a business structure job for this shift segment was entered by the user.", 
          "type" : "boolean"
        }, 
        "userEnteredWorkrule" : {
          "description" : "A Boolean indicator of whether or not a work rule for this shift segment was entered by the user.", 
          "type" : "boolean"
        }, 
        "workruleRef" : {
          "$ref" : "#/definitions/SchedulingObjectRef", 
          "description" : "A reference to the work rule entered by the user for this shift segment."
        }
      }, 
      "type" : "object"
    }, 
    "KindOfTimeSegmentDTO" : {
      "properties" : {
        "applyDate" : {
          "format" : "date", 
          "type" : "string"
        }, 
        "durationInSeconds" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "elementType" : {
          "enum" : [ "PUNCH", "PAYCODEEDIT", "LEAVEEDIT", "HOURSWORKED", "NAMEDDURATION", "MOVEAMOUNT", "ONCALL", "INTERNAL_PAYOUT", "CORRECTIONS", "PENDING_CORRECTION_WORKITEM", "HOURSANDCOST", "PROJECTED_HOURS_AND_COST", "SCHEDULE_HOURS_AND_COST", "TOTAL", "PROJECTED_TOTAL", "SCHEDULE_TOTAL", "WORKSHIFTSEGMENT", "PROCESSEDSEGMENT", "KINDOFTIMESEGMENT", "EXCEPTION", "EXCEPTION_COMMENTS", "WORKITEM", "ACCRUALEDIT", "WORKITEMTOSCHEDULEITEM", "ACCRUALBALANCE", "ACCRUALTRANSACTION", "ENCUMBEREDACCRUALBALANCE", "WORKHOLIDAY", "SIGNOFF", "CARRYFORWARD", "LEAVEEDITSEGMENT", "PAYCODETOTAL", "ACCRUAL_REPORTING_PERIOD", "PERSONALITY", "PAYCODEEDIT_COMMENTS", "HOURSWORKED_COMMENTS", "ANNOTATION_COMMENTS", "MOVEAMOUNT_COMMENTS", "PROJECTED_PAYCODETOTAL", "SCHEDULED_PAYCODETOTAL", "ACCRUALBALANCE_NOSQL", "ENCUMBEREDACCRUALBALANCE_NOSQL", "ACCRUAL_REPORTING_PERIOD_NOSQL", "TIMECARDANNOTATION", "ACTUALKINDSOFTIME", "EMPLOYEEAPPROVAL", "MANAGERAPPROVAL", "MAMANAGERAPPROVAL", "ACCRUAL_SUSPENSION", "HISTORICALCORRECTION_COMMENTS", "ACTIVITY_SEGMENT", "ACTIVITY_PROCESSED_SEGMENT", "ACTIVITY_EFFICIENCY", "ACTIVITY_SHIFT", "ACTIVITY_TOTAL", "ACTIVITY_SUMMARY", "ACTIVITY_TEAM_MEMBERSHIP", "ACTIVITY_EFFECTIVE_TEAM_MEMBERSHIP", "ACTIVITY_TEAM_MEMBERSHIP_BUNDLE", "TK_SCHEDULE_SHIFT", "REMOVE_ALL_APPROVAL", "MAMGR_REMOVE_ALL_APPROVAL", "ACCRUAL_PAYOUT" ], 
          "type" : "string"
        }, 
        "employeeId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "endDateTime" : {
          "type" : "string"
        }, 
        "endTimezoneId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "inProgress" : {
          "type" : "boolean"
        }, 
        "itemId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "laborCategoryId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "orderNumber" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "orgJobId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "overtimeApprovalType" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "primaryLaborCategoryId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "primaryOrgJobId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "primaryWorkRuleId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "projected" : {
          "type" : "boolean"
        }, 
        "ruleAssignments" : {
          "$ref" : "#/definitions/KindOfTimeRuleAssignments"
        }, 
        "segmentType" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "startDateTime" : {
          "type" : "string"
        }, 
        "startTimezoneId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "transferLaborCategory" : {
          "type" : "boolean"
        }, 
        "transferOrgJob" : {
          "type" : "boolean"
        }, 
        "transferWorkRule" : {
          "type" : "boolean"
        }, 
        "unqiuekey" : {
          "type" : "string"
        }, 
        "userEnteredLaborCategory" : {
          "type" : "boolean"
        }, 
        "userEnteredLaborCategoryId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "userEnteredOrgJob" : {
          "type" : "boolean"
        }, 
        "userEnteredWorkRule" : {
          "type" : "boolean"
        }, 
        "workRuleId" : {
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Worked Span" : {
      "description" : "Entity describing a span of worked hours--projected, scheduled, and actual.", 
      "properties" : {
        "approvableByManager" : {
          "description" : "A Boolean indicator of whether or not the worked span item is approvable by the logged-in manager.", 
          "type" : "boolean"
        }, 
        "costCenter" : {
          "$ref" : "#/definitions/CostCenter", 
          "description" : "A reference to the CostCenter object which contains the cost center information and labor account ID for each worked span."
        }, 
        "endDateTime" : {
          "description" : "The end date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "endPunch" : {
          "$ref" : "#/definitions/Timecard Punch", 
          "description" : "The out punch of a worked span object."
        }, 
        "endTimezone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The end timezone where the worked span was entered. Normally, this is the default or home timezone for the employee, but the worked span can include a different timezone as necessary."
        }, 
        "id" : {
          "description" : "The ID of the parent worked shift.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "itemId" : {
          "description" : "The ID of the parent worked shift.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "laborCategories" : {
          "$ref" : "#/definitions/LaborCategories", 
          "description" : "A reference to the LaborCategories object which contains a list of labor category entries and each entry's associated labor category."
        }, 
        "orderNumber" : {
          "description" : "An order number associated with processing work orders that can be configured in a pay rule.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "orgJob" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "Provides the organization job object to which the worked span applies. Normally, this is the default or home job for the employee."
        }, 
        "primaryOrgJob" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the default or home job for the employee."
        }, 
        "primaryWorkRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the default or home work rule for the employee."
        }, 
        "projected" : {
          "type" : "boolean"
        }, 
        "roundedEndDateTime" : {
          "description" : "The rounded end date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "roundedStartDateTime" : {
          "description" : "The rounded start date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "scheduledOrgJob" : {
          "type" : "boolean"
        }, 
        "scheduledWorkRule" : {
          "type" : "boolean"
        }, 
        "shiftTotal" : {
          "description" : "Total number of hours for a worked span.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "spanId" : {
          "description" : "The ID of the worked span.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "startDateTime" : {
          "description" : "The start date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "startPunch" : {
          "$ref" : "#/definitions/Timecard Punch", 
          "description" : "The in punch of a worked span object."
        }, 
        "startTimezone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "Start timezone where the worked span was entered. Normally, this is the default or home timezone for the employee, but the worked span can include a different timezone as necessary."
        }, 
        "transferOrgJob" : {
          "type" : "boolean"
        }, 
        "transferWorkRule" : {
          "type" : "boolean"
        }, 
        "userEnteredOrgJob" : {
          "type" : "boolean"
        }, 
        "userEnteredWorkRule" : {
          "type" : "boolean"
        }, 
        "workRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the work rule to be applied during calculation of totals resulting from the worked span."
        }
      }, 
      "type" : "object"
    }, 
    "Timecard ActivitySegment Changes" : {
      "description" : "Entity describing changes to activity segments.", 
      "properties" : {
        "added" : {
          "description" : "A reference to added Timecard move amount objects.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Activity Segment"
          }, 
          "type" : "array"
        }, 
        "removed" : {
          "description" : "A reference to removed Timecard move amount objects.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Activity Segment"
          }, 
          "type" : "array"
        }, 
        "updated" : {
          "description" : "A reference to updated Timecard move amount objects. <strong>Note:</strong> The <code>updated</code> property is not supported for move amounts. Instead, use <code>removed</code> and <code>added</code>.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Activity Segment"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard ActivityTeamMembership Changes" : {
      "description" : "Entity describing changes to an activity team membership.", 
      "properties" : {
        "added" : {
          "description" : "A reference to added Timecard move amount objects.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Activity Team Membership"
          }, 
          "type" : "array"
        }, 
        "removed" : {
          "description" : "A reference to removed Timecard move amount objects.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Activity Team Membership"
          }, 
          "type" : "array"
        }, 
        "updated" : {
          "description" : "A reference to updated Timecard move amount objects. <strong>Note:</strong> The <code>updated</code> property is not supported for move amounts. Instead, use <code>removed</code> and <code>added</code>.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Activity Team Membership"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard BaseTransfer" : {
      "description" : "Entity containing necessary data for a transfer list.", 
      "properties" : {
        "orgJobId" : {
          "description" : "The organizational job ID of the logged-in user.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "transferString" : {
          "description" : "An ordered, semi-colon separated list of Labor Category Entries and Cost Center.", 
          "type" : "string"
        }, 
        "workRuleId" : {
          "description" : "The work rule ID of the logged-in user.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Calculate Totals Request" : {
      "description" : "Entity containing necessary data for the calculation of totals with respect to historical corrections.", 
      "properties" : {
        "commentsNotes" : {
          "description" : "A reference to a list of Comments. This object can have multiple Comments with multiple Notes for each Comment.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Comment Note"
          }, 
          "type" : "array"
        }, 
        "correctionOverride" : {
          "$ref" : "#/definitions/Timecard Historical Correction Override", 
          "description" : "Specifies historical correction attributes that override default behaviors."
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the historical correction applies."
        }, 
        "processingDate" : {
          "description" : "Processing date in ISO_LOCAL_DATE format (YYYY-MM-DD). This is an optional date used for the calculation of totals.", 
          "format" : "date", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Enable Edits Request" : {
      "description" : "Entity containing necessary data for the Enable Edits with respect to historical corrections.", 
      "properties" : {
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the Employee object."
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Exception Changes" : {
      "description" : "Entity describing an exception changes object.", 
      "properties" : {
        "added" : {
          "description" : "A reference to added Timecard move amount objects.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Exception for update"
          }, 
          "type" : "array"
        }, 
        "removed" : {
          "description" : "A reference to removed Timecard move amount objects.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Exception for update"
          }, 
          "type" : "array"
        }, 
        "updated" : {
          "description" : "A reference to updated Timecard move amount objects. <strong>Note:</strong> The <code>updated</code> property is not supported for move amounts. Instead, use <code>removed</code> and <code>added</code>.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Exception for update"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Historical Correction Changes" : {
      "description" : "Entity describing a group of historical correction changes.", 
      "properties" : {
        "updated" : {
          "description" : "Updated Historical Correction entities.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Historical Correction"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Hours Worked Changes" : {
      "description" : "Entity describing an Hours Worked Changes object.", 
      "properties" : {
        "added" : {
          "description" : "A reference to added Timecard move amount objects.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Hours Worked"
          }, 
          "type" : "array"
        }, 
        "removed" : {
          "description" : "A reference to removed Timecard move amount objects.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Hours Worked"
          }, 
          "type" : "array"
        }, 
        "updated" : {
          "description" : "A reference to updated Timecard move amount objects. <strong>Note:</strong> The <code>updated</code> property is not supported for move amounts. Instead, use <code>removed</code> and <code>added</code>.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Hours Worked"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Move Amount Changes" : {
      "description" : "The Timecard Move Amount Changes model.", 
      "properties" : {
        "added" : {
          "description" : "A reference to added Timecard move amount objects.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Move Amount"
          }, 
          "type" : "array"
        }, 
        "removed" : {
          "description" : "A reference to removed Timecard move amount objects.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Move Amount"
          }, 
          "type" : "array"
        }, 
        "updated" : {
          "description" : "A reference to updated Timecard move amount objects. <strong>Note:</strong> The <code>updated</code> property is not supported for move amounts. Instead, use <code>removed</code> and <code>added</code>.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Move Amount"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Overtime Approval Changes" : {
      "description" : "Entity describing changes to overtime review.", 
      "properties" : {
        "added" : {
          "description" : "A reference to added Timecard move amount objects.", 
          "items" : {
            "$ref" : "#/definitions/ApprovalSegment for overtime. Holds overtime review (a)information."
          }, 
          "type" : "array"
        }, 
        "removed" : {
          "description" : "A reference to removed Timecard move amount objects.", 
          "items" : {
            "$ref" : "#/definitions/ApprovalSegment for overtime. Holds overtime review (a)information."
          }, 
          "type" : "array"
        }, 
        "updated" : {
          "description" : "A reference to updated Timecard move amount objects. <strong>Note:</strong> The <code>updated</code> property is not supported for move amounts. Instead, use <code>removed</code> and <code>added</code>.", 
          "items" : {
            "$ref" : "#/definitions/ApprovalSegment for overtime. Holds overtime review (a)information."
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Pay Code Edit Changes" : {
      "description" : "Entity describing a group of paycode edit changes.", 
      "properties" : {
        "added" : {
          "description" : "A reference to added Timecard move amount objects.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Pay Code Edit"
          }, 
          "type" : "array"
        }, 
        "removed" : {
          "description" : "A reference to removed Timecard move amount objects.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Pay Code Edit"
          }, 
          "type" : "array"
        }, 
        "updated" : {
          "description" : "A reference to updated Timecard move amount objects. <strong>Note:</strong> The <code>updated</code> property is not supported for move amounts. Instead, use <code>removed</code> and <code>added</code>.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Pay Code Edit"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Punch Changes" : {
      "description" : "Entity defining a Punch Changes object.", 
      "properties" : {
        "added" : {
          "description" : "A reference to added Timecard move amount objects.", 
          "items" : {
            "$ref" : "#/definitions/Input Punch"
          }, 
          "type" : "array"
        }, 
        "removed" : {
          "description" : "A reference to removed Timecard move amount objects.", 
          "items" : {
            "$ref" : "#/definitions/Input Punch"
          }, 
          "type" : "array"
        }, 
        "updated" : {
          "description" : "A reference to updated Timecard move amount objects. <strong>Note:</strong> The <code>updated</code> property is not supported for move amounts. Instead, use <code>removed</code> and <code>added</code>.", 
          "items" : {
            "$ref" : "#/definitions/Input Punch"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard schedule shift Changes" : {
      "description" : "The Timecard schedule shift changes model.", 
      "properties" : {
        "added" : {
          "description" : "A reference to added Timecard move amount objects.", 
          "items" : {
            "$ref" : "#/definitions/SchedulingShift"
          }, 
          "type" : "array"
        }, 
        "removed" : {
          "description" : "A reference to removed Timecard move amount objects.", 
          "items" : {
            "$ref" : "#/definitions/SchedulingShift"
          }, 
          "type" : "array"
        }, 
        "updated" : {
          "description" : "A reference to updated Timecard move amount objects. <strong>Note:</strong> The <code>updated</code> property is not supported for move amounts. Instead, use <code>removed</code> and <code>added</code>.", 
          "items" : {
            "$ref" : "#/definitions/SchedulingShift"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "TKTimeCardDateRange" : {
      "description" : "The date range used in the retrieval or update of a timecard.", 
      "properties" : {
        "endDate" : {
          "description" : "The exclusive end date for the required schedule data date range. Exclusive with symbolicPeriodRef.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "startDate" : {
          "description" : "The inclusive starting date for the required schedule data date range. Exclusive with symbolicPeriodRef.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "symbolicPeriod" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the symbolic identifier that represents a timeframe or a span of time for the schedule data date range. Exclusive with startDate and endDate."
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingExceptionOptions" : {
      "description" : "Entity defining all possible criteria in which timecard request exceptions can be filtered.", 
      "properties" : {
        "includeJustifications" : {
          "description" : "A Boolean indicator of whether or not to include exceptions containing justifications.", 
          "type" : "boolean"
        }, 
        "includeJustifiedTimes" : {
          "description" : "A Boolean indicator of whether or not to include exceptions containing justified times.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingObjectRefList" : {
      "description" : "Model describing a collection of object references.", 
      "properties" : {
        "ids" : {
          "description" : "The list of references by ID.", 
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "qualifiers" : {
          "description" : "The qualifier of the object reference, such as name.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "refs" : {
          "description" : "The object references.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Entity that contains Comment information" : {
      "description" : "Comment", 
      "properties" : {
        "categories" : {
          "description" : "A list of the categories assigned to a Comment. At least one category is required when creating a new Comment.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef"
          }, 
          "type" : "array"
        }, 
        "id" : {
          "description" : "The ID of a Comment.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "isActive" : {
          "description" : "A Boolean indicator of whether or not a Comment is active.", 
          "type" : "boolean"
        }, 
        "name" : {
          "description" : "The name of a Comment.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Entity that contains Note information" : {
      "description" : "Note", 
      "properties" : {
        "dataSource" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "A reference to the data source of the Note, usually the person who entered the Note."
        }, 
        "text" : {
          "description" : "The plaintext entered for a Note.", 
          "type" : "string"
        }, 
        "timestamp" : {
          "description" : "The timestamp associated with a Note.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Throwable" : {
      "properties" : {
        "cause" : {
          "$ref" : "#/definitions/Throwable"
        }, 
        "localizedMessage" : {
          "type" : "string"
        }, 
        "message" : {
          "type" : "string"
        }, 
        "stackTrace" : {
          "items" : {
            "$ref" : "#/definitions/StackTraceElement"
          }, 
          "type" : "array"
        }, 
        "suppressed" : {
          "items" : {
            "$ref" : "#/definitions/Throwable"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Locale" : {
      "properties" : {
        "country" : {
          "type" : "string"
        }, 
        "displayCountry" : {
          "type" : "string"
        }, 
        "displayLanguage" : {
          "type" : "string"
        }, 
        "displayName" : {
          "type" : "string"
        }, 
        "displayScript" : {
          "type" : "string"
        }, 
        "displayVariant" : {
          "type" : "string"
        }, 
        "extensionKeys" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "iso3Country" : {
          "type" : "string"
        }, 
        "iso3Language" : {
          "type" : "string"
        }, 
        "language" : {
          "type" : "string"
        }, 
        "script" : {
          "type" : "string"
        }, 
        "unicodeLocaleAttributes" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "unicodeLocaleKeys" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "variant" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "StackTraceElement" : {
      "properties" : {
        "className" : {
          "type" : "string"
        }, 
        "fileName" : {
          "type" : "string"
        }, 
        "lineNumber" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "methodName" : {
          "type" : "string"
        }, 
        "nativeMethod" : {
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "TimeCardDataWhereEmployee" : {
      "description" : "Entity containing necessary data for the Timecard Data Where Employee context.", 
      "properties" : {
        "dateRange" : {
          "$ref" : "#/definitions/TimeCardDataWhereDateRange", 
          "description" : "Entity containing necessary data about date range for Timecard Data, start date with end date or symbolic indentifier."
        }, 
        "employees" : {
          "$ref" : "#/definitions/TimekeepingObjectRefList", 
          "description" : "A list of references for the employees object."
        }, 
        "filterByAnchorDate" : {
          "description" : "A boolean indicator of whether or not to filter the Accrual Summary by the anchor date when using API request Accrual Summary, the filterByAnchorDate default value is true.", 
          "type" : "boolean"
        }, 
        "hyperFindRef" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the hyperFind identifier that represents a list of references for the employees object."
        }
      }, 
      "type" : "object"
    }, 
    "AccrualCode" : {
      "properties" : {
        "allowEdit" : {
          "type" : "boolean"
        }, 
        "hoursPerDay" : {
          "type" : "number"
        }, 
        "hoursPerDayInSeconds" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "isTrackingAccrual" : {
          "type" : "boolean"
        }, 
        "name" : {
          "type" : "string"
        }, 
        "shortName" : {
          "type" : "string"
        }, 
        "typeId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "typeName" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "AccrualDailySummaryData" : {
      "description" : "Entity containing necessary data for Accrual Daily Summary Data.", 
      "properties" : {
        "availableBalanceDays" : {
          "description" : "The available balance (in days) of the accrual daily summary data.", 
          "type" : "number"
        }, 
        "availableBalanceHours" : {
          "description" : "The available balance (in hours) of the accrual daily summary data.", 
          "type" : "number"
        }, 
        "availableBalanceMoneyAmount" : {
          "description" : "The available balance (as a decimal value representing money) of the accrual daily summary data.", 
          "type" : "number"
        }, 
        "availableBalanceMoneyAmountCurrency" : {
          "$ref" : "#/definitions/Currency data object reference", 
          "description" : "A reference to the currency object that contains a currency code along with a money amount that represents the available balance."
        }, 
        "balanceDate" : {
          "description" : "The date and time associated with the accrual daily summary data.", 
          "type" : "string"
        }, 
        "currentBalance" : {
          "$ref" : "#/definitions/AccrualBalanceData", 
          "description" : "The current balance (as a decimal value representing money) of the accrual daily summary data."
        }, 
        "earnedToDateDays" : {
          "description" : "The earned to date (in days) of the accrual daily summary data.", 
          "type" : "number"
        }, 
        "earnedToDateHours" : {
          "description" : "The earned to date (in hours) of the accrual daily summary data.", 
          "type" : "number"
        }, 
        "earnedToDateMoneyAmount" : {
          "description" : "The earned to date (as a decimal value representing money) of the accrual daily summary data.", 
          "type" : "number"
        }, 
        "earnedToDateMoneyAmountCurrency" : {
          "$ref" : "#/definitions/Currency data object reference", 
          "description" : "A reference to the currency object that contains a currency code along with a money amount that represents the amount earned to-date."
        }, 
        "pendingGrantDays" : {
          "description" : "The pending grant (in days) of the accrual daily summary data.", 
          "type" : "number"
        }, 
        "pendingGrantHours" : {
          "description" : "The pending grant (in hours) of the accrual daily summary data.", 
          "type" : "number"
        }, 
        "pendingGrantMoneyAmount" : {
          "description" : "The pending grant (as a decimal value representing money) of the accrual daily summary data.", 
          "type" : "number"
        }, 
        "pendingGrantMoneyAmountCurrency" : {
          "$ref" : "#/definitions/Currency data object reference", 
          "description" : "A reference to the currency object that contains a currency code along with a money amount that represents the pending grant."
        }, 
        "plannedTakingDays" : {
          "description" : "The planned taking (in days) of the accrual daily summary data.", 
          "type" : "number"
        }, 
        "plannedTakingHours" : {
          "description" : "The planned taking (in hours) of the accrual daily summary data.", 
          "type" : "number"
        }, 
        "plannedTakingMoneyAmount" : {
          "description" : "The planned taking (as a decimal value representing money) of the accrual daily summary data.", 
          "type" : "number"
        }, 
        "plannedTakingMoneyAmountCurrency" : {
          "$ref" : "#/definitions/Currency data object reference", 
          "description" : "A reference to the currency object that contains a currency code along with a money amount that represents the planned taking."
        }, 
        "reportingPeriod" : {
          "description" : "The reporting period of the accrual daily summary data.", 
          "type" : "string"
        }, 
        "takingToDateDays" : {
          "description" : "The taking to date (in days) of the accrual daily summary data.", 
          "type" : "number"
        }, 
        "takingToDateHours" : {
          "description" : "The taking to date (in hours) of the accrual daily summary data.", 
          "type" : "number"
        }, 
        "takingToDateMoneyAmount" : {
          "description" : "The taking to date (as a decimal value representing money) of the accrual daily summary data.", 
          "type" : "number"
        }, 
        "takingToDateMoneyAmountCurrency" : {
          "$ref" : "#/definitions/Currency data object reference", 
          "description" : "A reference to the currency object that contains a currency code along with a money amount that represents the taking-to-date amount."
        }
      }, 
      "type" : "object"
    }, 
    "AccrualReportingPeriodSummaryData" : {
      "description" : "Entity containing necessary data for Accrual Reporting Period Summary Data.", 
      "properties" : {
        "endingBalance" : {
          "$ref" : "#/definitions/AccrualBalanceData", 
          "description" : "The ending balance of the accrual reporting period summary data."
        }, 
        "openingBalance" : {
          "$ref" : "#/definitions/AccrualBalanceData", 
          "description" : "The opening balance of the accrual reporting period summary data."
        }, 
        "priorEndingBalance" : {
          "$ref" : "#/definitions/AccrualBalanceData", 
          "description" : "The prior ending balance of the accrual reporting period summary data."
        }, 
        "reportingPeriodSpan" : {
          "description" : "The reporting period span of the accrual reporting period summary data.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "AccrualBalanceData" : {
      "description" : "Entity containing necessary data for Accrual Balance Data.", 
      "properties" : {
        "balanceDate" : {
          "description" : "The date and time associated with the accrual balance data.", 
          "type" : "string"
        }, 
        "probationDaysAmount" : {
          "description" : "The number of probation days.", 
          "type" : "number"
        }, 
        "probationHoursAmount" : {
          "description" : "The probation duration (in hours) of the accrual balance data.", 
          "type" : "number"
        }, 
        "probationMoneyAmount" : {
          "description" : "The probation money amount of the accrual balance data.", 
          "type" : "number"
        }, 
        "probationMoneyAmountCurrency" : {
          "$ref" : "#/definitions/Currency data object reference", 
          "description" : "A reference to the currency object that contains a currency code along with a money amount that represents the probation amount."
        }, 
        "vestedDaysAmount" : {
          "description" : "The vested duration (in days) of the accrual balance data.", 
          "type" : "number"
        }, 
        "vestedHoursAmount" : {
          "description" : "The vested duration (in hours) of the accrual balance data.", 
          "type" : "number"
        }, 
        "vestedMoneyAmount" : {
          "description" : "The vested money amount of the accrual balance data.", 
          "type" : "number"
        }, 
        "vestedMoneyAmountCurrency" : {
          "$ref" : "#/definitions/Currency data object reference", 
          "description" : "A reference to the currency object that contains a currency code along with a money amount that represents the vested amount."
        }
      }, 
      "type" : "object"
    }, 
    "PayCode" : {
      "properties" : {
        "addToTimecardTotal" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "adjustratebymultsw" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "amountType" : {
          "enum" : [ "HOUR", "DAY", "MONEY" ], 
          "type" : "string"
        }, 
        "associatedDurationPaycodeId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "checkAvailability" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "codeNumber" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "combined" : {
          "type" : "boolean"
        }, 
        "contribstowgtavgsw" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "editCntToOt" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "editcnttocdotSw" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "effectiveDate" : {
          "format" : "date", 
          "type" : "string"
        }, 
        "excusedAbsence" : {
          "type" : "boolean"
        }, 
        "holShiftRuleId" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "isConfiguredForAutoResolve" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "isdayweightedavgsw" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "ivrAlias" : {
          "type" : "string"
        }, 
        "justifyAutoResolveExc" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "mappedPayCodeCategories" : {
          "items" : {
            "$ref" : "#/definitions/MappedPayCodeCategory"
          }, 
          "type" : "array"
        }, 
        "mappedPayCodeItems" : {
          "items" : {
            "$ref" : "#/definitions/MappedPayCodeItem"
          }, 
          "type" : "array"
        }, 
        "money" : {
          "type" : "boolean"
        }, 
        "name" : {
          "type" : "string"
        }, 
        "payCodeTags" : {
          "items" : {
            "$ref" : "#/definitions/PayCodeTag"
          }, 
          "type" : "array"
        }, 
        "payrollOnly" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "persistPceSw" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "requiresMgrApproval" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "scheduleHoursType" : {
          "enum" : [ "PRODUCTIVE", "NON_PRODUCTIVE", "ADMINISTRATIVE", "STATUTORY", "DEMONSTRATIVE" ], 
          "type" : "string"
        }, 
        "scheduleHoursTypeId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "scheduleHoursTypeName" : {
          "type" : "string"
        }, 
        "segmentTagId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "segmentTagName" : {
          "type" : "string"
        }, 
        "selectedPayCodeIds" : {
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array"
        }, 
        "separateShiftSw" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "shortName" : {
          "type" : "string"
        }, 
        "timekeepingOnly" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "totals" : {
          "type" : "boolean"
        }, 
        "type" : {
          "type" : "string"
        }, 
        "unjustifyAutoResolveExc" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "usehighrate" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "useweightedavgrtsw" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "version" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "visibleToReports" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "visibleToTCSched" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "visibleToUser" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "wageAddition" : {
          "format" : "double", 
          "type" : "number"
        }, 
        "wageMultiplier" : {
          "format" : "double", 
          "type" : "number"
        }, 
        "workRuleId" : {
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "ApprovingManagersDataviewFields" : {
      "properties" : {
        "actualTotalApprovalStatus" : {
          "type" : "boolean"
        }, 
        "actualTotalApprovedManagers" : {
          "type" : "string"
        }, 
        "approvingManagerIds" : {
          "type" : "string"
        }, 
        "approvingManagerNames" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Comment" : {
      "description" : "Information necessary for using Comments.", 
      "properties" : {
        "categories" : {
          "description" : "A list of the categories assigned to a Comment. At least one category is required when creating a new Comment.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }, 
        "id" : {
          "description" : "The ID of a Comment.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of a Comment.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Note" : {
      "description" : "Entity describing a Note.", 
      "properties" : {
        "dataSourceDisplayName" : {
          "description" : "A string identifier that describes the data source, if one exists. Normally, this indicates that the context object came from a different source, such as a clock or device or an external data source import or interface.", 
          "type" : "string"
        }, 
        "dataSourceId" : {
          "description" : "The ID of the data source, if one exists. Normally, this indicates that the context object came from a different source, such as a clock, device, or an external data source such as an import or interface.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "text" : {
          "description" : "The plaintext entered for a Note.", 
          "type" : "string"
        }, 
        "timestamp" : {
          "description" : "The timestamp associated with a Note.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Activity Processed Segment" : {
      "description" : "Entity describing an Activity Processed Segment for an employee.", 
      "properties" : {
        "accepted" : {
          "description" : "A Boolean indicator of whether or not the segment is accepted.", 
          "type" : "boolean"
        }, 
        "activity" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to an activity."
        }, 
        "activityId" : {
          "description" : "The ID of an activity.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "activitySegmentId" : {
          "description" : "A reference to an activity segment.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "activityTeam" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The activity team definition."
        }, 
        "activityTeamSegmentId" : {
          "description" : "A reference to an activity team segment.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "allocatedSeconds" : {
          "description" : "The number of seconds charged to the work processed segment.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "applyDate" : {
          "description" : "The apply date for an activity processed segment date range in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "approvedByEmployee" : {
          "description" : "A Boolean indicator whether or not the segment was approved by employee.", 
          "type" : "boolean"
        }, 
        "approvedByManager" : {
          "description" : "A Boolean indicator of whether or not an activity processed segment has been approved by a manager.", 
          "type" : "boolean"
        }, 
        "concurrent" : {
          "description" : "A Boolean indicator of whether or not an activity is concurrent.", 
          "type" : "boolean"
        }, 
        "dayDivideState" : {
          "description" : "The day divide indicator. Valid values include 0 - No Day Divide, 1 - Before Day Divide, 2 - After Day Divide, and -1 - Undetermined.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "deductedSeconds" : {
          "description" : "The number of seconds deducted from the span for unpaid meals and breaks.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "durationInSeconds" : {
          "description" : "The duration in seconds of the activity processed segment.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "endDateTime" : {
          "description" : "The date and time of the end of the activity in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).", 
          "type" : "string"
        }, 
        "endTimezone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The time zone of the end of the activity."
        }, 
        "eventTypeId" : {
          "description" : "The ID of an event type.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "id" : {
          "description" : "The ID of an activity processed segment.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "moneyAmount" : {
          "description" : "The amount (as a decimal value representing money) of the activity processed segment.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "orderNumber" : {
          "description" : "The order number associated with an activity segment.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "orphan" : {
          "description" : "A Boolean indicator of whether or not the activity is an orphan.", 
          "type" : "boolean"
        }, 
        "overageDurationSeconds" : {
          "description" : "The number of seconds of the activity processed segment that are not within the worked shift.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "roundedEndDateTime" : {
          "description" : "An optional field containing the end date and time based on configured rounding rules.", 
          "type" : "string"
        }, 
        "roundedEndTimezone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The time zone of the rounded end of the activity."
        }, 
        "roundedStartDateTime" : {
          "description" : "An optional field containing the start date and time based on configured rounding rules.", 
          "type" : "string"
        }, 
        "roundedStartTimezone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The time zone of the rounded start of the activity."
        }, 
        "shiftLocatorDateTime" : {
          "description" : "The shift locator date time in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).", 
          "type" : "string"
        }, 
        "startDateTime" : {
          "description" : "The date and time of the start of the activity in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).", 
          "type" : "string"
        }, 
        "startTimezone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The time zone of the start of the activity."
        }, 
        "systemGeneratedEnd" : {
          "description" : "A Boolean indicator of whether or not the end time is system-generated.", 
          "type" : "boolean"
        }, 
        "systemGeneratedStart" : {
          "description" : "A Boolean indicator of whether or not the start time is system-generated.", 
          "type" : "boolean"
        }, 
        "workItemId" : {
          "description" : "The Work Item ID associated with an activity processed segment.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Activity Efficiency" : {
      "description" : "Entity describing Activity Efficiency for a particular activity span.", 
      "properties" : {
        "earnedSeconds" : {
          "description" : "The calculated value of earned seconds for a particular activity span.", 
          "type" : "number"
        }, 
        "efficiency" : {
          "description" : "The calculated value of efficiency for a particular activity span.", 
          "type" : "number"
        }, 
        "efficiencyQuantity" : {
          "description" : "The quantity used to calculate an efficiency.", 
          "type" : "number"
        }
      }, 
      "type" : "object"
    }, 
    "Labor Category Entry" : {
      "description" : "Entity containing necessary data to fetch and update a labor category entry.", 
      "properties" : {
        "laborCategory" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the associated labor category object."
        }, 
        "laborCategoryEntry" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the labor entry object."
        }
      }, 
      "type" : "object"
    }, 
    "OvertimeDetailSegment has information about a single overtime time window." : {
      "description" : "OvertimeDetailSegment has information about a single overtime time window.", 
      "properties" : {
        "amount" : {
          "description" : "The total duration in seconds from start to end of an overtime event.", 
          "type" : "number"
        }, 
        "endDateTime" : {
          "description" : "The end date and time for the overtime event in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "ruleAssignments" : {
          "description" : "A list of rule type values towards which overtime is accounted.", 
          "items" : {
            "$ref" : "#/definitions/Rule assignment details for overtime."
          }, 
          "type" : "array"
        }, 
        "startDateTime" : {
          "description" : "The start date and time for the overtime event in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "GeoLocationData" : {
      "properties" : {
        "accessPoint" : {
          "type" : "string"
        }, 
        "knownPlace" : {
          "type" : "string"
        }, 
        "wifiNetwork" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "SchedulingComment" : {
      "description" : "Information necessary for using Comments.", 
      "properties" : {
        "active" : {
          "description" : "Whether the comment is active or not.", 
          "type" : "boolean"
        }, 
        "id" : {
          "description" : "The ID for the comment.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of the comment.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "SchedulingNote" : {
      "description" : "Model describing a scheduling note.", 
      "properties" : {
        "commentNoteId" : {
          "description" : "The ID for the note.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "dataSourceDisplayName" : {
          "description" : "The name of the person who entered the note.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID of a note, which consists of the identifier of a comment and the timestamp of a note. For example: 1982020-09-21T08:01:32", 
          "type" : "string"
        }, 
        "text" : {
          "description" : "The text of the note.", 
          "type" : "string"
        }, 
        "timestamp" : {
          "description" : "The date and time when the note was created or modified; in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "SchedulingCostCenterReference" : {
      "description" : "Contains the reference to the cost center of a timekeeping labor account.", 
      "properties" : {
        "costCenter" : {
          "$ref" : "#/definitions/SchedulingObjectRef", 
          "description" : "The reference to the cost center."
        }, 
        "referenceId" : {
          "description" : "The id of the labor account this cost center was drawn from.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "CoverageSpans" : {
      "properties" : {
        "contributingHours" : {
          "format" : "double", 
          "type" : "number"
        }, 
        "spanDate" : {
          "format" : "date", 
          "type" : "string"
        }, 
        "uniqueId" : {
          "type" : "string"
        }, 
        "workloadSpan" : {
          "$ref" : "#/definitions/SchedulingSetupWorkloadSpan"
        }
      }, 
      "type" : "object"
    }, 
    "SchedulingLaborCategories" : {
      "description" : "Contains the reference to the labor category entries of a timekeeping labor account.", 
      "properties" : {
        "entries" : {
          "description" : "The key-value reference pairs corresponding to each labor category entry.", 
          "items" : {
            "$ref" : "#/definitions/SchedulingLaborCategoryEntry"
          }, 
          "type" : "array"
        }, 
        "laborString" : {
          "description" : "A displayable string summarizing the entries of the labor account. This property is read only.", 
          "readOnly" : true, 
          "type" : "string"
        }, 
        "referenceId" : {
          "description" : "The id of the labor account this cost center was drawn from.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "OrgJobProperties" : {
      "type" : "object"
    }, 
    "SchedulingShiftSegmentTag" : {
      "description" : "Model describing the segment tag of shift segment.", 
      "properties" : {
        "color" : {
          "description" : "The color of this shift segment tag.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID for the shift segment tag.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "shiftSegmentTagIconClass" : {
          "description" : "The tag icon class of this shift segment tag.", 
          "type" : "string"
        }, 
        "tagDefinitionRef" : {
          "$ref" : "#/definitions/SchedulingObjectRef", 
          "description" : "A reference to the tag definition of this shift segment tag."
        }
      }, 
      "type" : "object"
    }, 
    "KindOfTimeRuleAssignments" : {
      "properties" : {
        "deviationRules" : {
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "extensionRules" : {
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "limitRules" : {
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "zoneRules" : {
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Historical Correction Override" : {
      "description" : "Timecard Historical Correction Override", 
      "properties" : {
        "includeInTotals" : {
          "description" : "A Boolean indicator of whether or not the total for the historical correction is included for the apply date.", 
          "type" : "boolean"
        }, 
        "wagePaycode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The wage Paycode that overrides the default wage Paycode defined by the applicable configuration."
        }
      }, 
      "type" : "object"
    }, 
    "Timecard Exception for update" : {
      "description" : "Timecard Exception for update.", 
      "properties" : {
        "applyDate" : {
          "description" : "The date to which an exception applies in ISO_LOCAL_DATE format (YYYY-MM-DD). This property is read only.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "commentsNotes" : {
          "description" : "A reference to a list of Comments. This object can have multiple Comments with multiple Notes for each Comment. This property is read only.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Comment Note"
          }, 
          "type" : "array"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the punch applies. This property is read only."
        }, 
        "endDateTime" : {
          "description" : "The end date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss). This property is read only.", 
          "type" : "string"
        }, 
        "endException" : {
          "type" : "boolean"
        }, 
        "endTimeZone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The end timezone where the exception was entered. Normally, this is the default or home timezone for the employee, but the exception can include a different timezone as necessary. This property is read only."
        }, 
        "eventDate" : {
          "format" : "date", 
          "type" : "string"
        }, 
        "exceptionType" : {
          "description" : "<p>The Timekeeping exception type.</p><p>The names, descriptions, and categories enumerated in <code>name</code>, <code>description</code>, and <code>category</code> are linked to one another and listed in the same sequence in each property. For example, for the Early In exception type, the <code>name</code> is EARLY_IN, the <code>description</code> is EARLY_IN_DSC, and the <code>category</code> is IN_PUNCH_EXCEPTIONS.</p>", 
          "properties" : {
            "category" : {
              "description" : "The category of a Timekeeping exception type. Possible values include the following, which include repetitions so the sequence matches the sequencing in <code>name</code> and <code>description</code>: SHIFT_EXCEPTIONS, SHIFT_EXCEPTIONS, IN_PUNCH_EXCEPTIONS, IN_PUNCH_EXCEPTIONS, IN_PUNCH_EXCEPTIONS, OUT_PUNCH_EXCEPTIONS, OUT_PUNCH_EXCEPTIONS, OUT_PUNCH_EXCEPTIONS, ABSENCE_EXCEPTIONS, ABSENCE_EXCEPTIONS, BREAK_EXCEPTIONS, BREAK_EXCEPTIONS, SHIFT_EXCEPTIONS, SHIFT_EXCEPTIONS, IN_PUNCH_EXCEPTIONS, OUT_PUNCH_EXCEPTIONS, SHIFT_EXCEPTIONS, BREAK_EXCEPTIONS, BREAK_EXCEPTIONS, BREAK_EXCEPTIONS, BREAK_EXCEPTIONS, MISCELLANEOUS_EXCEPTIONS, MISCELLANEOUS_EXCEPTIONS, MISCELLANEOUS_EXCEPTIONS, SHIFT_EXCEPTIONS, MISCELLANEOUS_EXCEPTIONS.", 
              "type" : "string"
            }, 
            "description" : {
              "description" : "The description of a Timekeeping exception type. Possible values include: CANCELLED_DEDUCTION_DSC, CORE_HOURS_VIOLATION_DSC, VERY_EARLY_IN_DSC, EARLY_IN_DSC, LATE_IN_DSC, EARLY_OUT_DSC, LATE_OUT_DSC, VERY_LATE_OUT_DSC, EXCUSED_ABSENCE_DSC, UNEXCUSED_ABSENCE_DSC, SHORT_BREAK_DSC, LONG_BREAK_DSC, SHORT_SHIFT_DSC, LONG_SHIFT_DSC, MISSED_IN_PUNCH_DSC, MISSED_OUT_PUNCH_DSC, UNSCHEDULED_DSC, LONG_TOTAL_BREAK_DSC, SHORT_TOTAL_BREAK_DSC, BONUS_APPLIED_DSC, BREAK_OUT_OF_SEQUENCE_DSC, HOLIDAY_SCHEDULE_VIOLATION_DSC, MINIMUM_DAYS_ACTIVE_VIOLATION_DSC, MINIMUM_DAYS_EMPLOYED_VIOLATION_DSC, INVALID_NAMED_DURATION_DSC, WORK_HISTORY_VIOLATION_DSC.", 
              "type" : "string"
            }, 
            "displayName" : {
              "description" : "The display name of a Timekeeping exception type.", 
              "type" : "string"
            }, 
            "id" : {
              "description" : "The ID of a Timekeeping exception type.", 
              "type" : "integer"
            }, 
            "name" : {
              "description" : "The name of a Timekeeping exception type. Possible values include: CANCELLED_DEDUCTION, CORE_HOURS_VIOLATION, VERY_EARLY_IN, EARLY_IN, LATE_IN, EARLY_OUT, LATE_OUT, VERY_LATE_OUT, EXCUSED_ABSENCE, UNEXCUSED_ABSENCE, SHORT_BREAK, LONG_BREAK, SHORT_SHIFT, LONG_SHIFT, MISSED_IN_PUNCH, MISSED_OUT_PUNCH, UNSCHEDULED, LONG_TOTAL_BREAK, SHORT_TOTAL_BREAK, BONUS_APPLIED, BREAK_OUT_OF_SEQUENCE, HOLIDAY_SCHEDULE_VIOLATION, MINIMUM_DAYS_ACTIVE_VIOLATION, MINIMUM_DAYS_EMPLOYED_VIOLATION, INVALID_NAMED_DURATION, WORK_HISTORY_VIOLATION.", 
              "type" : "string"
            }
          }, 
          "type" : "object"
        }, 
        "id" : {
          "description" : "The ID of the exception. This property is read only.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "isExcusedAbsence" : {
          "description" : "A Boolean indicator of whether or not the exception involves an excused absence. This property is read only.", 
          "type" : "boolean"
        }, 
        "isUnExcusedAbsence" : {
          "description" : "A Boolean indicator of whether or not the exception involves an unexcused absence. This property is read only.", 
          "type" : "boolean"
        }, 
        "justifiableEndDateTime" : {
          "description" : "The end date and time of a justifiable missing time span in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS). This property is read only.", 
          "type" : "string"
        }, 
        "justifiableStartDateTime" : {
          "description" : "The start date and time of a justifiable missing time span in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS). This property is read only.", 
          "type" : "string"
        }, 
        "justificationChanges" : {
          "$ref" : "#/definitions/Timecard missing time justification changes", 
          "description" : "An entity that contains missing time justification changes."
        }, 
        "justifications" : {
          "description" : "A list of missing time justifications for this exception. This property is read only.", 
          "items" : {
            "$ref" : "#/definitions/TKJustification"
          }, 
          "type" : "array"
        }, 
        "justifiedTimes" : {
          "description" : "A list of justified times for this exception. This property is read only.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Pay Code Edit"
          }, 
          "type" : "array"
        }, 
        "missingTimeStatus" : {
          "$ref" : "#/definitions/MissingTimeStatusModel", 
          "description" : "The missing time status related to this exception. This property is read only."
        }, 
        "orgJob" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "Provides the organization job object to which the exception applies. Normally, this is the default or home job for the employee. This property is read only."
        }, 
        "overLimitInHours" : {
          "description" : "The amount (in hours) that exceeds the limit defined by the exception associated with the pay code edit. This property is read only.", 
          "type" : "number"
        }, 
        "position" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the position assigned to this exception."
        }, 
        "preserveExistingComments" : {
          "description" : "A Boolean indicator of whether or not existing comments and notes will be preserved.", 
          "type" : "boolean"
        }, 
        "punchEvent" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to a punch with an associated exception. This property is read only."
        }, 
        "reviewed" : {
          "type" : "boolean"
        }, 
        "scheduleItem" : {
          "$ref" : "#/definitions/Schedule Exception", 
          "description" : "The schedule shift violated by an exception. This property is read only."
        }, 
        "startDateTime" : {
          "description" : "The start date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss). This property is read only.", 
          "type" : "string"
        }, 
        "startException" : {
          "type" : "boolean"
        }, 
        "startTimeZone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "Start timezone where the exception was entered. Normally, this is the default or home timezone for the employee, but the exception can include a different timezone as necessary. This property is read only."
        }, 
        "transfer" : {
          "type" : "boolean"
        }, 
        "undoJustification" : {
          "description" : "A Boolean indicator of whether or not the undo action should be applied for the justification.", 
          "type" : "boolean"
        }, 
        "undoJustificationEnabled" : {
          "description" : "A Boolean indicator that shows whether or not the undo action is available for the justification. This property is read only.", 
          "type" : "boolean"
        }, 
        "userEnteredPosition" : {
          "description" : "A Boolean indicator of whether or not a position was set by a user. When false, the position was set by the system.", 
          "type" : "boolean"
        }, 
        "violationInHours" : {
          "description" : "The total number of hours violated which caused an exception. This property is read only.", 
          "type" : "number"
        }, 
        "workRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The work rule violated by an exception. This property is read only."
        }, 
        "workedShift" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The worked shift in which an exception occurred. This property is read only."
        }
      }, 
      "type" : "object"
    }, 
    "Input Punch" : {
      "description" : "Entity describing an extended punch object for the timecard resource.", 
      "properties" : {
        "attestationPunchEdit" : {
          "description" : "A Boolean indicator of whether or not the punch is entered as an Attestation punch edit.", 
          "type" : "boolean"
        }, 
        "breakRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the Break Rule to be applied during calculation of totals resulting from the punch."
        }, 
        "cancelDeduct" : {
          "type" : "boolean"
        }, 
        "commentsNotes" : {
          "description" : "A reference to a list of Comments. This object can have multiple Comments with multiple Notes for each Comment.", 
          "items" : {
            "$ref" : "#/definitions/Timecard Comment Note"
          }, 
          "type" : "array"
        }, 
        "costCenter" : {
          "$ref" : "#/definitions/CostCenter", 
          "description" : "A reference to the CostCenter object which contains the cost center information and labor account ID for each punch."
        }, 
        "dataSource" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the data source, if one exists. Normally, this indicates that the punch came from a different source, such as a clock, device, or an external data source such as an import or interface."
        }, 
        "deductRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the Deduct Rule to be applied during calculation of totals resulting from the punch."
        }, 
        "editByType" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the type of the user who made the change. Indicates whether the change was made by the employee or by someone else."
        }, 
        "editable" : {
          "type" : "boolean"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the punch applies."
        }, 
        "enforceRestriction" : {
          "description" : "<p>A Boolean indicator of whether or not to enforce restriction validation regardless of timestamp. Defaults to FALSE.</p><p><strong>Note:</strong> This property has no effect when used with the <strong>Update Timecard as Manager</strong> (<code>POST /v1/timekeeping/timecard</code>) API operation.</p>", 
          "type" : "boolean"
        }, 
        "enteredOnDtm" : {
          "description" : "The date and time stamp for when this punch transaction was entered through the API.", 
          "type" : "string"
        }, 
        "exceptionResolved" : {
          "type" : "boolean"
        }, 
        "exceptions" : {
          "description" : "A list of exception objects associated with a punch.", 
          "items" : {
            "$ref" : "#/definitions/Timecard TK Exception"
          }, 
          "type" : "array"
        }, 
        "geoLocation" : {
          "$ref" : "#/definitions/PunchGeoLocation", 
          "description" : "The Geolocation object associated with a punch."
        }, 
        "hasComments" : {
          "description" : "A Boolean indicator that shows whether or not a Comment is associated with a punch.", 
          "type" : "boolean"
        }, 
        "id" : {
          "description" : "The ID of the punch transaction.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "isPhantom" : {
          "description" : "A Boolean indicator of whether or not the punch is a phantom punch.", 
          "type" : "boolean"
        }, 
        "isScheduled" : {
          "description" : "A Boolean indicator of whether or not the punch is generated from a scheduled worked span.", 
          "type" : "boolean"
        }, 
        "laborCategories" : {
          "$ref" : "#/definitions/LaborCategories", 
          "description" : "A reference to the LaborCategories object which contains a list of labor category entries and each entry's associated labor category."
        }, 
        "location" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the GPS Location object which applies to this punch. This indicates where the punch was actually made and is tied to Geofencing operations from mobile devices."
        }, 
        "orgJob" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "Provides the organization job object to which the punch applies. Normally, this is the default or home job for the employee."
        }, 
        "originalPunchDtm" : {
          "description" : "The date and time stamp for the original punch in ISO_LOCAL_DATE_TIME.", 
          "type" : "string"
        }, 
        "position" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the position assigned to this punch."
        }, 
        "punchDtm" : {
          "description" : "The date and time stamp for the punch in ISO_LOCAL_DATE_TIME.", 
          "type" : "string"
        }, 
        "roundedPunchDtm" : {
          "description" : "The rounded punch date and time.", 
          "type" : "string"
        }, 
        "timeZone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The timezone where the punch was entered. Normally, this is the default or home timezone for the employee, but the punch can include a different timezone as necessary."
        }, 
        "transfer" : {
          "$ref" : "#/definitions/Timecard Transfer", 
          "description" : "Provides the organization job object to which the punch applies. Normally, this is only used when the punch is charged against a job other than the default or home job for the employee."
        }, 
        "typeOverride" : {
          "$ref" : "#/definitions/Timecard Type Override", 
          "description" : "Provides the type override object which indicates whether this punch object is an in punch, out punch, or a break rule. Break Rule overloads the property."
        }, 
        "updatedOnDtm" : {
          "description" : "The date and time stamp for when this punch transaction was last updated.", 
          "type" : "string"
        }, 
        "userEnteredCostCenter" : {
          "$ref" : "#/definitions/CostCenter", 
          "description" : "The user-entered Cost Center."
        }, 
        "userEnteredLaborCategories" : {
          "$ref" : "#/definitions/LaborCategories", 
          "description" : "The user-entered labor categories."
        }, 
        "userEnteredPosition" : {
          "description" : "A Boolean indicator of whether or not a position was set by a user. When false, the position was set by the system.", 
          "type" : "boolean"
        }, 
        "validateAsTimestamp" : {
          "description" : "A Boolean indicator of whether or not the punch is entered as a timestamp.", 
          "type" : "boolean"
        }, 
        "workRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the Work Rule to be applied during calculation of totals resulting from the punch."
        }
      }, 
      "type" : "object"
    }, 
    "TimeCardDataWhereDateRange" : {
      "properties" : {
        "endDate" : {
          "description" : "The end date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "startDate" : {
          "description" : "The start date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "symbolicPeriod" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the symbolic identifier that represents a timeframe or a span of time."
        }
      }, 
      "type" : "object"
    }, 
    "MappedPayCodeCategory" : {
      "properties" : {
        "costOnly" : {
          "type" : "boolean"
        }, 
        "mappingCategoryId" : {
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "MappedPayCodeItem" : {
      "properties" : {
        "id" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "markerPayCode" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "orderNum" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "overridePayCode" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "paycodeId" : {
          "format" : "int32", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "PayCodeTag" : {
      "properties" : {
        "id" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "name" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Rule assignment details for overtime." : {
      "description" : "Rule assignment details for overtime.", 
      "properties" : {
        "ruleId" : {
          "description" : "Rule type ID of the overtime.", 
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "ruleType" : {
          "description" : "Rule type under which the overtime is accounted.", 
          "enum" : [ "ZONERULES", "LIMITRULES", "DEVIATIONRULES", "EXTENSIONRULES" ], 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "SchedulingSetupWorkloadSpan" : {
      "description" : "A workload span.", 
      "properties" : {
        "endTime" : {
          "description" : "The end time of a workload span.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "The name of the shift or zone represented by this workload span.", 
          "type" : "string"
        }, 
        "startTime" : {
          "description" : "The start time of a workload span.", 
          "type" : "string"
        }, 
        "workloadSpanId" : {
          "description" : "The ID of a workload span. Can be either a Shift ID or a Zone ID.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "workloadSpanSetId" : {
          "description" : "The ID of the shift set or zone set containing the shift or zone represented by this workload span.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "workloadSpanType" : {
          "description" : "An enumeration to determine if workload span represents a shift, zone, or interval.", 
          "enum" : [ "STANDARD_SHIFT", "SCHEDULE_ZONE", "INTERVAL" ], 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "SchedulingLaborCategoryEntry" : {
      "description" : "A key-value reference pair corresponding to a labor category entry.", 
      "properties" : {
        "entry" : {
          "$ref" : "#/definitions/SchedulingObjectRef", 
          "description" : "The specific value chosen in this category."
        }, 
        "laborCategory" : {
          "$ref" : "#/definitions/SchedulingObjectRef", 
          "description" : "A reference to a labor category."
        }
      }, 
      "type" : "object"
    }, 
    "Timecard missing time justification changes" : {
      "description" : "Timecard missing time justification changes.", 
      "properties" : {
        "added" : {
          "description" : "A reference to added Timecard move amount objects.", 
          "items" : {
            "$ref" : "#/definitions/TKJustification"
          }, 
          "type" : "array"
        }, 
        "removed" : {
          "description" : "A reference to removed Timecard move amount objects.", 
          "items" : {
            "$ref" : "#/definitions/TKJustification"
          }, 
          "type" : "array"
        }, 
        "updated" : {
          "description" : "A reference to updated Timecard move amount objects. <strong>Note:</strong> The <code>updated</code> property is not supported for move amounts. Instead, use <code>removed</code> and <code>added</code>.", 
          "items" : {
            "$ref" : "#/definitions/TKJustification"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }
  }
}
