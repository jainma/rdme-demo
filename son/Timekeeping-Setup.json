{
  "swagger" : "2.0", 
  "produces" : null, 
  "host" : "", 
  "info" : {
    "description" : "Rest APIs", 
    "title" : "Rest APIs", 
    "version" : "1.0"
  }, 
  "basePath" : "/", 
  "tags" : [ {
    "description" : "<p markdown=\"1\">From here you may browse our library of API resources, organized hierarchically by domain, or major functional area, logical subgroup, API resource, and all available operations against that resource. For more information about the concepts and technology behind our API, refer to the [Getting started](C:636f581c-50a8-41a7-af43-e5057f9c20bd) documentation.</p><p>Our platform provides a powerful application programming interface and documentation to help you develop secure, scalable, and high-performance applications that leverage the full breadth of capabilities offered by our backend services.</p><p markdown=\"1\">The Workforce Management suite's API is founded on a pragmatic implementation of the [representational state transfer](http://en.wikipedia.org/wiki/Representational_State_Transfer) architectural style and allows access to your organization's workforce management data using common HTTP methods and the [JSON](http://www.json.org) interchange format.</p>", 
    "name" : "API"
  }, {
    "description" : "This resource allows you access to accrual codes, which collect and hold the different accrual balances, such as the total number of hours, days, or money. These codes identify the types of accrual balances, such as vacation or sick.", 
    "name" : "Accrual Codes", 
    "x-parent" : "Timekeeping Setup"
  }, {
    "description" : "This resource allows you access to accrual policies, which enable you to group different accrual policies and assign them to one or more employees.", 
    "name" : "Accrual Policies", 
    "x-parent" : "Timekeeping Setup"
  }, {
    "description" : "This resource allows you access to accrual profiles, which enable you to group different accrual policies and assign them to one or more employees. For example, you have full-time staff members who accrue vacation time, sick time, and bonus money at different rates. Create Full-time Vacation, Full-time Sick, and Full-time Bonus rules and group these policies in a profile named Full-time Staff Members.", 
    "name" : "Accrual Profiles", 
    "x-parent" : "Timekeeping Setup"
  }, {
    "description" : "<p>This resource provides a set of operations that allow you to create, read, update, and delete Adjustment Rules.</p><p>Use Adjustment Rules to change wages or to pay extra, based on time entered in a timecard. Adjustments can be made based on multiple labor accounts and selection criteria, such as a job, a pay code, or both. Adjustments can also be effective dated.</p>", 
    "name" : "Adjustment Rules", 
    "x-parent" : "Timekeeping Setup"
  }, {
    "description" : "This resource allows you access to bonus and deduction rules. Bonuses and deductions are amounts that are automatically added to or deducted from timecards.", 
    "name" : "Bonus and Deduction Rules", 
    "x-parent" : "Timekeeping Setup"
  }, {
    "description" : "This resource allows you access to break rules, which apply to any type of break or meal. The rules specify when a punch is a break and how punches round. The break definition has Break Lengths, Break Settings, and Rounds and Graces sections.", 
    "name" : "Break Rules", 
    "x-parent" : "Timekeeping Setup"
  }, {
    "description" : "This resource allows you to access combination rules. Combination rules tell the system how to pay employees when conditions, such as overtime, overlap. Combinations can include overtime, zone schedule deviation, and Rest Between Shift (RBS) rules.", 
    "name" : "Combination Rules", 
    "x-parent" : "Timekeeping Setup"
  }, {
    "description" : "<p>This resource allows you to retrieve and manipulate employment terms.</p><p>Employment terms are legal contracts between employees and employers that establish the conditions of employment before the employee begins work.</p>", 
    "name" : "Employment Terms", 
    "x-parent" : "Timekeeping Setup"
  }, {
    "description" : "This resource allows you to retrieve and manipulate pay code tags that are used to mark PayCode and PayRule.", 
    "name" : "Pay Code Tags", 
    "x-parent" : "Timekeeping Setup"
  }, {
    "description" : "<p>This resource allows you to retrieve and manipulate paycode distributions. Paycode distribution rules specify how employees are paid for time other than their regular time, based on combination rules.</p><p>You can edit the following information associated with paycode distributions:</p><ul><li><strong>Combination Rule:</strong> The combination rule for a paycode distribution.</li><li><strong>Paycode distribution table:</strong> Displays the overtimes, zones, schedule deviations, and paycodes in the combination rule for a paycode distribution.</li><li><strong>Edit paycodes:</strong> Change the paycodes in a paycode distribution table.</li></ul>", 
    "name" : "Paycode Distributions", 
    "x-parent" : "Timekeeping Setup"
  }, {
    "description" : "This resource allows you access to paycodes, which enable you to organize time or money that employees earn and identify spans of time for payroll purposes.", 
    "name" : "Paycodes for Timekeeping", 
    "x-parent" : "Timekeeping Setup"
  }, {
    "description" : "<p>This resource provides create, read, update, and delete operations for managing fixed percent allocation rules.</p><p>Use percentage allocation rules to allocate employee time across multiple labor accounts based on a selection criterion (labor account, job, or pay code). The rules are based on a pre-defined percentage distribution.</p><p>For example, an employee's daily time is allocated evenly between two labor accounts. The employee works eight hours. The system allocates four hours for each labor account on that day. On the following day, the employee works ten hours. If overtime is also allocated in the rule, the system allocates five hours in each labor account. If overtime is not included in the rule, the system allocates four hours for each labor account and two hours for overtime.</p>", 
    "name" : "Percentage Allocation Rules", 
    "x-parent" : "Timekeeping Setup"
  }, {
    "description" : "<p>This resource allows you retrieve time-off rules.</p><br /><p>The associated Access Control Point is REST_API_SETUP with action ALLOWED.</p>", 
    "name" : "Time-Off Rules", 
    "x-parent" : "Timekeeping Setup"
  }, {
    "description" : "This resource allows you to retrieve Timecard Add-On group options for a specified Timecard Add-On type.", 
    "name" : "Timecard Add-On Group Options", 
    "x-parent" : "Timekeeping Setup"
  }, {
    "description" : "<p>This resource provides a set of operations that allow you to work with fixed rules.</p><p>Fixed rules identify constant pay policies that are assigned to employees, such as pay periods, day divides, and the <strong>Hours belong to</strong> option. Unlike work rule assignments, which can change with employee schedules, fixed rule assignments do not change. If there is no fixed rule assigned, the defaults in the fixed rules apply to the pay rule.</p>", 
    "name" : "Timekeeping Fixed Rules", 
    "x-parent" : "Timekeeping Setup"
  }, {
    "description" : "<p>This resource provides a set of operations that allow you to work with Overtime Rules.</p><p>Overtime rules define conditions that must be met for employees to earn extra pay. For example, an employee might be paid overtime after working 8 hours in a day or after 40 hours in a week. You can also assign an extension to an overtime rule, which adds additional conditions to the overtime rule, and may modify some of the standard conditions.</p>", 
    "name" : "Timekeeping Overtime Rules", 
    "x-parent" : "Timekeeping Setup"
  }, {
    "description" : "<p>This resource allows you to retrieve a list of pay rules.</p><p>Pay rules control how time and attendance information is processed for each employee. In a pay rule, your company defines how each segment of time is marked. For example, pay rules allow you to define and record a normal pay period and an overtime period inside a time segment.</p><p markdown=\"1\">A Service Limit applies to some of the bulk operations against this resource. Refer to the [Service Limits](C:fd45ab6e-6a20-4ce2-97e9-e2c2a95dacd5) topic for more information.</p>", 
    "name" : "Timekeeping Pay Rules", 
    "x-parent" : "Timekeeping Setup"
  }, {
    "description" : "<p>Timekeeping Setup allows you to access and configure Timekeeping entities.</p><p markdown=\"1\">Refer to the [Timekeeping overview](C:ad29a8be-acb9-4507-b489-3f67c4a2e4ae) topic in [Domain overviews](C:f2ccfb74-38e7-466a-a7c7-acddc3d2d00c) for more information.</p>", 
    "name" : "Timekeeping Setup", 
    "x-parent" : "API"
  }, {
    "description" : "This resource allows you access to work rules, which are combinations of work rule building blocks that apply specific pay rules to shifts. These rules determine how employee hours accrue. A default work rule is usually part of a pay rule, but work rules can also be assigned in the timecard and Scheduler.", 
    "name" : "Work Rules", 
    "x-parent" : "Timekeeping Setup"
  } ], 
  "paths" : {
    "/v1/timekeeping/setup/accrual_codes" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p><strong>This operation is deprecated; instead use GET /v2/timekeeping/setup/accrual_codes.</strong></p><p>This operation returns a list of accrual code types according to the user's access rights.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available accrual codes.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified accrual code.</li></ul><br /><br /><p><em><strong>Important Note:</strong> We recommend you update your implementations to utilize version 2 operations as they provide better security, performance, and functionality.</em></p>", 
        "operationId" : "Retrieve Accrual Codes (Deprecated)", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "qualifier", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of accrual code type(s) according to the user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupAccrualCode"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve accrual codes.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of accrual code types. This operation is deprecated.", 
        "tags" : [ "Accrual Codes" ]
      }
    }, 
    "/v1/timekeeping/setup/accrual_codes/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns an accrual code by ID according to the user's access rights.</p>", 
        "operationId" : "Retrieve Accrual Code by ID", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved an accrual code type according to the given ID and the user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupAccrualCode"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve an accrual code.</li></ul>"
          }
        }, 
        "summary" : "Returns an accrual code.", 
        "tags" : [ "Accrual Codes" ]
      }
    }, 
    "/v1/timekeeping/setup/accrual_policies/multi_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of accrual policies according to the calling user's access rights.</p><br /><p>The associated Access Control Point is VIEW_HIDDEN_ACCRUAL_POLICIES.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of accrual policies that can be processed in a single request.</p><ul><li>The <strong>Number of Accrual Policies</strong> cannot exceed 200.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>", 
        "operationId" : "Retrieve Accrual Policies", 
        "parameters" : [ {
          "description" : "The Retrieve Accrual Policies request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/AccrualPolicyMultiReadRequest"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of accrual policy according to user's access rights.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/TimekeepingSetupAccrualPolicyDTO"
              }, 
              "type" : "array"
            }
          }, 
          "207" : {
            "description" : "<ul><li>[WTK-180267] The user is not authorized to perform this action.</li></ul>"
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>[WTK-180269]-Accrual policy does not exit with specified date range.</li><li>[WTK-180271]=An unexpected error occurred while verifying service limit.</li></ul><li>[WTK-180270]=The specified Accrual Policy object references do not exist."
          }, 
          "403" : {
            "description" : "<ul><li>[WFP-90012] The user is not authorized to perform this action.</li></ul>"
          }, 
          "413" : {
            "description" : "<ul><li>[WTK-180272] Service limit exceeded.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of accrual policy.", 
        "tags" : [ "Accrual Policies" ]
      }
    }, 
    "/v1/timekeeping/setup/accrual_policies/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns an accrual policy by ID.</p><br /><p>The associated Access Control Point is VIEW_HIDDEN_ACCRUAL_POLICIES.</p>", 
        "operationId" : "Retrieve Accrual Policy by ID", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "The state date of an accrual policy in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "in" : "query", 
          "name" : "start_date", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The end date of an accrual policy in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "in" : "query", 
          "name" : "end_date", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved an accrual policy by ID.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupAccrualPolicyDTO"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>[WTK-180268]-A general error occurred when attempting to retrieve accrual policies.</li><li>[WTK-180264]-Date format for start date or end date is incorrect.</li></ul>"
          }, 
          "403" : {
            "description" : "<ul><li>[WFP-90012] The user is not authorized to perform this action.</li></ul>"
          }
        }, 
        "summary" : "Returns an accrual policy.", 
        "tags" : [ "Accrual Policies" ]
      }
    }, 
    "/v1/timekeeping/setup/accrual_profiles" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p><strong>This operation is deprecated; instead use GET /v2/timekeeping/setup/accrual_profiles.</strong></p><p>This operation returns a list of accrual profiles according to the user's access rights.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available accrual profiles.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified accrual profile.</li></ul>", 
        "operationId" : "Retrieve All Accrual Profiles (Deprecated)", 
        "parameters" : [ {
          "description" : "The ID of the accrual profile.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "Qualifier for the accrual profile.", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        }, {
          "default" : true, 
          "description" : "A Boolean indicator of whether or not the response returns all details of each accrual profile. When false, the response returns only the ID and name of each accrual profile.", 
          "in" : "query", 
          "name" : "all_details", 
          "required" : false, 
          "type" : "boolean"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of accrual profile types according to user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupAccrualProfile"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve accrual profiles.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of accrual profiles. This operation is deprecated.", 
        "tags" : [ "Accrual Profiles" ]
      }
    }, 
    "/v1/timekeeping/setup/accrual_profiles/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p><strong>This operation is deprecated; instead use GET /v2/timekeeping/setup/accrual_profiles/{id}.</strong></p><p>This operation takes an ID and returns the specified accrual profile type according to the user's access rights.</p>", 
        "operationId" : "Retrieve Accrual Profile by ID (Deprecated)", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved an accrual profile type according to the given ID and the user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupAccrualProfile"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve accrual profile.</li></ul>"
          }
        }, 
        "summary" : "Returns an accrual profile type. This operation is deprecated.", 
        "tags" : [ "Accrual Profiles" ]
      }
    }, 
    "/v1/timekeeping/setup/adjustment_rules" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a list of Adjustment Rules according to the current user's access rights.", 
        "operationId" : "Retrieve Adjustment Rules", 
        "parameters" : [ {
          "description" : "The ID of the Adjustment Rule.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "The qualifier for the Adjustment Rule.", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved Adjustment Rules data according to user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/AdjustmentRule"
            }
          }, 
          "400" : {
            "description" : "Bad request.", 
            "schema" : {
              "$ref" : "#/definitions/HttpServletResponse"
            }
          }
        }, 
        "summary" : "Returns a list of Adjustment Rules.", 
        "tags" : [ "Adjustment Rules" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "The operation creates an Adjustment Rule.", 
        "operationId" : "Create Adjustment Rule", 
        "parameters" : [ {
          "description" : "Adjustment Rule to create.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/AdjustmentRule"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully added Adjustment Rule data.", 
            "schema" : {
              "$ref" : "#/definitions/AdjustmentRule"
            }
          }, 
          "400" : {
            "description" : "Bad request.", 
            "schema" : {
              "$ref" : "#/definitions/HttpServletResponse"
            }
          }
        }, 
        "summary" : "Creates an Adjustment Rule.", 
        "tags" : [ "Adjustment Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/adjustment_rules/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation deletes an Adjustment Rule by ID.", 
        "operationId" : "Delete Adjustment Rule by ID", 
        "parameters" : [ {
          "description" : "The ID of the Adjustment Rule.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "Successfully deleted the specified Adjustment Rule."
          }, 
          "400" : {
            "description" : "Bad request.", 
            "schema" : {
              "$ref" : "#/definitions/HttpServletResponse"
            }
          }
        }, 
        "summary" : "Deletes an Adjustment Rule by ID.", 
        "tags" : [ "Adjustment Rules" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "The operation creates an Adjustment Rule Version and assigns it to an Adjustment Rule by ID.", 
        "operationId" : "Create and Assign Adjustment Rule Version by ID", 
        "parameters" : [ {
          "description" : "The Adjustment Rule Version to create.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/AdjustmentRuleVersion"
          }
        }, {
          "description" : "The ID of an Adjustment Rule.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully added AdjustmentRuleVersion data.", 
            "schema" : {
              "$ref" : "#/definitions/AdjustmentRuleVersion"
            }
          }, 
          "400" : {
            "description" : "Bad request.", 
            "schema" : {
              "$ref" : "#/definitions/HttpServletResponse"
            }
          }
        }, 
        "summary" : "Creates an Adjustment Rule Version and assigns it to an Adjustment Rule.", 
        "tags" : [ "Adjustment Rules" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation updates an Adjustment Rule by ID.", 
        "operationId" : "Update Adjustment Rule by ID", 
        "parameters" : [ {
          "description" : "Adjustment Rule to update.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/AdjustmentRule"
          }
        }, {
          "description" : "The ID of the Adjustment Rule.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully updated the specified Adjustment Rule.", 
            "schema" : {
              "$ref" : "#/definitions/AdjustmentRule"
            }
          }, 
          "400" : {
            "description" : "Bad request.", 
            "schema" : {
              "$ref" : "#/definitions/HttpServletResponse"
            }
          }
        }, 
        "summary" : "Updates an Adjustment Rule by ID.", 
        "tags" : [ "Adjustment Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/break_rules" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list containing the ID and name of all break rules in the system. This list is not filtered by the calling user's GDAP.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available break rules.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified break rule.</li></ul>", 
        "operationId" : "Retrieve All Break Rules", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "qualifier", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of break rules.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupBreakRule"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve break rules.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of all break rules.", 
        "tags" : [ "Break Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/break_rules/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns the ID and name of a break rule by ID. The returned break rule is not filtered by the calling user's GDAP.</p>", 
        "operationId" : "Retrieve Break Rule by ID", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a break rule.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupBreakRule"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve a break rule.</li></ul>"
          }
        }, 
        "summary" : "Returns a break rule.", 
        "tags" : [ "Break Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/combination_rules" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of combination rules.</p><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Retrieve All Combination Rules", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "<p>Successful:</p><ul><li>All combination rules were retrieved.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/Combination Rule"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>Failure to retrieve Combination Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "<p>Bad Request:</p><ul><li>The user is not authorized to retrieve Combination Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "<p>Internal server error:</p> <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of all Timekeeping combination rules.", 
        "tags" : [ "Combination Rules" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation creates a combination rule.</p><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Create Combination Rule", 
        "parameters" : [ {
          "description" : "The Create Combination Rule request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Combination Rule"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "<p>Successful</p><ul><li>The Combination Rule was created.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/Combination Rule"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request</p><ul><li>Failed to create the Combination Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "<p>Bad Request</p><ul><li>The user is not authorized to create Combination Rule.</li></ul>"
          }, 
          "500" : {
            "description" : "<p>Internal server error:</p><ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Creates a combination rule.", 
        "tags" : [ "Combination Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/combination_rules/apply_upsert" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation creates or updates one or more combination rules.</p><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Create or Update Combination Rules", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/Combination Rule"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "<p>Successful:</p><ul><li>All of the Combination Rules were created or updated.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/Combination Rule"
            }
          }, 
          "207" : {
            "description" : "<p>Partial Success:</p><ul><li>There were errors creating or updating some of the Combination Rules.</li></ul>"
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>Failed to create or update any of the Combination Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "<p>Bad Request:</p><ul><li>The user is not authorized to create or update Combination Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "<p>Internal server error:</p><ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Create or Update one or more combination rules.", 
        "tags" : [ "Combination Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/combination_rules/multi_create" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation creates one or more combination rules.</p><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Create Combination Rules", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/Combination Rule"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "<p>Successful:</p><ul><li>The Combination Rules were created.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/Combination Rule"
            }
          }, 
          "207" : {
            "description" : "<p>Partial Success:</p><ul><li>There were errors creating some of the Combination Rules.</li></ul>"
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>Failed to create any of the Combination Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "<p>Bad Request:</p><ul><li>The user is not authorized to create Combination Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "<p>Internal server error:</p><ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Creates one or more combination rules.", 
        "tags" : [ "Combination Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/combination_rules/multi_delete" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation deletes one or more combination rules.</p><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Delete Combination Rules", 
        "parameters" : [ {
          "description" : "The Delete Combination Rules request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Combination Rules Request"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "<p>Successful:</p><ul><li>All of the Combination Rules were deleted</li></ul>"
          }, 
          "207" : {
            "description" : "<p>Partial Success:</p><ul><li>There were errors deleting some of the Combination Rules.</li></ul>"
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>Failed to delete any of the Combination Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "<p>Bad Request:</p><ul><li>The user is not authorized to delete Combination Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "<p>Internal server error:</p><ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Deletes one or more combination rules.", 
        "tags" : [ "Combination Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/combination_rules/multi_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns one or more combination rules by object references.</p><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Retrieve Combination Rules", 
        "parameters" : [ {
          "description" : "The Retrieve Combination Rules request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Combination Rules Request"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "<p>Successful:</p><ul><li>The Combination Rules are retrieved.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/Combination Rule"
            }
          }, 
          "207" : {
            "description" : "<p>Partial Success:</p><ul><li>There were errors retrieving some of the Combination Rules.</li></ul>"
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>Failed to retrieve all of the Combination Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "<p>Bad Request:</p><ul><li>The user is not authorized to retrieve Combination Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "<p>Internal server error:</p><ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Returns one or more combination rules by object references.", 
        "tags" : [ "Combination Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/combination_rules/multi_update" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates one or more combination rules.</p><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Update Combination Rules", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/Combination Rule"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "<p>Successful:</p><ul><li>All of the Combination Rules were updated.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/Combination Rule"
            }
          }, 
          "207" : {
            "description" : "<p>Partial Success:</p><ul><li>There were errors updating some of the Combination Rules.</li></ul>"
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>Failed to update any of the Combination Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "<p>Bad Request:</p><ul><li>The user is not authorized to update Combination Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "<p>Internal server error:</p><ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Updates one or more combination rules.", 
        "tags" : [ "Combination Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/combination_rules/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation deletes a combination rule by ID.</p><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Delete Combination Rule by ID", 
        "parameters" : [ {
          "description" : "The ID of a combination rule.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "<p>Successful</p><ul><li>Combination Rule was Deleted.</li></ul>"
          }, 
          "400" : {
            "description" : "<p>Bad Request</p><ul><li>Failed to delete the Combination Rule.</li></ul>"
          }, 
          "403" : {
            "description" : "<p>Bad Request</p><ul><li>The user is not authorized to delete Combination Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "<p>Internal server error:</p><ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Deletes a combination rule.", 
        "tags" : [ "Combination Rules" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a combination rule by ID.</p><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Retrieve Combination Rule by ID", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "<p>Successful:</p><ul><li>All combination rules were retrieved.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/Combination Rule"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p> <ul><li>Failure to retrieve Combination Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "<p>Bad Request:</p> <ul><li>The user is not authorized to retrieve Combination Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "<p>Internal server error:</p><ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Returns a combination rule.", 
        "tags" : [ "Combination Rules" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates a combination rule by ID.</p><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Update Combination Rule by ID", 
        "parameters" : [ {
          "description" : "The Update Combination Rule by ID request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Combination Rule"
          }
        }, {
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "<p>Successful</p><ul><li>The Combination Rule was updated.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/Combination Rule"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request</p><ul><li>Failed to update the Combination Rule.</li></ul>"
          }, 
          "403" : {
            "description" : "<p>Bad Request</p><ul><li>The user is not authorized to update Combination Rule.</li></ul>"
          }, 
          "500" : {
            "description" : "<p>Internal server error:</p> <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Update a combination rule.", 
        "tags" : [ "Combination Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/deduct_rules" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p><strong>This operation is deprecated; instead use GET /v2/timekeeping/setup/deduct_rules.</strong></p><p>This operation returns a list of bonus and deduction rules.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available bonus and deduction rules.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified bonus or deduction rule.</li></ul><br /><br /><p><em><strong>Important Note:</strong> We recommend you update your implementations to utilize version 2 operations as they provide better security, performance, and functionality.</em></p>", 
        "operationId" : "Retrieve Bonus and Deduction Rules (Deprecated)", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "qualifier", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of bonus and deduction rules.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupBonusDeductionRule"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve bonus and deduction rules.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of bonus and deduction rules. This operation is deprecated.", 
        "tags" : [ "Bonus and Deduction Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/deduct_rules/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p><strong>This operation is deprecated; instead use GET /v2/timekeeping/setup/deduct_rules/{id}.</strong></p><p>This operation takes an ID and returns the specified bonus or deduction rule.</p><br /><br /><p><em><strong>Important Note:</strong> We recommend you update your implementations to utilize version 2 operations as they provide better security, performance, and functionality.</em></p>", 
        "operationId" : "Retrieve Bonus or Deduction Rule by ID (Deprecated)", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a bonus or deduction rule.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupBonusDeductionRule"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to a bonus or deduction rule.</li></ul>"
          }
        }, 
        "summary" : "Returns a bonus or deduction rule. This operation is deprecated.", 
        "tags" : [ "Bonus and Deduction Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/employee_pay_code_symbolic_values" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p><strong>This operation is deprecated; instead use GET /v2/timekeeping/setup/employee_pay_code_symbolic_values.</strong></p><p>This operation returns a list of paycode symbolic values available to an employee.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available paycode symbolic values to the employee.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified paycode symbolic value, if available to the employee.</li></ul><br /><br /><p><em><strong>Important Note:</strong> We recommend you update your implementations to utilize version 2 operations as they provide better security, performance, and functionality.</em></p>", 
        "operationId" : "Retrieve Paycode Symbolic Values as Employee (Deprecated)", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "qualifier", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of paycode symbolic values according to employee user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCodeSymbolicValue"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve paycode symbolic values.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of all Timekeeping paycode symbolic values available to an employee. This operation is deprecated.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v1/timekeeping/setup/employee_pay_code_symbolic_values/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p><strong>This operation is deprecated; instead use GET /v2/timekeeping/setup/employee_pay_code_symbolic_values/{id}.</strong></p><p>Given an ID, this operation returns the specified paycode symbolic value available to an employee.</p><br /><br /><p><em><strong>Important Note:</strong> We recommend you update your implementations to utilize version 2 operations as they provide better security, performance, and functionality.</em></p>", 
        "operationId" : "Retrieve Paycode Symbolic Values by ID as Employee (Deprecated)", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a paycode symbolic value according to employee user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCodeSymbolicValue"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve a paycode symbolic value.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of all Timekeeping paycode symbolic values available to an employee. This operation is deprecated.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v1/timekeeping/setup/employee_pay_codes" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p><strong>This operation is deprecated; instead use GET /v2/timekeeping/setup/employee_pay_codes.</strong></p><p>This operation returns a list of paycodes available to an employee.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available paycodes to the employee.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified paycode, if available to the employee.</li></ul><br /><br /><p><em><strong>Important Note:</strong> We recommend you update your implementations to utilize version 2 operations as they provide better security, performance, and functionality.</em></p>", 
        "operationId" : "Retrieve Paycodes as Employee (Deprecated)", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "qualifier", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of paycode types according to the employee's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCode"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve paycodes.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of all Timekeeping paycodes available to an employee filtered by DAP. This operation is deprecated.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v1/timekeeping/setup/employee_pay_codes/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p><strong>This operation is deprecated; instead use GET /v2/timekeeping/setup/employee_pay_codes/{id}.</strong></p><p>This operation returns a partial paycode by ID. Only paycodes available to the logged-in employee are returned.</p><br /><br /><p><em><strong>Important Note:</strong> We recommend you update your implementations to utilize version 2 operations as they provide better security, performance, and functionality.</em></p>", 
        "operationId" : "Retrieve Paycode by ID as Employee (Deprecated)", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a paycode type according to the employee's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCode"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve a paycode.</li></ul>"
          }
        }, 
        "summary" : "Returns a partial Timekeeping paycode available to an employee filtered by DAP. This operation is deprecated.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v1/timekeeping/setup/employee_work_rules" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p><strong>This operation is deprecated; instead use GET /v2/timekeeping/setup/employee_work_rules.</strong></p><p>This operation returns a list of work rules available to an employee.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available work rules to the employee.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified work rule, if available to the employee.</li></ul><br /><br /><p><em><strong>Important Note:</strong> We recommend you update your implementations to utilize version 2 operations as they provide better security, performance, and functionality.</em></p>", 
        "operationId" : "Retrieve Work Rules as Employee (Deprecated)", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "qualifier", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of work rule types according to the employee's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupWorkRule"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve work rules.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of all Timekeeping work rules available to an employee. This operation is deprecated.", 
        "tags" : [ "Work Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/employee_work_rules/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p><strong>This operation is deprecated; instead use GET /v2/timekeeping/setup/employee_work_rules/{id}.</strong></p><p>Given an ID, this operation returns the specified work rule available to an employee.</p><br /><br /><p><em><strong>Important Note:</strong> We recommend you update your implementations to utilize version 2 operations as they provide better security, performance, and functionality.</em></p>", 
        "operationId" : "Retrieve Work Rule by ID as Employee (Deprecated)", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a work rule type according to the employee's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupWorkRule"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve a work rule.</li></ul>"
          }
        }, 
        "summary" : "Returns a Timekeeping work rules available to an employee. This operation is deprecated.", 
        "tags" : [ "Work Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/employment_terms" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p><strong>This operation is deprecated; instead use GET /v2/timekeeping/setup/employment_terms.</strong></p><p>This operation returns an employment term.</p><br /><br /><p><em><strong>Important Note:</strong> We recommend you update your implementations to utilize version 2 operations as they provide better security, performance, and functionality.</em></p>", 
        "operationId" : "Retrieve Employment Term (Deprecated)", 
        "parameters" : [ {
          "description" : "The ID of an employment term.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "The name of an employment term.", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        }, {
          "default" : true, 
          "description" : "A Boolean indicator of whether or not the response returns all details of each employment term. When false, the response returns only the ID, name, and Persistent ID of each employment term.", 
          "in" : "query", 
          "name" : "all_details", 
          "required" : false, 
          "type" : "boolean"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved all employment term information according to user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/Employment Term"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }
        }, 
        "summary" : "Returns an employment term. This operation is deprecated.", 
        "tags" : [ "Employment Terms" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation creates an employment term.", 
        "operationId" : "Create Employment Term", 
        "parameters" : [ {
          "description" : "The Create Employment Term request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Employment Term"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully created the employment term.", 
            "schema" : {
              "$ref" : "#/definitions/Employment Term"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul> <li>[WTK-82604] - Cannot create an employment term that is already exists. </li> <li>[WTK-82606] - Unknown error occurred. Please Contact your administrator. </li> <li>[WTK-82608] - Data validation exception occurs due to bad input data while request processing. Please verify input data. </li> </ul>"
          }
        }, 
        "summary" : "Creates an employment term.", 
        "tags" : [ "Employment Terms" ]
      }
    }, 
    "/v1/timekeeping/setup/employment_terms/multi_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns one or more employment terms by object references.", 
        "operationId" : "Retrieve Employment Terms", 
        "parameters" : [ {
          "description" : "The Retrieve Employment Terms request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Multi Read Request for employment terms"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of employment terms.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/Employment Term"
              }, 
              "type" : "array"
            }
          }, 
          "207" : {
            "description" : "<ul><li>[WTK-82612] - Some employment terms object references do not exist.</li><li>[WTK-82609] - Employment Term with ID {empTermId} does not exist.</li><li>[WTK-82610] - Employment Term with Persistent Id {persistentId} does not exist.</li></ul>"
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p> <ul> <li>[WTK-82606] - Unknown error occurred. Please Contact your administrator. </li> <li>[WTK-82609] - Employment Term with ID: {empTermId} does not exist. </li> <li>[WTK-82610] - Employment Term with Persistent Id: {persistentId} does not exist. </li> <li>[WTK-82613] - At least one parameter is required inside where clause. </li> <li>[WTK-82614] - Only one from Ids/Qualifiers/PersistentIds/Refs is allowed. </li> <li>[WTK-82615] - Employment Term with Qualifier: {qualifier} does not exist. </li> </ul>"
          }
        }, 
        "summary" : "Returns one or more employment terms.", 
        "tags" : [ "Employment Terms" ]
      }
    }, 
    "/v1/timekeeping/setup/employment_terms/versions/apply_upsert" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates one or more employment term versions and allows for partial update operations in which only the changes specified in the payload are made.</p><br /><p>The associated Access Control Point is EMPLOYMENT_TERMS_SETUP.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of versions that can be processed in a single request.</p><ul><li>The <strong>Number of Versions</strong> cannot exceed 200.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>", 
        "operationId" : "Update Employment Term Versions", 
        "parameters" : [ {
          "description" : "The Update Employment Term Version request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Apply upsert request to add or update employment terms"
          }
        }, {
          "default" : false, 
          "description" : "A Boolean indicator of whether or not the response should return all versions of the modified employment term. When false, the response returns only the updated version specified in the request. When true, all versions are returned. Default is false.", 
          "in" : "query", 
          "name" : "return_all_versions", 
          "required" : false, 
          "type" : "boolean"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully updated an employment term version.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/Employment Term"
              }, 
              "type" : "array"
            }
          }, 
          "207" : {
            "description" : "<ul><li>[WTK-82612] - Some employment terms object references do not exist.</li><li>[WTK-82609] - Employment Term with ID {empTermId} does not exist.</li><li>[WTK-82610] - Employment Term with Persistent Id {persistentId} does not exist.</li></ul>"
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p> <ul> <li>[WTK-82606] - Unknown error occurred. Please Contact your administrator. </li> <li>[WTK-82609] - Employment Term with ID: {empTermId} does not exist. </li> <li>[WTK-82610] - Employment Term with Persistent Id: {persistentId} does not exist. </li> <li>[WTK-82613] - At least one parameter is required inside where clause. </li> <li>[WTK-82614] - Only one from Ids/Qualifiers/PersistentIds/Refs is allowed. </li> <li>[WTK-82615] - Employment Term with Qualifier: {qualifier} does not exist. </li> </ul>"
          }
        }, 
        "summary" : "Updates an employment term version.", 
        "tags" : [ "Employment Terms" ]
      }
    }, 
    "/v1/timekeeping/setup/employment_terms/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation deletes an employment term by ID.", 
        "operationId" : "Delete Employment Term by ID", 
        "parameters" : [ {
          "description" : "The ID of an employment term.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "Successfully deleted the specified employment term."
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul> <li>[WTK-82600] - Employment Term does not exist or accessed with a bad reference. </li> <li>[WTK-82606] - Unknown error occurred. Please Contact your administrator. </li> </ul>"
          }
        }, 
        "summary" : "Deletes an employment term.", 
        "tags" : [ "Employment Terms" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p><strong>This operation is deprecated; instead use GET /v2/timekeeping/setup/employment_terms/{id}.</strong></p><p>This operation returns an employment term by ID.</p><br /><br /><p><em><strong>Important Note:</strong> We recommend you update your implementations to utilize version 2 operations as they provide better security, performance, and functionality.</em></p>", 
        "operationId" : "Retrieve Employment Term by ID (Deprecated)", 
        "parameters" : [ {
          "description" : "The ID of an employment term.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Given an ID, successfully retrieved the specified employment term information according to user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/Employment Term"
            }
          }, 
          "400" : {
            "description" : "Internal server error."
          }
        }, 
        "summary" : "Returns an employment term. This operation is deprecated.", 
        "tags" : [ "Employment Terms" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "The operation updates an employment term by ID.", 
        "operationId" : "Update Employment Term by ID", 
        "parameters" : [ {
          "description" : "The ID of an employment term.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Employment Term"
          }
        }, {
          "description" : "The Update Employment Term by ID request payload.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully updated the specified employment term.", 
            "schema" : {
              "$ref" : "#/definitions/Employment Term"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul> <li>[WTK-82600] - Employment Term does not exist or accessed with a bad reference. </li> <li>[WTK-82606] - Unknown error occurred. Please Contact your administrator. </li> <li>[WTK-82607] - Id or name in request body does not match with id or name in path parameter. </li> <li>[WTK-82608] - Data validation exception occurs due to bad input data while request processing. Please verify input data. </li> </ul>"
          }
        }, 
        "summary" : "Updates an employment term by ID.", 
        "tags" : [ "Employment Terms" ]
      }
    }, 
    "/v1/timekeeping/setup/fixed_rules" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns all fixed rules.", 
        "operationId" : "Retrieve All Fixed Rules", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success: <ul><li>The fixed rules were retrieved.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to retrieve fixed rules.</li></ul>"
          }
        }, 
        "summary" : "Returns all fixed rules.", 
        "tags" : [ "Timekeeping Fixed Rules" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation creates and returns a fixed rule.", 
        "operationId" : "Create Fixed Rule", 
        "parameters" : [ {
          "description" : "The Create Fixed Rule request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/BaseFixedRuleDTO"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully: <ul><li>The fixed rule is created.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/FixedRuleDTO"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Input validation fails.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to create fixed rule.</li></ul>"
          }, 
          "409" : {
            "description" : "Bad Request: <ul><li>The fixed rule already exists.</li></ul>"
          }, 
          "500" : {
            "description" : "Internal server error: <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Creates and returns a fixed rule.", 
        "tags" : [ "Timekeeping Fixed Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/fixed_rules/multi_create" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation creates and returns fixed rules.", 
        "operationId" : "Create Fixed Rules", 
        "parameters" : [ {
          "description" : "The Create Fixed Rules request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/FixedRulePatchDTO"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully: <ul><li>The fixed rules are created.</li></ul>"
          }, 
          "207" : {
            "description" : "Successfully: <ul><li>Partially created a list of fixed rules.</li></ul>"
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Only one from ids/qualifiers/refs is allowed in the request.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to create fixed rules.</li></ul>"
          }, 
          "413" : {
            "description" : "Bad Request: <ul><li>Number of fixed rules provided in request exceeds service limit.</li></ul>"
          }
        }, 
        "summary" : "Creates and returns fixed rules.", 
        "tags" : [ "Timekeeping Fixed Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/fixed_rules/multi_delete" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation deletes fixed rules by IDs, qualifiers, or object references.", 
        "operationId" : "Delete Fixed Rules", 
        "parameters" : [ {
          "description" : "The Delete Fixed Rules request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/FixedRuleRequest"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "Success: <ul><li>The fixed rules are deleted.</li></ul>"
          }, 
          "207" : {
            "description" : "Partial success: <ul><li>Partially deleted a list of fixed rules.</li></ul>"
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Only one from ids/qualifiers/refs is allowed in the request.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to delete fixed rules.</li></ul>"
          }, 
          "404" : {
            "description" : "Bad Request: <ul><li>Fixed rules with the specified references do not exist.</li></ul>"
          }, 
          "413" : {
            "description" : "Bad Request: <ul><li>Number of fixed rules provided in request exceeds service limit.</li></ul>"
          }
        }, 
        "summary" : "Deletes fixed rules by IDs, qualifiers, or object references.", 
        "tags" : [ "Timekeeping Fixed Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/fixed_rules/multi_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns fixed rules by IDs, qualifiers, or object references.", 
        "operationId" : "Retrieve Fixed Rules", 
        "parameters" : [ {
          "description" : "The Retrieve Fixed Rules request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/FixedRuleRequest"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success: <ul><li>The fixed rules were retrieved.</li></ul>"
          }, 
          "207" : {
            "description" : "Partial success: <ul><li>Partially retrieved a list of fixed rules. Some of the specified object references do not exist.</li></ul>"
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Only one from ids/qualifiers/refs is allowed in the request.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to retrieve fixed rules.</li></ul>"
          }, 
          "404" : {
            "description" : "Bad Request: <ul><li>Fixed rules with the specified references do not exist.</li></ul>"
          }
        }, 
        "summary" : "Returns fixed rules by IDs, qualifiers, or object references.", 
        "tags" : [ "Timekeeping Fixed Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/fixed_rules/multi_update" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation updates and returns fixed rules.", 
        "operationId" : "Update Fixed Rules", 
        "parameters" : [ {
          "description" : "The Update Fixed Rules request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/FixedRulePatchDTO"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success: <ul><li>The fixed rules are updated.</li></ul>"
          }, 
          "207" : {
            "description" : "Partial success: <ul><li>Partially updated a list of fixed rules.</li></ul>"
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Input validation fails.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to delete fixed rules.</li></ul>"
          }, 
          "404" : {
            "description" : "Bad Request: <ul><li>Fixed rules with the specified references do not exist.</li></ul>"
          }, 
          "413" : {
            "description" : "Bad Request: <ul><li>Number of fixed rules provided in request exceeds service limit.</li></ul>"
          }
        }, 
        "summary" : "Updates and returns fixed rules.", 
        "tags" : [ "Timekeeping Fixed Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/fixed_rules/multi_upsert" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation creates or updates one or more fixed rules.", 
        "operationId" : "Create or Update Fixed Rules", 
        "parameters" : [ {
          "description" : "v1.0.timekeeping-setup-fixedrules.post.multi_upsert.apiparam.fixedrulelist.value", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/FixedRulePatchDTO"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success: <ul><li>The fixed rules are updated created.</li></ul>"
          }, 
          "207" : {
            "description" : "Partial success: <ul><li>Partially processed a list of fixed rules.</li></ul>"
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Input validation fails.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to create or update fixed rules.</li></ul>"
          }, 
          "404" : {
            "description" : "Bad Request: <ul><li>Fixed rules with the specified references do not exist.</li></ul>"
          }, 
          "413" : {
            "description" : "Bad Request: <ul><li>Number of fixed rules provided in request exceeds service limit.</li></ul>"
          }
        }, 
        "summary" : "Creates or updates one or more fixed rules.", 
        "tags" : [ "Timekeeping Fixed Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/fixed_rules/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation deletes a fixed rule by ID.", 
        "operationId" : "Delete Fixed Rule by ID", 
        "parameters" : [ {
          "description" : "The ID of a fixed rule to delete.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "Successfully: <ul><li>The fixed rule is deleted.</li></ul>"
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Unable to delete selected rule.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to delete fixed rule.</li></ul>"
          }, 
          "404" : {
            "description" : "Bad Request: <ul><li>The fixed rule with requested id does not exist.</li></ul>"
          }
        }, 
        "summary" : "Deletes a fixed rule.", 
        "tags" : [ "Timekeeping Fixed Rules" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a fixed rule by ID.", 
        "operationId" : "Retrieve Fixed Rule by ID", 
        "parameters" : [ {
          "description" : "The ID of a fixed rule to retrieve.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully: <ul><li>The fixed rule is retrieved.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/FixedRuleDTO"
            }
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to retrieve fixed rule.</li></ul>"
          }, 
          "404" : {
            "description" : "Bad Request: <ul><li>The fixed rule with requested id does not exist.</li></ul>"
          }
        }, 
        "summary" : "Returns a fixed rule.", 
        "tags" : [ "Timekeeping Fixed Rules" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation updates and returns a fixed rule by ID.", 
        "operationId" : "Update Fixed Rule by ID", 
        "parameters" : [ {
          "description" : "The Update Fixed Rule request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/FixedRuleDTO"
          }
        }, {
          "description" : "The ID of a fixed rule.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Bad Request: <ul><li>Fixed rules with the specified references do not exist.</li></ul>"
          }
        }, 
        "summary" : "Updates and returns a fixed rule.", 
        "tags" : [ "Timekeeping Fixed Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/full_work_rules" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns all work rules.</p>", 
        "operationId" : "Retrieve All Work Rules", 
        "parameters" : [ {
          "description" : "snapshotdate", 
          "in" : "query", 
          "name" : "snapshotdate", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: <ul><li>The Work Rule are retrieved.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupWorkRule"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Failure to retrieve Work Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to retrieve Work Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "Internal server error: <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Returns all work rules.", 
        "tags" : [ "Work Rules" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation creates a work rule.</p>", 
        "operationId" : "Create Work Rule", 
        "parameters" : [ {
          "description" : "The Create Work Rule request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Work Rule"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: <ul><li>The Work Rule was created.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupWorkRule"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Failed to create the Work Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to create Work Rule.</li></ul>"
          }, 
          "500" : {
            "description" : "Internal server error: <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Creates a work rule.", 
        "tags" : [ "Work Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/full_work_rules/multi_create" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation creates one or more work rules.</p>", 
        "operationId" : "Create Work Rules", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/Work Rule"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: <ul><li>The Work Rules were created.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupWorkRule"
            }
          }, 
          "207" : {
            "description" : "Partial Success: <ul><li>There were errors creating some of the Work Rules.</li></ul>"
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Failed to create any of the Work Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to create Work Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "Internal server error: <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Creates one or more work rules.", 
        "tags" : [ "Work Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/full_work_rules/multi_delete" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation deletes one or more work rules.</p>", 
        "operationId" : "Delete Work Rules", 
        "parameters" : [ {
          "description" : "The Delete Work Rules request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Work Rules"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: <ul><li>All of the Work Rules were deleted</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupWorkRule"
            }
          }, 
          "207" : {
            "description" : "Partial Success: <ul><li>There were errors deleting some of the Work Rules.</li></ul>"
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Failed to delete any of the Work Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to deelte Work Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "Internal server error: <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Deletes one or more work rules.", 
        "tags" : [ "Work Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/full_work_rules/multi_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns one or more work rules by object references.</p>", 
        "operationId" : "Retrieve Work Rules", 
        "parameters" : [ {
          "description" : "The Retrieve Work Rules request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Work Rules"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: <ul><li>The Work Rules are retrieved.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupWorkRule"
            }
          }, 
          "207" : {
            "description" : "Partial Success: <ul><li>There were errors retrieving some of the Work Rules.</li></ul>"
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Failed to retrieve all of the Work Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to retrieve Work Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "Internal server error: <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Returns one or more work rules by object references.", 
        "tags" : [ "Work Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/full_work_rules/multi_update" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates one or more work rules.</p>", 
        "operationId" : "Update Work Rules", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/Work Rule"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: <ul><li>All of the Work Rules were updated.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupWorkRule"
            }
          }, 
          "207" : {
            "description" : "Partial Success: <ul><li>There were errors updating some of the Work Rules.</li></ul>"
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Failed to update any of the Work Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to update Work Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "Internal server error: <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Updates one or more work rules.", 
        "tags" : [ "Work Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/full_work_rules/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation deletes a work rule by ID.</p>", 
        "operationId" : "Delete Work Rule by ID", 
        "parameters" : [ {
          "description" : "The ID of a work rule.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "versionId", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "version_id", 
          "required" : false, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "successful operation", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupWorkRule"
            }
          }, 
          "204" : {
            "description" : "Successful: <ul><li>Work Rule was Deleted.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupWorkRule"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Failed to delete the Work Rule.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to delete Work Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "Internal server error: <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Deletes a work rule.", 
        "tags" : [ "Work Rules" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a work rule by ID.</p>", 
        "operationId" : "Retrieve Work Rule by ID", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "snapshotdate", 
          "in" : "query", 
          "name" : "snapshotdate", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: <ul><li>All work rules were retrieved.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupWorkRule"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Failure to retrieve Work Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to retrieve Work Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "Internal server error: <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Returns a work rule.", 
        "tags" : [ "Work Rules" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates a work rule by ID.</p>", 
        "operationId" : "Update Work Rule by ID", 
        "parameters" : [ {
          "description" : "The Update Work Rule by ID request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Work Rule"
          }
        }, {
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: <ul><li>The Work Rule was updated.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupWorkRule"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Failed to update the Work Rule.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to update Work Rule.</li></ul>"
          }, 
          "500" : {
            "description" : "Internal server error: <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Updates a work rule.", 
        "tags" : [ "Work Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/overtime_rules" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "Returns all of the Overtime Rules in the system.", 
        "operationId" : "Retrieve All Overtime Rules", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: <ul><li>The Overtime Rule are retrieved.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/OvertimeRules"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Failure to retrieve Overtime Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to retrieve Overtime Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "Internal server error: <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "This operation returns all of the Overtime Rules in the system.", 
        "tags" : [ "Timekeeping Overtime Rules" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation creates an Overtime Rule.", 
        "operationId" : "Create Overtime Rule", 
        "parameters" : [ {
          "description" : "The Overtime Rules object used in the request payloads of Create Overtime Rule, Create Overtime Rules, Update Overtime Rule by ID, and Update Overtime Rules.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/OvertimeRules"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: <ul><li>The Overtime Rule was created.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/OvertimeRules"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Failed to create the Overtime Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to create Overtime Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "Internal server error: <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Creates an Overtime Rule.", 
        "tags" : [ "Timekeeping Overtime Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/overtime_rules/multi_create" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation creates one or more Overtime Rules.", 
        "operationId" : "Create Overtime Rules", 
        "parameters" : [ {
          "description" : "The Overtime Rules object used in the request payloads of Create Overtime Rule, Create Overtime Rules, Update Overtime Rule by ID, and Update Overtime Rules.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/OvertimeRules"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: <ul><li>The Overtime Rules were created.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/OvertimeRules"
            }
          }, 
          "207" : {
            "description" : "Partial Success: <ul><li>There were errors creating some of the Overtime Rules.</li></ul>"
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Failed to create any of the Overtime Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to create Overtime Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "Internal server error: <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Creates one or more Overtime Rules.", 
        "tags" : [ "Timekeeping Overtime Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/overtime_rules/multi_delete" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation deletes one or more Overtime Rules.", 
        "operationId" : "Delete Overtime Rules", 
        "parameters" : [ {
          "description" : "The list of IDs or qualifiers used to Retrieve Overtime Rules and Delete Overtime Rules.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/OvertimerulesWhere.Where"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: <ul><li>All of the Overtime Rules were deleted</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/OvertimeRules"
            }
          }, 
          "207" : {
            "description" : "Partial Success: <ul><li>There were errors deleting some of the Overtime Rules.</li></ul>"
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Failed to delete any of the Overtime Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to deelte Overtime Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "Internal server error: <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Deletes one or more Overtime Rules.", 
        "tags" : [ "Timekeeping Overtime Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/overtime_rules/multi_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a list of Overtime Rules by object references.", 
        "operationId" : "Retrieve Overtime Rules", 
        "parameters" : [ {
          "description" : "The list of IDs or qualifiers used to Retrieve Overtime Rules and Delete Overtime Rules.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/OvertimerulesWhere.Where"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: <ul><li>The Overtime Rules are retrieved.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/OvertimeRules"
            }
          }, 
          "207" : {
            "description" : "Partial Success: <ul><li>There were errors retrieving some of the Overtime Rules.</li></ul>"
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Failed to retrieve all of the Overtime Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to retrieve Overtime Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "Internal server error: <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of Overtime Rules.", 
        "tags" : [ "Timekeeping Overtime Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/overtime_rules/multi_update" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation updates one or more Overtime Rules.", 
        "operationId" : "Update Overtime Rules", 
        "parameters" : [ {
          "description" : "The Overtime Rules object used in the request payloads of Create Overtime Rule, Create Overtime Rules, Update Overtime Rule by ID, and Update Overtime Rules.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/OvertimeRules"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: <ul><li>All of the Overtime Rules were updated.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/OvertimeRules"
            }
          }, 
          "207" : {
            "description" : "Partial Success: <ul><li>There were errors updating some of the Overtime Rules.</li></ul>"
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Failed to update any of the Overtime Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to update Overtime Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "Internal server error: <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Updates one or more Overtime Rules.", 
        "tags" : [ "Timekeeping Overtime Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/overtime_rules/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation deletes an Overtime Rule by ID.", 
        "operationId" : "Delete Overtime Rule by ID", 
        "parameters" : [ {
          "description" : "The ID of an Overtime Rule.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: <ul><li>Overtime Rule was Deleted</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/OvertimeRules"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Failed to delete the Overtime Rule.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to delete Overtime Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "Internal server error: <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Deletes an Overtime Rule.", 
        "tags" : [ "Timekeeping Overtime Rules" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a single Overtime Rule by ID.", 
        "operationId" : "Retrieve Overtime Rule by ID", 
        "parameters" : [ {
          "description" : "The ID of an Overtime Rule.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: <ul><li>The Overtime Rule is retrieved.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/OvertimeRules"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Failure to retrieve Overtime Rules.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to retrieve Overtime Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "Internal server error: <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Returns a single Overtime Rule.", 
        "tags" : [ "Timekeeping Overtime Rules" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation updates an Overtime Rule by ID.", 
        "operationId" : "Update Overtime Rule by ID", 
        "parameters" : [ {
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "The Overtime Rules object used in the request payloads of Create Overtime Rule, Create Overtime Rules, Update Overtime Rule by ID, and Update Overtime Rules.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/OvertimeRules"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: <ul><li>The Overtime Rule was updated.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/OvertimeRules"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Failed to update the Overtime Rule.</li></ul>"
          }, 
          "403" : {
            "description" : "Bad Request: <ul><li>The user is not authorized to update Overtime Rules.</li></ul>"
          }, 
          "500" : {
            "description" : "Internal server error: <ul><li>Some unexpected server error occurred.</li></ul>"
          }
        }, 
        "summary" : "Updates an Overtime Rule.", 
        "tags" : [ "Timekeeping Overtime Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/pay_code_distributions" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of all paycode distributions or a single paycode distribution by name.</p><br /><p>The associated Access Control Point is PAY_RULE.</p>", 
        "operationId" : "Retrieve All Paycode Distributions or by Name", 
        "parameters" : [ {
          "description" : "The name of a paycode distribution.", 
          "in" : "query", 
          "name" : "name", 
          "required" : true, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success.", 
            "schema" : {
              "$ref" : "#/definitions/PayCodeDistribution"
            }
          }, 
          "403" : {
            "description" : "<ul><li>[WTK-183001] - You do not have access to the entity or one of sub-entity. Type: {PayCode Distribution}. Name or ID: {302}</li><li>[WTK-183030] - The current user does not have the following Function Access Profile permissions: 'PAY_RULES' with action 'ALLOWED'.</li></ul>"
          }, 
          "404" : {
            "description" : "<ul><li>[WTK-183007] - Entity or entities not found. Type: PayCode Distribution. Name or names or ID or IDs: {name}.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of all paycode distributions or a single paycode distribution by name.", 
        "tags" : [ "Paycode Distributions" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation creates a paycode distribution.</p><br /><p>The associated Access Control Point is PAY_RULE.</p>", 
        "operationId" : "Create Paycode Distribution", 
        "parameters" : [ {
          "description" : "The Create Paycode Distribution request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/PayCodeDistribution"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success.", 
            "schema" : {
              "$ref" : "#/definitions/PayCodeDistribution"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>[WTK-112004] - ObjectRef with id: {id} could not be found.</li><li>[WTK-112005] - ObjectRef with qualifier: {qualifier} could not be found.</li><li>[WTK-112007] - You do not have access to the entity. Type: {type}. ID: {id}.</li><li>[WTK-112008] - You do not have access to the entity. Type: {type}. Name: {qualifier}.</li><li>[WTK-183002] - The following collection cannot be empty: paycodeAssignments.</li><li>[WTK-183003] - You must specify the following parameter: name.</li><li>[WTK-183004] - The following parameter must be null: id.</li><li>[WTK-183006] - The following object reference is invalid: combinationRule.</li><li>[WTK-183008] - The following parameter cannot be empty: name.</li><li>[WTK-183015] - Name length exceeds 50 characters. Shorten the name.</li><li>[WTK-183016] - The field name cannot contain any of the following characters: ^*%?:;=()/&bsol;[]|#.</li><li>[WTK-183017] - The request contains the following entity type which has the following parameter with duplicate values. Entity type: Distribution Assignment. Parameter: paycodeAssignments. Duplicate values: [values].</li><li>[WTK-183202] - The name {name} you specified already in use. Enter a unique name.</li></ul>"
          }, 
          "403" : {
            "description" : "<ul><li>[WTK-183030] - The current user does not have the following Function Access Profile permissions: 'PAY_RULES' with action 'ALLOWED'.</li></ul>"
          }
        }, 
        "summary" : "Creates a paycode distribution.", 
        "tags" : [ "Paycode Distributions" ]
      }
    }, 
    "/v1/timekeeping/setup/pay_code_distributions/apply_upsert" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation creates or updates one or more paycode distributions.</p><br /><p>The associated Access Control Point is PAY_RULE.</p>", 
        "operationId" : "Create or Update Paycode Distributions", 
        "parameters" : [ {
          "description" : "The Create or Update Paycode Distributions request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/PayCodeDistribution"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success.", 
            "schema" : {
              "$ref" : "#/definitions/PayCodeDistribution"
            }
          }, 
          "207" : {
            "description" : "<ul><li>[WTK-183034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>[WTK-183035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
          }, 
          "403" : {
            "description" : "<ul><li>[WTK-183030] - The current user does not have the following Function Access Profile permissions: 'PAY_RULES' with action 'ALLOWED'.</li></ul>"
          }
        }, 
        "summary" : "Creates or updates one or more paycode distributions.", 
        "tags" : [ "Paycode Distributions" ]
      }
    }, 
    "/v1/timekeeping/setup/pay_code_distributions/multi_create" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation creates one or more paycode distributions.</p><br /><p>The associated Access Control Point is PAY_RULE.</p>", 
        "operationId" : "Create Paycode Distributions", 
        "parameters" : [ {
          "description" : "The Create Paycode Distributions request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/PayCodeDistribution"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success.", 
            "schema" : {
              "$ref" : "#/definitions/PayCodeDistribution"
            }
          }, 
          "207" : {
            "description" : "<ul><li>[WTK-183034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
          }, 
          "400" : {
            "description" : "<p>Bad Request:<p><ul><li>[WTK-183035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
          }, 
          "403" : {
            "description" : "<ul><li>[WTK-183030] - The current user does not have the following Function Access Profile permissions: 'PAY_RULES' with action 'ALLOWED'.</li></ul>"
          }
        }, 
        "summary" : "Creates one or more paycode distributions.", 
        "tags" : [ "Paycode Distributions" ]
      }
    }, 
    "/v1/timekeeping/setup/pay_code_distributions/multi_delete" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation deletes one or more paycode distributions by object references.</p><br /><p>The associated Access Control Point is PAY_RULE.</p>", 
        "operationId" : "Delete Paycode Distributions", 
        "parameters" : [ {
          "description" : "The Delete Paycode Distributions request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/PayCodeDistributionRefs"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "successful operation", 
            "schema" : {
              "$ref" : "#/definitions/PayCodeDistribution"
            }
          }, 
          "204" : {
            "description" : "Success.", 
            "schema" : {
              "$ref" : "#/definitions/PayCodeDistribution"
            }
          }, 
          "207" : {
            "description" : "<ul><li>[WTK-183038] - Some of the entities were not deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>[WTK-183039] - None of the entities were deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
          }, 
          "403" : {
            "description" : "<ul><li>[WTK-183030] - The current user does not have the following Function Access Profile permissions: 'PAY_RULES' with action 'ALLOWED'.</li></ul>"
          }
        }, 
        "summary" : "Deletes one or more paycode distributions.", 
        "tags" : [ "Paycode Distributions" ]
      }
    }, 
    "/v1/timekeeping/setup/pay_code_distributions/multi_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns one or more paycode distributions by object references.</p><br /><p>The associated Access Control Point is PAY_RULE.</p>", 
        "operationId" : "Retrieve Paycode Distributions", 
        "parameters" : [ {
          "description" : "The Retrieve Paycode Distributions request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/PayCodeDistributionRefs"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success.", 
            "schema" : {
              "$ref" : "#/definitions/PayCodeDistribution"
            }
          }, 
          "207" : {
            "description" : "<ul><li>[WTK-183036] - Some of the entities were not exported because of errors in the source data. Correct those errors and try again.</li></ul>"
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>[WTK-183037] - None of the entities were exported because of errors in the source data. Correct those errors and try again.</li></ul>"
          }, 
          "403" : {
            "description" : "<ul><li>[WTK-183030] - The current user does not have the following Function Access Profile permissions: 'PAY_RULES' with action 'ALLOWED'.</li></ul>"
          }
        }, 
        "summary" : "Returns one or more paycode distributions", 
        "tags" : [ "Paycode Distributions" ]
      }
    }, 
    "/v1/timekeeping/setup/pay_code_distributions/multi_update" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates one or more paycode distributions.</p><br /><p>The associated Access Control Point is PAY_RULE.</p>", 
        "operationId" : "Update Paycode Distributions", 
        "parameters" : [ {
          "description" : "The Update Paycode Distributions request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/PayCodeDistribution"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success.", 
            "schema" : {
              "$ref" : "#/definitions/PayCodeDistribution"
            }
          }, 
          "207" : {
            "description" : "<ul><li>[WTK-183034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
          }, 
          "400" : {
            "description" : "<p>Bad Request</p><ul><li>[WTK-183035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
          }, 
          "403" : {
            "description" : "<ul><li>[WTK-183030] - The current user does not have the following Function Access Profile permissions: 'PAY_RULES' with action 'ALLOWED'.</li></ul>"
          }
        }, 
        "summary" : "Updates one or more paycode distributions.", 
        "tags" : [ "Paycode Distributions" ]
      }
    }, 
    "/v1/timekeeping/setup/pay_code_distributions/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation deletes a paycode distribution by ID.</p><br /><p>The associated Access Control Point is PAY_RULE.</p>", 
        "operationId" : "Delete Paycode Distribution by ID", 
        "parameters" : [ {
          "description" : "The unique ID of a paycode distribution.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "Success."
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>[WTK-183201] - Pay Code Distribution may be in use and could not be deleted. Name or ID: 52.</li></ul>"
          }, 
          "403" : {
            "description" : "<ul><li>[WTK-183030] - The current user does not have the following Function Access Profile permissions: 'PAY_RULES' with action 'ALLOWED'.</li></ul>"
          }, 
          "404" : {
            "description" : "<ul><li>[WTK-183007] - Entity or entities not found. Type: Pay code distribution. Name or names or ID or IDs: {id}.</li></ul>"
          }
        }, 
        "summary" : "Deletes a paycode distribution.", 
        "tags" : [ "Paycode Distributions" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a paycode distribution by ID.</p><br /><p>The associated Access Control Point is PAY_RULE.</p>", 
        "operationId" : "Retrieve Paycode Distribution by ID", 
        "parameters" : [ {
          "description" : "The unique ID of a paycode distribution.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success.", 
            "schema" : {
              "$ref" : "#/definitions/PayCodeDistribution"
            }
          }, 
          "403" : {
            "description" : "<ul><li>[WTK-183001] - You do not have access to the entity or one of sub-entity. Type: {PayCode Distribution}. Name or ID: {302}</li><li>[WTK-183030] - The current user does not have the following Function Access Profile permissions: 'PAY_RULES' with action 'ALLOWED'.</li></ul>"
          }, 
          "404" : {
            "description" : "<ul><li>[WTK-183007] - Entity or entities not found. Type: PayCode Distribution. Name or names or ID or IDs: {id/name}.</li></ul>"
          }
        }, 
        "summary" : "Returns a paycode distribution.", 
        "tags" : [ "Paycode Distributions" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates a paycode distribution by ID.</p><br /><p>The associated Access Control Point is PAY_RULE.</p>", 
        "operationId" : "Update Paycode Distribution by ID", 
        "parameters" : [ {
          "description" : "The unique ID of a paycode distribution.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "The Update Paycode Distribution by ID request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/PayCodeDistribution"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success.", 
            "schema" : {
              "$ref" : "#/definitions/PayCodeDistribution"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>[WTK-112004] - ObjectRef with id: {id} could not be found.</li><li>[WTK-112005] - ObjectRef with qualifier: {qualifier} could not be found.</li><li>[WTK-112007] - You do not have access to the entity. Type: {type}. ID: {id}.</li><li>[WTK-112008] - You do not have access to the entity. Type: {type}. Name: {qualifier}.</li><li>[WTK-183002] - The following collection cannot be empty: paycodeAssignments.</li><li>[WTK-183003] - You must specify the following parameter: name.</li><li>[WTK-183005] - ID from path does not match ID from request payload.</li><li>[WTK-183006] - The following object reference is invalid: combinationRule.</li><li>[WTK-183008] - The following parameter cannot be empty: name.</li><li>[WTK-183015] - Name length exceeds 50 characters. Shorten the name.</li><li>[WTK-183016] - The field name cannot contain any of the following characters: ^*%?:;=()/&bsol;[]|#.</li><li>[WTK-183017] - The request contains the following entity type which has the following parameter with duplicate values. Entity type: Distribution Assignment. Parameter: paycodeAssignments. Duplicate values: [values].</li><li>[WTK-183202] - The name {name} you specified already in use. Enter a unique name.</li></ul>"
          }, 
          "403" : {
            "description" : "<ul><li>[WTK-183030] - The current user does not have the following Function Access Profile permissions: 'PAY_RULES' with action 'ALLOWED'.</li></ul>"
          }, 
          "404" : {
            "description" : "<ul><li>[WTK-183007] - Entity or entities not found. Type: Pay code distribution. Name or names or ID or IDs:  {id/qualifier}.</li></ul>"
          }
        }, 
        "summary" : "Updates a paycode distribution.", 
        "tags" : [ "Paycode Distributions" ]
      }
    }, 
    "/v1/timekeeping/setup/pay_code_symbolic_values" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p><strong>This operation is deprecated; instead use GET /v2/timekeeping/setup/pay_code_symbolic_values.</strong></p><p>This operation returns a list of paycode symbolic values available to a manager.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available paycode symbolic values to the manager.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified paycode symbolic value, if available to the manager.</li></ul><br /><br /><p><em><strong>Important Note:</strong> We recommend you update your implementations to utilize version 2 operations as they provide better security, performance, and functionality.</em></p>", 
        "operationId" : "Retrieve Paycode Symbolic Values as Manager (Deprecated)", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "qualifier", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of paycode symbolic values according to manager user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCodeSymbolicValue"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve paycode symbolic values.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of all Timekeeping paycode symbolic values available to a manager. This operation is deprecated.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v1/timekeeping/setup/pay_code_symbolic_values/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p><strong>This operation is deprecated; instead use GET /v2/timekeeping/setup/pay_code_symbolic_values/{id}.</strong></p><p>Given an ID, this operation returns the specified paycode symbolic value available to a manager.</p><br /><br /><p><em><strong>Important Note:</strong> We recommend you update your implementations to utilize version 2 operations as they provide better security, performance, and functionality.</em></p>", 
        "operationId" : "Retrieve Paycode Symbolic Value as Manager (Deprecated)", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a paycode symbolic value according to manager user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCodeSymbolicValue"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve a paycode symbolic value.</li></ul>"
          }
        }, 
        "summary" : "Return a Timekeeping paycode symbolic value available to a manager. This operation is deprecated.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v1/timekeeping/setup/pay_code_tags" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of all pay code tags.</p><br /><p>The associated Access Control Point is PAY_RULES.</p>", 
        "operationId" : "Retrieve All Pay Code Tags", 
        "parameters" : [ {
          "description" : "The name of a pay code tag.", 
          "in" : "query", 
          "name" : "name", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of pay code tags.", 
            "schema" : {
              "$ref" : "#/definitions/MDUIPayCodeTagDTO"
            }
          }, 
          "403" : {
            "description" : "[WTK-181089]-The current user does not have the following Function Access Profile permissions: '{fapName}' with action {fapAction}."
          }
        }, 
        "summary" : "Returns all pay code tags.", 
        "tags" : [ "Pay Code Tags" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation creates a pay code tag.</p><br /><p>The associated Access Control Point is PAY_RULES.</p>", 
        "operationId" : "Create Pay Code Tag", 
        "parameters" : [ {
          "description" : "The Create Pay Code Tag request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/MDUIPayCodeTagDTO"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully created a pay code tag.", 
            "schema" : {
              "$ref" : "#/definitions/MDUIPayCodeTagDTO"
            }
          }, 
          "400" : {
            "description" : "<p>Bad request:</p><ul> <li>[WTK-181083]-The following parameter cannot be empty: name. </li> <li>[WTK-181085]-The parameter: name must not exceed 50 characters. </li> <li>[WTK-181086]-The name of the pay code tag 'name' contains one or more of the following reserved characters: |*():;#%^?&bsol;[]=_\"&@<>. </li> <li>[WTK-181087]-The pay code tag name: ' New Tag' already exists in the system. Specify a unique pay code tag name. </li> </ul>"
          }, 
          "403" : {
            "description" : "[WTK-181089]-The current user does not have the following Function Access Profile permissions: '{fapName}' with action {fapAction}."
          }
        }, 
        "summary" : "Creates a pay code tag.", 
        "tags" : [ "Pay Code Tags" ]
      }
    }, 
    "/v1/timekeeping/setup/pay_code_tags/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation deletes a pay code tag by ID.</p><br /><p>The associated Access Control Point is PAY_RULES.</p>", 
        "operationId" : "Delete Pay Code Tag by ID", 
        "parameters" : [ {
          "description" : "The ID of a pay code tag.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "Successfully deleted a pay code tag."
          }, 
          "400" : {
            "description" : "[WTK-181088]-The selected tag is in use and could not be deleted."
          }, 
          "403" : {
            "description" : "[WTK-181089]-The current user does not have the following Function Access Profile permissions: '{fapName}' with action {fapAction}."
          }, 
          "404" : {
            "description" : "[WTK-181082]-The pay code tag entity was not found. id: {}."
          }
        }, 
        "summary" : "Deletes a pay code tag.", 
        "tags" : [ "Pay Code Tags" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a pay code tag by ID.</p><br /><p>The associated Access Control Point is PAY_RULES.</p>", 
        "operationId" : "Retrieve Pay Code Tag by ID", 
        "parameters" : [ {
          "description" : "The ID of a pay code tag.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a pay code tag.", 
            "schema" : {
              "$ref" : "#/definitions/MDUIPayCodeTagDTO"
            }
          }, 
          "403" : {
            "description" : "[WTK-181089]-The current user does not have the following Function Access Profile permissions: '{fapName}' with action {fapAction}."
          }, 
          "404" : {
            "description" : "[WTK-181082]-The pay code tag entity was not found. id: {}."
          }
        }, 
        "summary" : "Returns a pay code tag.", 
        "tags" : [ "Pay Code Tags" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates a pay code tag by ID.</p><br /><p>The associated Access Control Point is PAY_RULES.</p>", 
        "operationId" : "Update Pay Code Tag by ID", 
        "parameters" : [ {
          "description" : "The ID of a pay code tag.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "The Update Pay Code Tag by ID request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/MDUIPayCodeTagDTO"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully updated a pay code tag.", 
            "schema" : {
              "$ref" : "#/definitions/MDUIPayCodeTagDTO"
            }
          }, 
          "400" : {
            "description" : "<p>Bad request:</p><ul> <li>[WTK-181083]-The following parameter cannot be empty: name. <li>[WTK-181084]-You must specify the following parameter: id. <li>[WTK-181085]-The parameter: name must not exceed 50 characters. <li>[WTK-181086]-The name of the pay code tag '{name}' contains one or more of the following reserved characters: |*():;#%^?&bsol;[]=_\"&@<>. </li> </UL>"
          }, 
          "403" : {
            "description" : "[WTK-181089]-The current user does not have the following Function Access Profile permissions: '{fapName}' with action {fapAction}."
          }, 
          "404" : {
            "description" : "[WTK-181082]-The pay code tag entity was not found. id: {}."
          }
        }, 
        "summary" : "Updates a pay code tag.", 
        "tags" : [ "Pay Code Tags" ]
      }
    }, 
    "/v1/timekeeping/setup/pay_codes" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p><strong>This operation is deprecated; instead use GET /v2/timekeeping/setup/pay_codes.</strong></p><p>This operation returns a list of paycodes available to a manager.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available paycodes to the manager.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified paycode, if available to the manager.</li></ul><br /><br /><p><em><strong>Important Note:</strong> We recommend you update your implementations to utilize version 2 operations as they provide better security, performance, and functionality.</em></p>", 
        "operationId" : "Retrieve Paycodes as Manager (Deprecated)", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "qualifier", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of paycode types according to manager user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCode"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve paycodes.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of all Timekeeping paycodes available to a manager filtered by DAP. This operation is deprecated.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation creates a paycode. To succeed, this operation requires the following conditions be met:</p><ul><li>the specified paycode must be valid</li><li>the manager must have functional access to the paycode's actions</li><li>all paycode sub-entities must be visible to the manager according to that manager's Generic Data Access Profile (GDAP).</li></ul><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Create Paycode", 
        "parameters" : [ {
          "description" : "The Create Paycode request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/TimekeepingSetupPayCode"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully created the pay code definition object.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCode"
            }
          }, 
          "400" : {
            "description" : "Some validation failed. The pay code specified in the request can not be created."
          }, 
          "403" : {
            "description" : "This action is forbidden for the current user by functional access permissions."
          }
        }, 
        "summary" : "Creates a paycode.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v1/timekeeping/setup/pay_codes/multi_create" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation creates one or more paycodes. To succeed, this operation requires the following conditions be met for each paycode defined in the request payload:</p><ul><li>the specified paycode must be valid</li><li>the manager must have functional access to the paycode's actions</li><li>all paycode sub-entities must be visible to the manager according to that manager's Generic Data Access Profile (GDAP).</li></ul><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Create Paycodes", 
        "parameters" : [ {
          "description" : "The Create Paycode request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCode"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully created bulk amount of pay codes.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCode"
            }
          }, 
          "207" : {
            "description" : "Some of the specified pay codes could not be created."
          }, 
          "400" : {
            "description" : "No pay code definition eligable for creation was found in request."
          }, 
          "403" : {
            "description" : "This action is forbidden for the current user by functional access permissions."
          }
        }, 
        "summary" : "Creates one or more paycodes.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v1/timekeeping/setup/pay_codes/multi_delete" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation deletes one or more paycodes by object references. The following can be specified in the request payload:</p><ul><li>IDs -- the IDs of the paycodes to delete</li><li>qualifiers -- the names of the paycodes to delete</li><li>refs -- a list of objects containing either ID or qualifier, each of which represents a reference to a paycode to delete</li></ul><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Delete Paycodes", 
        "parameters" : [ {
          "description" : "The Delete Paycodes request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/TimekeepingSetupPayCodeMultiOperationWhere"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "All the pay codes were successfully deleted."
          }, 
          "207" : {
            "description" : "Some of the pay codes could not be deleted because not found or the user does not have corresponding rights. However at least one pay code was deleted."
          }, 
          "400" : {
            "description" : "There were no valid pay codes provided in the request, so nothing is deleted."
          }, 
          "403" : {
            "description" : "This action is forbidden for the current user by functional access permissions."
          }
        }, 
        "summary" : "Deletes one or more paycodes.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v1/timekeeping/setup/pay_codes/multi_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns one or more paycodes available to the logged-in manager by object references.</p><ul><li>When this operation is executed with <strong>IDs</strong>, the system returns a list of paycodes with corresponding IDs. Every ID that does not match an existing or visible paycode is wrapped within an exception</li><li>When this operation is executed with <strong>qualifiers</strong>, the system returns a list of paycodes with corresponding names. Every qualifier that does not match an existing or visible paycode name is wrapped within an exception</li><li>When this operation is executed with <strong>refs</strong>, the system returns a list of paycodes with corresponding IDs or (if ID is null) names. Every ID or qualifier that does not match an existing or visible paycode ID or name, respectively, along with every null reference, is wrapped within an exception</li></ul><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Retrieve Paycodes", 
        "parameters" : [ {
          "description" : "The Retrieve Paycodes request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/TimekeepingSetupPayCodeMultiOperationWhere"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved all the pay codes specified within the request.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/TimekeepingSetupPayCode"
              }, 
              "type" : "array"
            }
          }, 
          "207" : {
            "description" : "Indicates that the result of operation is partial success. Some pay codes were retrieved successfully, while other could not be resolved."
          }, 
          "400" : {
            "description" : "<p>Bad request:</p><ul> <li>[WTK-180401] - Timekeeping setup paycode service was accessed with a bad reference. </li> <li>[WTK-180451] - Timekeeping setup paycodesymbolicvalue service was accessed with a bad reference. </li> <li>All the pay codes specified with request criteria could not be resolved. Pay codes either do not exist or the user does not have access to them. </li> </ul>"
          }, 
          "403" : {
            "description" : "This action is forbidden for the current user by functional access permissions."
          }
        }, 
        "summary" : "Returns one or more paycodes available to a manager.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v1/timekeeping/setup/pay_codes/multi_update" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates one or more paycodes by object references. Note that <code>unit</code> and <code>type</code> cannot be updated.</p><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Update Paycodes", 
        "parameters" : [ {
          "description" : "The Update Paycodes request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCode"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully updated bulk amount of pay codes.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCode"
            }
          }, 
          "207" : {
            "description" : "Some pay codes could not be updated due to missing permissions or because of inner validations."
          }, 
          "400" : {
            "description" : "There are no valid pay codes to be updated in the request."
          }, 
          "403" : {
            "description" : "This action is forbidden for the current user by functional access permissions."
          }
        }, 
        "summary" : "Updates one or more paycodes.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v1/timekeeping/setup/pay_codes/multi_upsert" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation creates or updates one or more paycodes.</p><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Create or Update Paycodes", 
        "parameters" : [ {
          "description" : "The Create or Update Paycodes request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCode"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfuly created / updated all the pay codes provided in the request."
          }, 
          "207" : {
            "description" : "Some of the pay codes provided in the request can not be created / updated. However at least one pay code definition was processed successfully."
          }, 
          "400" : {
            "description" : "All entities provided in the request can not be updated / inserted."
          }, 
          "403" : {
            "description" : "This action is forbidden for the current user by functional access permissions."
          }
        }, 
        "summary" : "Creates or updates one or more paycodes.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v1/timekeeping/setup/pay_codes/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation deletes a paycode by ID.</p><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Delete Paycode by ID", 
        "parameters" : [ {
          "description" : "The ID of a paycode.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the pay code."
          }, 
          "400" : {
            "description" : "The pay code could not be deleted because some inner validation failed."
          }, 
          "403" : {
            "description" : "This action is forbidden for the current user by functional access permissions."
          }, 
          "404" : {
            "description" : "The pay code was not found."
          }
        }, 
        "summary" : "Deletes a paycode.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a partial paycode by ID. Only paycodes available to the logged-in manager are returned.</p><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Retrieve Paycode by ID as Manager", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a paycode type according to the manager user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCode"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve a paycode.</li></ul>"
          }
        }, 
        "summary" : "Returns a partial Timekeeping paycode available to a manager filtered by DAP.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates a paycode by ID. Note that <code>unit</code> and <code>type</code> cannot be updated.</p><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Update Paycode by ID", 
        "parameters" : [ {
          "description" : "The ID of a paycode.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "The Update Paycode by ID request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/TimekeepingSetupPayCode"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "The pay code was successfully updated.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCode"
            }
          }, 
          "400" : {
            "description" : "The pay code could not be updated because it does not exist or some inner validations failed."
          }, 
          "403" : {
            "description" : "This action is forbidden for the current user by functional access permissions."
          }, 
          "404" : {
            "description" : "The specified pay code could not be found and thus can not be updated."
          }
        }, 
        "summary" : "Updates a paycode.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v1/timekeeping/setup/paycodes" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of full paycodes available to a manager.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available paycodes to the manager.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified paycode, if available to the manager.</li></ul><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Retrieve Full Paycodes as Manager", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "qualifier", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of paycode types according to manager user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCode"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve paycodes.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of all Timekeeping paycodes available to a manager.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v1/timekeeping/setup/paycodes/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a full paycode by ID. Only paycodes available to the logged-in manager are returned.</p><br /><p>The associated Access Control Point is PAYCODE.</p>", 
        "operationId" : "Retrieve Full Paycode by ID as Manager", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a paycode type according to the manager user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCode"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve a paycode.</li></ul>"
          }
        }, 
        "summary" : "Returns a full Timekeeping paycode available to a manager.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v1/timekeeping/setup/payrules" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p><strong>This operation is deprecated; instead use GET /v2/timekeeping/setup/payrules.</strong></p><p>This operation returns a list of all Timekeeping pay rules.</p><br /><br /><p><em><strong>Important Note:</strong> We recommend you update your implementations to utilize version 2 operations as they provide better security, performance, and functionality.</em></p>", 
        "operationId" : "Retrieve All Timekeeping Pay Rules (Deprecated)", 
        "parameters" : [ {
          "description" : "The ID of a pay rule.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "The qualifier for a pay rule.", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        }, {
          "default" : true, 
          "description" : "A Boolean indicator of whether or not the response returns all details of each pay rule. When false, the response returns only the ID and name of each pay rule.", 
          "in" : "query", 
          "name" : "all_details", 
          "required" : false, 
          "type" : "boolean"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of pay rules.", 
            "schema" : {
              "$ref" : "#/definitions/Pay Rule"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul> <li>[WTK-180150] - Pay Rule does not exist or accessed with a bad reference. </li> <li>[WTK-180151] - Unexpected exception occurs while fetching payrule data. </li> <li>[WTK-180152] - Data validation exception occurs due to bad input data while request processing. Please verify input data. </li> <li>general error in retriving pay rules.</li> </ul>"
          }
        }, 
        "summary" : "Returns all Timekeeping pay rules. This operation is deprecated.", 
        "tags" : [ "Timekeeping Pay Rules" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p><strong>This operation is deprecated; instead use POST /v2/timekeeping/setup/payrules.</strong></p><p>This operation creates a Pay Rule. This operation is deprecated.</p><br /><br /><p><em><strong>Important Note:</strong> We recommend you update your implementations to utilize version 2 operations as they provide better security, performance, and functionality.</em></p>", 
        "operationId" : "Create Timekeeping Pay Rule (Deprecated)", 
        "parameters" : [ {
          "description" : "The Create Pay Rules request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Pay Rule"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully created a Pay Rule.", 
            "schema" : {
              "$ref" : "#/definitions/Pay Rule"
            }
          }, 
          "400" : {
            "description" : "[WTK-180173] -A Pay Rule already exists with the name."
          }, 
          "403" : {
            "description" : "[WTK-180159]-The current User is not authorized to access Pay Rules."
          }, 
          "409" : {
            "description" : "[WTK-180173] -A Pay Rule already exists with the name."
          }
        }, 
        "summary" : "Creates a Pay Rule. This operation is deprecated.", 
        "tags" : [ "Timekeeping Pay Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/payrules/multi_create" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation creates one or more Pay Rules.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of pay rules that can be processed in a single request.</p><ul><li>The <strong>Number of Pay Rules</strong> cannot exceed 20.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>", 
        "operationId" : "Create Timekeeping Pay Rules", 
        "parameters" : [ {
          "description" : "The Create Pay Rules request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/Pay Rule"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful multi create of Pay Rules.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/Pay Rule"
              }, 
              "type" : "array"
            }
          }, 
          "207" : {
            "description" : "[WTK-181113]- Partially created a list of Pay Rules. Some of the specified object references could not be created."
          }, 
          "400" : {
            "description" : "[WTK-180172]- A Pay rule name is required to create Pay Rule."
          }, 
          "403" : {
            "description" : "[WTK-180159]-The current User is not authorized to access Pay Rules."
          }, 
          "413" : {
            "description" : "[WTK-180158]-Service limit exceeded."
          }
        }, 
        "summary" : "Creates one or more Pay Rules.", 
        "tags" : [ "Timekeeping Pay Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/payrules/multi_delete" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation deletes a list of Timekeeping Setup Pay Rules by object references.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of pay rules that can be processed in a single request.</p><ul><li>The <strong>Number of Pay Rules</strong> cannot exceed 20.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>", 
        "operationId" : "Delete Timekeeping Pay Rules", 
        "parameters" : [ {
          "description" : "A list of references to the Timekeeping Setup Pay Rule objects to delete.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/PayRuleRequest"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "successful operation", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/ObjectRef Entity"
              }, 
              "type" : "array"
            }
          }, 
          "204" : {
            "description" : "Successfully deleted Timekeeping Setup Pay Rules.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/ObjectRef Entity"
              }, 
              "type" : "array"
            }
          }, 
          "207" : {
            "description" : "[WTK-180169]-Partially deleted a list of pay rules. Some of the specified object references do not exist."
          }, 
          "400" : {
            "description" : "Invalid request."
          }, 
          "403" : {
            "description" : "[WTK-180159]-You are not authorized to access pay rules setup."
          }, 
          "404" : {
            "description" : "[WTK-180153]-Specified pay rule object references do not exist."
          }, 
          "413" : {
            "description" : "[WTK-180158]-Service limit exceeded."
          }
        }, 
        "summary" : "Deletes a list of Timekeeping Setup Pay Rules.", 
        "tags" : [ "Timekeeping Pay Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/payrules/multi_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a list of pay rules by object references.", 
        "operationId" : "Retrieve Timekeeping Pay Rules", 
        "parameters" : [ {
          "description" : "The Retrieve Pay Rules request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/PayRuleRequest"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of pay rules.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/Pay Rule"
              }, 
              "type" : "array"
            }
          }, 
          "207" : {
            "description" : "[WTK-180154]-Partially retrieved a list of pay rules. Some of the specified object references do not exist."
          }, 
          "400" : {
            "description" : "<p>Bad request:</p><ul> <li>[WFP-101086] - Input parameter is null. </li> <li>[WFP-101089] - At least one of the criteria must be specified. Parameter: {paramName} </li> <li>[WFS-111208] - At least one of the criteria must be specified. Parameter: {paramName} </li> <li>[WTK-180150] - Pay Rule does not exist or accessed with a bad reference. </li> <li>[WTK-180151] - Unexpected exception occurs while fetching payrule data. </li> <li>[WTK-180152] - Data validation exception occurs due to bad input data while request processing. Please verify input data. </li> <li>[WTK-180153] - Specified Pay Rule object references does not exist or could not be deleted. </li> <li>[WTK-180154] - Partially retrieved a list of Pay Rules. Some of the specified object references do not exist. </li> <li>[WTK-180155] - A Pay Rule does not exist for the specified Id: {id}. </li> <li>[WTK-180156] - A Pay Rule does not exist with specified Qualifier: {qualifier}. </li> <li>[WTK-180159] - You are not authorized to access Pay Rule setup. </li> <li>[WTK-180160] - A Pay Rule does not exist with specified Persistent Id: {persistentId}. </li> <li>[WTK-181105] - Pay Rule does not exist or accessed with a bad reference. </li> </ul>"
          }, 
          "403" : {
            "description" : "[WTK-180152]-The current User is not authorized to access Pay Rule."
          }, 
          "404" : {
            "description" : "[WTK-180153] - Specified pay rule object references do not exist."
          }
        }, 
        "summary" : "Returns a list of pay rules.", 
        "tags" : [ "Timekeeping Pay Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/payrules/multi_update" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates one or more Pay Rules.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of pay rules that can be processed in a single request.</p><ul><li>The <strong>Number of Pay Rules</strong> cannot exceed 20.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>", 
        "operationId" : "Update Timekeeping Pay Rules", 
        "parameters" : [ {
          "description" : "The Update Pay Rules request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/Pay Rule"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful multi update of Pay Rules.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/Pay Rule"
              }, 
              "type" : "array"
            }
          }, 
          "207" : {
            "description" : "[WTK-181111] -Partially updated a list of Pay Rules. Some of the specified object references could not be updated."
          }, 
          "400" : {
            "description" : "[WTK-181121] -An invalid sign-off lock type ID was passed."
          }, 
          "403" : {
            "description" : "[WTK-180159]-The current User is not authorized to access Pay Rules."
          }, 
          "404" : {
            "description" : "[WTK-181112]-The specified Pay Rules could not be updated."
          }, 
          "413" : {
            "description" : "[WTK-180158]-Service limit exceeded."
          }
        }, 
        "summary" : "Update one or more Pay Rules.", 
        "tags" : [ "Timekeeping Pay Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/payrules/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation deletes a Timekeeping Setup Pay Rule by ID.", 
        "operationId" : "Delete Timekeeping Pay Rule by ID", 
        "parameters" : [ {
          "description" : "The ID of a Timekeeping Setup Pay Rule.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "Successfully deleted Timekeeping Setup Pay Rule."
          }, 
          "400" : {
            "description" : "[WTK-180166]-No Operation allowed on gold data: {id}."
          }, 
          "403" : {
            "description" : "[WTK-180159]-The current User is not authorized to access this operation."
          }, 
          "404" : {
            "description" : "[WTK-180155]-A pay rule does not exist with specified ID: {id}."
          }
        }, 
        "summary" : "Deletes a Timekeeping Setup Pay Rule.", 
        "tags" : [ "Timekeeping Pay Rules" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation updates a Pay Rule by ID.", 
        "operationId" : "Update Timekeeping Pay Rule by ID", 
        "parameters" : [ {
          "description" : "The ID of a Pay Rule.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "The Update Pay Rule by ID request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Pay Rule"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully updated a Pay Rule.", 
            "schema" : {
              "$ref" : "#/definitions/Pay Rule"
            }
          }, 
          "400" : {
            "description" : "[WTK-181121] -An invalid sign-off lock type ID was passed."
          }, 
          "403" : {
            "description" : "[WTK-180159]-The current User is not authorized to access Pay Rules."
          }, 
          "404" : {
            "description" : "[WTK-180115]-A Pay Rule does not exist with specified ID: {id}."
          }
        }, 
        "summary" : "Updates a Pay Rule.", 
        "tags" : [ "Timekeeping Pay Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/percentage_allocation_rules" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a list of all fixed percentage allocation rules.", 
        "operationId" : "Retrieve All Percentage Allocation Rules", 
        "parameters" : [ {
          "description" : "The ID of the FPARule.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "The qualifier for the FPARule.", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        }, {
          "default" : true, 
          "description" : "A Boolean indicator of whether or not the response returns all details of each percentage allocation rule. When false, the response returns only the ID, name, and persistent ID.", 
          "in" : "query", 
          "name" : "all_details", 
          "required" : false, 
          "type" : "boolean"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returned the complete list of fixed percentage allocation rules.", 
            "schema" : {
              "$ref" : "#/definitions/FPARule"
            }
          }, 
          "400" : {
            "description" : "Bad request.", 
            "schema" : {
              "$ref" : "#/definitions/HttpServletResponse"
            }
          }
        }, 
        "summary" : "Returns a list of all fixed percentage allocation rules.", 
        "tags" : [ "Percentage Allocation Rules" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation creates a fixed percentage allocation rule.", 
        "operationId" : "Create Percentage Allocation Rule", 
        "parameters" : [ {
          "description" : "Percentage Allocation Rule to create.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/FPARule"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully created a fixed percentage allocation rule.", 
            "schema" : {
              "$ref" : "#/definitions/FPARule"
            }
          }, 
          "400" : {
            "description" : "Bad request.", 
            "schema" : {
              "$ref" : "#/definitions/HttpServletResponse"
            }
          }
        }, 
        "summary" : "Creates a fixed percentage allocation rule.", 
        "tags" : [ "Percentage Allocation Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/percentage_allocation_rules/multi_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of people profiles by object references.</p><br /><p>The associated Access Control Point is PROFILE_TEMPLATE.</p>", 
        "operationId" : "Retrieve Percentage Allocation Rules", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Multi Read Request for percentage allocation rules"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of FPA Rules.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/Response"
              }, 
              "type" : "array"
            }
          }, 
          "207" : {
            "description" : "<ul>[WTK-82555] - Some FPA Rule object references do not exist.<li>[WTK-82557] - FPA rule with ID {FPARuleId} does not exist.</li><li>[WTK-82558] - FPA rule with Persistent Id {persistentId} does not exist.</li></ul>"
          }, 
          "400" : {
            "description" : "[WTK-82559] - At least one parameter from ids/qualifiers/persistentIds/refs is required inside where clause."
          }
        }, 
        "summary" : "Returns a list of fixed percentage allocation rules.", 
        "tags" : [ "Percentage Allocation Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/percentage_allocation_rules/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation deletes a fixed percentage allocation rule by ID.", 
        "operationId" : "Delete Percentage Allocation Rule by ID", 
        "parameters" : [ {
          "description" : "The ID of the FPARule to delete.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "Successfully deleted a fixed percentage allocation rule by ID."
          }, 
          "400" : {
            "description" : "Bad request.", 
            "schema" : {
              "$ref" : "#/definitions/HttpServletResponse"
            }
          }
        }, 
        "summary" : "Deletes a fixed percentage allocation rule by ID.", 
        "tags" : [ "Percentage Allocation Rules" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a list of all fixed percentage allocation rules.", 
        "operationId" : "Add Rule Version to Percentage Allocation Rule by ID", 
        "parameters" : [ {
          "description" : "The FPA RuleVersion to create.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/FPARuleVersion"
          }
        }, {
          "description" : "The ID of the FPA Rule.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully added FPARuleVersion data.", 
            "schema" : {
              "$ref" : "#/definitions/FPARuleVersion"
            }
          }, 
          "400" : {
            "description" : "Bad request.", 
            "schema" : {
              "$ref" : "#/definitions/HttpServletResponse"
            }
          }
        }, 
        "summary" : "Adds a fixed percent allocation rule version to a percentage allocation rule.", 
        "tags" : [ "Percentage Allocation Rules" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation updates a fixed percentage allocation rule by ID.", 
        "operationId" : "Update Percentage Allocation Rule by ID", 
        "parameters" : [ {
          "description" : "Percentage Allocation Rule to update.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/FPARule"
          }
        }, {
          "description" : "The ID of the FPA Rule.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully updated the specified fixed percentage allocation rule by ID.", 
            "schema" : {
              "$ref" : "#/definitions/FPARule"
            }
          }, 
          "400" : {
            "description" : "Bad request.", 
            "schema" : {
              "$ref" : "#/definitions/HttpServletResponse"
            }
          }
        }, 
        "summary" : "Updates a fixed percentage allocation rule by ID.", 
        "tags" : [ "Percentage Allocation Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/time_off_rules" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns all time-off rules according to the current user's access rights.", 
        "operationId" : "Retrieve All Time-Off Rules", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved all Time-Off Rules according to user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/Time-Off Rule"
            }
          }, 
          "403" : {
            "description" : "[WTK-181070]-The current user does not have the following Function Access Profile permissions: 'REST_API_SETUP' with action 'ALLOWED'."
          }
        }, 
        "summary" : "Returns all time-off rules.", 
        "tags" : [ "Time-Off Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/timecard_addon_groups" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns Timecard Add-On group options by Timecard Add-On type.</p><br /><p>The associated Access Control Point is DISPLAY_PROFILES.</p>", 
        "operationId" : "Retrieve Timecard Add-On Group Options", 
        "parameters" : [ {
          "description" : "The name of a Timecard Add-On type.", 
          "in" : "query", 
          "name" : "type", 
          "required" : true, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved Timecard Add-On group options.", 
            "schema" : {
              "$ref" : "#/definitions/Key for MDUI related entities"
            }
          }
        }, 
        "summary" : "Returns Timecard Add-On group options.", 
        "tags" : [ "Timecard Add-On Group Options" ]
      }
    }, 
    "/v1/timekeeping/setup/work_rules" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p><strong>This operation is deprecated; instead use GET /v2/timekeeping/setup/work_rules.</strong></p><p>This operation returns a list of work rules available to a manager.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available work rules to the manager.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified work rule, if available to the manager.</li></ul><br /><br /><p><em><strong>Important Note:</strong> We recommend you update your implementations to utilize version 2 operations as they provide better security, performance, and functionality.</em></p>", 
        "operationId" : "Retrieve Work Rules as Manager (Deprecated)", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "qualifier", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of work rule types according to the manager's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupWorkRule"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve work rules.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of all Timekeeping work rules available to a manager. This operation is deprecated.", 
        "tags" : [ "Work Rules" ]
      }
    }, 
    "/v1/timekeeping/setup/work_rules/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p><strong>This operation is deprecated; instead use GET /v2/timekeeping/setup/work_rules/{id}.</strong></p><p>Given an ID, this operation returns the specified work rule available to a manager.</p><br /><br /><p><em><strong>Important Note:</strong> We recommend you update your implementations to utilize version 2 operations as they provide better security, performance, and functionality.</em></p>", 
        "operationId" : "Retrieve Work Rule by ID as Manager (Deprecated)", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a work rule type according to the manager's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupWorkRule"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve a work rule.</li></ul>"
          }
        }, 
        "summary" : "Returns a Timekeeping work rule available to a manager. This operation is deprecated.", 
        "tags" : [ "Work Rules" ]
      }
    }, 
    "/v2/timekeeping/setup/accrual_codes" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of accrual code types according to the user's access rights.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available accrual codes.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified accrual code.</li></ul><br /><p>The associated Access Control Point is ACCRUALS_CONFIGURATION.</p>", 
        "operationId" : "Retrieve Accrual Codes", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "qualifier", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of accrual code type(s) according to the user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupAccrualCode"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve accrual codes.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of accrual code types.", 
        "tags" : [ "Accrual Codes" ]
      }
    }, 
    "/v2/timekeeping/setup/accrual_profiles" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of accrual profiles according to the user's access rights.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available accrual profiles.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified accrual profile.</li></ul><br /><p>The associated Access Control Point is ACCRUALS_CONFIGURATION.</p>", 
        "operationId" : "Retrieve All Accrual Profiles", 
        "parameters" : [ {
          "description" : "The ID of the accrual profile.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "Qualifier for the accrual profile.", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        }, {
          "default" : true, 
          "description" : "A Boolean indicator of whether or not the response returns all details of each accrual profile. When false, the response returns only the ID and name of each accrual profile.", 
          "in" : "query", 
          "name" : "all_details", 
          "required" : false, 
          "type" : "boolean"
        }, {
          "default" : false, 
          "description" : "A Boolean indicator of whether or not to include accrual policies in the response.", 
          "in" : "query", 
          "name" : "include_accrual_policies", 
          "required" : false, 
          "type" : "boolean"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of accrual profile types according to user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupAccrualProfile"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve accrual profiles.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of accrual profiles.", 
        "tags" : [ "Accrual Profiles" ]
      }
    }, 
    "/v2/timekeeping/setup/accrual_profiles/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation takes an ID and returns the specified accrual profile type according to the user's access rights.</p><br /><p>The associated Access Control Point is ACCRUALS_CONFIGURATION.</p>", 
        "operationId" : "Retrieve Accrual Profile by ID", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved an accrual profile type according to the given ID and the user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupAccrualProfile"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve accrual profile.</li></ul>"
          }
        }, 
        "summary" : "Returns an accrual profile type.", 
        "tags" : [ "Accrual Profiles" ]
      }
    }, 
    "/v2/timekeeping/setup/break_rules" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of complete break rule definitions filtered by the calling user's GDAP.</p><br /><p>The associated Access Control Point is PAY_RULES.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available break rules.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified break rule.</li></ul>", 
        "operationId" : "Retrieve GDAP-filtered Break Rules", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "qualifier", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of GDAP-filtered break rules.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupBreakRuleV2"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve break rules.</li></ul>"
          }, 
          "404" : {
            "description" : "Not Found: <ul><li>[WTK-170005] - The Break Rule with requested id does not exist. </li> <li>[WTK-170006] - Specified Break Rule object references do not exist. </li> </ul>"
          }
        }, 
        "summary" : "Returns a list of break rules.", 
        "tags" : [ "Break Rules" ]
      }
    }, 
    "/v2/timekeeping/setup/break_rules/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a complete break rule definition by ID. The response is filtered by the calling user's GDAP.</p><br /><p>The associated Access Control Point is PAY_RULES.</p>", 
        "operationId" : "Retrieve GDAP-filtered Break Rule by ID", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a GDAP-filtered break rule.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupBreakRuleV2"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve a break rule.</li></ul>"
          }, 
          "404" : {
            "description" : "Not Found: <ul><li>[WTK-170005] - The Break Rule with requested id does not exist.</li></ul>"
          }
        }, 
        "summary" : "Returns a break rule.", 
        "tags" : [ "Break Rules" ]
      }
    }, 
    "/v2/timekeeping/setup/deduct_rules" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of bonus and deduction rules.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available bonus and deduction rules.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified bonus or deduction rule.</li></ul><br /><p>The associated Access Control Point is DEDUCTION_RULES_BEANS.</p>", 
        "operationId" : "Retrieve Bonus and Deduction Rules", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "qualifier", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of bonus and deduction rules.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupBonusDeductionRule"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve bonus and deduction rules.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of bonus and deduction rules.", 
        "tags" : [ "Bonus and Deduction Rules" ]
      }
    }, 
    "/v2/timekeeping/setup/deduct_rules/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation takes an ID and returns the specified bonus or deduction rule.</p><br /><p>The associated Access Control Point is DEDUCTION_RULES_BEANS.</p>", 
        "operationId" : "Retrieve Bonus or Deduction Rule by ID", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a bonus or deduction rule.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupBonusDeductionRule"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to a bonus or deduction rule.</li></ul>"
          }
        }, 
        "summary" : "Returns a bonus or deduction rule.", 
        "tags" : [ "Bonus and Deduction Rules" ]
      }
    }, 
    "/v2/timekeeping/setup/employee_pay_code_symbolic_values" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of paycode symbolic values available to an employee.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available paycode symbolic values to the employee.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified paycode symbolic value, if available to the employee.</li></ul><br /><p>The associated Access Control Point is PAY_CODE_NAME_LIST.</p>", 
        "operationId" : "Retrieve Paycode Symbolic Values as Employee", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "qualifier", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of paycode symbolic values according to employee user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCodeSymbolicValue"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve paycode symbolic values.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of all Timekeeping paycode symbolic values available to an employee.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v2/timekeeping/setup/employee_pay_code_symbolic_values/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a paycode symbolic value by ID to an employee.</p><br /><p>The associated Access Control Point is PAY_CODE_NAME_LIST.</p>", 
        "operationId" : "Retrieve Paycode Symbolic Value by ID as Employee", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a paycode symbolic value according to employee user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCodeSymbolicValue"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve a paycode symbolic value.</li></ul>"
          }
        }, 
        "summary" : "Returns a Timekeeping paycode symbolic value to an employee.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v2/timekeeping/setup/employee_pay_codes" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of paycodes available to an employee.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available paycodes to the employee.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified paycode, if available to the employee.</li></ul><br /><p>The associated Access Control Point is PAY_CODE_NAME_LIST.</p>", 
        "operationId" : "Retrieve Paycodes as Employee", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "qualifier", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of paycode types according to the employee's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCode"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve paycodes.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of all Timekeeping paycodes available to an employee filtered by DAP.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v2/timekeeping/setup/employee_pay_codes/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a partial paycode by ID. Only paycodes available to the logged-in employee are returned.</p><br /><p>The associated Access Control Point is PAY_CODE_NAME_LIST.</p>", 
        "operationId" : "Retrieve Paycode by ID as Employee", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a paycode type according to the employee's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCode"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve a paycode.</li></ul>"
          }
        }, 
        "summary" : "Returns a partial Timekeeping paycode available to an employee filtered by DAP.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v2/timekeeping/setup/employee_work_rules" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of work rules available to an employee.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available work rules to the employee.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified work rule, if available to the employee.</li></ul><br /><p>The associated Access Control Point is EA_WORKRULE_TRANSFERS.</p>", 
        "operationId" : "Retrieve Work Rules as Employee", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "qualifier", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of work rule types according to the employee's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupWorkRule"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve work rules.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of all Timekeeping work rules available to an employee.", 
        "tags" : [ "Work Rules" ]
      }
    }, 
    "/v2/timekeeping/setup/employee_work_rules/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a work rule by ID to an employee.</p><br /><p>The associated Access Control Point is EA_WORKRULE_TRANSFERS.</p>", 
        "operationId" : "Retrieve Work Rule by ID as Employee", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a work rule type according to the employee's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupWorkRule"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve a work rule.</li></ul>"
          }
        }, 
        "summary" : "Returns a Timekeeping work rules available to an employee.", 
        "tags" : [ "Work Rules" ]
      }
    }, 
    "/v2/timekeeping/setup/employment_terms" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns all employment terms.</p><br /><p>The associated Access Control Point is EMPLOYMENT_TERMS_SETUP.</p>", 
        "operationId" : "Retrieve All Employment Terms", 
        "parameters" : [ {
          "description" : "The ID of an employment term.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "The name of an employment term.", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        }, {
          "default" : true, 
          "description" : "A Boolean indicator of whether or not the response returns all details of each employment term. When false, the response returns only the ID, name, and Persistent ID of each employment term.", 
          "in" : "query", 
          "name" : "all_details", 
          "required" : false, 
          "type" : "boolean"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved all employment term information according to user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/Employment Term"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }
        }, 
        "summary" : "Returns all employment terms.", 
        "tags" : [ "Employment Terms" ]
      }
    }, 
    "/v2/timekeeping/setup/employment_terms/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns an employment term by ID.</p><br /><p>The associated Access Control Point is EMPLOYMENT_TERMS_SETUP.</p>", 
        "operationId" : "Retrieve Employment Term by ID", 
        "parameters" : [ {
          "description" : "The ID of an employment term.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Given an ID, successfully retrieved the specified employment term information according to user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/Employment Term"
            }
          }, 
          "400" : {
            "description" : "Internal server error."
          }
        }, 
        "summary" : "Returns an employment term.", 
        "tags" : [ "Employment Terms" ]
      }
    }, 
    "/v2/timekeeping/setup/pay_code_symbolic_values" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of paycode symbolic values available to a manager.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available paycode symbolic values to the manager.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified paycode symbolic value, if available to the manager.</li></ul><br /><p>The associated Access Control Point is PAY_CODE_NAME_LIST.</p>", 
        "operationId" : "Retrieve Paycode Symbolic Values as Manager", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "qualifier", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of paycode symbolic values according to manager user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCodeSymbolicValue"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve paycode symbolic values.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of all Timekeeping paycode symbolic values available to a manager.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v2/timekeeping/setup/pay_code_symbolic_values/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a paycode symbolic value by ID to a manager.</p><br /><p>The associated Access Control Point is PAY_CODE_NAME_LIST.</p>", 
        "operationId" : "Retrieve Paycode Symbolic Value by ID as Manager", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a paycode symbolic value according to manager user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCodeSymbolicValue"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve a paycode symbolic value.</li></ul>"
          }
        }, 
        "summary" : "Return a Timekeeping paycode symbolic value available to a manager.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v2/timekeeping/setup/pay_codes" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of paycodes available to a manager.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available paycodes to the manager.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified paycode, if available to the manager.</li></ul><br /><p>The associated Access Control Point is PAY_CODE_NAME_LIST.</p>", 
        "operationId" : "Retrieve Paycodes as Manager", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "qualifier", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of paycode types according to manager user's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupPayCode"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve paycodes.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of all Timekeeping paycodes available to a manager filtered by DAP.", 
        "tags" : [ "Paycodes for Timekeeping" ]
      }
    }, 
    "/v2/timekeeping/setup/payrules" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of all Timekeeping pay rules.</p><br /><p>The associated Access Control Point is PAY_RULES.</p>", 
        "operationId" : "Retrieve All Timekeeping Pay Rules", 
        "parameters" : [ {
          "description" : "The ID of a pay rule.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "The qualifier for a pay rule.", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        }, {
          "default" : true, 
          "description" : "A Boolean indicator of whether or not the response returns all details of each pay rule. When false, the response returns only the ID and name of each pay rule.", 
          "in" : "query", 
          "name" : "all_details", 
          "required" : false, 
          "type" : "boolean"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of pay rules.", 
            "schema" : {
              "$ref" : "#/definitions/Pay Rule"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul> <li>[WTK-180150] - Pay Rule does not exist or accessed with a bad reference. </li> <li>[WTK-180151] - Unexpected exception occurs while fetching payrule data. </li> <li>[WTK-180152] - Data validation exception occurs due to bad input data while request processing. Please verify input data. </li> <li>general error in retriving pay rules.</li> </ul>"
          }
        }, 
        "summary" : "Returns all Timekeeping pay rules.", 
        "tags" : [ "Timekeeping Pay Rules" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "deprecated" : true, 
        "description" : "<p>This operation creates a Pay Rule.</p><br /><p>The associated Access Control Point is PAY_RULES.</p>", 
        "operationId" : "Create Timekeeping Pay Rule", 
        "parameters" : [ {
          "description" : "The Create Timekeeping Pay Rule request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Pay Rule"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully created a Pay Rule.", 
            "schema" : {
              "$ref" : "#/definitions/Pay Rule"
            }
          }, 
          "400" : {
            "description" : "[WTK-180173] -A Pay Rule already exists with the name."
          }, 
          "403" : {
            "description" : "[WTK-180159]-The current User is not authorized to access Pay Rules."
          }, 
          "409" : {
            "description" : "[WTK-180173] -A Pay Rule already exists with the name."
          }
        }, 
        "summary" : "Creates a Pay Rule.", 
        "tags" : [ "Timekeeping Pay Rules" ]
      }
    }, 
    "/v2/timekeeping/setup/work_rules" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of work rules available to a manager.</p><ul><li>When this operation is executed with no parameters, the system returns a list of all available work rules to the manager.</li><li>When this operation includes an ID or qualifier, the system returns a list containing the specified work rule, if available to the manager.</li></ul><br /><p>The associated Access Control Point is PAY_RULES.</p>", 
        "operationId" : "Retrieve Work Rules as Manager", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "qualifier", 
          "in" : "query", 
          "name" : "qualifier", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of work rule types according to the manager's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupWorkRule"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve work rules.</li></ul>"
          }
        }, 
        "summary" : "Returns a list of all Timekeeping work rules available to a manager.", 
        "tags" : [ "Work Rules" ]
      }
    }, 
    "/v2/timekeeping/setup/work_rules/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a work rule by ID to a manager. </p><br /><p>The associated Access Control Point is PAY_RULES.</p>", 
        "operationId" : "Retrieve Work Rule by ID as Manager", 
        "parameters" : [ {
          "description" : "id", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a work rule type according to the manager's access rights.", 
            "schema" : {
              "$ref" : "#/definitions/TimekeepingSetupWorkRule"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A general error occurred when attempting to retrieve a work rule.</li></ul>"
          }
        }, 
        "summary" : "Returns a Timekeeping work rule available to a manager.", 
        "tags" : [ "Work Rules" ]
      }
    }
  }, 
  "schemes" : null, 
  "definitions" : {
    "TimekeepingSetupAccrualCode" : {
      "description" : "Entity containing necessary data to describe an accrual code.", 
      "properties" : {
        "allowEdit" : {
          "description" : "A Boolean indicator of whether or not an accrual code is editable.", 
          "type" : "boolean"
        }, 
        "hoursPerDayInSeconds" : {
          "description" : "The hours per day (in seconds) associated with an accrual code.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "id" : {
          "description" : "The ID of an accrual code.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of an accrual code.", 
          "type" : "string"
        }, 
        "shortName" : {
          "description" : "The short name of an accrual code.", 
          "type" : "string"
        }, 
        "typeId" : {
          "description" : "The ID of an accrual code type.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "typeName" : {
          "description" : "The type name of an accrual code.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "AccrualPolicyMultiReadRequest" : {
      "description" : "Entity containing necessary data to describe multi read request for accrual policy.", 
      "properties" : {
        "where" : {
          "$ref" : "#/definitions/AccrualPolicyWhereObject", 
          "description" : "The where clause associated with an Accrual Policy multi_read request."
        }
      }, 
      "required" : [ "where" ], 
      "type" : "object"
    }, 
    "TimekeepingSetupAccrualPolicyDTO" : {
      "description" : "Entity containing necessary data to describe an accrual policy.", 
      "properties" : {
        "effectiveAccrualPolicies" : {
          "description" : "A list of the effective accrual policies in an accrual policy.", 
          "items" : {
            "$ref" : "#/definitions/TimekeepingSetupEffectiveAccrualPolicies"
          }, 
          "type" : "array"
        }, 
        "id" : {
          "description" : "The ID of an accrual policy.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of an accrual policy.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingSetupAccrualProfile" : {
      "description" : "Entity containing necessary data to describe an accrual profile.", 
      "properties" : {
        "accrualCodes" : {
          "description" : "A list of the accrual codes in an accrual profile.", 
          "items" : {
            "$ref" : "#/definitions/TimekeepingSetupAccrualCode"
          }, 
          "type" : "array"
        }, 
        "accrualPolicies" : {
          "description" : "A list of the accrual policies in an accrual profile.", 
          "items" : {
            "$ref" : "#/definitions/TimekeepingSetupAccrualPolicy"
          }, 
          "type" : "array"
        }, 
        "id" : {
          "description" : "The ID of an accrual profile.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of an accrual profile.", 
          "type" : "string"
        }, 
        "persistentId" : {
          "description" : "The persistent ID associated with each accrual profile which is unique across different systems.", 
          "type" : "string"
        }, 
        "poolAccrualCode" : {
          "$ref" : "#/definitions/TimekeepingSetupAccrualCode", 
          "description" : "The accrual code pool of an accrual profile."
        }
      }, 
      "type" : "object"
    }, 
    "AdjustmentRule" : {
      "description" : "Adjustment Rules information.", 
      "properties" : {
        "id" : {
          "description" : "The id of an adjustment rule.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of an adjustment rule.", 
          "type" : "string"
        }, 
        "ruleVersions" : {
          "$ref" : "#/definitions/RuleVersions", 
          "description" : "A list of revisions to the adjustment rule."
        }
      }, 
      "required" : [ "name", "ruleVersions" ], 
      "type" : "object"
    }, 
    "HttpServletResponse" : {
      "properties" : {
        "bufferSize" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "characterEncoding" : {
          "type" : "string"
        }, 
        "committed" : {
          "type" : "boolean"
        }, 
        "contentType" : {
          "type" : "string"
        }, 
        "headerNames" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "locale" : {
          "$ref" : "#/definitions/Locale"
        }, 
        "outputStream" : {
          "$ref" : "#/definitions/ServletOutputStream"
        }, 
        "status" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "trailerFields" : {
          "$ref" : "#/definitions/SupplierMapStringString"
        }, 
        "writer" : {
          "$ref" : "#/definitions/PrintWriter"
        }
      }, 
      "type" : "object"
    }, 
    "AdjustmentRuleVersion" : {
      "description" : "Adjustment Rule Version information.", 
      "properties" : {
        "description" : {
          "description" : "A simple description of the adjustment rule version (revision).", 
          "type" : "string"
        }, 
        "effectiveDate" : {
          "description" : "The date on which the version (revision) begins.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "expirationDate" : {
          "description" : "The end date of the version (revision).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "triggers" : {
          "$ref" : "#/definitions/Triggers", 
          "description" : "Triggers in a version (revision) are used to compare against a total. If the trigger matches, the total is used to allocate a specific pay code amount."
        }
      }, 
      "required" : [ "effectiveDate" ], 
      "type" : "object"
    }, 
    "TimekeepingSetupBreakRule" : {
      "description" : "Entity containing necessary data to describe a break rule.", 
      "properties" : {
        "id" : {
          "description" : "The ID of a break rule.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of a break rule.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Combination Rule" : {
      "description" : "The model of combination rule.", 
      "properties" : {
        "combinations" : {
          "description" : "An array of combinations that count towards overtime.", 
          "items" : {
            "$ref" : "#/definitions/Configured Combination Rules"
          }, 
          "type" : "array"
        }, 
        "combinationsTowardOT" : {
          "$ref" : "#/definitions/Combination Rules CountTowardsOT", 
          "description" : "An object containing the combination rules that count towards overtime."
        }, 
        "id" : {
          "description" : "The ID of a combination rule.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of a combination rule.", 
          "type" : "string"
        }, 
        "selectedComponents" : {
          "$ref" : "#/definitions/Selected Rules", 
          "description" : "An object containing the selected rules."
        }
      }, 
      "type" : "object"
    }, 
    "Combination Rules Request" : {
      "description" : "Combination Rule Bulk Object Where.", 
      "properties" : {
        "where" : {
          "$ref" : "#/definitions/Combination Rules Where", 
          "description" : "The where criteria of a combination rule in which the actual criteria for retrieving combination rules is specified."
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingSetupBonusDeductionRule" : {
      "description" : "Entity containing necessary data to describe a bonus or deduction rule.", 
      "properties" : {
        "deductRuleId" : {
          "description" : "The ID of a bonus or deduct rule.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of a bonus or deduct rule.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingSetupPayCodeSymbolicValue" : {
      "description" : "Entity containing necessary data to describe a pay code symbolic value.", 
      "properties" : {
        "id" : {
          "description" : "The ID of a pay code symbolic value.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of a pay code symbolic value.", 
          "type" : "string"
        }, 
        "symbolicId" : {
          "description" : "The I18n Name of a pay code symbolic value.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingSetupPayCode" : {
      "description" : "Model describing the paycode.", 
      "properties" : {
        "addToTimecardTotal" : {
          "description" : "A Boolean indicator of whether or not the pay code totals are included in the calculations for the totals addon.", 
          "type" : "boolean"
        }, 
        "analyticCategoryAssignments" : {
          "description" : "A list of mapped pay code category objects which represent the KPI analytic category assignments.", 
          "items" : {
            "$ref" : "#/definitions/TimekeepingSetupMappedPayCodeCategoryDto"
          }, 
          "type" : "array"
        }, 
        "associatedDurationPayCode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to an associated pay code."
        }, 
        "autoResolve" : {
          "$ref" : "#/definitions/TimekeepingSetupAutoResolveException", 
          "description" : "An object which represents whether or not the pay code is configured for auto-resolve. Non-null value indicates that the current pay code is configured for auto-resolve."
        }, 
        "calculateUsingHighestRate" : {
          "description" : "A Boolean indicator of whether or not the pay code should use highest rate for calculation. Can be specified only if the provided value of weighted average calculation is non null.", 
          "type" : "boolean"
        }, 
        "checkAvailability" : {
          "description" : "A Boolean indicator of whether or not the paycode affects employee availability. 1 for yes, 0 for no.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "codeNumber" : {
          "description" : "The code number assigned to a pay code.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "combined" : {
          "description" : "A Boolean indicator of whether or not the pay code is a combined pay code.", 
          "type" : "boolean"
        }, 
        "contributingShiftRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to a contributing shift rule. Can be specified only if the provided value of weighted average calculation is contributing shift rule."
        }, 
        "editCountsTowardsConsecutiveDayOT" : {
          "description" : "A Boolean indicator of whether or not the pay code should count an edit towards consecutive day overtime.", 
          "type" : "boolean"
        }, 
        "editCountsTowardsOvertimeLimits" : {
          "description" : "A Boolean indicator of whether or not the pay code should count an edit towards overtime limits.", 
          "type" : "boolean"
        }, 
        "excusedAbsence" : {
          "description" : "A Boolean indicator of whether or not the pay code tracks excused absences.", 
          "type" : "boolean"
        }, 
        "id" : {
          "description" : "The ID of the paycode.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "includeMultiplierAndAddInTheContribution" : {
          "description" : "A Boolean indicator of whether or not the pay code should include multiplier and add in the contribution. Can be specified only if the provided value of 'wages contribute weighted average rate' is true.", 
          "type" : "boolean"
        }, 
        "money" : {
          "description" : "A Boolean indicator of whether or not the pay code tracks money.", 
          "type" : "boolean"
        }, 
        "name" : {
          "description" : "The name of the paycode.", 
          "type" : "string"
        }, 
        "payCodeTags" : {
          "description" : "A list of pay code tags.", 
          "items" : {
            "$ref" : "#/definitions/TimekeepingSetupPayCodeTagDTO"
          }, 
          "type" : "array"
        }, 
        "payrollOnly" : {
          "description" : "A Boolean indicator of whether or not the pay code is payroll only.", 
          "type" : "boolean"
        }, 
        "processDurationAsSeparateShift" : {
          "description" : "A Boolean indicator of whether or not the pay code should process duration as a separate shift.", 
          "type" : "boolean"
        }, 
        "repeating" : {
          "description" : "A Boolean indicator of whether or not the pay code is repeating.", 
          "type" : "boolean"
        }, 
        "replacements" : {
          "description" : "A list of mapped pay code objects which specify the replacements for the current pay code.", 
          "items" : {
            "$ref" : "#/definitions/TimekeepingSetupMappedPayCodeDto"
          }, 
          "type" : "array"
        }, 
        "scheduledHoursType" : {
          "description" : "The scheduled hours type to which the pay code is added.", 
          "type" : "object"
        }, 
        "segmentTag" : {
          "description" : "The name of the segment tag added to open shifts created by the pay code.", 
          "type" : "object"
        }, 
        "shortName" : {
          "description" : "The short name of the paycode.", 
          "type" : "string"
        }, 
        "teleTimeIpAlias" : {
          "description" : "A string representation of a TeleTime IP alias.", 
          "type" : "string"
        }, 
        "timekeepingOnly" : {
          "description" : "A Boolean indicator of whether or not the pay code is timekeeping only.", 
          "type" : "boolean"
        }, 
        "totals" : {
          "description" : "A Boolean indicator of whether or not the pay code tracks totals.", 
          "type" : "boolean"
        }, 
        "type" : {
          "description" : "The type of the paycode, which can be regular(1), cascade(2), or duration(3).", 
          "type" : "string"
        }, 
        "unit" : {
          "description" : "The unit for the paycode. Can be money(-3), time(-1) or day(-2).", 
          "enum" : [ "HOUR", "MONEY", "DAY" ], 
          "type" : "string"
        }, 
        "visibleToReports" : {
          "description" : "A Boolean indicator of whether or not the pay code is visible in report options and report totals.", 
          "type" : "boolean"
        }, 
        "visibleToTimecardSchedule" : {
          "description" : "A Boolean indicator of whether or not the pay code is visible in the main area of the timecard and schedule, on hours summary tab in schedule, my requests, and in associated reports.", 
          "type" : "boolean"
        }, 
        "visibleToUser" : {
          "description" : "A Boolean indicator of whether or not the pay code is visible in the totals columns of a timecard.", 
          "type" : "boolean"
        }, 
        "wageAddition" : {
          "description" : "The pay code wage addition.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "wageMultiplier" : {
          "description" : "The pay code wage multiplier.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "wagesContributeWeightedAverageRate" : {
          "description" : "A Boolean indicator of whether or not the pay code should use wages to contribute weighted average rate.", 
          "type" : "boolean"
        }, 
        "weightedAverageCalculation" : {
          "description" : "An object which indicates whether or not a pay code is configured for weighted average calculation. The non-null value indicates that current pay code is configured for weighted average calculation.", 
          "enum" : [ "PERIODIC", "DAILY", "CONTRIBUTING_SHIFT_RULE", "ILLEGAL_VALUE" ], 
          "type" : "string"
        }, 
        "workRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to a work rule."
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingSetupWorkRule" : {
      "description" : "Entity containing necessary data to describe a work rule.", 
      "properties" : {
        "deniedPayCodeId" : {
          "description" : "The ID of a denied pay code.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "effectiveDateTime" : {
          "description" : "The effective date and time associated with a work rule.", 
          "type" : "string"
        }, 
        "effectiveWorkRuleId" : {
          "description" : "The effective ID of a work rule.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "expirationDateTime" : {
          "description" : "The expiration date and time associated with a work rule.", 
          "type" : "string"
        }, 
        "ivrAlias" : {
          "description" : "The work rule IVR alias.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "The name of a work rule.", 
          "type" : "string"
        }, 
        "unapprovedPayCodeId" : {
          "description" : "The ID of an unapproved pay code.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "workRuleId" : {
          "description" : "The ID of a work rule.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "Employment Term" : {
      "description" : "EmploymentTermAssignment defines a Person's assignment to an employmentTerm over a range of dates.", 
      "properties" : {
        "allowsInheritance" : {
          "description" : "A Boolean indicator of whether or not the employment term shifts are inherited by the employees assigned to the term.", 
          "type" : "boolean"
        }, 
        "description" : {
          "description" : "The description of an employment term object.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID of an employment term.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "isActive" : {
          "description" : "A Boolean indicator of whether or not the employment term flag is active.", 
          "type" : "boolean"
        }, 
        "name" : {
          "description" : "The name of the <code>employmentterm</code> to assign to a person.", 
          "type" : "string"
        }, 
        "persistentId" : {
          "description" : "The persistent ID associated with each employment term which is unique across different systems.", 
          "type" : "string"
        }, 
        "processType" : {
          "description" : "Indicates that the end date of the employment term is enforced (ENFORCE_END_DATE) or the employment terms will continue to be used for processing after the end date of the assignment (ENFORCE_BEYOND_END_DATE).", 
          "enum" : [ "ENFORCE_END_DATE", "ENFORCE_BEYOND_END_DATE" ], 
          "type" : "string"
        }, 
        "versions" : {
          "$ref" : "#/definitions/Versions", 
          "description" : "A list of employmenttermversion objects. This is a complete list of the versions (revisions). If all the versions do not appear in the list, any existing versions not listed are scheduled for deletion."
        }
      }, 
      "required" : [ "processType" ], 
      "type" : "object"
    }, 
    "Multi Read Request for employment terms" : {
      "description" : "The Retrieve Employee Groups request payload's where model.", 
      "properties" : {
        "where" : {
          "$ref" : "#/definitions/Multi Read Criteria to fetch employment terms", 
          "description" : "The where model of an employee group in which the actual criteria for retrieving employee groups is specified."
        }
      }, 
      "type" : "object"
    }, 
    "Apply upsert request to add or update employment terms" : {
      "description" : "The model to add or update employment term version.", 
      "properties" : {
        "add" : {
          "description" : "A list of Employment Term Version to add in employment term.", 
          "items" : {
            "$ref" : "#/definitions/EmploymentTermWithVersion"
          }, 
          "type" : "array"
        }, 
        "update" : {
          "description" : "A list of Employment Term Version to update in employment term.", 
          "items" : {
            "$ref" : "#/definitions/EmploymentTermWithVersion"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "BaseFixedRuleDTO" : {
      "description" : "The fixed rule model allows you to define and manage rules that identify constant pay policies that are assigned to employees.", 
      "properties" : {
        "applyToDate" : {
          "description" : "The option to interpret shifts that cross the day divide or the pay period boundary.", 
          "enum" : [ "S", "E", "M", "D", "A", "SCHEDULED_IN_DAY", "SCHEDULED_OUT_DAY", "DAY_WITH_MAJORITY_HOURS", "DAY_WITH_MAJORITY_SCHEDULED_HOURS", "DAY_ACTUALLY_WORKED", "Scheduled in day", "Scheduled out day", "Day with majority hours", "Day with majority scheduled hours", "Day actually worked" ], 
          "type" : "string"
        }, 
        "name" : {
          "description" : "The name of a fixed rule.", 
          "type" : "string"
        }, 
        "payPeriod" : {
          "$ref" : "#/definitions/BasePayPeriodDTO", 
          "description" : "The type of a pay period associated with a fixed rule."
        }
      }, 
      "required" : [ "applyToDate", "name", "payPeriod" ], 
      "type" : "object"
    }, 
    "FixedRuleDTO" : {
      "description" : "The fixed rule model allows you to define and manage rules that identify constant pay policies that are assigned to employees.", 
      "properties" : {
        "applyToDate" : {
          "description" : "The option to interpret shifts that cross the day divide or the pay period boundary.", 
          "enum" : [ "S", "E", "M", "D", "A", "SCHEDULED_IN_DAY", "SCHEDULED_OUT_DAY", "DAY_WITH_MAJORITY_HOURS", "DAY_WITH_MAJORITY_SCHEDULED_HOURS", "DAY_ACTUALLY_WORKED", "Scheduled in day", "Scheduled out day", "Day with majority hours", "Day with majority scheduled hours", "Day actually worked" ], 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID of a fixed rule.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of a fixed rule.", 
          "type" : "string"
        }, 
        "payPeriod" : {
          "$ref" : "#/definitions/BasePayPeriodDTO", 
          "description" : "The type of a pay period associated with a fixed rule."
        }
      }, 
      "required" : [ "applyToDate", "id", "name", "payPeriod" ], 
      "type" : "object"
    }, 
    "FixedRulePatchDTO" : {
      "description" : "The fixed rule model allows you to define and manage rules that identify constant pay policies that are assigned to employees.", 
      "properties" : {
        "applyToDate" : {
          "description" : "The option to interpret shifts that cross the day divide or the pay period boundary.", 
          "enum" : [ "S", "E", "M", "A", "SCHEDULED_IN_DAY", "SCHEDULED_OUT_DAY", "DAY_WITH_MAJORITY_HOURS", "DAY_ACTUALLY_WORKED", "Scheduled in day", "Scheduled out day", "Day with majority hours", "Day actually worked" ], 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID of a fixed rule.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of a fixed rule.", 
          "type" : "string"
        }, 
        "payPeriod" : {
          "$ref" : "#/definitions/PayPeriodPatchDTO", 
          "description" : "The type of a pay period associated with a fixed rule."
        }
      }, 
      "required" : [ "applyToDate" ], 
      "type" : "object"
    }, 
    "FixedRuleRequest" : {
      "description" : "The Fixed Rules request model containing IDs, qualifiers, or object references.", 
      "properties" : {
        "where" : {
          "$ref" : "#/definitions/FixedRuleWhere", 
          "description" : "The set of conditions used to execute a Fixed Rule multi_read operation.", 
          "position" : 1
        }
      }, 
      "required" : [ "where" ], 
      "type" : "object"
    }, 
    "Work Rule" : {
      "description" : "The work rule object.", 
      "properties" : {
        "ivrAlias" : {
          "description" : "The work rule IVR alias.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "The name of a work rule.", 
          "type" : "string"
        }, 
        "version" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "workRuleId" : {
          "description" : "The ID of a work rule.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "workRuleVersion" : {
          "description" : "The work rule version associated with a work rule.", 
          "items" : {
            "$ref" : "#/definitions/Work Rule Version"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Work Rules" : {
      "description" : "The Work Rule Where Object.", 
      "properties" : {
        "where" : {
          "$ref" : "#/definitions/Work Rules Where"
        }
      }, 
      "type" : "object"
    }, 
    "OvertimeRules" : {
      "description" : "The Overtime Rules object model.", 
      "properties" : {
        "actions" : {
          "$ref" : "#/definitions/OvertimeAction", 
          "description" : "The actions object associated with an Overtime Rule."
        }, 
        "advanced" : {
          "$ref" : "#/definitions/OvertimeAdvanced", 
          "description" : "The advanced object associated with an Overtime Rule."
        }, 
        "countsTowardsOvertime" : {
          "$ref" : "#/definitions/CountsTowardsOvertime", 
          "description" : "The Counts Towards Overtime object associated with an Overtime Rule."
        }, 
        "id" : {
          "description" : "The ID of an Overtime Rules object.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "minimumOverLimit" : {
          "description" : "The minimum overtime limit of an Overtime Rule.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "The name of an Overtime Rules object.", 
          "type" : "string"
        }, 
        "overtimeAllocation" : {
          "$ref" : "#/definitions/OvertimeAllocation", 
          "description" : "The overtime allocation object associated with an Overtime Rule."
        }, 
        "overtimeStartsAfter" : {
          "$ref" : "#/definitions/OvertimeStartsAfter", 
          "description" : "The Overtime Starts After object associated with an Overtime Rule."
        }, 
        "reset" : {
          "$ref" : "#/definitions/OvertimeReset", 
          "description" : "The reset object associated with an Overtime Rule."
        }
      }, 
      "required" : [ "name" ], 
      "type" : "object"
    }, 
    "OvertimerulesWhere.Where" : {
      "description" : "Model for a Batch Job Where DTO.", 
      "properties" : {
        "where" : {
          "$ref" : "#/definitions/OvertimeRulesWhere", 
          "description" : "The Overtime Rule where clause."
        }
      }, 
      "type" : "object"
    }, 
    "PayCodeDistribution" : {
      "description" : "Model for Paycode Distribution.", 
      "properties" : {
        "combinationRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The combination rule associated with a paycode distribution. Combination rules tell the system how to pay employees when conditions, such as overtime, overlap. Combinations can include overtime, zone schedule deviation, and Rest Between Shift (RBS) rules."
        }, 
        "distributionAssignments" : {
          "description" : "A list of paycode distribution assignments associated with this paycode distribution.", 
          "items" : {
            "$ref" : "#/definitions/DistributionAssignment"
          }, 
          "type" : "array"
        }, 
        "id" : {
          "description" : "The ID of a paycode distribution.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of a paycode distribution.", 
          "type" : "string"
        }
      }, 
      "required" : [ "id", "name" ], 
      "type" : "object"
    }, 
    "PayCodeDistributionRefs" : {
      "description" : "Model for Paycode Distribution References.", 
      "properties" : {
        "payCodeDistributions" : {
          "$ref" : "#/definitions/TimekeepingObjectRefList", 
          "description" : "An object representing a collection of paycode distributions."
        }
      }, 
      "required" : [ "payCodeDistributions" ], 
      "type" : "object"
    }, 
    "MDUIPayCodeTagDTO" : {
      "description" : "Entity containing pay code tags.", 
      "properties" : {
        "id" : {
          "description" : "The ID of a pay code tag.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of a pay code tag.", 
          "type" : "string"
        }
      }, 
      "required" : [ "name" ], 
      "type" : "object"
    }, 
    "TimekeepingSetupPayCodeMultiOperationWhere" : {
      "description" : "Entity containing necessary data to represent a list of pay codes.", 
      "properties" : {
        "where" : {
          "$ref" : "#/definitions/PayCodeWhere", 
          "description" : "A list of references to pay codes for a bulk operation. The object reference list can contain IDs, qualifiers, or refs."
        }
      }, 
      "required" : [ "where" ], 
      "type" : "object"
    }, 
    "Pay Rule" : {
      "description" : "The pay rule allows you to define and manage rules that control how time and attendance information is processed for each employee.", 
      "properties" : {
        "effectivePayRules" : {
          "description" : "One or more associated, effectively-dated pay rules. The effective-dated version of a pay rule allows you to manage effectively-dated versions of pay rules.", 
          "items" : {
            "$ref" : "#/definitions/EffectivePayRule"
          }, 
          "type" : "array"
        }, 
        "id" : {
          "description" : "The ID of a pay rule.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of a pay rule. The name can be up to 32 characters long, is case insensitive, and must be unique.", 
          "type" : "string"
        }, 
        "persistentId" : {
          "description" : "The persistent ID of a pay rule.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "PayRuleRequest" : {
      "description" : "The pay rule request for bulk operations.", 
      "properties" : {
        "where" : {
          "$ref" : "#/definitions/PayRuleWhere", 
          "description" : "A list of references to pay rule objects.", 
          "position" : 1
        }
      }, 
      "required" : [ "where" ], 
      "type" : "object"
    }, 
    "ObjectRef Entity" : {
      "description" : "ObjectRef contains an id and qualifier and either field should be able to uniquely identify an Object", 
      "properties" : {
        "id" : {
          "description" : "Object Ref Id", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "qualifier" : {
          "description" : "Object Ref Unique qualifier", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "FPARule" : {
      "description" : "Information about Fixed Percentage Allocation Rules.", 
      "properties" : {
        "fpaRuleVersions" : {
          "description" : "The list of revisions, or versions (fparuleversion), of a fixed percentage allocation rule.", 
          "items" : {
            "$ref" : "#/definitions/FPARuleVersion"
          }, 
          "type" : "array"
        }, 
        "id" : {
          "description" : "The id of a fixed percentage allocation rule.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of a fixed percentage allocation rule.", 
          "type" : "string"
        }, 
        "persistentId" : {
          "description" : "The persistent ID associated with each Fixed Percentage Allocation rule which is unique across different systems.", 
          "type" : "string"
        }
      }, 
      "required" : [ "fpaRuleVersions", "name", "persistentId" ], 
      "type" : "object"
    }, 
    "Multi Read Request for percentage allocation rules" : {
      "description" : "The Retrieve Employee Groups request payload's where model.", 
      "properties" : {
        "where" : {
          "$ref" : "#/definitions/Multi Read Criteria for percentage allocation rules fetching", 
          "description" : "The where model of an employee group in which the actual criteria for retrieving employee groups is specified."
        }
      }, 
      "type" : "object"
    }, 
    "Response" : {
      "properties" : {
        "allowedMethods" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "cookies" : {
          "additionalProperties" : {
            "$ref" : "#/definitions/NewCookie"
          }, 
          "type" : "object"
        }, 
        "date" : {
          "format" : "date-time", 
          "type" : "string"
        }, 
        "entity" : {
          "type" : "object"
        }, 
        "entityTag" : {
          "$ref" : "#/definitions/EntityTag"
        }, 
        "headers" : {
          "additionalProperties" : {
            "items" : {
              "type" : "object"
            }, 
            "type" : "array"
          }, 
          "type" : "object"
        }, 
        "language" : {
          "$ref" : "#/definitions/Locale"
        }, 
        "lastModified" : {
          "format" : "date-time", 
          "type" : "string"
        }, 
        "length" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "links" : {
          "items" : {
            "$ref" : "#/definitions/Link"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "location" : {
          "format" : "uri", 
          "type" : "string"
        }, 
        "mediaType" : {
          "$ref" : "#/definitions/MediaType"
        }, 
        "metadata" : {
          "additionalProperties" : {
            "items" : {
              "type" : "object"
            }, 
            "type" : "array"
          }, 
          "type" : "object"
        }, 
        "status" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "statusInfo" : {
          "$ref" : "#/definitions/StatusType"
        }, 
        "stringHeaders" : {
          "additionalProperties" : {
            "items" : {
              "type" : "string"
            }, 
            "type" : "array"
          }, 
          "type" : "object"
        }
      }, 
      "type" : "object"
    }, 
    "FPARuleVersion" : {
      "description" : "Information about Fixed Percentage Allocation Rule Versions.", 
      "properties" : {
        "description" : {
          "description" : "A simple description that describes the revision (or version).", 
          "type" : "string"
        }, 
        "endEffectiveDate" : {
          "description" : "The effective end date of this revision (or version).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "startEffectiveDate" : {
          "description" : "The effective start date of this revision (or version).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "triggers" : {
          "description" : "Triggers on a revision (or version) are used to compare against a total. If the trigger matches, the total is allocated to the allocations specified for the total.", 
          "items" : {
            "$ref" : "#/definitions/FPATrigger"
          }, 
          "type" : "array"
        }
      }, 
      "required" : [ "endEffectiveDate", "startEffectiveDate" ], 
      "type" : "object"
    }, 
    "Time-Off Rule" : {
      "description" : "Model describing a Time-Off Rule.", 
      "properties" : {
        "averageCalculatedGrace" : {
          "$ref" : "#/definitions/Duration", 
          "description" : "The average grace duration."
        }, 
        "averageCalculatedMaximumTimeOff" : {
          "$ref" : "#/definitions/Duration", 
          "description" : "The maximum time-off duration."
        }, 
        "averageCalculatedMinimumTimeOff" : {
          "$ref" : "#/definitions/Duration", 
          "description" : "The minimum time-off duration."
        }, 
        "averageCalculatedRound" : {
          "$ref" : "#/definitions/Duration", 
          "description" : "The average round duration."
        }, 
        "averageType" : {
          "description" : "The average type of a Time-Off Rule. Valid values include QUALIFIED_SHIFT, QUALIFIED_DAY, FIXED.", 
          "enum" : [ "QUALIFIED_SHIFT, QUALIFIED_DAY, FIXED" ], 
          "type" : "string"
        }, 
        "contributingShift" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The Contributing Shift Rule associated with a Time-Off Rule."
        }, 
        "description" : {
          "description" : "The description of a Time-Off Rule.", 
          "type" : "string"
        }, 
        "fixedNumberDividedBy" : {
          "description" : "The fixed number by which to divide.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "id" : {
          "description" : "The ID of a Time-Off Rule.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "minimumQualifiedDays" : {
          "description" : "The minimum number of qualified days.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "minimumQualifiedShifts" : {
          "description" : "The minimum number of qualified shifts.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "multiShiftOptionType" : {
          "description" : "The multishift option type of a Time-Off Rule. Valid values include LENGTH_OF_LONGEST_SHIFT, SUM_OF_ALL_SHIFTS.", 
          "enum" : [ "LENGTH_OF_LONGEST_SHIFT, SUM_OF_ALL_SHIFTS" ], 
          "type" : "string"
        }, 
        "name" : {
          "description" : "The name of a Time-Off Rule.", 
          "type" : "string"
        }, 
        "shiftSourceType" : {
          "description" : "The shift source type. Valid values include CONTRACT, SCHEDULED, WORKED.", 
          "enum" : [ "CONTRACT, SCHEDULED, WORKED" ], 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Key for MDUI related entities" : {
      "description" : "Key with ID and name for the Metadata Driven User Interface (MDUI).", 
      "properties" : {
        "id" : {
          "description" : "Internal ID of the entity.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "Displayed name of the entity.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingSetupBreakRuleV2" : {
      "description" : "Entity containing necessary data to describe a break rule.", 
      "properties" : {
        "automatedScheduling" : {
          "description" : "No UI field is associated with this property. This property denotes that the selected break rule is in use by automated scheduling. Certain attributes are not editable while this condition persists.", 
          "type" : "boolean"
        }, 
        "end" : {
          "description" : "The Break Settings - Break Starts Before field from the UI in the form of HH:mm.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID of a break rule.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "longException" : {
          "description" : "The Break Settings - Long Exception field from the UI in the form of HH:mm.", 
          "type" : "string"
        }, 
        "longGrace" : {
          "description" : "The Rounds and Graces - Long Break Grace field from the UI in the form of HH:mm.", 
          "type" : "string"
        }, 
        "longRound" : {
          "description" : "The Rounds and Graces - Long Break Round field from the UI in the form of HH:mm.", 
          "type" : "string"
        }, 
        "maxBreakLength" : {
          "description" : "The Break Lengths - Max Length field from the UI in the form of HH:mm.", 
          "type" : "string"
        }, 
        "mediumBreakLength" : {
          "description" : "The Break Lengths - Medium Length field from the UI in the form of HH:mm.", 
          "type" : "string"
        }, 
        "mediumGrace" : {
          "description" : "The Rounds and Graces - Medium Break Grace field from the UI in the form of HH:mm.", 
          "type" : "string"
        }, 
        "mediumRound" : {
          "description" : "The Rounds and Graces - Medium Break Round field from the UI in the form of HH:mm.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "The name of a break rule.", 
          "type" : "string"
        }, 
        "normalBreakLength" : {
          "description" : "The Break Lengths - Normal Length field from the UI in the form of HH:mm.", 
          "type" : "string"
        }, 
        "paidAmount" : {
          "description" : "The Break Settings - Paid Amount field from the UI in the form of HH:mm.", 
          "type" : "string"
        }, 
        "relativeTo" : {
          "description" : "The Break Settings - Relative to field from the UI with valid values of 12 Midnight, Scheduled Start, and Actual Start.", 
          "enum" : [ "MIDNIGHT", "SCHEDULE_START", "ACTUAL_START" ], 
          "type" : "string"
        }, 
        "shortException" : {
          "description" : "The Break Settings - Short Exception field from the UI in the form of HH:mm.", 
          "type" : "string"
        }, 
        "shortGrace" : {
          "description" : "The Rounds and Graces - Short Break Grace field from the UI in the form of HH:mm.", 
          "type" : "string"
        }, 
        "shortRound" : {
          "description" : "The Rounds and Graces - Short Break Round field from the UI in the form of HH:mm.", 
          "type" : "string"
        }, 
        "start" : {
          "description" : "The Break Settings - Break Starts At or After field from the UI in the form of HH:mm.", 
          "type" : "string"
        }, 
        "useUnscheduledPunchRounding" : {
          "description" : "The Rounds and Graces -  Use Unscheduled Punch Rounding field from the UI.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "AccrualPolicyWhereObject" : {
      "description" : "Entity containing necessary data to describe accrual policy where object.", 
      "properties" : {
        "accuralPolicies" : {
          "$ref" : "#/definitions/TimekeepingObjectRefList", 
          "description" : "A list of object references to accrual policies."
        }, 
        "end_date" : {
          "description" : "The End Date of an accrual policy in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "type" : "string"
        }, 
        "start_date" : {
          "description" : "The Start Date of an accrual policy in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "type" : "string"
        }
      }, 
      "required" : [ "accuralPolicies" ], 
      "type" : "object"
    }, 
    "TimekeepingSetupEffectiveAccrualPolicies" : {
      "description" : "Entity containing necessary data to describe effective accrual policies.", 
      "properties" : {
        "accrualCode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The accrual code of an accrual policy."
        }, 
        "accrualForOverflow" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The accrual for overflow of an accrual policy."
        }, 
        "adjstBalanceOnFTEChange" : {
          "description" : "A Boolean indicator of whether or not to adjust an accrual balance when full time employee (FTE) status changes.", 
          "type" : "boolean"
        }, 
        "effectiveDate" : {
          "description" : "The effective date of an accrual policy in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "expirationDate" : {
          "description" : "The expiration date of an accrual policy in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "grants" : {
          "description" : "The grants of an accrual policy.", 
          "items" : {
            "$ref" : "#/definitions/TimekeepingSetupGrants"
          }, 
          "type" : "array"
        }, 
        "lengthOfServiceReference" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the length of service of an accrual policy."
        }, 
        "limits" : {
          "description" : "The limits of an accrual policy.", 
          "items" : {
            "$ref" : "#/definitions/TimekeepingSetupLimits"
          }, 
          "type" : "array"
        }, 
        "overdrafts" : {
          "$ref" : "#/definitions/TimekeepingSetupOverdrafts", 
          "description" : "The past or present overdrafts of an accrual policy."
        }, 
        "probationPeriod" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The probation period of an accrual policy."
        }, 
        "takings" : {
          "$ref" : "#/definitions/TimekeepingSetupTakings", 
          "description" : "The takings of an accrual policy."
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingSetupAccrualPolicy" : {
      "description" : "Entity containing necessary data to describe an accrual policy.", 
      "properties" : {
        "id" : {
          "description" : "The ID of an accrual policy.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of an accrual policy.", 
          "type" : "string"
        }, 
        "visible" : {
          "description" : "A Boolean indicator of whether or not an accrual policy is visible.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "RuleVersions" : {
      "description" : "Rule Versions information.", 
      "properties" : {
        "adjustmentRuleVersion" : {
          "description" : "A list of revisions (versions) of the adjustment rule.", 
          "items" : {
            "$ref" : "#/definitions/AdjustmentRuleVersion"
          }, 
          "type" : "array"
        }
      }, 
      "required" : [ "adjustmentRuleVersion" ], 
      "type" : "object"
    }, 
    "Locale" : {
      "properties" : {
        "country" : {
          "type" : "string"
        }, 
        "displayCountry" : {
          "type" : "string"
        }, 
        "displayLanguage" : {
          "type" : "string"
        }, 
        "displayName" : {
          "type" : "string"
        }, 
        "displayScript" : {
          "type" : "string"
        }, 
        "displayVariant" : {
          "type" : "string"
        }, 
        "extensionKeys" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "iso3Country" : {
          "type" : "string"
        }, 
        "iso3Language" : {
          "type" : "string"
        }, 
        "language" : {
          "type" : "string"
        }, 
        "script" : {
          "type" : "string"
        }, 
        "unicodeLocaleAttributes" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "unicodeLocaleKeys" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "variant" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "ServletOutputStream" : {
      "properties" : {
        "ready" : {
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "SupplierMapStringString" : {
      "type" : "object"
    }, 
    "PrintWriter" : {
      "type" : "object"
    }, 
    "Triggers" : {
      "description" : "Triggers information.", 
      "properties" : {
        "adjustmentTriggerForRule" : {
          "description" : "Defines a trigger for an adjustment rule. Triggers in a version (revision) are used to compare against a total. If the trigger matches, the total is used to allocate a specific pay code amount.", 
          "items" : {
            "$ref" : "#/definitions/AdjustmentTriggerForRule"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Configured Combination Rules" : {
      "description" : "The model to select configured combination.", 
      "properties" : {
        "combinationPair" : {
          "description" : "A list of combination pairs.", 
          "items" : {
            "$ref" : "#/definitions/Combination Pair"
          }, 
          "type" : "array"
        }, 
        "getsPaidAs" : {
          "description" : "The <code>getsPaidAs</code> value of configured combinations.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Combination Rules CountTowardsOT" : {
      "description" : "The model to select combination towards overtime.", 
      "properties" : {
        "combinationRulesCountTowardsOT" : {
          "description" : "A list of combination rules that count towards overtime.", 
          "items" : {
            "$ref" : "#/definitions/Combination Toward OverTime"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Selected Rules" : {
      "description" : "The model to select selected rules.", 
      "properties" : {
        "selectedRules" : {
          "description" : "A list of selected rules in selected components.", 
          "items" : {
            "$ref" : "#/definitions/Combination Component"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Combination Rules Where" : {
      "description" : "The Combination Rule Where Object.", 
      "properties" : {
        "combinationRules" : {
          "$ref" : "#/definitions/TimekeepingObjectRefList", 
          "description" : "The where criteria of a combination rule in which the actual criteria for retrieving combination rules is specified."
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingSetupMappedPayCodeCategoryDto" : {
      "description" : "Entity containing necessary data to describe analytic KPI category assignment", 
      "properties" : {
        "costOnly" : {
          "description" : "A Boolean indicator of whether or not the analytic assignment is cost-only.", 
          "type" : "boolean"
        }, 
        "mappingCategory" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the mapping category."
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingSetupAutoResolveException" : {
      "description" : "Entity containing necessary data to describe auto resolve part of pay code.", 
      "properties" : {
        "justifyExceptionCountsAsWorked" : {
          "description" : "A Boolean indicator of whether or not the pay code should count justify exception as worked.", 
          "type" : "boolean"
        }, 
        "requiresApproval" : {
          "description" : "A Boolean indicator of whether or not the pay code requires approval.", 
          "type" : "boolean"
        }, 
        "unjustifiedExceptionCountsAsWorked" : {
          "description" : "A Boolean indicator of whether or not the pay code should count unjustified exception as worked.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingSetupPayCodeTagDTO" : {
      "description" : "Entity containing pay code tags.", 
      "properties" : {
        "payCodeTag" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A pay code tag."
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingSetupMappedPayCodeDto" : {
      "description" : "Entity containing necessary data to describe how and intermediate pay code should be replaced with replacement pay code in the totalizer during totals processing.", 
      "properties" : {
        "intermediatePayCode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to an intermediate paycode that is overridden by a corresponding replacement paycode."
        }, 
        "replacementPayCode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to a replacement paycode that is used in place of an intermediate paycode during totals processing."
        }
      }, 
      "type" : "object"
    }, 
    "Versions" : {
      "properties" : {
        "employmentTermVersion" : {
          "items" : {
            "$ref" : "#/definitions/EmploymentTermVersionType", 
            "xml" : {
              "name" : "EmploymentTermVersion"
            }
          }, 
          "type" : "array", 
          "xml" : {
            "name" : "EmploymentTermVersion"
          }
        }
      }, 
      "type" : "object"
    }, 
    "Multi Read Criteria to fetch employment terms" : {
      "description" : "The Retrieve Employee Groups request payload model.", 
      "properties" : {
        "allDetails" : {
          "description" : "A Boolean indicator of whether or not the response returns all of the details of each Hyperfind query.", 
          "type" : "boolean"
        }, 
        "employmentTerms" : {
          "$ref" : "#/definitions/Multi Read References which contains actual criterias", 
          "description" : "The Retrieve Employment Terms request payload."
        }, 
        "endDate" : {
          "description" : "The end date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD). Employment term versions are returned when any part of a version's date range overlaps with the date range specified in the request payload.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "startDate" : {
          "description" : "The start date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD). Employment term versions are returned when any part of a version's date range overlaps with the date range specified in the request payload.", 
          "format" : "date", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "EmploymentTermWithVersion" : {
      "description" : "The model of apply upsert Employment Term.", 
      "properties" : {
        "employmentTermVersion" : {
          "$ref" : "#/definitions/EmploymentTermVersionApiBean", 
          "description" : "A list of Employment Term Version associated with employment Term."
        }, 
        "id" : {
          "description" : "A id of an Employment Term.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "BasePayPeriodDTO" : {
      "description" : "The model of a pay period.", 
      "properties" : {
        "dayDivide" : {
          "description" : "The time of day which divides one day from another in ISO_LOCAL_TIME format (HH:mm:ss.SSS).", 
          "type" : "string"
        }, 
        "payPeriodType" : {
          "description" : "The type of a pay period.", 
          "enum" : [ "F", "DAYS_PAY_PERIOD", "Days pay period", "S", "SEMI_MONTHLY_PAY_PERIOD", "Semi monthly pay period", "M", "MONTHLY_PAY_PERIOD", "Monthly pay period" ], 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "PayPeriodPatchDTO" : {
      "description" : "The model of a pay period.", 
      "properties" : {
        "dayDivide" : {
          "description" : "The time of day which divides one day from another in ISO_LOCAL_TIME format (HH:mm:ss.SSS).", 
          "type" : "string"
        }, 
        "length" : {
          "description" : "The number of days in a pay period.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "payPeriodType" : {
          "description" : "The type of a pay period.", 
          "enum" : [ "F", "DAYS_PAY_PERIOD", "Days pay period", "S", "SEMI_MONTHLY_PAY_PERIOD", "Semi monthly pay period", "M", "MONTHLY_PAY_PERIOD", "Monthly pay period" ], 
          "type" : "string"
        }, 
        "referencedDate" : {
          "description" : "The start date of a pay period in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "type" : "string"
        }, 
        "referencedDay" : {
          "description" : "The start day of a pay period.", 
          "format" : "int32", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "FixedRuleWhere" : {
      "description" : "The set of conditions used to execute Fixed Rule multi_read and multi_delete operations.", 
      "properties" : {
        "fixedRules" : {
          "$ref" : "#/definitions/ObjectRefList", 
          "description" : "A list of references to Fixed Rule objects.", 
          "position" : 1
        }
      }, 
      "required" : [ "fixedRules" ], 
      "type" : "object"
    }, 
    "Work Rule Version" : {
      "description" : "The model of a work rule version.", 
      "properties" : {
        "effectiveDateTime" : {
          "description" : "The effective date and time of a work rule in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "effectiveWorkRuleId" : {
          "description" : "The effective work rule ID of a work rule.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "expirationDateTime" : {
          "description" : "The expiration date and time associated with a work rule.", 
          "type" : "string"
        }, 
        "general" : {
          "$ref" : "#/definitions/Work Rule General", 
          "description" : "The general object associated with a work rule."
        }, 
        "payCodeDistributionReference" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the pay code distribution associated with a work rule."
        }, 
        "updateThisVersion" : {
          "description" : "A Boolean indicator of whether or not to update the submitted version of a work rule.", 
          "type" : "boolean"
        }, 
        "version" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "workRuleAutoBreakPlacement" : {
          "$ref" : "#/definitions/Work Rule Auto Break Placement", 
          "description" : "The work rule auto-break placement associated with a work rule."
        }, 
        "workRulePayCodeDistribution" : {
          "$ref" : "#/definitions/Work Rule PayCode Distribution", 
          "description" : "The work rule pay code distribution associated with a work rule."
        }
      }, 
      "type" : "object"
    }, 
    "Work Rules Where" : {
      "description" : "Work Rule Bulk Object Where.", 
      "properties" : {
        "snapshotDate" : {
          "description" : "The date on which a work rule version is effective in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "type" : "string"
        }, 
        "workRules" : {
          "$ref" : "#/definitions/TimekeepingObjectRefList", 
          "description" : "The where criteria of a work rule in which the actual criteria for retrieving work rules is specified."
        }
      }, 
      "type" : "object"
    }, 
    "OvertimeAction" : {
      "description" : "The Overtime Rule adjustment actions", 
      "properties" : {
        "automaticShortfallAdjustment" : {
          "description" : "A Boolean indicator of whether or not to determine application of adjustment actions.", 
          "type" : "boolean"
        }, 
        "shortfallPayCodeName" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The paycode to which the shortfall is applied."
        }
      }, 
      "type" : "object"
    }, 
    "OvertimeAdvanced" : {
      "description" : "The Overtime Rule advanced object", 
      "properties" : {
        "limitChargeOrderType" : {
          "description" : "The overtime allocation charge order type.", 
          "enum" : [ "CHRONOLOGICAL", "REVERSE_CHRONOLOGICAL", "PRORATED" ], 
          "type" : "string"
        }, 
        "overtimeAllocation" : {
          "$ref" : "#/definitions/OvertimeAllocation", 
          "description" : "The overtime allocation object."
        }, 
        "overtimePreprocessing" : {
          "description" : "A Boolean indicator of whether or not overtime preprocessing occurs.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "CountsTowardsOvertime" : {
      "description" : "The Overtime Rule advanced model.", 
      "properties" : {
        "contributingPayCodeName" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the contributing paycode."
        }, 
        "payCodesConfiguredToCountTowardsOT" : {
          "description" : "A Boolean indicator of whether or not paycodes are configured to count towards overtime (OT).", 
          "type" : "boolean"
        }, 
        "selectedPaycodes" : {
          "description" : "An array of selected paycodes.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }, 
        "useContributingPaycodes" : {
          "description" : "A Boolean indicator of whether or not to use contributing paycodes.", 
          "type" : "boolean"
        }, 
        "useSelectedPaycodes" : {
          "description" : "A Boolean indicator of whether or not to use selected paycodes.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "OvertimeAllocation" : {
      "description" : "The Overtime Rule allocation object model.", 
      "properties" : {
        "callInWorkRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The call-in work rule associated with an allocation."
        }, 
        "extraShiftWorkRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The extra shift work rule associated with an allocation."
        }
      }, 
      "type" : "object"
    }, 
    "OvertimeStartsAfter" : {
      "description" : "The Overtime Starts After object model.", 
      "properties" : {
        "addToEmployeeWorkHoursDefinition" : {
          "description" : "The amount of hours to add to an employee's work hours.", 
          "type" : "string"
        }, 
        "amount" : {
          "description" : "The amount of hours after which overtime begins.", 
          "type" : "string"
        }, 
        "requiresApproval" : {
          "description" : "A Boolean indicator of whether or not the overtime requires approval.", 
          "type" : "boolean"
        }, 
        "useEmployeeHours" : {
          "description" : "A Boolean indicator of whether or not employee hours are used.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "OvertimeReset" : {
      "description" : "The Reset object model.", 
      "properties" : {
        "actions" : {
          "$ref" : "#/definitions/OvertimeAction", 
          "description" : "A reference to an overtime action object."
        }, 
        "datePattern" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The date pattern by which a reset occurs."
        }, 
        "forWorkWeek" : {
          "description" : "A Boolean indicator of whether or not totals (actual, scheduled, or projected) are retrieved by work week. A work week can be Previous Work Week, Current Work Week, or Next Work Week.", 
          "type" : "boolean"
        }, 
        "name" : {
          "description" : "The name of a reset object.", 
          "type" : "string"
        }, 
        "numberOfDays" : {
          "description" : "A specified number of days after which a reset occurs.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "referenceDate" : {
          "description" : "The reference date on which the reset occurs in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "resetAt" : {
          "description" : "A specified amount or time at which the reset occurs.", 
          "type" : "string"
        }, 
        "resetDate" : {
          "description" : "A specified date on which the reset occurs in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "resetOn" : {
          "description" : "A specified day on which the reset occurs.", 
          "enum" : [ "SUNDAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY" ], 
          "type" : "string"
        }, 
        "resetType" : {
          "description" : "The type of reset applied to an Overtime Rule.", 
          "enum" : [ "D", "Q", "R", "S", "T", "W", "B", "P", "N", "A" ], 
          "type" : "string"
        }, 
        "trackingBeginsAt" : {
          "$ref" : "#/definitions/TrackingBeginsAt", 
          "description" : "A reference to the Tracking Begins At object."
        }, 
        "useRoundedTime" : {
          "description" : "A Boolean indicator of whether or not to use rounded time.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "OvertimeRulesWhere" : {
      "description" : "The overtime rules 'where' object model.", 
      "properties" : {
        "overtimeRules" : {
          "$ref" : "#/definitions/TimekeepingObjectRefList", 
          "description" : "A list of references to overtime rules."
        }
      }, 
      "type" : "object"
    }, 
    "DistributionAssignment" : {
      "description" : "Model for Distribution Assignment.", 
      "properties" : {
        "deviation" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The schedule deviation associated with a paycode distribution assignment. Schedule deviations are special differentials that employees earn when they work before or after their scheduled times, or for shifts that are unscheduled. Define a rule for each situation to specify a different paycode in which to pay each hour type. Schedule deviation rules are one of the elements in paycode distributions. If you use Schedule Deviation rules in a Paycode Distribution, they must be selected in the work rule."
        }, 
        "extProcessors" : {
          "description" : "A list of extension processor components associated with a paycode distribution assignment.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }, 
        "overtimes" : {
          "description" : "A list of overtimes (overtime rules) associated with a paycode distribution assignment.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }, 
        "paycodeAssignments" : {
          "description" : "A list of paycode assignments associated with a paycode distribution assignment.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }, 
        "zones" : {
          "description" : "A list of zones associated with this Distribution Assignment. Zones define special intervals of time as hour types, such as Evening and Weekend, when employees can earn shift differentials. Zone rules establish the required number of hours in a specified time period that an employee must work.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }
      }, 
      "required" : [ "paycodeAssignments" ], 
      "type" : "object"
    }, 
    "TimekeepingObjectRefList" : {
      "description" : "Model describing a collection of object references.", 
      "properties" : {
        "ids" : {
          "description" : "The list of references by ID.", 
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "qualifiers" : {
          "description" : "The qualifier of the object reference, such as name.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "refs" : {
          "description" : "The object references.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "PayCodeWhere" : {
      "description" : "The set of conditions used to execute Pay Code multi_read and multi_delete operations.", 
      "properties" : {
        "payCodes" : {
          "$ref" : "#/definitions/ObjectRefList", 
          "description" : "A list of references to Pay Code objects."
        }
      }, 
      "type" : "object"
    }, 
    "EffectivePayRule" : {
      "description" : "The Effective Dated Version of a Pay Rule allows you to manage effectively-dated versions of pay rules. A pay rule contains general payroll rules, such as the type of a pay period (for example, weekly). A complete pay rule controls such items as the pay period length, the day divide, when punches link to schedules, when data collection devices accept and reject punches, which holidays give holiday credits, and the order that hour types are processed.", 
      "properties" : {
        "applyOnly" : {
          "description" : "<p>A Boolean indicator that functions in conjunction with <code>payfromschedule</code>. When <code>payfromschedule</code> is equal to <strong>true</strong> and <code>applyonly</code> is equal to <strong>false</strong>, the behavior corresponds to when apply scheduled edits is equal to <strong>always</strong> and apply scheduled shifts is equal to <strong>never</strong>. Likewise, when <code>payfromschedule</code> is equal to <strong>true</strong> and <code>applyonly</code> is equal to <strong>true</strong>, the behavior corresponds to when apply scheduled edits is equal to <strong>unless other events exist on day</strong> and apply scheduled shifts is equal to <strong>never</strong>. When <code>payfromschedule</code> is equal to <strong>false</strong> and <code>applyonly</code> is equal to <strong>true</strong>, the behavior corresponds to when apply scheduled edits is equal to <strong>always</strong> and apply scheduled shifts is equal to <strong>unless other events exist on day</strong>. When <code>payfromschedule</code> is equal to <strong>false</strong> and <code>applyonly</code> is equal to <strong>true</strong>, the behavior corresponds to when apply scheduled edits is equal to <strong>unless other events exist on day</strong> and apply scheduled shifts is equal to <strong>unless other events exist on day</strong>.</p>", 
          "type" : "boolean"
        }, 
        "applyScheduleMargins" : {
          "description" : "A Boolean indicator of whether or not schedule margins are applied when linking a shift to a schedule.", 
          "type" : "boolean"
        }, 
        "approvedAccntNotification" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The name of the generic notification which is used to notify managers assigned to this pay rule of changes to approved account totals."
        }, 
        "assignmentRules" : {
          "description" : "A list of assignment rules that allow a work rule to be assigned to a specific time period. When employees qualify for an assigned shift, the assigned work rule applies, not their default work rule.", 
          "items" : {
            "$ref" : "#/definitions/AssignmentRule"
          }, 
          "type" : "array"
        }, 
        "cancelPFSEditsOnlyOnHolidays" : {
          "description" : "A Boolean indicator of whether or not only scheduled edits are canceled on a day that happens to be a holiday. If <strong>true</strong>, scheduled edits are canceled (that is, not paid), but scheduled shifts are not canceled (that is, remain paid). If <code>cancelpfseditsonlyonhoildays</code> is <strong>true</strong>, both <code>cancelpfsonholidays</code> and <code>cancelpfsshiftsonlyonholidays</code> may be omitted. If they are included, set them to <strong>false</strong>. The default value is <strong>false</strong>.", 
          "type" : "boolean"
        }, 
        "cancelPFSOnHolidays" : {
          "description" : "A Boolean indicator of whether or not paying scheduled shifts and scheduled edits is canceled on a day that happens to be a holiday. If <strong>true</strong>, both scheduled shifts and scheduled edits are canceled (that is, not paid). If <strong>false</strong>, neither scheduled shifts nor scheduled edits are canceled. If either <code>cancelpfsshiftsonlyonhoildays</code> or <code>cancelpfseditsonlyonholidays</code> is <strong>true</strong>, this attribute is irrelevant and may be omitted. If included, it should be set to <strong>false</strong>.", 
          "type" : "boolean"
        }, 
        "cancelPFSShiftsOnlyOnHolidays" : {
          "description" : "A Boolean indicator of whether or not only scheduled shifts are canceled on a day that happens to be a holiday. If <strong>true</strong>, scheduled shifts are canceled (that is, not paid), but scheduled edits are not canceled (that is, remain paid). If <code>cancelpfsshiftsonlyonhoildays</code> is <strong>true</strong>, then both <code>cancelpfsonholidays</code> and <code>cancelpfseditsonlyonholidays</code> may be omitted. If they are included, set them to <strong>false</strong>. The default value is <strong>false</strong>.", 
          "type" : "boolean"
        }, 
        "correctionsApplyDate" : {
          "description" : "The apply date for corrections. Valid values are: 1:'today', 2:'first day of the current pay period', 3:'last day of the current pay period', 4:'first day of the previous pay period', 5:'last day of the previous pay period'.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "costCenterLaborCategoryAndJobTransfers" : {
          "description" : "A Boolean indicator of whether or not labor account and job transfers are enabled for this effective pay rule.", 
          "type" : "boolean"
        }, 
        "effectiveDate" : {
          "description" : "The effective date span of this pay rule version.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "enableEditsAfter" : {
          "description" : "Enable edits after sign-off: -1 indicates 'enable edits after the lock is removed manually or by payroll interface'. 0, u00F6, 999 indicate the amount of hours to enable edits after the end of the pay period.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "extensionProcessors" : {
          "description" : "A list of extension processor names.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }, 
        "fixedRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The name of the associated fixed rule that identifies constant pay policies that are assigned to employees."
        }, 
        "holidayCreditRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The name of the associated holiday credit rule that determines if an employee is eligible to receive holiday credits and the amount of holiday credits the employee can receive."
        }, 
        "holidays" : {
          "description" : "A list of holidays that give holiday credits to the employees who are assigned to this pay rule.", 
          "items" : {
            "$ref" : "#/definitions/PayRuleHoliday"
          }, 
          "type" : "array"
        }, 
        "id" : {
          "description" : "The ID of an effective pay rule.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "managerApprovalRestrictionRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the manager approval restriction rule."
        }, 
        "name" : {
          "description" : "The name of the pay rule. The name is case-insensitive and must be unique.", 
          "type" : "string"
        }, 
        "nonCancellingPFSPayCodeTag" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the non-cancelling Pay From Schedule (PFS) pay code tag."
        }, 
        "payFromSchedule" : {
          "description" : "<p>A Boolean indicator that functions in conjunction with <code>applyonly</code>. When <code>payfromschedule</code> is equal to <strong>true</strong> and <code>applyonly</code> is equal to <strong>false</strong>, the behavior corresponds to when apply scheduled edits is equal to <strong>always</strong> and apply scheduled shifts is equal to <strong>never</strong>. Likewise, when <code>payfromschedule</code> is equal to <strong>true</strong> and <code>applyonly</code> is equal to <strong>true</strong>, the behavior corresponds to when apply scheduled edits is equal to <strong>unless other events exist on day</strong> and apply scheduled shifts is equal to <strong>never</strong>. When <code>payfromschedule</code> is equal to <strong>false</strong> and <code>applyonly</code> is equal to <strong>true</strong>, the behavior corresponds to when apply scheduled edits is equal to <strong>always</strong> and apply scheduled shifts is equal to <strong>unless other events exist on day</strong>. When <code>payfromschedule</code> is equal to <strong>false</strong> and <code>applyonly</code> is equal to <strong>true</strong>, the behavior corresponds to when apply scheduled edits is equal to <strong>unless other events exist on day</strong> and apply scheduled shifts is equal to <strong>unless other events exist on day</strong>.</p>", 
          "type" : "boolean"
        }, 
        "prepopulateProject" : {
          "description" : "A Boolean indicator of whether or not project prepopulation is enabled for this effective pay rule. When this option is enabled, a project view timecard is prepopulated with the transfer accounts that were used in the previous pay period.", 
          "type" : "boolean"
        }, 
        "qualifiedSignOffRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The name of the associated qualified sign-off rule that restricts a manager's ability to signoff if specific conditions are not met."
        }, 
        "scheduleTotal" : {
          "description" : "A Boolean indicator of whether or not the projected totals are calculated and stored. Schedule totals are calculated and stored regardless of this setting.", 
          "type" : "boolean"
        }, 
        "sequenceRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The name of the associated processing order rule that defines the order in which accumulated hour types are processed."
        }, 
        "terminalRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The name of the associated punch interpretation rule that determines when punches link to schedules and when data collection devices accept and reject punches."
        }, 
        "transferRegularHome" : {
          "description" : "A Boolean indicator of whether or not regular home transfers are enabled for this effective pay rule.", 
          "type" : "boolean"
        }, 
        "transferRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The name of the associated transfer rule that defines the transfer behavior of a pay rule."
        }, 
        "updateThisVersion" : {
          "description" : "A Boolean indicator of whether or not to update the current version of a pay rule.", 
          "type" : "boolean"
        }, 
        "workRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The name of the associated work rule that identifies the work rule that interprets and calculates employee time."
        }, 
        "workRuleTransfers" : {
          "description" : "A Boolean indicator of whether or not the work rule transfers option is enabled for this effective pay rule. When this option is enabled, any work rule transfer that was entered is allowed to continue until a new transaction (employee punch, timecard edit, or group edit) is entered.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "PayRuleWhere" : {
      "description" : "The pay rule where object.", 
      "properties" : {
        "allDetails" : {
          "description" : "A Boolean indicator of whether or not the response returns all details of each pay rule. When false, the response returns only the ID and name.", 
          "type" : "boolean"
        }, 
        "payRules" : {
          "$ref" : "#/definitions/PayRuleObjectRefList", 
          "description" : "A list of references to pay rules.", 
          "position" : 1
        }
      }, 
      "required" : [ "payRules" ], 
      "type" : "object"
    }, 
    "Multi Read Criteria for percentage allocation rules fetching" : {
      "description" : "The Retrieve Employee Groups request payload model.", 
      "properties" : {
        "allDetails" : {
          "description" : "A Boolean indicator of whether or not the response returns all of the details of each Hyperfind query.", 
          "type" : "boolean"
        }, 
        "percentageAllocationRules" : {
          "$ref" : "#/definitions/Multi Read References which contains actual criterias", 
          "description" : "The actual criteria for fetching fixed percentage allocation rules are mentioned in here."
        }
      }, 
      "type" : "object"
    }, 
    "NewCookie" : {
      "properties" : {
        "comment" : {
          "type" : "string"
        }, 
        "domain" : {
          "type" : "string"
        }, 
        "expiry" : {
          "format" : "date-time", 
          "type" : "string"
        }, 
        "httpOnly" : {
          "type" : "boolean"
        }, 
        "maxAge" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "name" : {
          "type" : "string"
        }, 
        "path" : {
          "type" : "string"
        }, 
        "secure" : {
          "type" : "boolean"
        }, 
        "value" : {
          "type" : "string"
        }, 
        "version" : {
          "format" : "int32", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "EntityTag" : {
      "properties" : {
        "value" : {
          "type" : "string"
        }, 
        "weak" : {
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "Link" : {
      "properties" : {
        "params" : {
          "additionalProperties" : {
            "type" : "string"
          }, 
          "type" : "object"
        }, 
        "rel" : {
          "type" : "string"
        }, 
        "rels" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "title" : {
          "type" : "string"
        }, 
        "type" : {
          "type" : "string"
        }, 
        "uri" : {
          "format" : "uri", 
          "type" : "string"
        }, 
        "uriBuilder" : {
          "$ref" : "#/definitions/UriBuilder"
        }
      }, 
      "type" : "object"
    }, 
    "MediaType" : {
      "properties" : {
        "parameters" : {
          "additionalProperties" : {
            "type" : "string"
          }, 
          "type" : "object"
        }, 
        "subtype" : {
          "type" : "string"
        }, 
        "type" : {
          "type" : "string"
        }, 
        "wildcardSubtype" : {
          "type" : "boolean"
        }, 
        "wildcardType" : {
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "StatusType" : {
      "properties" : {
        "family" : {
          "enum" : [ "INFORMATIONAL", "SUCCESSFUL", "REDIRECTION", "CLIENT_ERROR", "SERVER_ERROR", "OTHER" ], 
          "type" : "string"
        }, 
        "reasonPhrase" : {
          "type" : "string"
        }, 
        "statusCode" : {
          "format" : "int32", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "FPATrigger" : {
      "description" : "Information about Fixed Percentage Allocation Triggers.", 
      "properties" : {
        "allocations" : {
          "description" : "Specifies how much of a total should be allocated, to where, and at what wage rate, once a trigger is matched against the original total.", 
          "items" : {
            "$ref" : "#/definitions/FPAAllocation"
          }, 
          "type" : "array"
        }, 
        "costCenter" : {
          "description" : "The applicable cost center.", 
          "type" : "string"
        }, 
        "costCenterId" : {
          "description" : "The ID of the cost center.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "jobOrLocation" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The job to which the trigger is compared when determining if a trigger matches the total. Used in combination with the labor account pattern and paycodes."
        }, 
        "jobOrLocationEffectiveDate" : {
          "description" : "The effective date of the specified job.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "jobOrLocationToMatch" : {
          "description" : "The job code that is used to identify triggers that are deleted or updated by <code>deletebytrigger</code> and <code>updateonlybytrigger</code>. All elements of the trigger must match.", 
          "type" : "string"
        }, 
        "laborCategoryEntries" : {
          "description" : "The applicable labor categories.", 
          "type" : "string"
        }, 
        "matchAnywhere" : {
          "description" : "Applies the adjustment trigger to any business structure that uses the configured job or location.", 
          "type" : "boolean"
        }, 
        "originalVersionNum" : {
          "description" : "The original version (or revision) number.", 
          "type" : "string"
        }, 
        "payCodes" : {
          "description" : "Pay codes are part of a trigger and, when defined, are used when comparing against a total. If there are pay codes defined in a trigger, the total must match one of those pay codes.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }, 
        "payCodesToMatch" : {
          "description" : "The pay codes used to identify triggers to delete or update for <code>deletebytrigger</code> and <code>updateonlybytrigger</code>. All elements of the trigger must match.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }, 
        "versionNum" : {
          "description" : "Each trigger is given a sequence number to determine in which order they are compared against the total. Each trigger has a unique sequence number.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "versionNumToMatch" : {
          "description" : "The sequence numbers that are used to identify triggers to delete or update for <code>deletebytrigger</code> and <code>updateonlybytrigger</code>. When all elements of the trigger match, this sequence number is used to identify a specific trigger.", 
          "type" : "string"
        }
      }, 
      "required" : [ "versionNum" ], 
      "type" : "object"
    }, 
    "Duration" : {
      "properties" : {
        "nano" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "negative" : {
          "type" : "boolean"
        }, 
        "seconds" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "units" : {
          "items" : {
            "$ref" : "#/definitions/TemporalUnit"
          }, 
          "type" : "array"
        }, 
        "zero" : {
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingSetupGrants" : {
      "description" : "The grants model.", 
      "properties" : {
        "accrualCode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The accrual code associated with a grant."
        }, 
        "amounType" : {
          "description" : "The type of a grant amount.", 
          "type" : "string"
        }, 
        "amount" : {
          "description" : "The amount of a grant.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID of a grant.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "lengthOfService" : {
          "description" : "The length of service expressed in days.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "qualifier" : {
          "description" : "The qualifier of a grant, which is the grant's name.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingSetupLimits" : {
      "description" : "Entity containing necessary data to describe limits.", 
      "properties" : {
        "amount" : {
          "description" : "The amount of a limit.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID of a limit.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "lengthOfService" : {
          "description" : "The length of service in days associated with a limit.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "qualifier" : {
          "description" : "The qualifier of a limit, which is the limit's name.", 
          "type" : "string"
        }, 
        "type" : {
          "description" : "The type of a limit.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingSetupOverdrafts" : {
      "description" : "Entity containing necessary data to describe overdrafts.", 
      "properties" : {
        "futureOverdrafts" : {
          "$ref" : "#/definitions/TimekeepingSetupFutureOverdrafts", 
          "description" : "The future overdrafts of an accrual policy."
        }, 
        "overrideWarnings" : {
          "$ref" : "#/definitions/TimekeepingSetupOverrideWarnings", 
          "description" : "The override warnings of an accrual policy."
        }, 
        "pastOrPresentOverdrafts" : {
          "$ref" : "#/definitions/TimekeepingSetupPastOrPresentOverdrafts", 
          "description" : "The past or present overdrafts of an accrual policy."
        }, 
        "pastOverdraftBalanceEffectiveDate" : {
          "description" : "The past overdraft balance effective date in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingSetupTakings" : {
      "description" : "The takings model.", 
      "properties" : {
        "maximumTakingLimit" : {
          "description" : "The maximum taking limit.", 
          "items" : {
            "$ref" : "#/definitions/TimekeepingSetupMaximumTakingLimit"
          }, 
          "type" : "array"
        }, 
        "minimumTakingInDays" : {
          "description" : "The minimum taking in days.", 
          "type" : "string"
        }, 
        "payoutPayCode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The payout paycode associated with takings."
        }, 
        "restoreTaking" : {
          "description" : "The restore taking associated with takings.", 
          "type" : "string"
        }, 
        "restoreTakingAmount" : {
          "description" : "The restore taking amount in days.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "restoreTakingType" : {
          "description" : "The type of a restore taking.", 
          "type" : "string"
        }, 
        "selectedPaycodes" : {
          "description" : "The selected paycodes associated with takings.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }, 
        "takingIncrementInDays" : {
          "description" : "The taking increment in days.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "AdjustmentTriggerForRule" : {
      "description" : "Adjustment Trigger for Rule information.", 
      "properties" : {
        "adjustmentAllocation" : {
          "$ref" : "#/definitions/AdjustmentAllocation", 
          "description" : "The adjustment allocation for an adjustment rule."
        }, 
        "costCenter" : {
          "description" : "The associated cost center.", 
          "type" : "string"
        }, 
        "jobOrLocation" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The job used to compare against the job associated with totals pay. Used in combination with the labor account pattern and pay codes."
        }, 
        "jobOrLocationEffectiveDate" : {
          "description" : "The effective date of the chosen job. This property is supplied when the jobcode property value is also supplied.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "laborCategoryEntries" : {
          "description" : "The associated labor categories.", 
          "type" : "string"
        }, 
        "matchAnywhere" : {
          "description" : "Applies the adjustment trigger to any business structure that uses the configured job or location.", 
          "type" : "boolean"
        }, 
        "originalVersionNum" : {
          "description" : "Specifies the original sequence number used when matching triggers.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "payCodes" : {
          "description" : "A list of pay codes in the total allocation rule trigger. When defined in the trigger, the pay codes are matched against the pay codes in totals.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }, 
        "versionNum" : {
          "description" : "Specifies the order in which triggers are applied. The sequence is used in the UI display and by a processor for the order in which the triggers are used. If a sequence number is not specified, one is generated. If the sequence number is used, it is unique in an adjustment rule version.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "required" : [ "adjustmentAllocation", "matchAnywhere", "originalVersionNum", "versionNum" ], 
      "type" : "object"
    }, 
    "Combination Pair" : {
      "description" : "The model of combination pair in configured combinations.", 
      "properties" : {
        "name" : {
          "description" : "The combination pair name in configured combinations.", 
          "type" : "string"
        }, 
        "type" : {
          "description" : "The combination pair type in configured combinations.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Combination Toward OverTime" : {
      "description" : "The model to select combinationRules Count Towards Overtime.", 
      "properties" : {
        "countsTowardTargetOT" : {
          "description" : "A Boolean indicator of whether or not combination rules count towards overtime.", 
          "type" : "boolean"
        }, 
        "sourceRuleComponentType" : {
          "description" : "The source rule component type of combinationRulesCountTowardsOT.", 
          "type" : "string"
        }, 
        "sourceRuleName" : {
          "$ref" : "#/definitions/CombinationRuleObjectRef", 
          "description" : "The source rule name of combinationRulesCountTowardsOT."
        }, 
        "targetOTRuleComponentType" : {
          "description" : "The target rule component type of combinationRulesCountTowardsOT.", 
          "type" : "string"
        }, 
        "targetOTRuleName" : {
          "description" : "The target rule name of combinationRulesCountTowardsOT.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Combination Component" : {
      "description" : "The model to select selected components.", 
      "properties" : {
        "componentType" : {
          "description" : "The type of selected components.", 
          "type" : "string"
        }, 
        "continueToCountTO" : {
          "description" : "A Boolean indicator of whether or not to continue to count towards overtime.", 
          "type" : "boolean"
        }, 
        "description" : {
          "description" : "The description of selected components.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "The name of selected components.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "EmploymentTermVersionType" : {
      "properties" : {
        "accrualProfile" : {
          "type" : "string", 
          "xml" : {
            "name" : "AccrualProfile"
          }
        }, 
        "adjustmentPayCode" : {
          "type" : "string", 
          "xml" : {
            "name" : "AdjustmentPayCode"
          }
        }, 
        "cascadeProfile" : {
          "type" : "string", 
          "xml" : {
            "name" : "CascadeProfile"
          }
        }, 
        "contractDefinition" : {
          "$ref" : "#/definitions/ContractDefinition", 
          "xml" : {
            "name" : "ContractDefinition"
          }
        }, 
        "contributingPayCodesSet" : {
          "type" : "string", 
          "xml" : {
            "name" : "ContributingPayCodesSet"
          }
        }, 
        "dayPaycodes" : {
          "$ref" : "#/definitions/DayPaycodes", 
          "xml" : {
            "name" : "DayPaycodes"
          }
        }, 
        "durationPaycodes" : {
          "$ref" : "#/definitions/DurationPaycodes", 
          "xml" : {
            "name" : "DurationPaycodes"
          }
        }, 
        "endDate" : {
          "format" : "date-time", 
          "type" : "string", 
          "xml" : {
            "name" : "EndDate"
          }
        }, 
        "holidayProfile" : {
          "type" : "string", 
          "xml" : {
            "name" : "HolidayProfile"
          }
        }, 
        "minimumWage" : {
          "type" : "string", 
          "xml" : {
            "name" : "MinimumWage"
          }
        }, 
        "payCodeValuesProfile" : {
          "type" : "string", 
          "xml" : {
            "name" : "PayCodeValuesProfile"
          }
        }, 
        "payRule" : {
          "type" : "string", 
          "xml" : {
            "name" : "PayRule"
          }
        }, 
        "startDate" : {
          "format" : "date-time", 
          "type" : "string", 
          "xml" : {
            "name" : "StartDate"
          }
        }, 
        "timeOffRule" : {
          "type" : "string", 
          "xml" : {
            "name" : "TimeOffRule"
          }
        }, 
        "workHours" : {
          "$ref" : "#/definitions/WorkHours", 
          "xml" : {
            "name" : "WorkHours"
          }
        }
      }, 
      "required" : [ "endDate", "startDate" ], 
      "type" : "object"
    }, 
    "Multi Read References which contains actual criterias" : {
      "description" : "The multi_read references which contain the actual criteria for retrieving employee groups.", 
      "properties" : {
        "ids" : {
          "description" : "An array of employee group IDs. Employee groups are retrieved for valid identifiers specified in this array.", 
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array"
        }, 
        "persistentIds" : {
          "description" : "An array of persistent IDs of Hyperfind queries.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "qualifiers" : {
          "description" : "An array of employee group names. Employee groups are retrieved for valid names specified in this array.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "refs" : {
          "description" : "An array of references to employee group objects. Employee groups are retrieved for valid IDs or names specified in this array of object references.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "EmploymentTermVersionApiBean" : {
      "description" : "Employment Term Version contains the rules for employment terms.", 
      "properties" : {
        "accrualProfile" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The name of an accrual profile. Must be the name of an existing accrual profile."
        }, 
        "cascadeProfile" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The name of a cascade profile. Must be the name of an existing cascade profile."
        }, 
        "contractDefinition" : {
          "$ref" : "#/definitions/EmploymentTermContractDefinitionApiBean", 
          "description" : "An object containing the contract definition."
        }, 
        "dayPaycodes" : {
          "$ref" : "#/definitions/DayPaycodes", 
          "description" : "A list of daypaycode objects representing day pay codes for which the source or value of the hours-equivalent is defined."
        }, 
        "durationPaycodes" : {
          "$ref" : "#/definitions/DurationPaycodes", 
          "description" : "A list of term duration pay codes for this employment term version."
        }, 
        "endDate" : {
          "description" : "The end date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "holidayProfile" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The name of a holiday profile. Must be the name of an existing holiday profile."
        }, 
        "id" : {
          "description" : "A id of an existing employment term version.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "minimumWage" : {
          "$ref" : "#/definitions/minimumWage", 
          "description" : "An object containing minimum wage definitions."
        }, 
        "payCodeValuesProfile" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The name of a pay code values profile. Must be the name of an existing pay code values profile."
        }, 
        "payRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The name of a pay rule. This name must be the name of an existing pay rule."
        }, 
        "startDate" : {
          "description" : "The start date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "timeOffRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The name of a time-off rule. If specified, must be the name of an existing time-off rule."
        }, 
        "workHours" : {
          "$ref" : "#/definitions/WorkHours", 
          "description" : "A list of work hour definitions."
        }
      }, 
      "required" : [ "endDate", "startDate" ], 
      "type" : "object"
    }, 
    "ObjectRefList" : {
      "description" : "Model describing a collection of object references.", 
      "properties" : {
        "ids" : {
          "description" : "The list of references by ID.", 
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "qualifiers" : {
          "description" : "The qualifier of the object reference, such as name.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "refs" : {
          "description" : "The object references.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Work Rule General" : {
      "description" : "The work rule general object.", 
      "properties" : {
        "autoResolvedExceptionRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The auto-resolved exception rule for the general section."
        }, 
        "breaks" : {
          "description" : "The breaks associated with a work rule.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }, 
        "callInRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The call-in rule for the general section."
        }, 
        "combinedHoursPayCode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The combined hours pay code for weighted average adjustment for the general section."
        }, 
        "combinedWagesPayCode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The combined wages pay code for weighted average adjustment for the general section."
        }, 
        "coreHours" : {
          "description" : "The core hours for the general section.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }, 
        "dayDivideOverride" : {
          "description" : "The day divide override for the general section.", 
          "type" : "string"
        }, 
        "deductions" : {
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }, 
        "deniedPayCode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The denied pay code ID for the general section."
        }, 
        "exception" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The exception for the general section."
        }, 
        "includeMinimumWagesAdjustment" : {
          "description" : "A Boolean indicator of whether or not to include the minimum wage adjustment for the weighted average adjustment for the general section.", 
          "type" : "boolean"
        }, 
        "roundRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The round rule for the general section."
        }, 
        "shiftGuarantee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The shift guarantee for the general section."
        }, 
        "unapprovedPayCode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The unapproved pay code ID for the general section."
        }
      }, 
      "type" : "object"
    }, 
    "Work Rule Auto Break Placement" : {
      "description" : "The work rule auto break placement object.", 
      "properties" : {
        "copyFromExistingWorkRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A Boolean indicator of whether or not to copy from an existing work rule."
        }, 
        "minimumTimeBetweenBreaks" : {
          "description" : "The minimum time between breaks.", 
          "type" : "string"
        }, 
        "minimumTimeBetweenEndOfBreakAndShiftEnd" : {
          "description" : "The minimum time between first break and end of shift.", 
          "type" : "string"
        }, 
        "minimumTimeBetweenStartOfShiftAndFirstBreak" : {
          "description" : "The minimum time between start of shift and first break.", 
          "type" : "string"
        }, 
        "newShiftLengths" : {
          "description" : "The new shift length.", 
          "items" : {
            "$ref" : "#/definitions/New Shift Length"
          }, 
          "type" : "array"
        }, 
        "shiftLengthsToExclude" : {
          "description" : "The shift lengths to exclude.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Work Rule PayCode Distribution" : {
      "description" : "The work rule pay code distribution object.", 
      "properties" : {
        "deviations" : {
          "description" : "The deviations for a pay code distribution.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }, 
        "majorities" : {
          "description" : "The majorities associated with a pay code distribution.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }, 
        "overtimes" : {
          "description" : "The overtime associated with a pay code distribution.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }, 
        "payCodeDistributionName" : {
          "description" : "The name of a pay code distribution.", 
          "type" : "string"
        }, 
        "payCodeDistributionReference" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The pay code references associated with a pay code distribution."
        }, 
        "zones" : {
          "description" : "The zones associated with a pay code distribution.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "TrackingBeginsAt" : {
      "description" : "The Overtime Rule Tracking Begins At object model.", 
      "properties" : {
        "countOverlapperPeriod" : {
          "description" : "A Boolean indicator of whether or not to count overlapping periods.", 
          "type" : "boolean"
        }, 
        "inPunchesOfBreaks" : {
          "description" : "A Boolean indicator of whether or not to use in-punches of breaks.", 
          "type" : "boolean"
        }, 
        "previousShiftsInPunch" : {
          "description" : "A Boolean indicator of whether or not to use the previous shift's in-punch.", 
          "type" : "boolean"
        }, 
        "type" : {
          "description" : "The type of an overtime rule. Valid values include TRACKINGSTARTACTUAL, TRACKINGSTARTSCHEDULE, TRACKINGSTARTEARLIER.", 
          "enum" : [ "TRACKINGSTARTACTUAL", "TRACKINGSTARTSCHEDULE", "TRACKINGSTARTEARLIER" ], 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "AssignmentRule" : {
      "description" : "The Assignment Rule allows you to assign a work rule to a specific time period. When employees qualify for an assigned shift, the assigned work rule applies rather than their default work rule.", 
      "properties" : {
        "friday" : {
          "description" : "A Boolean indicator of whether or not the assignment rule is enabled for Friday. Defaults to TRUE.", 
          "type" : "boolean"
        }, 
        "monday" : {
          "description" : "A Boolean indicator of whether or not the assignment rule is enabled for Monday. Defaults to TRUE.", 
          "type" : "boolean"
        }, 
        "orderNum" : {
          "description" : "The order number of the assignment rules that are assigned to a particular pay rule.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "saturday" : {
          "description" : "A Boolean indicator of whether or not the assignment rule is enabled for Saturday. Defaults to TRUE.", 
          "type" : "boolean"
        }, 
        "scheduleEndTime" : {
          "description" : "The end time of a schedule closes the range of time that allows in-punches to link to an assigned schedule. For scheduled employees to qualify for the assigned shift, their scheduled start times must be before the end time. For unscheduled employees to qualify for the assigned shift, their in-punches must be before the end time. The end time is in hh:mm am|pm format.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "scheduleStartTime" : {
          "description" : "for scheduled employees to qualify for the assigned shift, their scheduled start times must be before the end time. for unscheduled employees to qualify for the assigned shift, their in-punches must be before the end time. end time in hh:mm am|pm format.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "scheduled" : {
          "description" : "A Boolean indicator of whether or not scheduled employees can qualify for an assignment shift. Defaults to TRUE.", 
          "type" : "boolean"
        }, 
        "shiftMax" : {
          "description" : "The maximum shift length allowed for an employee to qualify for the assignment rule. Specify the length in hh:mm format. The default is 99:59.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "shiftMin" : {
          "description" : "The minimum shift length required for an employee to qualify for the assignment rule. Specify the length in hh:mm format. The default is 0:00 (no minimum is required to qualify).", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "sunday" : {
          "description" : "A Boolean indicator of whether or not the assignment rule is enabled for Sunday. Defaults to TRUE.", 
          "type" : "boolean"
        }, 
        "thursday" : {
          "description" : "A Boolean indicator of whether or not the assignment rule is enabled for Thursday. Defaults to TRUE.", 
          "type" : "boolean"
        }, 
        "tuesday" : {
          "description" : "A Boolean indicator of whether or not the assignment rule is enabled for Tuesday. Defaults to TRUE.", 
          "type" : "boolean"
        }, 
        "unscheduled" : {
          "description" : "A Boolean indicator of whether or not unscheduled employees can qualify for an assignment shift. Defaults to TRUE.", 
          "type" : "boolean"
        }, 
        "wednesday" : {
          "description" : "A Boolean indicator of whether or not the assignment rule is enabled for Wednesday. Defaults to TRUE.", 
          "type" : "boolean"
        }, 
        "workRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The name of the work rule that applies to a shift."
        }
      }, 
      "type" : "object"
    }, 
    "PayRuleHoliday" : {
      "description" : "A list of holidays that give holiday credits to the employees who are assigned to this pay rule.", 
      "properties" : {
        "creditRules" : {
          "description" : "The names of one or more holiday credit rules associated with the pay rule.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }, 
        "holiday" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The name of the associated holiday."
        }, 
        "selected" : {
          "description" : "A Boolean indicator of whether or not the holiday indicated by holidayname is selected for this pay rule.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "PayRuleObjectRefList" : {
      "description" : "Model describing a collection of object references.", 
      "properties" : {
        "ids" : {
          "description" : "A list of pay rule IDs.", 
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "persistentIds" : {
          "description" : "A list of persistent IDs that uniquely identify pay rules.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "qualifiers" : {
          "description" : "A list of pay rule qualifiers. The qualifier for a pay rule is the pay rule's name.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "refs" : {
          "description" : "A list of ID and qualifier references to pay rule objects that uniquely identify pay rules.", 
          "items" : {
            "$ref" : "#/definitions/PayRuleObjectRef"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "UriBuilder" : {
      "type" : "object"
    }, 
    "FPAAllocation" : {
      "description" : "Information about Fixed Percentage Allocations.", 
      "properties" : {
        "costCenter" : {
          "description" : "The cost center associated with the fixed percentage allocation.", 
          "type" : "string"
        }, 
        "job" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The job to which the trigger is compared when determining if a trigger matches the total. Used in combination with the labor account pattern and paycodes."
        }, 
        "laborCategoryEntries" : {
          "description" : "A list of labor category entries.", 
          "type" : "string"
        }, 
        "percentage" : {
          "description" : "The percentage of the total wage that is allocated to the specified labor account. All allocations for a trigger must add up to 100.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "wageAdjustmentAmount" : {
          "description" : "Specifies the amount by which the base wage is adjusted.", 
          "type" : "number"
        }, 
        "wageAdjustmentType" : {
          "description" : "<p>Specifies how the base wage is adjusted after the allocation rule is applied:<br />0 - none<br />1 - addition<br />2 - multiplier<br />3 - flat rate</p>", 
          "format" : "int32", 
          "type" : "integer"
        }
      }, 
      "required" : [ "percentage" ], 
      "type" : "object"
    }, 
    "TemporalUnit" : {
      "properties" : {
        "dateBased" : {
          "type" : "boolean"
        }, 
        "duration" : {
          "$ref" : "#/definitions/Duration"
        }, 
        "durationEstimated" : {
          "type" : "boolean"
        }, 
        "timeBased" : {
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingSetupFutureOverdrafts" : {
      "description" : "The future overdrafts model.", 
      "properties" : {
        "disallowOverdraftAmountInDays" : {
          "description" : "The disallow overdraft amount in days. This describes disallowed amounts as warnings in signed off periods.", 
          "type" : "string"
        }, 
        "warningOverDraftAmountInDays" : {
          "description" : "The warning overdraft amount expressed in days.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingSetupOverrideWarnings" : {
      "description" : "Entity containing necessary data to describe override warnings.", 
      "properties" : {
        "duringGroupEdits" : {
          "description" : "A Boolean indicator of whether or not to override warnings during group edits.", 
          "type" : "boolean"
        }, 
        "duringImports" : {
          "description" : "A Boolean indicator of whether or not to override warnings during imports.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingSetupPastOrPresentOverdrafts" : {
      "description" : "Entity containing necessary data to describe past or present overdrafts.", 
      "properties" : {
        "disallowOverdraftAmountInDays" : {
          "description" : "The disallow overdraft amount expressed in days.", 
          "type" : "string"
        }, 
        "treatDisallowedAmountsAsWarningsInSignedOffPeriods" : {
          "description" : "A Boolean indicator of whether or not to treat disallowed amounts as warnings in signed off periods.", 
          "type" : "boolean"
        }, 
        "warningOverDraftAmountInDays" : {
          "description" : "The warning overdraft amount expressed in days.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingSetupMaximumTakingLimit" : {
      "description" : "Entity containing necessary data to describe maximum taking limits.", 
      "properties" : {
        "disallowAmountInDays" : {
          "description" : "The disallow amount of a maximum taking limit.", 
          "type" : "string"
        }, 
        "maximumTakingLimitType" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The name of a maximum taking limit."
        }, 
        "warningAmountInDays" : {
          "description" : "The amount of a maximum taking limit.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "AdjustmentAllocation" : {
      "description" : "Adjustment Allocation for Adjustment Rule information.", 
      "properties" : {
        "adjustmentAllocation" : {
          "$ref" : "#/definitions/AdjustmentAllocationData"
        }
      }, 
      "type" : "object"
    }, 
    "CombinationRuleObjectRef" : {
      "description" : "The combination rule object reference model.", 
      "properties" : {
        "id" : {
          "description" : "The ID of a combination rule.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "qualifier" : {
          "description" : "The qualifier of a combination rule.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "ContractDefinition" : {
      "properties" : {
        "employmentTermContractDefinition" : {
          "$ref" : "#/definitions/EmploymentTermContractDefinitionType", 
          "xml" : {
            "name" : "EmploymentTermContractDefinition"
          }
        }
      }, 
      "type" : "object"
    }, 
    "DayPaycodes" : {
      "properties" : {
        "termDayPaycode" : {
          "items" : {
            "$ref" : "#/definitions/TermDayPaycodeType", 
            "xml" : {
              "name" : "TermDayPaycode"
            }
          }, 
          "type" : "array", 
          "xml" : {
            "name" : "TermDayPaycode"
          }
        }
      }, 
      "type" : "object"
    }, 
    "DurationPaycodes" : {
      "properties" : {
        "termDurationPaycode" : {
          "items" : {
            "$ref" : "#/definitions/TermDurationPaycodeType", 
            "xml" : {
              "name" : "TermDurationPaycode"
            }
          }, 
          "type" : "array", 
          "xml" : {
            "name" : "TermDurationPaycode"
          }
        }
      }, 
      "type" : "object"
    }, 
    "WorkHours" : {
      "properties" : {
        "workHourDef" : {
          "items" : {
            "$ref" : "#/definitions/WorkHourDefType", 
            "xml" : {
              "name" : "WorkHourDef"
            }
          }, 
          "type" : "array", 
          "xml" : {
            "name" : "WorkHourDef"
          }
        }
      }, 
      "type" : "object"
    }, 
    "EmploymentTermContractDefinitionApiBean" : {
      "description" : "The Employment Term Contract Definition model for employment terms.", 
      "properties" : {
        "daysPerWeek" : {
          "description" : "The contracted days per week, which can be specified as a float value.", 
          "type" : "string"
        }, 
        "fte" : {
          "description" : "The Full Time Equivalency (FTE) expressed as a percentage (integer number) or duration (HH:mm format).", 
          "type" : "string"
        }, 
        "fteInPercent" : {
          "type" : "boolean"
        }, 
        "hoursPerDay" : {
          "description" : "The contracted hours per day in HH:mm format. The maximum allowed value is 24:00.", 
          "type" : "string"
        }, 
        "hoursPerWeek" : {
          "description" : "The contracted hours per week in HH:mm format. The maximum allowed value is 168:00.", 
          "type" : "string"
        }, 
        "legalWorkWeek" : {
          "description" : "The contracted number of working days per week.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "weekStartDay" : {
          "description" : "The contracted first day of the week.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "workingDaysHours" : {
          "description" : "A list of working days with hours.", 
          "items" : {
            "$ref" : "#/definitions/WorkingDayHourPairApiBean"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "minimumWage" : {
      "description" : "Minimum Wage Definition for employment terms.", 
      "properties" : {
        "adjustmentPayCode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the adjustment pay code object. All pay codes are allowed."
        }, 
        "amount" : {
          "description" : "The minimum wage configuration.", 
          "type" : "string"
        }, 
        "contributingPayCodes" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the contributing pay code object. All contributing pay codes are allowed."
        }
      }, 
      "type" : "object"
    }, 
    "ObjectRef" : {
      "description" : "The HCA object reference object model.", 
      "properties" : {
        "id" : {
          "description" : "The ID associated with an object reference.", 
          "format" : "int64", 
          "readOnly" : true, 
          "type" : "integer"
        }, 
        "qualifier" : {
          "description" : "The qualifier associated with an object reference.", 
          "readOnly" : true, 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "New Shift Length" : {
      "description" : "The work rule new shift length object.", 
      "properties" : {
        "breakTimes" : {
          "description" : "The break time value for shift length.", 
          "items" : {
            "$ref" : "#/definitions/Work Rule Version Break Time"
          }, 
          "type" : "array"
        }, 
        "length" : {
          "type" : "string"
        }, 
        "maxStartTime" : {
          "description" : "The maximum start time for shift length.", 
          "type" : "string"
        }, 
        "minStartTime" : {
          "description" : "The minimum start time for shift length.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "PayRuleObjectRef" : {
      "description" : "This model contains IDs, qualifiers, and persistent IDs that uniquely identify pay rule objects.", 
      "properties" : {
        "id" : {
          "description" : "The ID of a pay rule.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "persistentId" : {
          "description" : "The persistent ID of a pay rule.", 
          "type" : "string"
        }, 
        "qualifier" : {
          "description" : "The qualifier for a pay rule is the pay rule's name.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "AdjustmentAllocationData" : {
      "description" : "Adjustment Allocation Data information.", 
      "properties" : {
        "adjustmentType" : {
          "description" : "Specifies the type of an adjustment rule. Valid values are BONUS or WAGE. If not supplied, the type defaults to WAGE.", 
          "type" : "string"
        }, 
        "amount" : {
          "description" : "Specifies the wage amount applied to an employee's totals. This property is used only when adjustmenttype is equal to WAGE.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "bonusRateAmount" : {
          "description" : "A fixed amount of money or time that is added to the employee's totals. You can enter a bonusrateamount or a bonushourlyrate, but not both.", 
          "type" : "string"
        }, 
        "bonusRateHourlyRate" : {
          "description" : "Specifies the bonus rate by which the eligible hours worked are multiplied. The result is then added to the employee's totals. You can enter a bonusrateamount or a bonushourlyrate, but not both.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "jobCodeType" : {
          "description" : "The job code type.", 
          "type" : "string"
        }, 
        "jobOrLocation" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The job used to compare against the job associated with totals pay. Used in combination with the labor account pattern and pay codes."
        }, 
        "oncePerDay" : {
          "description" : "A Boolean indicator of whether or not the bonus adjustment rule is applied only once per day.", 
          "type" : "boolean"
        }, 
        "overrideIfPrimaryJobSwitch" : {
          "description" : "A Boolean indicator of whether or not a wage rate adjustment should not apply to employees' Primary Labor Accounts.", 
          "type" : "boolean"
        }, 
        "payCode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "Specifies the pay code allocated for pay. This property is required for the bonus type adjustment but is not used with the wage type adjustment. The pay code must be either money or hourly pay code."
        }, 
        "timeAmountMaximumAmount" : {
          "description" : "If specified, represents the maximum amount that can be given to an employee as a bonus adjustment. You can enter a timeamountmaximumtime or a timeamountmaximumamount, but not both.", 
          "type" : "string"
        }, 
        "timeAmountMaximumTime" : {
          "description" : "If specified, represents the maximum amount of time worked that is applied to the bonus adjustment. You can enter a timeamountmaximumtime or a timeamountmaximumamount, but not both.", 
          "type" : "string"
        }, 
        "timeAmountMinimumTime" : {
          "description" : "If specified, this property represents the minimum amount of time worked required to qualify an employee for a bonus adjustment.", 
          "type" : "string"
        }, 
        "timePeriod" : {
          "description" : "Specifies the time period applied for bonus adjustment calculations.", 
          "type" : "string"
        }, 
        "type" : {
          "description" : "Specifies how the wage adjustment amount is applied to an employee's totals. Used only when adjustmenttype is equal to WAGE.", 
          "type" : "string"
        }, 
        "useHighestWageSwitch" : {
          "description" : "A Boolean indicator of whether or not the higher of expanded or base wages is used.", 
          "type" : "boolean"
        }, 
        "weekStart" : {
          "description" : "If the property timeperiod is equal to WEEKLY, this property defines the start day of the week.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "EmploymentTermContractDefinitionType" : {
      "properties" : {
        "daysPerWeek" : {
          "type" : "string", 
          "xml" : {
            "name" : "DaysPerWeek"
          }
        }, 
        "fte" : {
          "type" : "string", 
          "xml" : {
            "name" : "Fte"
          }
        }, 
        "hoursPerDay" : {
          "type" : "string", 
          "xml" : {
            "name" : "HoursPerDay"
          }
        }, 
        "hoursPerWeek" : {
          "type" : "string", 
          "xml" : {
            "name" : "HoursPerWeek"
          }
        }, 
        "isFteInPercent" : {
          "type" : "boolean", 
          "xml" : {
            "name" : "IsFteInPercent"
          }
        }, 
        "legalWeekStartDay" : {
          "type" : "string", 
          "xml" : {
            "name" : "LegalWeekStartDay"
          }
        }, 
        "legalWorkWeek" : {
          "type" : "string", 
          "xml" : {
            "name" : "LegalWorkWeek"
          }
        }, 
        "workingDays" : {
          "$ref" : "#/definitions/WorkingDays", 
          "xml" : {
            "name" : "WorkingDays"
          }
        }
      }, 
      "type" : "object"
    }, 
    "TermDayPaycodeType" : {
      "properties" : {
        "amount" : {
          "type" : "string", 
          "xml" : {
            "name" : "Amount"
          }
        }, 
        "payCode" : {
          "type" : "string", 
          "xml" : {
            "name" : "PayCode"
          }
        }, 
        "startTime" : {
          "type" : "string", 
          "xml" : {
            "name" : "StartTime"
          }
        }
      }, 
      "required" : [ "amount", "payCode" ], 
      "type" : "object"
    }, 
    "TermDurationPaycodeType" : {
      "properties" : {
        "payCode" : {
          "type" : "string", 
          "xml" : {
            "name" : "PayCode"
          }
        }, 
        "workRule" : {
          "type" : "string", 
          "xml" : {
            "name" : "WorkRule"
          }
        }
      }, 
      "type" : "object"
    }, 
    "WorkHourDefType" : {
      "properties" : {
        "amount" : {
          "type" : "string", 
          "xml" : {
            "name" : "Amount"
          }
        }, 
        "datePattern" : {
          "type" : "string", 
          "xml" : {
            "name" : "DatePattern"
          }
        }, 
        "overtimeRule" : {
          "type" : "string", 
          "xml" : {
            "name" : "OvertimeRule"
          }
        }, 
        "payCode" : {
          "type" : "string", 
          "xml" : {
            "name" : "PayCode"
          }
        }, 
        "targetAmountType" : {
          "type" : "string", 
          "xml" : {
            "name" : "TargetAmountType"
          }
        }, 
        "useContractShift" : {
          "type" : "boolean", 
          "xml" : {
            "name" : "UseContractShift"
          }
        }, 
        "useInGenie" : {
          "type" : "boolean", 
          "xml" : {
            "name" : "UseInGenie"
          }
        }
      }, 
      "type" : "object"
    }, 
    "WorkingDayHourPairApiBean" : {
      "description" : "Working Hours Pair for Employment Term Contract Definition model.", 
      "properties" : {
        "day" : {
          "description" : "The number of a particular working day. Valid values are from 1 to 7 inclusively.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "hours" : {
          "description" : "The working hours for a working day in HH:mm format.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Work Rule Version Break Time" : {
      "description" : "The work rule break time object.", 
      "properties" : {
        "breakRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The Break Time Object model."
        }, 
        "maximumStartTime" : {
          "description" : "The maximum start time of a break.", 
          "type" : "string"
        }, 
        "minimumStartTime" : {
          "description" : "The minimum start time of a break.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "WorkingDays" : {
      "properties" : {
        "workingDay" : {
          "items" : {
            "$ref" : "#/definitions/WorkingDayType", 
            "xml" : {
              "name" : "WorkingDay"
            }
          }, 
          "type" : "array", 
          "xml" : {
            "name" : "WorkingDay"
          }
        }
      }, 
      "type" : "object"
    }, 
    "WorkingDayType" : {
      "properties" : {
        "dayOfWeek" : {
          "type" : "string", 
          "xml" : {
            "name" : "DayOfWeek"
          }
        }, 
        "hours" : {
          "type" : "string", 
          "xml" : {
            "name" : "Hours"
          }
        }
      }, 
      "type" : "object"
    }
  }
}
