{
  "swagger" : "2.0", 
  "produces" : null, 
  "host" : "", 
  "info" : {
    "description" : "Rest APIs", 
    "title" : "Rest APIs", 
    "version" : "1.0"
  }, 
  "basePath" : "/", 
  "tags" : [ {
    "description" : "<p markdown=\"1\">From here you may browse our library of API resources, organized hierarchically by domain, or major functional area, logical subgroup, API resource, and all available operations against that resource. For more information about the concepts and technology behind our API, refer to the [Getting started](C:636f581c-50a8-41a7-af43-e5057f9c20bd) documentation.</p><p>Our platform provides a powerful application programming interface and documentation to help you develop secure, scalable, and high-performance applications that leverage the full breadth of capabilities offered by our backend services.</p><p markdown=\"1\">The Workforce Management suite's API is founded on a pragmatic implementation of the [representational state transfer](http://en.wikipedia.org/wiki/Representational_State_Transfer) architectural style and allows access to your organization's workforce management data using common HTTP methods and the [JSON](http://www.json.org) interchange format.</p>", 
    "name" : "API"
  }, {
    "description" : "<p>This resource allows you to perform bulk asynchronous import operations on paycode edits, which represent a change to a schedule, timecard, or Dataview display that modifies existing punched data with a manual entry or group edit. You can also check the status of particular import operations, the status of each import item for one particular bulk asynchronous import operation, and the status of all submitted bulk asynchronous import operations.</p>", 
    "name" : "Bulk Asynchronous Paycode Edits", 
    "x-parent" : "Timekeeping Bulk Operations"
  }, {
    "description" : "<p>This resource allows you to enable edits in a signed-off region for employees in bulk.</p><p>Enable Edits is available when an employee has permission to edit signed-off timecards when the timecard is not in an editable state.</p><p>To help explain the Enable Edits functionality, consider the following:</p><p>After a pay period is signed off, your employees' time is submitted to payroll. Before the pay period is signed off, you may be able to remove signoff, make a correction, and then sign off the timecard again. After the pay period is signed off, you cannot make changes. Timecard editing is disabled automatically and must be re-enabled after the payroll process is completed.</p><p>Depending on how your system is managed and configured, editing can be re-enabled as the last step in the payroll process by making an API call. This is the recommended method.</p><p><strong>Note:</strong> Selecting Enable Edits does not control the ability to make historical corrections. Only function access profiles, system settings, and pay rules determine if and how you can make historical corrections.</p>", 
    "name" : "Bulk Enable Edits", 
    "x-parent" : "Timekeeping Bulk Operations"
  }, {
    "description" : "<p>This resource allows you to perform bulk import and delete operations on paycode edits, which represent a change to a schedule, timecard, or Dataview display that modifies existing punched data with a manual entry or group edit. An employee can perform a paycode edit operation in one of two modes: offline when the terminal is not connected to the network, or online when the terminal is connected.</p>", 
    "name" : "Bulk Paycode Edits", 
    "x-parent" : "Timekeeping Bulk Operations"
  }, {
    "description" : "This resource allows you to lock employee payroll according to a specified date.", 
    "name" : "Bulk Payroll Lock", 
    "x-parent" : "Timekeeping Bulk Operations"
  }, {
    "description" : "<p>The Punches resource allows you to add, delete, or change a punch object within the system. It also supports identifying child objects for Comments, Notes, Exceptions, and OrgJob. This resource supports rule transfers from an existing punch before and after the sign-off date. The associated Function Access Control Point is API.Timecard.</p><p>Punches are the entries on a timecard that mark the beginning (in-punch) or end (out-punch) of a work interval, such as the beginning of a shift or transfer. A punch registers, using a data collection device, employees' attendance at work, and their hours worked. Employees \"punch\" when starting or ending a shift, meal, or break. Employees can punch in a variety of ways, depending on the data collection device.</p>", 
    "name" : "Bulk Punches", 
    "x-parent" : "Timekeeping Bulk Operations"
  }, {
    "description" : "<p>This resource allows you to import punches and paycode edits in bulk using a single operation.</p>", 
    "name" : "Bulk Punches and Paycode Edits", 
    "x-parent" : "Timekeeping Bulk Operations"
  }, {
    "description" : "<p>This resource allows you to extract a list of punches from the system in real time.</p>", 
    "name" : "Bulk Real Time Punches", 
    "x-parent" : "Timekeeping Bulk Operations"
  }, {
    "description" : "This resource allows a manager to approve or delete the approval of timecards in bulk.", 
    "name" : "Bulk Timecard Approvals", 
    "x-parent" : "Timekeeping Bulk Operations"
  }, {
    "description" : "<p>This resource allows you to sign off on a list employee timecards in bulk. Timecard sign-off prevents further timecard and schedule edits and grants final approval to timecards before they are processed by payroll.</p>", 
    "name" : "Bulk Timecard Signoffs", 
    "x-parent" : "Timekeeping Bulk Operations"
  }, {
    "description" : "<p>Timekeeping Bulk Operations allows you to access and perform large-scale operations against Timekeeping resources.</p><p markdown=\"1\">Refer to the [Timekeeping overview](C:ad29a8be-acb9-4507-b489-3f67c4a2e4ae) topic in [Domain overviews](C:f2ccfb74-38e7-466a-a7c7-acddc3d2d00c) for more information.</p>", 
    "name" : "Timekeeping Bulk Operations", 
    "x-parent" : "API"
  } ], 
  "paths" : {
    "/v1/commons/payroll/lock/apply_update" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation locks employee payroll according to a specified date.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> MS_PAYROLL_LOCK</li><li><strong>API Access Controlled By:</strong> Access Scope</li><li><strong>Default Value:</strong> Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Manager - Department Manager > Dataviews - Group Edits > Payroll lock in Dataviews</li></ul></p><br /><h2>Service limit</h2><p>A service limit constrains the number of employees that can be processed in a single request.</p><ul><li>The <strong>Number of Employees</strong> cannot exceed 2,000.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>", 
        "operationId" : "Bulk Payroll Lock", 
        "parameters" : [ {
          "description" : "The Bulk Payroll Lock request payload, which contains a list of employees or a Hyperfind and a payroll lock-through date.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/BulkPayrollLockContext"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "successful operation", 
            "schema" : {
              "$ref" : "#/definitions/BulkPayrollLockResponse"
            }
          }, 
          "204" : {
            "description" : "Successfully locked the payrolls of employees by the provided date."
          }, 
          "207" : {
            "description" : "Partially succeeded in locking the payrolls of employees by the provided date."
          }, 
          "400" : {
            "description" : "Bad Request: The payrolls of employees by the provided date is not locked."
          }
        }, 
        "summary" : "Locks the payrolls of employees by the provided date.", 
        "tags" : [ "Bulk Payroll Lock" ]
      }
    }, 
    "/v1/timekeeping/approvals/import" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation approves a list of employee timecards in bulk for a specified timeframe or date range.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of employees and the number of days that can be processed in a single request.</p><ul><li>The <strong>Number of Employees</strong> cannot exceed 500.</li><li>The <strong>Number of Days</strong> cannot exceed 365.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>", 
        "operationId" : "Bulk Timecard Approvals", 
        "parameters" : [ {
          "description" : "The Bulk Timecard Approvals request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/BulkApprovalServiceContext"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully approved employee timecards for the specified daterange.", 
            "schema" : {
              "$ref" : "#/definitions/BulkApprovalForRest"
            }
          }, 
          "207" : {
            "description" : "Some employee timecards could not be approved because of errors in the source data. Correct these errors and try again."
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>[WTK-160029] - Request of Bulk Approval is not correct.</li><li>Missing required input: {dateRange}.</li><li>None of the employee timecards could be approved because of errors in the source data. Correct these errors and try again.</li> <li>[WTK-160040] - Missing data in the request. Either refs, qualifiers or ids must be provided</li> <li>[WTK-160014] - Missing required input: {inputName}.</li> <li>[WTK-160031] - Start-date can not greater than end-date. </li> <li>[WTK-160030] - Symbolic Pay period passed in the request is not valid. </li> <li>[WTK-160015] - An explicit or symbolic date range must be specified. </li> <li>[WTK-160021] - Access rights violation: User does not have bulk approval access.</li> <li>[WTK-145051] - Service Limits are exceeded when you request the {SERVICE_NAME} for {NUMBER_ENTRIES} employees and {NUMBER_DAYS} days. Submit the request again but with a number of employees that does not exceed the service limit {LIMIT}. </li> <li>[WTK-160028] - Duplicate employee passed into request. </li> <li>[WTK-160022] - Employee does not exist. </li> <li>[WTK-160023] - User does not have permission to approve this Employee's timecard. </li> <li>[WTK-160036] - User does not have permission to remove this Employee's approved timecard. </li> <li>[WTK-160025] - Some employee timecards could not be approved because of errors in the source data. Correct these errors and try again. </li> <li>[WTK-160034] - Some employee timecard approvals could not be removed because of errors in the source data. Correct these errors and try again. </li> <li>[WTK-160006] - You cannot approve a pay period while payroll is locked. </li> <li>[WTK-160005] - You cannot make changes prior to the hire date.</li> <li>[WTK-160016] - Timecard cannot be approved as there are pending changes in the selected period - {dateSpan}. </li> <li>[WTK-160024] - Error during validating the employee approvals </li> <li>[WTK-160038] - The specified pay period has not been approved by a supervisor - Period: {dateSpan}. </li> <li>[WTK-160039] - The specified pay period has not been approved by a supervisor. </li> <li>[WTK-160041] - The timecard cannot be approved because it contains one or more configured exceptions that must be resolved. </li> <li>[WTK-160008] - The specified pay period has already been approved by a supervisor - Period: {dateSpan}. </li> <li>[WTK-160037] - The specified pay period has already been approved by a supervisor. </li> <li>[WTK-160027] - There was an error during Adding approval in database. </li> </ul>"
          }, 
          "403" : {
            "description" : "Access rights violation: User does not have bulk approval access."
          }, 
          "413" : {
            "description" : "Service Limits are exceeded when you request the Timekeeping.ServiceLimit.ApprovalService.Bulk.MultiCreate  for {employee ids} employees and {duration} days. Submit the request again but with a number of employees that does not exceed the service limit {service limit}."
          }
        }, 
        "summary" : "Approves a list of employee timecards.", 
        "tags" : [ "Bulk Timecard Approvals" ]
      }
    }, 
    "/v1/timekeeping/approvals/multi_delete" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation deletes the approvals of a list of employee timecards in bulk for a specified timeframe or date range.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of employees and the number of days that can be processed in a single request.</p><ul><li>The <strong>Number of Employees</strong> cannot exceed 500.</li><li>The <strong>Number of Days</strong> cannot exceed 365.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>", 
        "operationId" : "Bulk Timecard Delete Approvals", 
        "parameters" : [ {
          "description" : "The Bulk Timecard Delete Approvals request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/BulkApprovalDeleteServiceContext"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully deleted employee timecard approvals for the specified daterange.", 
            "schema" : {
              "$ref" : "#/definitions/BulkApprovalForRest"
            }
          }, 
          "207" : {
            "description" : "Some employee timecard approvals could not be deleted because of errors in the source data. Correct these errors and try again."
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>[WTK-160029] - Request of Bulk Remove Approval is not correct.</li><li>Missing required input: {dateRange}.</li><li>None of the employee timecards could be deleted because of errors in the source data. Correct these errors and try again.</li></ul>"
          }, 
          "403" : {
            "description" : "Access rights violation: User does not have bulk remove approval access."
          }, 
          "413" : {
            "description" : "Service Limits are exceeded when you request the Timekeeping.ServiceLimit.ApprovalService.Bulk.MultiCreate  for {employee ids} employees and {duration} days. Submit the request again but with a number of employees that does not exceed the service limit {service limit}."
          }
        }, 
        "summary" : "Deletes the approvals of a list of employee timecards.", 
        "tags" : [ "Bulk Timecard Approvals" ]
      }
    }, 
    "/v1/timekeeping/data/import" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation imports and returns a list of successfully updated punches and paycodes edits. This operation supports partial success.", 
        "operationId" : "Bulk Import Punches and Paycode Edits", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/TimeKeepingCompositeImportRequest"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Bulk import of pay code edits and punches has been successfully performed.", 
            "schema" : {
              "$ref" : "#/definitions/TimeKeepingCompositeImportResponse"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>CompositeItemBulkContextForRest contains invalid data.</li><li>Errros occured during processing either pay code edits or punches</li>"
          }
        }, 
        "summary" : "Imports and returns a list of successfully updated punches and paycodes edits.", 
        "tags" : [ "Bulk Punches and Paycode Edits" ]
      }
    }, 
    "/v1/timekeeping/enable_edits/import" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "", 
        "operationId" : "Bulk Enable Edits", 
        "parameters" : [ {
          "description" : "The Enable Edits Bulk Update request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/BulkEnableEditsContextForRest"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Request received successfully.", 
            "schema" : {
              "$ref" : "#/definitions/BulkEnableEditsContextForRestResponse"
            }
          }, 
          "400" : {
            "description" : "Error while processing request."
          }
        }, 
        "summary" : "Returns a list of employees with enabled edits. Supports partial success.", 
        "tags" : [ "Bulk Enable Edits" ]
      }
    }, 
    "/v1/timekeeping/pay_code_edits/import" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation imports paycode edits in bulk.", 
        "operationId" : "Bulk Import Paycode Edits", 
        "parameters" : [ {
          "description" : "Bulk request context", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Bulk Pay code edit list wrapper."
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully added one or more paycode edits.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/BulkPayCodeEditOperationResponse"
              }, 
              "type" : "array"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>Either a list of Paycode Edit contexts or list of paycode edit IDs is required.</li><li>[WTK-125120] - Some of the pay code edits were not imported because of errors in the source data. Correct those errors and try again.</li><li>[WTK-125121] - None of the pay code edits were imported because of errors in the source data. Correct those errors and try again.</li><li>[WTK-125129] - Invalid person number: {number}.</li><li>[WTK-125127] - Unknown error occurred while bulk pay code edit operation. See logs for details.</li><li>[WTK-125125] - Invalid Request. Please specify either object reference id or qualifier.</li><li>[WTK-125124] - Invalid Request. {field_name} is required.</li><li>[WTK-125128] - Amount type is invalid. Allowed values are HOUR, DAY, MONEY.</li></ul>"
          }
        }, 
        "summary" : "Imports paycode edits.", 
        "tags" : [ "Bulk Paycode Edits" ]
      }
    }, 
    "/v1/timekeeping/pay_code_edits/import/async" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a summary of asynchronous paycode edit import jobs. The summary includes the status, the number of successfully processed items, the number of failed items, and the total number of items for every asynchronous paycode edit import job.</p><br /><p>The associated Access Control Point is SA_PAYCODE_EDITS.</p>", 
        "operationId" : "Retrieve Summary of Asynchronous Paycode Edit Import Jobs", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returned a list all existing Bulk Asynchronous Paycode Edits Import jobs along with their statuses.", 
            "schema" : {
              "$ref" : "#/definitions/BulkAsyncStatusResponse"
            }
          }, 
          "403" : {
            "description" : "<ul><li>[WTK-125138] - The paycode edit import data cannot be empty</li></ul>"
          }
        }, 
        "summary" : "Returns a summary of asynchronous paycode edit import jobs.", 
        "tags" : [ "Bulk Asynchronous Paycode Edits" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation imports paycode edits asynchronously.</p><br /><p>The associated Access Control Point is SA_PAYCODE_EDITS.</p>", 
        "operationId" : "Bulk Import Paycode Edits Asynchronously", 
        "parameters" : [ {
          "description" : "The Bulk Import Paycode Edits Asynchronously request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Paycodeedit Context Entity"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "successful operation", 
            "schema" : {
              "$ref" : "#/definitions/BulkAsyncStatusResponse"
            }
          }, 
          "202" : {
            "description" : "Successful start of asynchronous paycode edits import", 
            "schema" : {
              "$ref" : "#/definitions/BulkAsyncStatusResponse"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>[WTK-125138] - The paycode edit import data cannot be empty</li></ul>"
          }, 
          "403" : {
            "description" : "<ul><li>[WTK-125138] - The paycode edit import data cannot be empty</li></ul>"
          }
        }, 
        "summary" : "Imports paycode edits asynchronously.", 
        "tags" : [ "Bulk Asynchronous Paycode Edits" ]
      }
    }, 
    "/v1/timekeeping/pay_code_edits/import/async/{execution_key}/response" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns the response payload for an asynchronous operation by execution key.</p><br /><p>The associated Access Control Point is SA_PAYCODE_EDITS.</p>", 
        "operationId" : "Retrieve Asynchronous Paycode Edit Import Response Payload by Key", 
        "parameters" : [ {
          "description" : "The execution key of an asynchronous Bulk Import Paycode Edits operation.", 
          "in" : "path", 
          "name" : "execution_key", 
          "required" : true, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returned Bulk Asynchronous Paycode Edits Import response payload.", 
            "schema" : {
              "$ref" : "#/definitions/AsyncBulkImportDetailDto"
            }
          }, 
          "403" : {
            "description" : "<ul><li>[WTK-125138] - The paycode edit import data cannot be empty</li></ul>"
          }, 
          "404" : {
            "description" : "<ul><li>[WTK-126000] - The key provided in the URL does not exist: {key}.</li></ul>"
          }
        }, 
        "summary" : "Returns the response payload for an asynchronous operation.", 
        "tags" : [ "Bulk Asynchronous Paycode Edits" ]
      }
    }, 
    "/v1/timekeeping/pay_code_edits/import/async/{execution_key}/status" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns the status of an asynchronous paycode edit import request by execution key. The status may be PENDING, SUCCESSFUL, PARTIAL_SUCCESS, FAILED, or IN_PROGRESS, and includes the number of successfully processed items, the number of failed items, and the total number of items for the specified asynchronous paycode edit import job.</p><br /><p>The associated Access Control Point is SA_PAYCODE_EDITS.</p>", 
        "operationId" : "Retrieve Paycode Edit Import Asynchronous Request Status by Key", 
        "parameters" : [ {
          "description" : "The execution key of an asynchronous Bulk Import Paycode Edits operation.", 
          "in" : "path", 
          "name" : "execution_key", 
          "required" : true, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returned the status of the specified bulk asynchronous paycode edits import job.", 
            "schema" : {
              "$ref" : "#/definitions/BulkAsyncStatusResponse"
            }
          }, 
          "403" : {
            "description" : "<ul><li>[WTK-125138] - The paycode edit import data cannot be empty</li></ul>"
          }, 
          "404" : {
            "description" : "<ul><li>[WTK-126000] - The key provided in the URL does not exist: {key}.</li></ul>"
          }
        }, 
        "summary" : "Returns the status of an asynchronous paycode edit import request.", 
        "tags" : [ "Bulk Asynchronous Paycode Edits" ]
      }
    }, 
    "/v1/timekeeping/pay_code_edits/multi_delete" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation performs a bulk delete of paycode edits for multiple employees using a list of paycode edit IDs. Each paycode edit also identifies child objects for Comments and Notes, exceptions, and OrgJob, which are deleted in a cascading manner.", 
        "operationId" : "Bulk Delete Paycode Edits", 
        "parameters" : [ {
          "description" : "Bulk request context", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Bulk Pay code edit list wrapper."
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully deleted one or more paycode edits for one or more employees.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/BulkPayCodeEditOperationResponse"
              }, 
              "type" : "array"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>Either a list of Paycode Edit contexts or list of paycode edit IDs is required.</li></ul>"
          }
        }, 
        "summary" : "Bulk Delete of pay code edits.", 
        "tags" : [ "Bulk Paycode Edits" ]
      }
    }, 
    "/v1/timekeeping/punches/apply_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a list of punches for employees in real time.", 
        "operationId" : "Retrieve Punches in Real Time", 
        "parameters" : [ {
          "description" : "The Retrieve Punches in Real Time request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/timekeepingPunchExtractRequestContext"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved punches for employees as specified in the context.", 
            "schema" : {
              "$ref" : "#/definitions/timekeepingPunchExtractResponse"
            }
          }, 
          "207" : {
            "description" : "Partially retrieved punches for some employees. Please correct the errors and retry."
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A date range must be provided.</li></ul>"
          }, 
          "403" : {
            "description" : "You are unauthorized to access this resource."
          }
        }, 
        "summary" : "Returns a list of punches in real time.", 
        "tags" : [ "Bulk Real Time Punches" ]
      }
    }, 
    "/v1/timekeeping/punches/import" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation imports punches from a third party source for multiple employees. Each punch also identifies child objects for Comments and Notes, exceptions, and OrgJob. In practical use, this operation is very similar to multi_create.", 
        "operationId" : "Bulk Import Punches", 
        "parameters" : [ {
          "description" : "The Bulk Import Punches request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Bulk Punch Context Transaction Request"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully imported punches for multiple employees.", 
            "schema" : {
              "$ref" : "#/definitions/Bulk Punch Response Context"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>A list of employees with at least one employee in the list is required.</li><li>The start date must be in ISO_LOCAL_DATE format (YYYY-MM-DD).</li><li>The end date must be in ISO_LOCAL_DATE format (YYYY-MM-DD).</li><li>A timeframe ID must be provided.</li><li>The punch request payload is missing or empty.</li></ul>"
          }
        }, 
        "summary" : "Imports one or more punches.", 
        "tags" : [ "Bulk Punches" ]
      }
    }, 
    "/v1/timekeeping/signoffs/import" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "", 
        "operationId" : "Bulk Timecard Signoffs", 
        "parameters" : [ {
          "description" : "The Bulk Timecard Signoff request payload, consisting of a list of employees and a timeframe.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/BulkSignoffContext"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully signed off an employee timecard for the specified timeframe.", 
            "schema" : {
              "$ref" : "#/definitions/SingleBulkSignoffResponse"
            }
          }, 
          "207" : {
            "description" : "Some employee timecards could not be signed-off because of errors in the source data. Correct these errors and try again."
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>[WTK-165000] - Timecard is already signed off.</li> <li>[WTK-165001] - Must have previous period selected to signoff.</li> <li>[WTK-165002] - Must have previous or current pay period selected to signoff.</li> <li>[WTK-165004] - Previous sign-off has not yet completed.</li> <li>[WTK-165005] - The timecard cannot be signed off because it contains one or more violations: {qualify_signoff}.</li> <li>[WTK-165011] - Access right violation: sign-off is not allowed.</li> <li>[WTK-165013] - Some employee timecards could not be signed off because of errors in the source data. Correct these errors and try again.</li> <li>[WTK-165014] - None of the employee timecards could be signed off because of errors in the source data. Correct these errors and try again.</li> <li>[WTK-165015] - Duplicate employee passed into request.</li> <li>[WTK-165020] - Timecard cannot be signed off as there are some pending changes.</li> <li>[WTK-165021] - Request cannot be empty. Please provide valid employee and symbolic period data.</li> </ul>"
          }, 
          "413" : {
            "description" : "Service Limits are exceeded when you request the Timekeeping.ServiceLimit.Bulk.SignoffService.MultiCreate for {employee ids} employees and {duration} days. Submit the request again but with a number of employees that does not exceed the service limit {service limit}."
          }
        }, 
        "summary" : "Signs off a list employee timecards.", 
        "tags" : [ "Bulk Timecard Signoffs" ]
      }
    }
  }, 
  "schemes" : null, 
  "definitions" : {
    "BulkPayrollLockContext" : {
      "description" : "The model for a Bulk Payroll Lock context object used to payroll lock employee timecards.", 
      "properties" : {
        "employees" : {
          "$ref" : "#/definitions/TimekeepingObjectRefList", 
          "description" : "A list of references to employee objects."
        }, 
        "hyperfind" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to a Hyperfind object."
        }, 
        "payrollLockThruDate" : {
          "description" : "The payroll lock-through date in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "format" : "date", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "BulkPayrollLockResponse" : {
      "description" : "The bulk signoff response model.", 
      "properties" : {
        "lockPayrolls" : {
          "items" : {
            "$ref" : "#/definitions/SingleBulkPayrollLockResponse"
          }, 
          "type" : "array"
        }, 
        "payrollLocks" : {
          "description" : "A list of Employee Payroll Lock responses.", 
          "items" : {
            "$ref" : "#/definitions/SingleBulkPayrollLockResponse"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "BulkApprovalServiceContext" : {
      "description" : "A Bulk Timecard Approval context object is used to approve employees timecards.", 
      "properties" : {
        "dateRange" : {
          "$ref" : "#/definitions/CommonDateRange", 
          "description" : "A reference to a date range object.", 
          "position" : 1
        }, 
        "employees" : {
          "$ref" : "#/definitions/TimekeepingObjectRefList", 
          "description" : "A list of references to employee objects.", 
          "position" : 2
        }
      }, 
      "required" : [ "dateRange", "employees" ], 
      "type" : "object"
    }, 
    "BulkApprovalForRest" : {
      "description" : "A Bulk Timecard Approval response object.", 
      "properties" : {
        "approvals" : {
          "description" : "The list of Employee Approval Responses.", 
          "items" : {
            "$ref" : "#/definitions/SingleBulkApprovalResponse"
          }, 
          "type" : "array"
        }
      }, 
      "required" : [ "approvals" ], 
      "type" : "object"
    }, 
    "BulkApprovalDeleteServiceContext" : {
      "description" : "A Bulk Delete Approved Timecard context object is used to delete approved employees timecards.", 
      "properties" : {
        "where" : {
          "$ref" : "#/definitions/BulkRemovalWhere", 
          "description" : "A where object containing a list of references to employee objects and a reference to a date range object.", 
          "position" : 1
        }
      }, 
      "required" : [ "where" ], 
      "type" : "object"
    }, 
    "TimeKeepingCompositeImportRequest" : {
      "description" : "Composite Items (punches and pay codes) Request.", 
      "properties" : {
        "bulkData" : {
          "description" : "Bulk data entity that contains bunch of pay code edits and punches that need to be imported.", 
          "items" : {
            "$ref" : "#/definitions/TimekeepingCompositeItem"
          }, 
          "type" : "array"
        }, 
        "options" : {
          "$ref" : "#/definitions/Defines the options for the update operation in TimeCard API and Bulk APIs.", 
          "description" : "The options associated with update operations."
        }
      }, 
      "type" : "object"
    }, 
    "TimeKeepingCompositeImportResponse" : {
      "description" : "Composite Items (punches and pay codes) Response.", 
      "properties" : {
        "bulkData" : {
          "description" : "Bulk data entity that contains bunch of pay code edits and punches that need to be imported.", 
          "items" : {
            "$ref" : "#/definitions/TimekeepingCompositeItem"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "BulkEnableEditsContextForRest" : {
      "description" : "Bulk Enable Edits context object to enable employee edits via rest call.", 
      "properties" : {
        "employees" : {
          "$ref" : "#/definitions/TimekeepingObjectRefList", 
          "description" : "List of employee object references."
        }, 
        "options" : {
          "$ref" : "#/definitions/BulkEnableEditsContextForRestOptions", 
          "description" : "Options object reference."
        }
      }, 
      "required" : [ "employees" ], 
      "type" : "object"
    }, 
    "BulkEnableEditsContextForRestResponse" : {
      "description" : "Bulk response object that returns a list of EnabledEditsResponses.", 
      "properties" : {
        "enabledEdits" : {
          "description" : "List of enable edits object responses.", 
          "items" : {
            "$ref" : "#/definitions/BulkEnableEditsResponse"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Bulk Pay code edit list wrapper." : {
      "description" : "BulkPaycodeEditContextForRest", 
      "properties" : {
        "options" : {
          "$ref" : "#/definitions/Defines the options for the update operation in TimeCard API and Bulk APIs.", 
          "description" : "The options associated with update operations."
        }, 
        "payCodeEdits" : {
          "description" : "Contextual object describing a pay code edit.", 
          "items" : {
            "$ref" : "#/definitions/PayCodeEdit Entity"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "BulkPayCodeEditOperationResponse" : {
      "properties" : {
        "payCodeEditForRest" : {
          "$ref" : "#/definitions/PayCodeEdit Entity"
        }, 
        "tkError" : {
          "$ref" : "#/definitions/TKErrorEntity"
        }
      }, 
      "type" : "object"
    }, 
    "BulkAsyncStatusResponse" : {
      "description" : "The bulk asynchronous paycode edit import model.", 
      "properties" : {
        "created" : {
          "description" : "The date on which a bulk asynchronous paycode edit import is created in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "type" : "string"
        }, 
        "executionKey" : {
          "description" : "The UUID execution key of a bulk asynchronous paycode edit import job.", 
          "type" : "string"
        }, 
        "failureCount" : {
          "description" : "The number of failed import items.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "message" : {
          "description" : "A localized message that describes the bulk asynchronous paycode edit import state.", 
          "type" : "string"
        }, 
        "status" : {
          "description" : "The state of a bulk asynchronous paycode edit import operation. Valid values include PENDING, SUCCESSFUL, PARTIAL_SUCCESS, FAILED, and IN_PROGRESS.", 
          "type" : "string"
        }, 
        "successCount" : {
          "description" : "The number of successfully processed import items.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "totalCount" : {
          "description" : "The total number of imported items.", 
          "format" : "int32", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "Paycodeedit Context Entity" : {
      "description" : "Pay code edit context transaction request information.", 
      "properties" : {
        "associateExceptions" : {
          "description" : "A Boolean indicator of whether or not an exception is associated with a pay code edit.", 
          "type" : "boolean"
        }, 
        "autoCommit" : {
          "description" : "A Boolean indicator of whether or not the data must be persisted immediately.", 
          "type" : "boolean"
        }, 
        "employees" : {
          "description" : "A list of IDs for the employees object.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }, 
        "endDate" : {
          "description" : "The end date of a Timekeeping service date range in ISO_LOCAL_DATE.", 
          "type" : "string"
        }, 
        "extendedDateRange" : {
          "description" : "A Boolean indicator of whether or not the request has an extended date range.", 
          "type" : "boolean"
        }, 
        "managerRole" : {
          "description" : "A Boolean indicator of whether or not the user making the request has the manager role.", 
          "type" : "boolean"
        }, 
        "payCodeEditIds" : {
          "description" : "A list of IDs of pay code edits.", 
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array"
        }, 
        "payCodeEdits" : {
          "description" : "Contextual object describing a pay code edit.", 
          "items" : {
            "$ref" : "#/definitions/PayCodeEdit Entity"
          }, 
          "type" : "array"
        }, 
        "startDate" : {
          "description" : "The start date of a Timekeeping service date range in ISO_LOCAL_DATE.", 
          "type" : "string"
        }, 
        "timeframe_id" : {
          "description" : "A symbolic identifier that represents a timeframe or a span of time. Common values are based on pay or schedule periods such as current pay period or previous schedule period. The format of the string is an enumeration from a discreet list of supported options, such as CURRENT_PAY_PERIOD.", 
          "enum" : [ "Previous_Payperiod", "Current_Payperiod", "Next_Payperiod", "Range_Of_Dates" ], 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "AsyncBulkImportDetailDto" : {
      "properties" : {
        "createDateTime" : {
          "type" : "string"
        }, 
        "errorCode" : {
          "type" : "string"
        }, 
        "errorParameters" : {
          "additionalProperties" : {
            "type" : "string"
          }, 
          "type" : "object"
        }, 
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "input" : {
          "type" : "string"
        }, 
        "status" : {
          "enum" : [ "SUBMITTED", "SUCCESS", "FAILURE" ], 
          "type" : "string"
        }, 
        "updateDateTime" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "timekeepingPunchExtractRequestContext" : {
      "description" : "The Punch Extract model used to retrieve a list of punches from the system.", 
      "properties" : {
        "count" : {
          "description" : "The count of a paginated response, which specifies the number of employees to return per page. The default maximum is 25. The minimum and maximum value of <code>count</code> is controlled by the following system setting in the Dimensions UI: Administration > Application Setup > System Configuration > System Settings > Timekeeping > site.timekeeping.punchExtractMaximumEmployeeCount. The minimum limit is 1 and the maximum is 50.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "index" : {
          "description" : "The index of a paginated response, which specifies the page number of the response.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "options" : {
          "$ref" : "#/definitions/timekeepingPunchExtractOptions", 
          "description" : "A reference to additional data which can be provided to the service."
        }, 
        "where" : {
          "$ref" : "#/definitions/timekeepingPunchExtractWhere", 
          "description" : "A reference to the range of dates and list of employees for whom to retrieve punches."
        }
      }, 
      "required" : [ "count", "index", "where" ], 
      "type" : "object"
    }, 
    "timekeepingPunchExtractResponse" : {
      "description" : "The Retrieve Punches in Real Time response model.", 
      "properties" : {
        "data" : {
          "description" : "A list of punches by employee.", 
          "items" : {
            "$ref" : "#/definitions/EmployeePunchExtractResponse"
          }, 
          "type" : "array"
        }, 
        "metadata" : {
          "$ref" : "#/definitions/timekeepingPunchExtractResponseMetadata", 
          "description" : "The metadata associated with a response."
        }
      }, 
      "type" : "object"
    }, 
    "Bulk Punch Context Transaction Request" : {
      "description" : "Entity containing necessary data to fetch and update Punch context transactions.", 
      "properties" : {
        "accrualValidationRequired" : {
          "description" : "A Boolean indicator of whether or not a request requires accrual validation.", 
          "type" : "boolean"
        }, 
        "functionArea" : {
          "description" : "An optional function area name to be used as part of the data source.", 
          "enum" : [ "WFC", "TIMECARD_EDITOR", "GROUP_EDITS", "EXTERNAL_API", "IMPORT", "DCM", "TIMESTAMP", "WDM", "UDM", "OFFLINE_DATA" ], 
          "type" : "string"
        }, 
        "managerRole" : {
          "description" : "An optional Boolean indicator that overrides whether or not the currently logged in user has the manager role.", 
          "type" : "boolean"
        }, 
        "onBehalfOfEmployee" : {
          "description" : "A Boolean indicator of whether or not to allow an authorized user to make punches on behalf of an employee.", 
          "type" : "boolean"
        }, 
        "options" : {
          "$ref" : "#/definitions/Defines the options for the update operation in TimeCard API and Bulk APIs.", 
          "description" : "An optional object indicator that works the accrualValidationOptimization Boolean to determine whether or not to perform accrual validation."
        }, 
        "punches" : {
          "description" : "A list of the punches associated with a timecard.", 
          "items" : {
            "$ref" : "#/definitions/PunchContextTransactionRequest"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Bulk Punch Response Context" : {
      "description" : "Entity containing necessary data to fetch and update Bulk Punch context transactions.", 
      "properties" : {
        "error" : {
          "$ref" : "#/definitions/TKErrorEntity", 
          "description" : "An error related to a punch."
        }, 
        "punches" : {
          "description" : "A list of bulk punch for rest", 
          "items" : {
            "$ref" : "#/definitions/Bulk Punch Context"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "BulkSignoffContext" : {
      "description" : "A Bulk Timecard Signoff context object used to sign off employee timecards.", 
      "properties" : {
        "employees" : {
          "$ref" : "#/definitions/TimekeepingObjectRefList", 
          "description" : "A list of references to employee objects."
        }, 
        "options" : {
          "$ref" : "#/definitions/BulkSignOffContextOptions", 
          "description" : "The bulk signoff context object reference model."
        }, 
        "symbolicPeriod" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "Object reference for symbolic period."
        }
      }, 
      "required" : [ "employees", "symbolicPeriod" ], 
      "type" : "object"
    }, 
    "SingleBulkSignoffResponse" : {
      "description" : "A Single Bulk Timecard Signoff response object.", 
      "properties" : {
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A single reference to an employee object."
        }
      }, 
      "type" : "object"
    }, 
    "TimekeepingObjectRefList" : {
      "description" : "Model describing a collection of object references.", 
      "properties" : {
        "ids" : {
          "description" : "The list of references by ID.", 
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "qualifiers" : {
          "description" : "The qualifier of the object reference, such as name.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "refs" : {
          "description" : "The object references.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef Entity"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "ObjectRef Entity" : {
      "description" : "ObjectRef contains an id and qualifier and either field should be able to uniquely identify an Object", 
      "properties" : {
        "id" : {
          "description" : "Object Ref Id", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "qualifier" : {
          "description" : "Object Ref Unique qualifier", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "SingleBulkPayrollLockResponse" : {
      "description" : "The model for a Single Bulk Payroll Lock response object.", 
      "properties" : {
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to an employee object."
        }
      }, 
      "type" : "object"
    }, 
    "CommonDateRange" : {
      "description" : "Model for date range.", 
      "properties" : {
        "endDate" : {
          "description" : "The end date associated with date range.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "startDate" : {
          "description" : "The start date associated with date range.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "symbolicPeriod" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "A reference to the symbolic Period object."
        }
      }, 
      "type" : "object"
    }, 
    "SingleBulkApprovalResponse" : {
      "description" : "A Single Bulk Timecard Signoff response object.", 
      "properties" : {
        "detailedPartials" : {
          "$ref" : "#/definitions/DetailedPartials"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity"
        }, 
        "tkError" : {
          "$ref" : "#/definitions/TKErrorEntity"
        }
      }, 
      "type" : "object"
    }, 
    "BulkRemovalWhere" : {
      "description" : "A where object conatining employees list and dateRange used to delete approved employees timecards.", 
      "properties" : {
        "dateRange" : {
          "$ref" : "#/definitions/CommonDateRange", 
          "description" : "A reference to a date range object.", 
          "position" : 1
        }, 
        "employees" : {
          "$ref" : "#/definitions/TimekeepingObjectRefList", 
          "description" : "A list of references to employee objects.", 
          "position" : 2
        }, 
        "options" : {
          "$ref" : "#/definitions/Options", 
          "description" : "A set of additional options for this operation.", 
          "position" : 4
        }, 
        "scope" : {
          "description" : "The scope of the timecard approval removal operation. Possible values include ALL_MANAGERS, which removes all of a manager's timecard approvals at once, or MANAGER, which removes only the specified timecard approvals.", 
          "position" : 3, 
          "type" : "string"
        }
      }, 
      "required" : [ "dateRange", "employees" ], 
      "type" : "object"
    }, 
    "TimekeepingCompositeItem" : {
      "description" : "Composite Items (punches and pay codes) Request.", 
      "properties" : {
        "payCodeEdit" : {
          "$ref" : "#/definitions/PayCodeEdit Entity", 
          "description" : "Entity containing pay code edit information."
        }, 
        "punch" : {
          "$ref" : "#/definitions/PunchContextTransactionRequest", 
          "description" : "Entity containing punch information."
        }
      }, 
      "type" : "object"
    }, 
    "Defines the options for the update operation in TimeCard API and Bulk APIs." : {
      "description" : "The options for the update operation in TimeCard API and Bulk APIs model.", 
      "properties" : {
        "accrualValidationOptimization" : {
          "description" : "A Boolean indicator of whether or not to perform accrual validation optimization.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "BulkEnableEditsContextForRestOptions" : {
      "description" : "Bulk Enable Edits context Options object to configure response structure.", 
      "properties" : {
        "detailedPartialSuccess" : {
          "description" : "A Boolean indicator of whether or not to include detailed input information in HTTP status code 207 'Partial Success' responses.", 
          "type" : "boolean"
        }, 
        "employeeResponseType" : {
          "description" : "<p>When <code>detailedPartialSuccess</code> is true, this property controls whether to return IDs, qualifiers, or refs in partial success responses. Valid values include <code>original</code>, <code>ids</code>, <code>qualifiers</code>, and <code>refs</code>.</p><ul><li>If <code>employeeResponseType</code> is null, the operation behaves as before and always returns IDs in partial success responses.</li><li>If <code>employeeResponseType</code> is <code>original</code>, the partial success response mimics what was passed in the originating request payload. For example, if employees were specified in the request payload using <code>refs</code>, the partial success response returns <code>refs</code>. If they are specified using <code>qualifiers</code>, the partial success response returns <code>qualifiers</code>, and so on.</li><li>If <code>employeeResponseType</code> is <code>ids</code>, <code>qualifiers</code>, or <code>refs</code>, the partial success response returns <code>ids</code>, <code>qualifiers</code>, or <code>refs</code>, respectively.</li></ul>", 
          "enum" : [ "original", "ids", "qualifiers", "refs" ], 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "BulkEnableEditsResponse" : {
      "description" : "Response object that returns a single instance of an Enabled Edit.", 
      "properties" : {
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "Employee object reference."
        }, 
        "employeeId" : {
          "description" : "An ID that uniquely identifies an employee. This is not a person number.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "exception" : {
          "$ref" : "#/definitions/TKException", 
          "description" : "Exception that took place attempting to enable edits."
        }, 
        "tkError" : {
          "$ref" : "#/definitions/TKErrorEntity"
        }
      }, 
      "type" : "object"
    }, 
    "PayCodeEdit Entity" : {
      "description" : "Entity containing returned pay code edit information.", 
      "properties" : {
        "amountType" : {
          "description" : "The name of the symbolic value used to create this pay code edit.", 
          "enum" : [ "HOUR", "DAY", "MONEY" ], 
          "type" : "string"
        }, 
        "applyDate" : {
          "description" : "The date to which a pay code edit applies in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "type" : "string"
        }, 
        "commentsAvailable" : {
          "description" : "A Boolean indicator of whether or not a Comment is associated with a pay code edit.", 
          "type" : "boolean"
        }, 
        "commentsNotes" : {
          "description" : "A reference to a list of Comments. This object can have multiple Comments with multiple Notes for each Comment. Notes cannot exceed 250 characters in length.", 
          "items" : {
            "$ref" : "#/definitions/Comment Note Entity"
          }, 
          "type" : "array"
        }, 
        "durationInDays" : {
          "description" : "The duration (in days) of the pay code edit.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "durationInHours" : {
          "description" : "The duration (in hours) of the pay code edit.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "editable" : {
          "description" : "A Boolean indicator of whether or not a pay code edit is editable.", 
          "type" : "boolean"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the pay code edit applies."
        }, 
        "endDateTime" : {
          "type" : "string"
        }, 
        "exceptions" : {
          "description" : "A list of exception objects associated with a pay code edit.", 
          "items" : {
            "$ref" : "#/definitions/Exception Entity"
          }, 
          "type" : "array"
        }, 
        "id" : {
          "description" : "The ID of the pay code edit.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "itemId" : {
          "description" : "The ID of the time item.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "moneyAmount" : {
          "description" : "The amount (as a decimal value representing money) of the pay code edit.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "overrideAcrrualAmount" : {
          "format" : "double", 
          "type" : "number"
        }, 
        "paycode" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the pay code associated with a pay code edit."
        }, 
        "position" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the position assigned to this pay code edit."
        }, 
        "scheduleAmountType" : {
          "description" : "An enumeration of the schedule amount. Valid values include AMOUNT_NOT_FROM_SCHEDULE, FULL_DAY_AMOUNT_FROM_SCHEDULE, HALF_DAY_AMOUNT_FROM_SCHEDULE, FULL_DAY_AMOUNT_FROM_CONTRACT, HALF_DAY_AMOUNT_FROM_CONTRACT, FIRST_HALF_DAY_AMOUNT_FROM_CONTRACT, SECOND_HALF_DAY_AMOUNT_FROM_CONTRACT, FULL_DAY_AMOUNT_FROM_PATTERN, FROM_EMPLOYMENT_TERM, FIRST_HALF_DAY_AMOUNT_FROM_SCHEDULE, SECOND_HALF_DAY_AMOUNT_FROM_SCHEDULE, HALF_DAY_AMOUNT_FROM_PATTERN, FIRST_HALF_DAY_AMOUNT_FROM_PATTERN, and SECOND_HALF_DAY_AMOUNT_FROM_PATTERN.", 
          "enum" : [ "AMOUNT_NOT_FROM_SCHEDULE", "FULL_DAY_AMOUNT_FROM_SCHEDULE", "HALF_DAY_AMOUNT_FROM_SCHEDULE", "FULL_DAY_AMOUNT_FROM_CONTRACT", "HALF_DAY_AMOUNT_FROM_CONTRACT", "FIRST_HALF_DAY_AMOUNT_FROM_CONTRACT", "SECOND_HALF_DAY_AMOUNT_FROM_CONTRACT", "FULL_DAY_AMOUNT_FROM_PATTERN", "FROM_EMPLOYMENT_TERM", "FIRST_HALF_DAY_AMOUNT_FROM_SCHEDULE", "SECOND_HALF_DAY_AMOUNT_FROM_SCHEDULE", "HALF_DAY_AMOUNT_FROM_PATTERN", "FIRST_HALF_DAY_AMOUNT_FROM_PATTERN", "SECOND_HALF_DAY_AMOUNT_FROM_PATTERN" ], 
          "type" : "string"
        }, 
        "startDateTime" : {
          "description" : "The start date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "systemGenerated" : {
          "description" : "A Boolean indicator of whether or not the pay code edit was generated by the system.", 
          "type" : "boolean"
        }, 
        "transfer" : {
          "$ref" : "#/definitions/TransferDTO", 
          "description" : "Provides the organization job object to which the punch associated with the pay code edit applies. Normally, this is only used when the punch is charged against a job other than the default or home job for the employee."
        }, 
        "userEnteredPosition" : {
          "description" : "A Boolean indicator of whether or not a position was set by a user. When false, the position was set by the system.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "TKErrorEntity" : {
      "description" : "Entity that contains Error information", 
      "properties" : {
        "errorCode" : {
          "description" : "Error code", 
          "type" : "string"
        }, 
        "errorParams" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "description" : "Parameters used for error code and error message", 
          "type" : "object"
        }, 
        "message" : {
          "description" : "Error message", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "timekeepingPunchExtractOptions" : {
      "description" : "The options model, which contains additional data needed for the service.", 
      "properties" : {
        "includeFullDataSource" : {
          "description" : "A Boolean indicator of whether or not to include the extended data source object in the response.", 
          "type" : "boolean"
        }, 
        "requestTag" : {
          "description" : "The request tag used to paginate values. Using this attribute retrieves data from cache if there is data present.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "timekeepingPunchExtractWhere" : {
      "description" : "The Retrieve Punches in Real Time request model.", 
      "properties" : {
        "dateRange" : {
          "$ref" : "#/definitions/timekeepingPunchExtractDateRange", 
          "description" : "A range of dates that determines which punches are retrieved from the system."
        }, 
        "employees" : {
          "$ref" : "#/definitions/TimekeepingObjectRefList", 
          "description" : "A list of employee IDs. When provided, punches are returned based on the input. Else the date range will be used to detect any punches for all employees in the system."
        }
      }, 
      "required" : [ "dateRange" ], 
      "type" : "object"
    }, 
    "EmployeePunchExtractResponse" : {
      "description" : "A model containing a single employee and a list of punches for that employee.", 
      "properties" : {
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the punches apply."
        }, 
        "punches" : {
          "description" : "A reference to a list of punches.", 
          "items" : {
            "$ref" : "#/definitions/PunchContextTransactionRequest"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "timekeepingPunchExtractResponseMetadata" : {
      "description" : "The Retrieve Punches in Real Time metadata model.", 
      "properties" : {
        "count" : {
          "description" : "The pagination count of employees per page. This property has no upper limit, but for the best performance you should set count to no higher than 25.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "failedEmployeeCount" : {
          "description" : "The total number of failed employees on the current page.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "index" : {
          "description" : "The pagination index of the page returned in the response.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "punchesOnCurrentPage" : {
          "description" : "The total number of punches on a given page.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "requestTag" : {
          "description" : "The request tag, which is used for subsequent calls when paginating.", 
          "type" : "string"
        }, 
        "totalPages" : {
          "description" : "The total number of pages.", 
          "format" : "int32", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "PunchContextTransactionRequest" : {
      "description" : "Entity containing necessary data to fetch and update punch context transactions.", 
      "properties" : {
        "breakRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the Break Rule to be applied during calculation of totals resulting from the punch."
        }, 
        "commentsNotes" : {
          "description" : "A reference to a list of Comments. This object can have multiple Comments with multiple Notes for each Comment.", 
          "items" : {
            "$ref" : "#/definitions/Comment Note Entity"
          }, 
          "type" : "array"
        }, 
        "dataSource" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the data source, if one exists. Normally, this indicates that the punch came from a different source, such as a clock, device, or an external data source such as an import or interface."
        }, 
        "deductRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the Deduct Rule to be applied during calculation of totals resulting from the punch."
        }, 
        "editByType" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the type of the user who made the change. Indicates whether the change was made by the employee or by someone else."
        }, 
        "editable" : {
          "type" : "boolean"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the punch applies."
        }, 
        "enteredOnDtm" : {
          "description" : "The date and time stamp for when this punch transaction was entered through the API in ISO_LOCAL_DATE_TIME.", 
          "type" : "string"
        }, 
        "exceptions" : {
          "description" : "A list of exception objects associated with a punch.", 
          "items" : {
            "$ref" : "#/definitions/Exception Entity"
          }, 
          "type" : "array"
        }, 
        "hasComments" : {
          "description" : "A Boolean indicator that shows whether or not a Comment is associated with a punch.", 
          "type" : "boolean"
        }, 
        "id" : {
          "description" : "The ID of the punch transaction.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "isCancelDeduct" : {
          "type" : "boolean"
        }, 
        "isEditable" : {
          "description" : "A Boolean indicator of whether or not the punch is editable.", 
          "type" : "boolean"
        }, 
        "isExceptionResolved" : {
          "description" : "If an Exception exists for a punch, A Boolean indicator of whether that Exception is resolved or not.", 
          "type" : "boolean"
        }, 
        "location" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the GPS Location object which applies to this punch. This indicates where the punch was actually made and is tied to Geofencing operations from mobile devices."
        }, 
        "orgJob" : {
          "$ref" : "#/definitions/TimekeepingOrgJob", 
          "description" : "Provides the organization job object to which the punch applies. Normally, this is the default or home job for the employee."
        }, 
        "position" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the position assigned to this punch."
        }, 
        "punchDtm" : {
          "description" : "The date and time stamp for the punch in ISO_LOCAL_DATE_TIME.", 
          "type" : "string"
        }, 
        "punchGeoLocation" : {
          "$ref" : "#/definitions/Punch Context Transaction Geo Request", 
          "description" : "Geolocation information identifying where the punch was created."
        }, 
        "roundedPunchDtm" : {
          "description" : "The date and time stamp for the rounded punch calculated from totalizer in ISO_LOCAL_DATE_TIME.", 
          "type" : "string"
        }, 
        "timeZone" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "The timezone where the punch was entered. Normally, this is the default or home timezone for the employee, but the punch can include a different timezone as necessary.   When updating or adding a timezone, the qualifier can either be the short name or display name."
        }, 
        "transfer" : {
          "$ref" : "#/definitions/TransferDTO", 
          "description" : "Provides the organization job object to which the punch applies. Normally, this is only used when the punch is charged against a job other than the default or home job for the employee."
        }, 
        "typeOverride" : {
          "$ref" : "#/definitions/TypeOverride Entity", 
          "description" : "Provides the type override object which indicates whether this punch object is an in punch, out punch, or a break rule. Break Rule overloads the property."
        }, 
        "updateTime" : {
          "description" : "The time a punch was last updated.", 
          "type" : "string"
        }, 
        "userEnteredPosition" : {
          "description" : "A Boolean indicator of whether or not a position was set by a user. When false, the position was set by the system.", 
          "type" : "boolean"
        }, 
        "validateAsTimestamp" : {
          "description" : "A Boolean indicator of whether or not the punch is entered as a timestamp.", 
          "type" : "boolean"
        }, 
        "workRule" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the Work Rule to be applied during calculation of totals resulting from the punch."
        }
      }, 
      "type" : "object"
    }, 
    "Bulk Punch Context" : {
      "description" : "Entity containing necessary data to fetch and update Bulk Punch context transactions.", 
      "properties" : {
        "punchForRest" : {
          "$ref" : "#/definitions/PunchContextTransactionRequest", 
          "description" : "Entity containing necessary data to retrieve and update punch context transactions."
        }, 
        "tkError" : {
          "$ref" : "#/definitions/TKErrorEntity"
        }
      }, 
      "type" : "object"
    }, 
    "BulkSignOffContextOptions" : {
      "description" : "The bulk signoff context object reference model.", 
      "properties" : {
        "detailedPartialSuccess" : {
          "description" : "A Boolean indicator of whether or not to return a detailed Partial Success response. In a detailed response, the INPUT property contains the entire request payload to facilitate resubmitting a corrected request.", 
          "type" : "boolean"
        }, 
        "employeeResponseType" : {
          "description" : "<p>When <code>detailedPartialSuccess</code> is true, this property controls whether to return IDs, qualifiers, or refs in partial success responses. Valid values include <code>original</code>, <code>ids</code>, <code>qualifiers</code>, and <code>refs</code>.</p><ul><li>If <code>employeeResponseType</code> is null, the operation behaves as before and always returns IDs in partial success responses.</li><li>If <code>employeeResponseType</code> is <code>original</code>, the partial success response mimics what was passed in the originating request payload. For example, if employees were specified in the request payload using <code>refs</code>, the partial success response returns <code>refs</code>. If they are specified using <code>qualifiers</code>, the partial success response returns <code>qualifiers</code>, and so on.</li><li>If <code>employeeResponseType</code> is <code>ids</code>, <code>qualifiers</code>, or <code>refs</code>, the partial success response returns <code>ids</code>, <code>qualifiers</code>, or <code>refs</code>, respectively.</li></ul>", 
          "enum" : [ "original", "ids", "quailifiers", "refs" ], 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "ObjectRef" : {
      "description" : "The HCA object reference object model.", 
      "properties" : {
        "id" : {
          "description" : "The ID associated with an object reference.", 
          "format" : "int64", 
          "readOnly" : true, 
          "type" : "integer"
        }, 
        "qualifier" : {
          "description" : "The qualifier associated with an object reference.", 
          "readOnly" : true, 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "DetailedPartials" : {
      "description" : "The bulk remove all where detailed partials model.", 
      "properties" : {
        "where" : {
          "$ref" : "#/definitions/BulkRemovalAllWhere", 
          "description" : "The where criteria of bulk remove all detailed partials."
        }
      }, 
      "type" : "object"
    }, 
    "Options" : {
      "description" : "Model for the optional time increment criteria.", 
      "properties" : {
        "detailedPartialSuccess" : {
          "description" : "A Boolean indicator of whether or not to include a detailed partial success response. Defaults to false.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "TKException" : {
      "properties" : {
        "argsDetail" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "cause" : {
          "$ref" : "#/definitions/Throwable"
        }, 
        "errorCode" : {
          "type" : "string"
        }, 
        "errorsDetails" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "extraDetails" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "inputDetail" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "limitsDetail" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "locale" : {
          "$ref" : "#/definitions/Locale"
        }, 
        "localizedMessage" : {
          "type" : "string"
        }, 
        "message" : {
          "type" : "string"
        }, 
        "messageKey" : {
          "type" : "string"
        }, 
        "metadata" : {
          "type" : "object"
        }, 
        "multiOpsResults" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "overridable" : {
          "type" : "boolean"
        }, 
        "overrideHTTPStatusCode" : {
          "enum" : [ "OK", "CREATED", "ACCEPTED", "NO_CONTENT", "RESET_CONTENT", "PARTIAL_CONTENT", "MOVED_PERMANENTLY", "FOUND", "SEE_OTHER", "NOT_MODIFIED", "USE_PROXY", "TEMPORARY_REDIRECT", "BAD_REQUEST", "UNAUTHORIZED", "PAYMENT_REQUIRED", "FORBIDDEN", "NOT_FOUND", "METHOD_NOT_ALLOWED", "NOT_ACCEPTABLE", "PROXY_AUTHENTICATION_REQUIRED", "REQUEST_TIMEOUT", "CONFLICT", "GONE", "LENGTH_REQUIRED", "PRECONDITION_FAILED", "REQUEST_ENTITY_TOO_LARGE", "REQUEST_URI_TOO_LONG", "UNSUPPORTED_MEDIA_TYPE", "REQUESTED_RANGE_NOT_SATISFIABLE", "EXPECTATION_FAILED", "INTERNAL_SERVER_ERROR", "NOT_IMPLEMENTED", "BAD_GATEWAY", "SERVICE_UNAVAILABLE", "GATEWAY_TIMEOUT", "HTTP_VERSION_NOT_SUPPORTED" ], 
          "type" : "string"
        }, 
        "overrideMessage" : {
          "type" : "string"
        }, 
        "reportingAttribute" : {
          "type" : "string"
        }, 
        "reportingValue" : {
          "type" : "string"
        }, 
        "results" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "stackTrace" : {
          "items" : {
            "$ref" : "#/definitions/StackTraceElement"
          }, 
          "type" : "array"
        }, 
        "suppressed" : {
          "items" : {
            "$ref" : "#/definitions/Throwable"
          }, 
          "type" : "array"
        }, 
        "userParameters" : {
          "additionalProperties" : {
            "type" : "string"
          }, 
          "type" : "object"
        }
      }, 
      "type" : "object"
    }, 
    "Comment Note Entity" : {
      "description" : "Entity that contains Comment and Note information", 
      "properties" : {
        "comment" : {
          "$ref" : "#/definitions/Comment Entity", 
          "description" : "A predefined comment"
        }, 
        "id" : {
          "description" : "Id of this set of comment and attached notes", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "notes" : {
          "description" : "list of user-defined text notes associated to a comment", 
          "items" : {
            "$ref" : "#/definitions/NoteDTO"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Exception Entity" : {
      "description" : "Entity that contains Exception Service information", 
      "properties" : {
        "applyDate" : {
          "description" : "The date to which an time applies.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "commentsNotes" : {
          "description" : "A reference to a list of Comments. This object can have multiple Comments with multiple Notes for each Comment.", 
          "items" : {
            "$ref" : "#/definitions/Comment Note Entity"
          }, 
          "type" : "array"
        }, 
        "dataElementType" : {
          "description" : "An enumeration of all data element types.", 
          "enum" : [ "PUNCH", "PAYCODEEDIT", "LEAVEEDIT", "HOURSWORKED", "NAMEDDURATION", "ONCALL", "CORRECTIONS", "HOURSANDCOST", "PROJECTED_HOURS_AND_COST", "SCHEDULE_HOURS_AND_COST", "TOTAL", "PROJECTED_TOTAL", "SCHEDULE_TOTAL", "WORKSHIFTSEGMENT", "PROCESSEDSEGMENT", "KINDOFTIMESEGMENT", "EXCEPTION", "EXCEPTION_COMMENTS", "WORKITEM", "ACCRUALEDIT", "WORKITEMTOSCHEDULEITEM", "ACCRUALBALANCE", "ACCRUALTRANSACTION", "ENCUMBEREDACCRUALBALANCE", "WORKHOLIDAY", "SIGNOFF", "CARRYFORWARD", "LEAVEEDITSEGMENT", "PAYCODETOTAL", "ACCRUAL_REPORTING_PERIOD", "PERSONALITY", "PAYCODEEDIT_COMMENTS", "HOURSWORKED_COMMENTS", "PROJECTED_PAYCODETOTAL", "SCHEDULED_PAYCODETOTAL", "ACCRUALBALANCE_NOSQL", "ENCUMBEREDACCRUALBALANCE_NOSQL", "ACCRUAL_REPORTING_PERIOD_NOSQL", "TIMECARDANNOTATION", "ACTUALKINDSOFTIME", "ACTIVITY_SEGMENT" ], 
          "type" : "string"
        }, 
        "elementId" : {
          "description" : "The ID of the time element.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "elementType" : {
          "description" : "An enumeration of all time item types.", 
          "enum" : [ "PUNCH", "PAYCODEEDIT", "LEAVEEDIT", "LEAVEEDITSEGMENT", "HOURSWORKED", "NAMEDDURATION", "ONCALL", "CORRECTIONS", "HOURSANDCOST", "TOTAL", "WORKSHIFTSEGMENT", "PROCESSEDSEGMENT", "EXCEPTION", "WORKITEM", "ACCRUALEDIT", "DAILYTOTAL", "SHIFTTOTAL", "WORKEDSHIFT", "WORKEDSPAN", "ENCUMBEREDACCRUALBALANCE", "ACCRUALBALANCE", "APPROVAL", "SIGNOFF", "WORKHOLIDAY", "TOTALSUMMARY", "TOTALS", "ACCRUAL_REPORTING_PERIOD", "ITEMTOTAL", "PERSONALITY", "TIMECARDANNOTATION", "ACTIVITY_SEGMENT" ], 
          "type" : "string"
        }, 
        "employeeId" : {
          "description" : "A reference to the employee object.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "endDateTime" : {
          "description" : "The end date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "endTimeZoneId" : {
          "description" : "The ID of the end timezone where the exception occured. Normally, this is the default or home timezone for the employee, but the exception can include a different timezone as necessary.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "eventDate" : {
          "description" : "The date to which the event applies.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "exceptionType" : {
          "description" : "<p>The Timekeeping exception type.</p><p>The names, descriptions, and categories enumerated in <code>name</code>, <code>description</code>, and <code>category</code> are linked to one another and listed in the same sequence in each property. For example, for the Early In exception type, the <code>name</code> is EARLY_IN, the <code>description</code> is EARLY_IN_DSC, and the <code>category</code> is IN_PUNCH_EXCEPTIONS.</p>", 
          "properties" : {
            "category" : {
              "description" : "The category of a Timekeeping exception type. Possible values include the following, which include repetitions so the sequence matches the sequencing in <code>name</code> and <code>description</code>: SHIFT_EXCEPTIONS, SHIFT_EXCEPTIONS, IN_PUNCH_EXCEPTIONS, IN_PUNCH_EXCEPTIONS, IN_PUNCH_EXCEPTIONS, OUT_PUNCH_EXCEPTIONS, OUT_PUNCH_EXCEPTIONS, OUT_PUNCH_EXCEPTIONS, ABSENCE_EXCEPTIONS, ABSENCE_EXCEPTIONS, BREAK_EXCEPTIONS, BREAK_EXCEPTIONS, SHIFT_EXCEPTIONS, SHIFT_EXCEPTIONS, IN_PUNCH_EXCEPTIONS, OUT_PUNCH_EXCEPTIONS, SHIFT_EXCEPTIONS, BREAK_EXCEPTIONS, BREAK_EXCEPTIONS, BREAK_EXCEPTIONS, BREAK_EXCEPTIONS, MISCELLANEOUS_EXCEPTIONS, MISCELLANEOUS_EXCEPTIONS, MISCELLANEOUS_EXCEPTIONS, SHIFT_EXCEPTIONS, MISCELLANEOUS_EXCEPTIONS.", 
              "type" : "string"
            }, 
            "description" : {
              "description" : "The description of a Timekeeping exception type. Possible values include: CANCELLED_DEDUCTION_DSC, CORE_HOURS_VIOLATION_DSC, VERY_EARLY_IN_DSC, EARLY_IN_DSC, LATE_IN_DSC, EARLY_OUT_DSC, LATE_OUT_DSC, VERY_LATE_OUT_DSC, EXCUSED_ABSENCE_DSC, UNEXCUSED_ABSENCE_DSC, SHORT_BREAK_DSC, LONG_BREAK_DSC, SHORT_SHIFT_DSC, LONG_SHIFT_DSC, MISSED_IN_PUNCH_DSC, MISSED_OUT_PUNCH_DSC, UNSCHEDULED_DSC, LONG_TOTAL_BREAK_DSC, SHORT_TOTAL_BREAK_DSC, BONUS_APPLIED_DSC, BREAK_OUT_OF_SEQUENCE_DSC, HOLIDAY_SCHEDULE_VIOLATION_DSC, MINIMUM_DAYS_ACTIVE_VIOLATION_DSC, MINIMUM_DAYS_EMPLOYED_VIOLATION_DSC, INVALID_NAMED_DURATION_DSC, WORK_HISTORY_VIOLATION_DSC.", 
              "type" : "string"
            }, 
            "displayName" : {
              "description" : "The display name of a Timekeeping exception type.", 
              "type" : "string"
            }, 
            "id" : {
              "description" : "The ID of a Timekeeping exception type.", 
              "type" : "integer"
            }, 
            "name" : {
              "description" : "The name of a Timekeeping exception type. Possible values include: CANCELLED_DEDUCTION, CORE_HOURS_VIOLATION, VERY_EARLY_IN, EARLY_IN, LATE_IN, EARLY_OUT, LATE_OUT, VERY_LATE_OUT, EXCUSED_ABSENCE, UNEXCUSED_ABSENCE, SHORT_BREAK, LONG_BREAK, SHORT_SHIFT, LONG_SHIFT, MISSED_IN_PUNCH, MISSED_OUT_PUNCH, UNSCHEDULED, LONG_TOTAL_BREAK, SHORT_TOTAL_BREAK, BONUS_APPLIED, BREAK_OUT_OF_SEQUENCE, HOLIDAY_SCHEDULE_VIOLATION, MINIMUM_DAYS_ACTIVE_VIOLATION, MINIMUM_DAYS_EMPLOYED_VIOLATION, INVALID_NAMED_DURATION, WORK_HISTORY_VIOLATION.", 
              "type" : "string"
            }
          }, 
          "type" : "object"
        }, 
        "hasComments" : {
          "description" : "A Boolean indicator that shows whether or not a Comment is associated with a punch.", 
          "type" : "boolean"
        }, 
        "id" : {
          "description" : "The ID of the exception.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "isProjected" : {
          "description" : "A Boolean indicator of whether or not the exception is projected (planned to occur in the future).", 
          "type" : "boolean"
        }, 
        "isReviewed" : {
          "description" : "A Boolean indicator of whether or not the exception has been reviewed.", 
          "type" : "boolean"
        }, 
        "isTransfer" : {
          "description" : "A Boolean indicator of whether or not the punch associated with an exception has a transfer.", 
          "type" : "boolean"
        }, 
        "justifiableEndDateTime" : {
          "description" : "The end date and time of a justifiable missing time span in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).", 
          "type" : "string"
        }, 
        "justifiableStartDateTime" : {
          "description" : "The start date and time of a justifiable missing time span in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).", 
          "type" : "string"
        }, 
        "justifications" : {
          "description" : "A list of missing time justifications for this exception.", 
          "items" : {
            "$ref" : "#/definitions/Justification"
          }, 
          "type" : "array"
        }, 
        "justifiedTimes" : {
          "description" : "A list of justified times for this exception.", 
          "items" : {
            "$ref" : "#/definitions/PayCodeEditBO"
          }, 
          "type" : "array"
        }, 
        "laborAccountId" : {
          "description" : "The ID of the labor account, which combines the cost center and labor categories.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "missingTimeStatusType" : {
          "description" : "An enumeration that represents all missing time status types.", 
          "enum" : [ "NOT_APPLICABLE", "PENDING", "EMPLOYEE_JUSTIFIED", "MANAGER_JUSTIFIED" ], 
          "type" : "string"
        }, 
        "orgJobId" : {
          "description" : "The ID of the organizational job associated with an exception.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "overLimitInSeconds" : {
          "description" : "The number of seconds an exception is over a defined limit.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "positionId" : {
          "description" : "The ID of the position assigned to this time element.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "scheduleItemId" : {
          "description" : "The ID of the schedule item.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "startDateTime" : {
          "description" : "The start date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "startTimeZoneId" : {
          "description" : "The ID of the start timezone where the exception occured. Normally, this is the default or home timezone for the employee, but the exception can include a different timezone as necessary.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "transfer" : {
          "$ref" : "#/definitions/ITransfer", 
          "description" : "The transfer associated with the time element."
        }, 
        "undoJustificationEnabled" : {
          "description" : "A Boolean indicator that shows whether or not the undo action is available for the justification.", 
          "type" : "boolean"
        }, 
        "userEnteredPosition" : {
          "description" : "A Boolean indicator of whether or not a position was set by a user. When false, the position was set by the system.", 
          "type" : "boolean"
        }, 
        "violationInSeconds" : {
          "description" : "The number of seconds of a violation.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "workRuleId" : {
          "description" : "The ID of the work rule.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "TransferDTO" : {
      "description" : "The transfer model.", 
      "properties" : {
        "orgJobId" : {
          "description" : "The ID of the organizational job associated with a transfer.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "transferString" : {
          "description" : "An ordered, semi-colon separated list of Labor Category Entries and Cost Center.", 
          "type" : "string"
        }, 
        "workRuleId" : {
          "description" : "The ID of the work rule associated with a transfer.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "timekeepingPunchExtractDateRange" : {
      "description" : "The Date Range model.", 
      "properties" : {
        "endDateTime" : {
          "description" : "The end date and time of a Retrieve Punches in Real Time operation in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "startDateTime" : {
          "description" : "The start date and time of a Retrieve Punches in Real Time operation in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }
      }, 
      "required" : [ "endDateTime", "startDateTime" ], 
      "type" : "object"
    }, 
    "TimekeepingOrgJob" : {
      "description" : "Entity that contains org job information", 
      "properties" : {
        "applyDate" : {
          "description" : "Org Job apply date", 
          "format" : "date", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "Object Ref Id", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "qualifier" : {
          "description" : "Object Ref Unique qualifier", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Punch Context Transaction Geo Request" : {
      "description" : "Entity containing geolocation data for punch transactions.", 
      "properties" : {
        "accuracy" : {
          "description" : "The accuracy of the geolocation data.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "deviceId" : {
          "description" : "The ID of the GPS device.", 
          "type" : "string"
        }, 
        "geofenceMethod" : {
          "enum" : [ "GPS", "Wifi" ], 
          "type" : "string"
        }, 
        "knownPlaceName" : {
          "type" : "string"
        }, 
        "latitude" : {
          "description" : "The latitude of the punch transaction. The angular distance of a place north or south of the earth's equator, or of a celestial object north or south of the celestial equator, usually expressed in degrees and minutes.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "locationId" : {
          "description" : "The ID of the geolocation object.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "locationType" : {
          "description" : "The geolocation type.", 
          "enum" : [ "COARSE", "FINE" ], 
          "type" : "string"
        }, 
        "longitude" : {
          "description" : "The longitude of the punch transaction. The angular distance of a place east or west of the meridian at Greenwich, England, or west of the standard meridian of a celestial object, usually expressed in degrees and minutes.", 
          "format" : "double", 
          "type" : "number"
        }, 
        "outsideOfGeofence" : {
          "description" : "A Boolean indicator of whether or not the punch was made outside of the defined geofenced area.", 
          "type" : "boolean"
        }, 
        "unverified" : {
          "description" : "A Boolean indicator of whether or not the location is unverified.", 
          "type" : "boolean"
        }, 
        "updateTime" : {
          "description" : "The time when the geolocation was last updated.", 
          "type" : "string"
        }, 
        "wifi" : {
          "$ref" : "#/definitions/Punch Wifi information", 
          "description" : "The WiFi information associated with punch transactions."
        }
      }, 
      "type" : "object"
    }, 
    "TypeOverride Entity" : {
      "description" : "Entity that contains TypeOverride information", 
      "properties" : {
        "associatedRuleId" : {
          "description" : "Associated Rule ID", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "associatedRuleName" : {
          "description" : "Associated Rule name", 
          "type" : "string"
        }, 
        "description" : {
          "description" : "Description of the TypeOverride", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "Object Ref Id", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "qualifier" : {
          "description" : "Object Ref Unique qualifier", 
          "type" : "string"
        }, 
        "typeOverrideId" : {
          "description" : "Type override ID", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "BulkRemovalAllWhere" : {
      "description" : "The bulk remove all where model.", 
      "properties" : {
        "dateRange" : {
          "$ref" : "#/definitions/CommonDateRange", 
          "description" : "The date range associated with the bulk remove all context."
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef Entity", 
          "description" : "A reference to the employee object. Represents the employee to whom the bulk remove all context applies."
        }
      }, 
      "type" : "object"
    }, 
    "Throwable" : {
      "properties" : {
        "cause" : {
          "$ref" : "#/definitions/Throwable"
        }, 
        "localizedMessage" : {
          "type" : "string"
        }, 
        "message" : {
          "type" : "string"
        }, 
        "stackTrace" : {
          "items" : {
            "$ref" : "#/definitions/StackTraceElement"
          }, 
          "type" : "array"
        }, 
        "suppressed" : {
          "items" : {
            "$ref" : "#/definitions/Throwable"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Locale" : {
      "properties" : {
        "country" : {
          "type" : "string"
        }, 
        "displayCountry" : {
          "type" : "string"
        }, 
        "displayLanguage" : {
          "type" : "string"
        }, 
        "displayName" : {
          "type" : "string"
        }, 
        "displayScript" : {
          "type" : "string"
        }, 
        "displayVariant" : {
          "type" : "string"
        }, 
        "extensionKeys" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "iso3Country" : {
          "type" : "string"
        }, 
        "iso3Language" : {
          "type" : "string"
        }, 
        "language" : {
          "type" : "string"
        }, 
        "script" : {
          "type" : "string"
        }, 
        "unicodeLocaleAttributes" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "unicodeLocaleKeys" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "variant" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "StackTraceElement" : {
      "properties" : {
        "className" : {
          "type" : "string"
        }, 
        "fileName" : {
          "type" : "string"
        }, 
        "lineNumber" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "methodName" : {
          "type" : "string"
        }, 
        "nativeMethod" : {
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "Comment Entity" : {
      "description" : "Entity that contains Comment information", 
      "properties" : {
        "active" : {
          "description" : "Indicator if comment is active", 
          "type" : "boolean"
        }, 
        "categories" : {
          "description" : "List of Comment Category", 
          "items" : {
            "$ref" : "#/definitions/CommentCategoryDTO"
          }, 
          "type" : "array"
        }, 
        "id" : {
          "description" : "Comment Id", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "Comment name", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "NoteDTO" : {
      "properties" : {
        "dataSourceDisplayName" : {
          "description" : "user name of the person who enters comments/notes", 
          "type" : "string"
        }, 
        "dataSourceId" : {
          "description" : "Data Source Id", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "text" : {
          "description" : "User-entered text.", 
          "type" : "string"
        }, 
        "timestamp" : {
          "description" : "time stamp of entered notes", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Justification" : {
      "description" : "Entity that contain TimeElement information", 
      "properties" : {
        "annotationTypeId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "applyDate" : {
          "description" : "The date to which an time applies.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "approvalSubType" : {
          "enum" : [ "DATE", "TIME_WINDOW", "DATE_RANGE" ], 
          "type" : "string"
        }, 
        "commentsAvailable" : {
          "type" : "boolean"
        }, 
        "commentsNotes" : {
          "items" : {
            "$ref" : "#/definitions/Comment Note Entity"
          }, 
          "type" : "array"
        }, 
        "dataElementType" : {
          "description" : "An enumeration of all data element types.", 
          "enum" : [ "PUNCH", "PAYCODEEDIT", "LEAVEEDIT", "HOURSWORKED", "NAMEDDURATION", "ONCALL", "CORRECTIONS", "HOURSANDCOST", "PROJECTED_HOURS_AND_COST", "SCHEDULE_HOURS_AND_COST", "TOTAL", "PROJECTED_TOTAL", "SCHEDULE_TOTAL", "WORKSHIFTSEGMENT", "PROCESSEDSEGMENT", "KINDOFTIMESEGMENT", "EXCEPTION", "EXCEPTION_COMMENTS", "WORKITEM", "ACCRUALEDIT", "WORKITEMTOSCHEDULEITEM", "ACCRUALBALANCE", "ACCRUALTRANSACTION", "ENCUMBEREDACCRUALBALANCE", "WORKHOLIDAY", "SIGNOFF", "CARRYFORWARD", "LEAVEEDITSEGMENT", "PAYCODETOTAL", "ACCRUAL_REPORTING_PERIOD", "PERSONALITY", "PAYCODEEDIT_COMMENTS", "HOURSWORKED_COMMENTS", "PROJECTED_PAYCODETOTAL", "SCHEDULED_PAYCODETOTAL", "ACCRUALBALANCE_NOSQL", "ENCUMBEREDACCRUALBALANCE_NOSQL", "ACCRUAL_REPORTING_PERIOD_NOSQL", "TIMECARDANNOTATION", "ACTUALKINDSOFTIME", "ACTIVITY_SEGMENT" ], 
          "type" : "string"
        }, 
        "dataSourceId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "duration" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "elementId" : {
          "description" : "The ID of the time element.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "elementKey" : {
          "type" : "string"
        }, 
        "elementType" : {
          "description" : "An enumeration of all time item types.", 
          "enum" : [ "PUNCH", "PAYCODEEDIT", "LEAVEEDIT", "LEAVEEDITSEGMENT", "HOURSWORKED", "NAMEDDURATION", "ONCALL", "CORRECTIONS", "HOURSANDCOST", "TOTAL", "WORKSHIFTSEGMENT", "PROCESSEDSEGMENT", "EXCEPTION", "WORKITEM", "ACCRUALEDIT", "DAILYTOTAL", "SHIFTTOTAL", "WORKEDSHIFT", "WORKEDSPAN", "ENCUMBEREDACCRUALBALANCE", "ACCRUALBALANCE", "APPROVAL", "SIGNOFF", "WORKHOLIDAY", "TOTALSUMMARY", "TOTALS", "ACCRUAL_REPORTING_PERIOD", "ITEMTOTAL", "PERSONALITY", "TIMECARDANNOTATION", "ACTIVITY_SEGMENT" ], 
          "type" : "string"
        }, 
        "employeeId" : {
          "description" : "A reference to the employee object.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "endDateTime" : {
          "description" : "The end date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "eventDate" : {
          "description" : "The date to which the event applies.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "fromManager" : {
          "type" : "boolean"
        }, 
        "missingSpanEndTime" : {
          "type" : "string"
        }, 
        "missingSpanStartTime" : {
          "type" : "string"
        }, 
        "payCodeId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "payCodeRequireApproval" : {
          "type" : "boolean"
        }, 
        "positionId" : {
          "description" : "The ID of the position assigned to this time element.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "reviewedDate" : {
          "type" : "string"
        }, 
        "reviewerName" : {
          "type" : "string"
        }, 
        "startDateTime" : {
          "description" : "The start date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "transfer" : {
          "$ref" : "#/definitions/ITransfer", 
          "description" : "The transfer associated with the time element."
        }, 
        "userEnteredPosition" : {
          "description" : "A Boolean indicator of whether or not a position was set by a user. When false, the position was set by the system.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "PayCodeEditBO" : {
      "description" : "Entity that contain TimeElement information", 
      "properties" : {
        "amountType" : {
          "enum" : [ "HOUR", "DAY", "MONEY" ], 
          "type" : "string"
        }, 
        "applyDate" : {
          "description" : "The date to which an time applies.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "approvableByManager" : {
          "type" : "boolean"
        }, 
        "approvalApplyDate" : {
          "format" : "date", 
          "type" : "string"
        }, 
        "commentsAvailable" : {
          "type" : "boolean"
        }, 
        "commentsNotes" : {
          "items" : {
            "$ref" : "#/definitions/Comment Note Entity"
          }, 
          "type" : "array"
        }, 
        "dataElementType" : {
          "description" : "An enumeration of all data element types.", 
          "enum" : [ "PUNCH", "PAYCODEEDIT", "LEAVEEDIT", "HOURSWORKED", "NAMEDDURATION", "ONCALL", "CORRECTIONS", "HOURSANDCOST", "PROJECTED_HOURS_AND_COST", "SCHEDULE_HOURS_AND_COST", "TOTAL", "PROJECTED_TOTAL", "SCHEDULE_TOTAL", "WORKSHIFTSEGMENT", "PROCESSEDSEGMENT", "KINDOFTIMESEGMENT", "EXCEPTION", "EXCEPTION_COMMENTS", "WORKITEM", "ACCRUALEDIT", "WORKITEMTOSCHEDULEITEM", "ACCRUALBALANCE", "ACCRUALTRANSACTION", "ENCUMBEREDACCRUALBALANCE", "WORKHOLIDAY", "SIGNOFF", "CARRYFORWARD", "LEAVEEDITSEGMENT", "PAYCODETOTAL", "ACCRUAL_REPORTING_PERIOD", "PERSONALITY", "PAYCODEEDIT_COMMENTS", "HOURSWORKED_COMMENTS", "PROJECTED_PAYCODETOTAL", "SCHEDULED_PAYCODETOTAL", "ACCRUALBALANCE_NOSQL", "ENCUMBEREDACCRUALBALANCE_NOSQL", "ACCRUAL_REPORTING_PERIOD_NOSQL", "TIMECARDANNOTATION", "ACTUALKINDSOFTIME", "ACTIVITY_SEGMENT" ], 
          "type" : "string"
        }, 
        "dataSourceId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "durationInDays" : {
          "format" : "double", 
          "type" : "number"
        }, 
        "durationInSeconds" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "editByTypeId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "elementId" : {
          "description" : "The ID of the time element.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "elementType" : {
          "description" : "An enumeration of all time item types.", 
          "enum" : [ "PUNCH", "PAYCODEEDIT", "LEAVEEDIT", "LEAVEEDITSEGMENT", "HOURSWORKED", "NAMEDDURATION", "ONCALL", "CORRECTIONS", "HOURSANDCOST", "TOTAL", "WORKSHIFTSEGMENT", "PROCESSEDSEGMENT", "EXCEPTION", "WORKITEM", "ACCRUALEDIT", "DAILYTOTAL", "SHIFTTOTAL", "WORKEDSHIFT", "WORKEDSPAN", "ENCUMBEREDACCRUALBALANCE", "ACCRUALBALANCE", "APPROVAL", "SIGNOFF", "WORKHOLIDAY", "TOTALSUMMARY", "TOTALS", "ACCRUAL_REPORTING_PERIOD", "ITEMTOTAL", "PERSONALITY", "TIMECARDANNOTATION", "ACTIVITY_SEGMENT" ], 
          "type" : "string"
        }, 
        "employeeId" : {
          "description" : "A reference to the employee object.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "endDateTime" : {
          "description" : "The end date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "eventDate" : {
          "description" : "The date to which the event applies.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "exceptions" : {
          "items" : {
            "$ref" : "#/definitions/Exception Entity"
          }, 
          "type" : "array"
        }, 
        "isEditable" : {
          "type" : "boolean"
        }, 
        "isSystemGenerated" : {
          "type" : "boolean"
        }, 
        "isSystemGeneratedPCE" : {
          "type" : "boolean"
        }, 
        "itemId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "moneyAmount" : {
          "format" : "double", 
          "type" : "number"
        }, 
        "moneyAmountCurrency" : {
          "$ref" : "#/definitions/CurrencyDataObjectDTO"
        }, 
        "orgJobId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "originalItemId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "overideAccrualAmount" : {
          "format" : "double", 
          "type" : "number"
        }, 
        "payCodeEditType" : {
          "enum" : [ "REGULAR", "HOURS_WORKED" ], 
          "type" : "string"
        }, 
        "paycodeId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "positionId" : {
          "description" : "The ID of the position assigned to this time element.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "scheduleAmountTypeId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "scheduledShiftIds" : {
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array"
        }, 
        "segmentId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "startDateTime" : {
          "description" : "The start date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "systemGenerated" : {
          "type" : "boolean"
        }, 
        "transfer" : {
          "$ref" : "#/definitions/ITransfer", 
          "description" : "The transfer associated with the time element."
        }, 
        "updateTime" : {
          "type" : "string"
        }, 
        "userEnteredPosition" : {
          "description" : "A Boolean indicator of whether or not a position was set by a user. When false, the position was set by the system.", 
          "type" : "boolean"
        }, 
        "validCommentCategories" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "ITransfer" : {
      "properties" : {
        "editable" : {
          "type" : "boolean"
        }, 
        "laborAccountId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "orgJobId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "systemGenerated" : {
          "type" : "boolean"
        }, 
        "transferString" : {
          "type" : "string"
        }, 
        "workRuleId" : {
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "Punch Wifi information" : {
      "description" : "The punch WiFi information model.", 
      "properties" : {
        "bssid" : {
          "description" : "The BSSID associated with punch WiFi information.", 
          "type" : "string"
        }, 
        "essid" : {
          "description" : "The ESSID associated with punch WiFi information.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "CommentCategoryDTO" : {
      "properties" : {
        "categoryId" : {
          "description" : "Category Id", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "categoryName" : {
          "description" : "Category Name", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "CurrencyDataObjectDTO" : {
      "properties" : {
        "amount" : {
          "format" : "double", 
          "type" : "number"
        }, 
        "currencyCode" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }
  }
}
