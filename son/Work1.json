openapi: 3.0.1
info:
  title: Rest APIs
  description: Rest APIs
  version: "1.0"
servers:
- url: /
tags:
- name: API
  description: <p markdown="1">From here you may browse our library of API resources,
    organized hierarchically by domain, or major functional area, logical subgroup,
    API resource, and all available operations against that resource. For more information
    about the concepts and technology behind our API, refer to the [Getting started](C:636f581c-50a8-41a7-af43-e5057f9c20bd)
    documentation.</p><p>Our platform provides a powerful application programming
    interface and documentation to help you develop secure, scalable, and high-performance
    applications that leverage the full breadth of capabilities offered by our backend
    services.</p><p markdown="1">The Workforce Management suite's API is founded on
    a pragmatic implementation of the [representational state transfer](http://en.wikipedia.org/wiki/Representational_State_Transfer)
    architectural style and allows access to your organization's workforce management
    data using common HTTP methods and the [JSON](http://www.json.org) interchange
    format.</p>
- name: Active Team Members
  description: <p>This resource allows you to retrieve Active Team Members. Activity
    Team Members are team-assigned employees, who have effective team membership.</p>
  x-parent: Work
- name: Activities
  description: <p>This resource allows you to create, retrieve, update, and delete
    activities. Use activities to monitor and react to progress on production, grant,
    or project work by tracking your employees, capital assets, and materials. Activities
    provide real-time information to improve decision-making about how to best use
    your workforce and resources.</p><p>Activites are the central component of the
    Work domain. Each activity can consist of one or more levels. The top level of
    an activity is called “Level 1.” After Level 1, the term “levels” is synonymous
    with “sub-level activities.”</p><p markdown="1">Refer to the [Activities](C:4157c89e-3921-4916-8f73-0d29f48f23c2)
    topic for example calls and a tutorial.</p>
  x-parent: Work
- name: Activity Assignments
  description: <p>This resource allows you to retrieve the activities directly assigned
    to employees.</p>
  x-parent: Work
- name: Activity Customers
  description: <p>This resource allows you to retrieve and manipulate Activity Customers,
    which contain customer information related to activities.</p><p>When you define
    an activity or project you can assign it to a customer and include contact names,
    addresses and contact phone numbers. Customer assignments are for reporting only.
    They do not affect any other Work-related data.</p><p markdown="1">Refer to the
    [Activity Customers](C:d16f6f16-3794-40c2-8164-1f676b6dacb0) topic for example
    calls and a tutorial.</p>
  x-parent: Work
- name: Activity Efficiencies
  description: <p>This resource allows you to retrieve activity efficiencies.</p><p>Efficiency
    is a computed metric that helps determine how an organization performs. Efficiency
    is based on labor standards for a particular activity.</p>
  x-parent: Work
- name: Activity Form Profiles
  description: <p>This resource allows you to retrieve and manipulate Activity form
    profiles.</p><p>Form profiles are a way to organize the forms that you want a
    group of employees to be able to access. You specify a form profile when you define
    the activity profile, and then you assign the activity profile to an employee.</p><p>The
    system provides the following pre-defined form profiles:</p><ul><li>All Forms</li><li>Empty
    Profile</li></ul><p>All employees are assigned an "Empty Profile" by default.</p><p
    markdown="1">Refer to the [Activity Form Profiles](C:54388b84-c130-4278-9255-cca3984b0601)
    topic for example calls and a tutorial.</p>
  x-parent: Work
- name: Activity Form Resources
  description: <p>This resource allows you to retrieve data related to Activity forms.</p>
  x-parent: Work
- name: Activity Forms
  description: <p>This resource allows you to retrieve Activity forms. Activity forms
    are the mechanism through which most employees submit activity data to the system.</p><p>Activity
    forms contain field definitions that define the prompts for the form. Each form
    is associated with a form type that tells the system how to process the information
    in the form.</p> <p>Some form types have a pre-defined form with a standard set
    of field definitions. You can use pre-defined forms or create a copy of a form
    to collect information specific to your business.</p> <p><em><strong>Note:</strong>
    This API resource allows you to indicate which fields you want to be required,
    optional, read-only, or hidden. When you create new forms, take note of the fields
    specified as &ldquo;Required&rdquo; in the pre-defined forms as guidance for creating
    useful forms.</em></p><p markdown="1">Refer to the [Activity Forms](C:d6cde4db-a8a6-4683-be59-23cf940fe522)
    topic for example calls and a tutorial.</p>
  x-parent: Work
- name: Activity Net Changes
  description: <p>This resource allows you to retrieve Activity Shifts data in states
    before the specified dates (lastRunDateTime and endDateTime).</p><p>You can adjust
    what is included in the response by providing select options, such as filtering
    for activity segments with activity processed segments and with or without activity
    result segments. Extracted data can be filtered by employees and activities.</p><h3>Qualifiers</h3><p>The
    following qualifiers apply:</p><ul><li>The Employee qualifier is the person number.</li><li>The
    Hyperfind qualifier is the Hyperfind name.</li><li>The Activity qualifier is the
    activity name.</li><li>The Activity query qualifier is the Activity query name.</li></ul>
  x-parent: Work
- name: Activity Profile Resources
  description: <p>This resource allows you to retrieve data related to Activity Profiles.</p>
  x-parent: Work
- name: Activity Profiles
  description: <p>This resource allows you to retrieve and manipulate Activity Profiles.</p><p>Activity
    profiles help to limit the amount of data that employees can select, such as forms
    and result codes.</p><ul><li>If you create an activity profile to assign to individual
    people, all settings in the profile are applicable.</li><li>Variances are applied
    to the adjusted start and stop times of employee activity events only.</li></ul><p
    markdown="1">Refer to the [Activity Profiles](C:c1e875b3-5129-482a-b7f8-ad984335361a)
    topic for example calls and a tutorial.</p>
  x-parent: Work
- name: Activity Queries
  description: <p>This resource allows you to retrieve and manipulate Activity queries.</p><p>Activity
    queries allow employees and managers to search for activities that are relevant
    to them. Queries are helpful if there are many activities that need to be available
    to employees. Activity queries can be configured to filter out activities based
    on:</p> <ul> <li>Query user’s home labor account</li> <li>Query user’s labor transfer
    set</li> <li>Labor accounts in account sets</li> <li>Activity completion and held
    status</li> <li>Activity type (direct or indirect)</li> <li>Time period within
    which activity start or end dates fall</li> <li>Activity name</li> </ul><p markdown="1">Refer
    to the [Activity Queries](C:b0a02fe8-0932-43af-b5cc-4baf9bbbc567) topic for example
    calls and a tutorial.</p>
  x-parent: Work
- name: Activity Query Profiles
  description: <p>This resource allows you to retrieve and manipulate Activity query
    profiles.</p><p>Activity query profiles allow activity queries to be grouped for
    asssignment to relevant employees and managers.</p> <p>Activity queries allow
    employees and managers to search for activities that are relevant to them. Queries
    are helpful if there are many activities that need to be available to employees.
    Activity queries can be configured to filter out activities based on:</p> <ul>
    <li>Query user’s home labor account</li> <li>Query user’s labor transfer set</li>
    <li>Labor accounts in account sets</li> <li>Activity completion and held status</li>
    <li>Activity type (direct or indirect)</li> <li>Time period within which activity
    start or end dates fall</li> <li>Activity name</li> </ul><p markdown="1">Refer
    to the [Activity Query Profiles](C:96fef6ec-3fc1-4343-832c-977fddae5ad2) topic
    for example calls and a tutorial.</p>
  x-parent: Work
- name: Activity Query Resources
  description: <p>This resource allows you to retrieve data related to Activity queries.</p>
  x-parent: Work
- name: Activity Resources
  description: <p>This resource allows you to retrieve data related to activity resources.
    An activity resource is the non-employee component of an activity. For example,
    an activity resource in a manufacturing environment could be a machine or assembly
    line equipment. In health care, an activity resource could be an operating room
    or an MRI machine.</p>
  x-parent: Work
- name: Activity Results Template Resources
  description: <p>This resource allows you to retrieve data related to activity results
    templates.</p>
  x-parent: Work
- name: Activity Results Templates
  description: <p>This resource allows you to retrieve and manipulate Activity results
    templates.</p><p>Activity Results Templates provide templates for collecting the
    results of activities performed by employees. When stopping an activity, employees
    will be prompted for results when an activity results template has been associated
    with that activity.</p><p><strong>Note:</strong> Activity Results Templates can
    be configured to have up to two levels. When an employee stops an activity configured
    with a two level activity results template, they will be prompted to enter results
    for the activity at the first level and will then be prompted to enter additional
    results at the second level based on the results that were entered at the first
    level.</p><p markdown="1">Refer to the [Activity Results Templates](C:5392e1b3-b6ac-4192-9957-2e983d054425)
    topic for example calls and a tutorial.</p>
  x-parent: Work
- name: Activity Settings
  description: <p>This resource allows you to retrieve and manipulate Activity settings.</p><p>Activity
    settings control the behavior of various aspects of the Work system. Activity
    settings can be updated but cannot be created or deleted.</p><p>You can change
    an activity setting by updating either "integerValue" or "booleanValue" as appropriate.</p><p
    markdown="1">Refer to the [Activity Settings](C:90b5abaf-d581-4ae5-8031-ebc4116f8e5e)
    topic for example calls, a tutorial, and activity setting descriptions that are
    listed according to their <code>"name"</code> property.</p>
  x-parent: Work
- name: Activity Shifts
  description: <p>This resource allows you to manipulate Activity Shifts.</p><p>Activity
    Shifts are entries on a timecard used as an input for the Activity Calculator.</p>
  x-parent: Work
- name: Activity Team Resources
  description: <p>This resource allows you to retrieve data related to activity teams.</p>
  x-parent: Work
- name: Activity Team Segment Audits
  description: This resource allows you to retrieve audits for activity team segments
    or activity team segment results.
  x-parent: Work
- name: Activity Team Segments
  description: <p>This resource allows you to retrieve and manipulate Activity Team
    Segments.</p>
  x-parent: Work
- name: Activity Teams
  description: <p>This resource allows you to retrieve and manipulate Activity teams.
    Activity teams allow a group of people to work on the same Activity at the same
    time. Employees can independently join and leave a team and have assigned team
    membership spans.</p>
  x-parent: Work
- name: Activity Totals
  description: <p>This resource allows you to access activity totals, which are the
    cumulative value of an employee's time-related activity or accruals, such as hours
    worked, pay, or earned accrued vacation time.</p><p>When information that affects
    employees' totals is stored in the system, such as new punch data, the employees'
    totals must be updated within a reasonable period of time. For example, when a
    manager approves and igns off an employee's hours for the week, the new hours
    are stored in the system. The hours worked could affect several other time-related
    values, such as accrued vacation time, accrued sick time, overtime, time spent
    on a specific task, job, or at a location, and available time for the next schedule.
    The Background Processor is a service that runs continuously and updates activity
    totals at specified intervals from the data in the system. To ensure that employees'
    activity totals are kept up-to-date, the Background Processor constantly reviews
    the status of employee records. If any totals are out-of-date, the Background
    Processor re-calculates them.</p>
  x-parent: Work
- name: Activity Transactions
  description: <p>This resource allows you to retrieve activity transactions.</p><p>Each
    activity transaction contains an Activity Processed Segment, Results, Efficiencies,
    Sub Efficiencies, and Totals.</p>
  x-parent: Work
- name: Field Definitions
  description: '<p>This resource allows you to retrieve and manipulate field definitions
    for activities.</p><p>Field definitions consist of four elements: name, type,
    length, number of places to the left or right of the decimal point for numeric
    values.</p><p>There are two types of field definitions: pre-defined and user-defined.
    Pre-defined field definitions begin with an underscore character (_) and are provided
    with the system. An example is "_Clock IN Time."</p><p markdown="1">Refer to the
    [Field Definitions](C:f83b024c-32a2-4a05-88a3-f1f072e2cc97) topic for example
    calls and a tutorial.</p>'
  x-parent: Work
- name: Paycode Actions
  description: <p>This resource allows you to retrieve and manipulate paycode actions.</p><p>Pay
    code actions serve either one of two purposes:</p> <ol> <li><strong>Associate
    pay codes with activities</strong> - Eliminates the need to enter events for specific
    activities. For example, if you associate the “Vacation” pay code with the “Vacation”
    activity, when you enter the &ldquo;Vacation&rdquo; pay code as an edit, the timecard
    creates an event for &ldquo;Vacation.&rdquo;</li> <li><strong>Allocate hours in
    a pay code to multiple projects</strong> - As an example, you can distribute employees’
    paid time off according to the percentage of hours worked on each project during
    a pay period. This is called dynamic allocation because the allocation changes
    whenever entered hours change for the projects in the pay period.</li> </ol> <p>You
    can associate only hours-based pay codes with pay code actions.</p><p markdown="1">Refer
    to the [Pay Code Actions](C:19131cf0-2a41-467d-9fe2-e598b23838dd) topic for example
    calls and a tutorial.</p>
  x-parent: Work
- name: Result Code Profiles
  description: <p>This resource allows you to retrieve and manipulate result code
    profiles.</p><p>Result codes define the data that employees can enter into certain
    pre-defined or custom field definitions. After you create result codes, you group
    them into result code profiles and assign them to activity profiles.</p><p markdown="1">Refer
    to the [Result Code Profiles](C:0316b627-926e-4dc8-8de4-0f56a50063c5) topic for
    example calls and a tutorial.</p>
  x-parent: Work
- name: Result Codes
  description: <p>This resource allows you to retrieve and manipulate Activity result
    codes.</p><p>Result codes define the data that employees can enter into certain
    pre-defined or custom field definitions.</p><p markdown="1">Refer to the [Result
    Codes](C:221323bc-c9a3-4e56-9832-479084bedcd6) topic for example calls and a tutorial.</p>
  x-parent: Work
- name: Team Segments Net Changes
  description: <p>This resource allows you to retrieve Activity Team Segments in states
    before the specified dates (lastRunDateTime and endDateTime). Team segments display
    an activity a team works on over a period of time.</p><h3>Qualifiers</h3><p>The
    following qualifiers apply:</p><ul><li>The Team qualifier is the Team Definition
    name.</li><li>The Activity qualifier is the activity name.</li></ul>
  x-parent: Work
- name: Units of Measure
  description: <p>This resource allows you to retrieve and manipulate units of measure.</p><p>The
    system uses units of measure to count output from activities. Examples include
    feet, inches, meters, gallons.</p><p markdown="1">Refer to the [Units of Measure](C:3371248f-dbef-4947-9a0c-ac30ae6dd0e8)
    topic for example calls and a tutorial.</p>
  x-parent: Work
- name: Work
  description: <p>Work integrates the tracking of your employees, capital assets,
    and materials into a single solution that provides real-time visibility to productivity
    and tools to analyze data over time to make strategic improvements.</p><p>You
    can track information for the following types of work:</p><ul><li><strong>Continuous
    daily operations</strong> (for example, production line work)</li><li><strong>Projects
    that must be tracked against a planned budget and schedule.</strong> You use Work
    to manage the following stages of project work:<ul><li>Execution and tracking</li><li>Monitoring</li><li>Project
    closure</li></ul></li><li><strong>Funded projects</strong> (for example, grant
    initiatives). You use Work to manage the following stages of grant work:<ul><li>Management
    and tracking of schedules and use of funds</li><li>Reporting and auditing</li></ul></li></ul>
  x-parent: API
paths:
  /v1/work/activities:
    get:
      tags:
      - Activities
      summary: Returns an activity by combined name.
      description: This operation returns an activity by combined name.
      operationId: Retrieve Activity by Name
      parameters:
      - name: combinedName
        in: query
        description: The combined name of an activity (wildcards are supported).
        required: true
        schema:
          type: string
      - name: queryName
        in: query
        description: The name of a query.
        required: true
        schema:
          type: string
      - name: activityName
        in: query
        description: The combined activity name. The string supplied in this property
          supports wildcards.
        schema:
          type: string
      - name: queryId
        in: query
        description: The ID of a query.
        required: true
        schema:
          type: integer
          format: int64
      - name: extend_all_activities_query
        in: query
        description: A Boolean indicator of whether or not to extend the All Activities
          query. The extended query does not filter activities by data access when
          executed by the Full Work Setup Manager.
        schema:
          type: boolean
      - name: employeeId
        in: query
        description: An ID that uniquely identifies an employee. This is not a Person
          Number.
        schema:
          type: integer
          format: int64
      - name: use_manager_role
        in: query
        description: A Boolean indicator of whether or not to use the business structure
          from a manager role. When false, the business structure from an employee
          role is used.
        schema:
          type: boolean
      - name: date
        in: query
        description: The date of an activity in ISO_LOCAL_DATE format (YYYY-MM-DD).
        schema:
          type: string
      - name: hierarchicalSearch
        in: query
        description: A Boolean indicator of whether or not the activity search returns
          navigation data.
        schema:
          type: boolean
      - name: applyAccessLevel
        in: query
        description: A Boolean indicator of whether or not to apply access level to
          the activity search.
        schema:
          type: boolean
      - name: orderBy
        in: query
        description: Defines ordering for result (combined_name, sequence).
        schema:
          type: string
          enum:
          - COMBINED_NAME
          - SEQUENCE
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity_PublicAPI'
        400:
          description: '<ul><li>[WFA-212000] - The search string contains too many
            activity level delimiters. Enter a valid activity name search.</li><li>[WFA-212019]
            - The following parameter is not applicable with list type queries: {paramName}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Activity. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
    post:
      tags:
      - Activities
      summary: Creates and returns an activity.
      description: This operation creates and returns an activity.
      operationId: Create Activity
      requestBody:
        description: The Create Activity request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity_PublicAPI'
        400:
          description: '<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten
            the name.</li><li>[WFA-000008] - The following parameter cannot be empty:
            name.</li><li>[WFA-000003] - You must specify the following parameter:
            name.</li><li>[WFA-000016] - The field name cannot contain any of the
            following characters:<>()/'';#.,$%=!.</li><li>[WFA-000018] - The following
            parameter cannot be a negative number: level.</li><li>[WFA-000018] - The
            following parameter cannot be a negative number: sequence.</li><li>[WFA-000004]
            - The following parameter must be null: header.id.</li><li>[WFA-212009]
            - You cannot add a level 2 - 4 activity under a pre-defined activity.</li><li>[WFA-212011]
            - Activity cannot contain labor category entry lists with the same labor
            category. Labor Category: {paramName}, Labor Category Entry List: {paramName}.</li><li>[WFA-117001]
            - Activity Standard effective date range is overlapped. Should be into
            following range: [{StartDate}, {EndDate}].</li><li>[WFA-000024] - standards.laborStandardQuantity
            does not match the required format: up to 12 digits before the decimal
            point; up to 3 digits after the decimal point.</li><li>[WFA-000025] -
            The standards.laborStandardQuantity must be in the range: {minValue} -
            {maxValue}.</li><li>[WFA-000025] - The standards.laborStandardSeconds
            must be in the range: {minValue} - {maxValue}.</li><li>[WFA-212014] -
            Number of employees exceeds the limit that equals {limit}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/activities/exports/apply_read:
    post:
      tags:
      - Activities
      summary: Returns activity export definitions.
      description: <p>This operation returns a list of activity export definitions
        for the specified query.</p><br /><p>The associated Access Control Point is
        WFA_WORK_INTEGRATION_API.</p>
      operationId: Retrieve Activity Export Definitions
      requestBody:
        description: v1.0.activities_setup-activity.post.apply_read.request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityExportRequest'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityExportResponse'
        400:
          description: <ul><li>[WFA-212021] - The next read token is invalid.</li><li>[WFA-212022]
            - The next read token is not consistent with other request parameters.</li><li>[WFA-212023]
            - List Query is not supported for Export Activities.</li><li>[WFA-212024]
            - Query with Activity Name field is not supported for Export Activities.</li><li>[WFA-212025]
            - Query with Business Structure is not supported for Export Activities.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Activity Query. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
      x-codegen-request-body-name: body
  /v1/work/activities/multi_create:
    post:
      tags:
      - Activities
      summary: "Creates and returns one or more\t activities."
      description: <p>This operation creates and returns one or more activities.</p><br
        /><h2>Service limit</h2><p>A service limit constrains the number of activities
        that can be processed in a single request.</p><ul><li>The <strong>Number of
        Activities</strong> cannot exceed 30.</li></ul><p>Refer to the <strong>Docs
        > Service Limits</strong> topic for more information.</p>
      operationId: Create Activities
      requestBody:
        description: The Create Activities request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Activity'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity_PublicAPI'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li><li>
          content: {}
        400:
          description: '<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten
            the name.</li><li>[WFA-000008] - The following parameter cannot be empty:
            name.</li><li>[WFA-000003] - You must specify the following parameter:
            name.</li><li>[WFA-000016] - The field name cannot contain any of the
            following characters:<>()/'';#.,$%=!.</li><li>[WFA-000018] - The following
            parameter cannot be a negative number: level.</li><li>[WFA-000018] - The
            following parameter cannot be a negative number: sequence.</li><li>[WFA-000004]
            - The following parameter must be null: header.id.</li><li>[WFA-212009]
            - You cannot add a level 2 - 4 activity under a pre-defined activity.</li><li>[WFA-212011]
            - Activity cannot contain labor category entry lists with the same labor
            category. Labor Category: {paramName}, Labor Category Entry List: {paramName}.</li><li>[WFA-117001]
            - Activity Standard effective date range is overlapped. Should be into
            following range: [{StartDate}, {EndDate}].</li><li>[WFA-000024] - standards.laborStandardQuantity
            does not match the required format: up to 12 digits before the decimal
            point; up to 3 digits after the decimal point.</li><li>[WFA-000025] -
            The standards.laborStandardQuantity must be in the range: {minValue} -
            {maxValue}.</li><li>[WFA-000025] - The standards.laborStandardSeconds
            must be in the range: {minValue} - {maxValue}.</li><li>[WFA-212014] -
            Number of employees exceeds the limit that equals {limit}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/activities/multi_delete:
    post:
      tags:
      - Activities
      summary: Deletes one or more activities.
      description: <p>This operation deletes one or more activities by object references.</p><br
        /><h2>Service limit</h2><p>A service limit constrains the number of activities
        that can be processed in a single request.</p><ul><li>The <strong>Number of
        Activities</strong> cannot exceed 30.</li></ul><p>Refer to the <strong>Docs
        > Service Limits</strong> topic for more information.</p>
      operationId: Delete Activities
      requestBody:
        description: The Delete Activities request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityRefs'
        required: true
      responses:
        204:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultCode'
        207:
          description: <ul><li>[WFA-000038] - Some of the entities were not deleted
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000039] - None of the entities were deleted because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/activities/multi_read:
    post:
      tags:
      - Activities
      summary: Returns one or more activities.
      description: <p>This operation returns one or more activities by object references.</p><br
        /><h2>Service limit</h2><p>A service limit constrains the number of activities
        that can be processed in a single request.</p><ul><li>The <strong>Number of
        Activities</strong> cannot exceed 30.</li></ul><p>Refer to the <strong>Docs
        > Service Limits</strong> topic for more information.</p>
      operationId: Retrieve Activities
      requestBody:
        description: The Retrieve Activities request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityExportRefs'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity_PublicAPI'
        207:
          description: <ul><li>[WFA-000036] - Some of the entities were not exported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000037] - None of the entities were exported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Activities. Name or names or ID or IDs: [{refs}].</li></ul>'
          content: {}
      x-codegen-request-body-name: body
  /v1/work/activities/multi_update:
    post:
      tags:
      - Activities
      summary: Updates and returns a list of activities.
      description: <p>This operation updates and returns a list of activities.</p><br
        /><h2>Service limit</h2><p>A service limit constrains the number of activities
        that can be processed in a single request.</p><ul><li>The <strong>Number of
        Activities</strong> cannot exceed 30.</li></ul><p>Refer to the <strong>Docs
        > Service Limits</strong> topic for more information.</p>
      operationId: Update Activities
      requestBody:
        description: The Update Activities request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Activity'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity_PublicAPI'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li><li>
          content: {}
        400:
          description: '<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten
            the name.</li><li>[WFA-000008] - The following parameter cannot be empty:
            name.</li><li>[WFA-000003] - You must specify the following parameter:
            name.</li><li>[WFA-000016] - The field name cannot contain any of the
            following characters:<>()/'';#.,$%=!.</li><li>[WFA-000018] - The following
            parameter cannot be a negative number: level.</li><li>[WFA-000018] - The
            following parameter cannot be a negative number: sequence.</li><li>[WFA-000004]
            - The following parameter must be null: header.id.</li><li>[WFA-000007]
            - Entity or entities not found. Type: Activity. Name or names or ID or
            IDs: {id}.</li><li>[WFA-212011] - Activity cannot contain labor category
            entry lists with the same labor category. Labor Category: {paramName},
            Labor Category Entry List: {paramName}.</li><li>[WFA-117001] - Activity
            Standard effective date range is overlapped. Should be into following
            range: [{StartDate}, {EndDate}].</li><li>[WFA-000024] - standards.laborStandardQuantity
            does not match the required format: up to 12 digits before the decimal
            point; up to 3 digits after the decimal point.</li><li>[WFA-000025] -
            The standards.laborStandardQuantity must be in the range: {minValue} -
            {maxValue}.</li><li>[WFA-000025] - The standards.laborStandardSeconds
            must be in the range: {minValue} - {maxValue}.</li><li>[WFA-212014] -
            Number of employees exceeds the limit that equals {limit}.</li><li>[WFA-212015]
            - You cannot import more than one standard without enabling the ''replaceAllStandards''
            flag.</li><li>[WFA-212016] - You cannot import a new standard with an
            effective start date before the start date of the existing standard.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/activities/multi_upsert:
    post:
      tags:
      - Activities
      summary: Creates or updates one or more activities.
      description: <p>This operation creates or updates one or more activities.</p><br
        /><h2>Service limit</h2><p>A service limit constrains the number of activities
        that can be processed in a single request.</p><ul><li>The <strong>Number of
        Activities</strong> cannot exceed 30.</li></ul><p>Refer to the <strong>Docs
        > Service Limits</strong> topic for more information.</p>
      operationId: Create or Update Activities
      requestBody:
        description: The Create or Update Activities request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Activity'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity_PublicAPI'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li><li>
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity_PublicAPI'
        400:
          description: '<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten
            the name.</li><li>[WFA-000008] - The following parameter cannot be empty:
            name.</li><li>[WFA-000003] - You must specify the following parameter:
            name.</li><li>[WFA-000016] - The field name cannot contain any of the
            following characters:<>()/'';#.,$%=!.</li><li>[WFA-000018] - The following
            parameter cannot be a negative number: level.</li><li>[WFA-000018] - The
            following parameter cannot be a negative number: sequence.</li><li>[WFA-000004]
            - The following parameter must be null: header.id.</li><li>[WFA-000007]
            - Entity or entities not found. Type: Activity. Name or names or ID or
            IDs: {id}.</li><li>[WFA-212011] - Activity cannot contain labor category
            entry lists with the same labor category. Labor Category: {paramName},
            Labor Category Entry List: {paramName}.</li><li>[WFA-117001] - Activity
            Standard effective date range is overlapped. Should be into following
            range: [{StartDate}, {EndDate}].</li><li>[WFA-000024] - standards.laborStandardQuantity
            does not match the required format: up to 12 digits before the decimal
            point; up to 3 digits after the decimal point.</li><li>[WFA-000025] -
            The standards.laborStandardQuantity must be in the range: {minValue} -
            {maxValue}.</li><li>[WFA-000025] - The standards.laborStandardSeconds
            must be in the range: {minValue} - {maxValue}.</li><li>[WFA-212014] -
            Number of employees exceeds the limit that equals {limit}.</li><li>[WFA-212015]
            - You cannot import more than one standard without enabling the ''replaceAllStandards''
            flag.</li><li>[WFA-212016] - You cannot import a new standard with an
            effective start date before the start date of the existing standard.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/activities/setup/activity_types:
    get:
      tags:
      - Activity Resources
      summary: Returns all activity types.
      description: This operation returns all activity types.
      operationId: Retrieve All Activity Types
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/activities/setup/complete_statuses:
    get:
      tags:
      - Activity Resources
      summary: Returns all activity complete statuses.
      description: This operation returns all activity complete statuses.
      operationId: Retrieve All Activity Complete Statuses
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/activities/setup/data_access_types:
    get:
      tags:
      - Activity Resources
      summary: Returns all data access types.
      description: This operation returns all data access types.
      operationId: Retrieve All Data Access Types
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/activities/setup/eligible_default_activities:
    get:
      tags:
      - Activity Resources
      summary: Returns all eligible default activities.
      description: This operation returns all eligible default activities.
      operationId: Retrieve All Eligible Default Activities
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectRef'
  /v1/work/activities/setup/event_types:
    get:
      tags:
      - Activity Resources
      summary: Returns all event types.
      description: This operation returns all event types.
      operationId: Retrieve All Event Types
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/activities/setup/held_histories:
    get:
      tags:
      - Activity Resources
      summary: Returns all activity held history.
      description: This operation returns all activity held history.
      operationId: Retrieve All Activity Held History
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/activities/setup/hours_allocation_types:
    get:
      tags:
      - Activity Resources
      summary: Returns all hours allocation types.
      description: This operation returns all hours allocation types.
      operationId: Retrieve All Hours Allocation Types
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/activities/setup/priority_types:
    get:
      tags:
      - Activity Resources
      summary: Returns all activity priority types.
      description: This operation returns all activity priority types.
      operationId: Retrieve All Activity Priority Types
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/activities/setup/process_types:
    get:
      tags:
      - Activity Resources
      summary: Returns all activity process types.
      description: This operation returns all activity process types.
      operationId: Retrieve All Activity Process Types
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/activities/setup/quantity_allocation_types:
    get:
      tags:
      - Activity Resources
      summary: Returns all quantity allocation types.
      description: This operation returns all quantity allocation types.
      operationId: Retrieve All Quantity Allocation Types
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/activities/setup/sequence_validation_types:
    get:
      tags:
      - Activity Resources
      summary: Returns all sequence validation types.
      description: This operation returns all sequence validation types.
      operationId: Retrieve All Sequence Validation Types
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/activities/{id}:
    get:
      tags:
      - Activities
      summary: Returns an activity.
      description: This operation returns an activity by ID.
      operationId: Retrieve Activity by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of an activity.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity_PublicAPI'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Activity. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
    put:
      tags:
      - Activities
      summary: Updates and returns an activity.
      description: This operation updates and returns an activity by ID.
      operationId: Update Activity by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of an activity.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: The Update Activity by ID request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity_PublicAPI'
        400:
          description: '<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten
            the name.</li><li>[WFA-000008] - The following parameter cannot be empty:
            name.</li><li>[WFA-000003] - You must specify the following parameter:
            name.</li><li>[WFA-000016] - The field name cannot contain any of the
            following characters:<>()/'';#.,$%=!.</li><li>[WFA-000018] - The following
            parameter cannot be a negative number: level.</li><li>[WFA-000018] - The
            following parameter cannot be a negative number: sequence.</li><li>[WFA-000004]
            - The following parameter must be null: header.id.</li><li>[WFA-212011]
            - Activity cannot contain labor category entry lists with the same labor
            category. Labor Category: {paramName}, Labor Category Entry List: {paramName}.</li><li>[WFA-117001]
            - Activity Standard effective date range is overlapped. Should be into
            following range: [{StartDate}, {EndDate}].</li><li>[WFA-000024] - standards.laborStandardQuantity
            does not match the required format: up to 12 digits before the decimal
            point; up to 3 digits after the decimal point.</li><li>[WFA-000025] -
            The standards.laborStandardQuantity must be in the range: {minValue} -
            {maxValue}.</li><li>[WFA-000025] - The standards.laborStandardSeconds
            must be in the range: {minValue} - {maxValue}.</li><li>[WFA-212014] -
            Number of employees exceeds the limit that equals {limit}.</li><li>[WFA-212015]
            - You cannot import more than one standard without enabling the ''replaceAllStandards''
            flag.</li><li>[WFA-212016] - You cannot import a new standard with an
            effective start date before the start date of the existing standard.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Activities. Name or names or ID or IDs: [{refs}].</li></ul>'
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Activities
      summary: Deletes an activity.
      description: This operation deletes an activity by ID.
      operationId: Delete Activity by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of an activity.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: Success.
          content: {}
        400:
          description: '<ul><li>[WFA-105007] - The Activity is currently used by an
            Activity Event - Activity name: {combinedname}</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Activity. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
  /v1/work/activity_efficiencies/multi_read:
    post:
      tags:
      - Activity Efficiencies
      summary: Returns activity efficiencies.
      description: <p>This operation returns a list of activity efficiencies for specified
        employees and activities over a specified date range.</p><br /><p>The associated
        Access Control Point is WFA_WORK_INTEGRATION_API.</p>
      operationId: Retrieve Activity Efficiencies
      requestBody:
        description: The Retrieve Activity Efficiencies request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity Efficiency Multi Read Criteria'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity Efficiency Multi Read Result'
        400:
          description: '<p>Bad request:</p><ul><li>[WFA-000003] - You must specify
            the following parameter: dateRange.startDate.</li><li>[WFA-000003] - You
            must specify the following parameter: dateRange.endDate.</li><li>[WFA-000044]
            - The date range is invalid. The start date must be on or before the end
            date.</li><li>[WFA-000002] - The following collection cannot be empty:
            employees.</li><li>[WTK-170001] - Invalid employee ID: {id}</li><li>[WTK-170000]
            - Invalid person number: {personNumber}</li><li>[WFA-000009] - Your request
            includes two or more of the following parameters: ids, qualifiers, refs.
            These parameters are mutually exclusive.</li></ul>'
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Activity. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
      x-codegen-request-body-name: body
  /v1/work/activity_profiles:
    get:
      tags:
      - Activity Profiles
      summary: Returns all Activity Profiles or a particular Activity Profile by name.
      description: This operation returns all Activity Profiles if no parameter is
        specified or a particular Profile if a name is provided.
      operationId: Retrieve All Activity Profiles or by Name
      parameters:
      - name: name
        in: query
        description: The name of an Activity Profile.
        schema:
          type: string
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Profile. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
    post:
      tags:
      - Activity Profiles
      summary: Creates an Activity Profile.
      description: This operation creates an Activity Profile.
      operationId: Create Activity Profile
      requestBody:
        description: The Create Activity Profile request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        400:
          description: '<ul><li>[WFA-000004] - The following parameter must be null:
            id.</li><li>[WFA-000003] - You must specify the following parameter: name.</li><li>[WFA-000008]
            - The following parameter cannot be empty: name.</li><li>[WFA-000015]
            - Name length exceeds 50 characters. Shorten the name.</li><li>[WFA-000016]
            - The field name cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-180001]
            - The name you specified {profileName} already exists. Enter a unique
            name.</li><li>[WFA-000015] - Description length exceeds 255 characters.
            Shorten the description.</li><li>[WFA-000016] - The field wfaDefault1TXT
            cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-000015]
            - WfaDefault1TXT length exceeds N characters. Shorten the wfaDefault1TXT.</li><li>[WFA-000016]
            - The field wfaDefault2TXT cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-000015]
            - WfaDefault2TXT length exceeds N characters. Shorten the wfaDefault1TXT.</li><li>[WFA-000016]
            - The field wfaDefault3TXT cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-000015]
            - WfaDefault3TXT length exceeds N characters. Shorten the wfaDefault3TXT.</li><li>[WFA-000016]
            - The field wfaDefault4TXT cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-000015]
            - WfaDefault4TXT length exceeds N characters. Shorten the wfaDefault3TXT.</li><li>[WFA-000018]
            - The following parameter cannot be a negative number: limitDirect.</li><li>[WFA-000019]
            - The limitDirect cannot be greater than 999.</li><li>[WFA-000018] - The
            following parameter cannot be a negative number: limitInDirect.</li><li>[WFA-000019]
            - The limitInDirect cannot be greater than 999.</li><li>[WFA-000018] -
            The following parameter cannot be a negative number: maxDurationAmount.</li><li>[WFA-000019]
            - The maxDurationAmount cannot be greater than 86400.</li><li>[WFA-000018]
            - The following parameter cannot be a negative number: minDurationAmount.</li><li>[WFA-000019]
            - The minDurationAmount cannot be greater than 86400.</li><li>[WFA-000003]
            - You must specify the following parameter: varBtwnActyMn.</li><li>[WFA-000018]
            - The following parameter cannot be a negative number: varBtwnActyMn.</li><li>[WFA-000019]
            - The varBtwnActyMn cannot be greater than 999.</li><li>[WFA-000003] -
            You must specify the following parameter: varFirstActyMn.</li><li>[WFA-000018]
            - The following parameter cannot be a negative number: varFirstActyMn.</li><li>[WFA-000019]
            - The varFirstActyMn cannot be greater than 999.</li><li>[WFA-000003]
            - You must specify the following parameter: varLastActyMn.</li><li>[WFA-000018]
            - The following parameter cannot be a negative number: varLastActyMn.</li><li>[WFA-000019]
            - The varLastActyMn cannot be greater than 999.</li><li>[WFA-000003] -
            You must specify the following parameter: multiStopVar.</li><li>[WFA-000018]
            - The following parameter cannot be a negative number: multiStopVar.</li><li>[WFA-000019]
            - The multiStopVar cannot be greater than 999.</li><li>[WFA-000018] -
            The following parameter cannot be a negative number: userUnderAllocationMaximumVarianceAllowed.</li><li>[WFA-000019]
            - The userUnderAllocationMaximumVarianceAllowed cannot be greater than
            86400.</li><li>[WFA-000003] - You must specify the following parameter:
            doNotSetSpanOrphaned.</li><li>[WFA-000003] - You must specify the following
            parameter: userCheckUnderAllocation.</li><li>[WFA-000003] - You must specify
            the following parameter: userCheckOverAllocation.</li><li>[WFA-000003]
            - You must specify the following parameter: userCheckFutureActivities.</li><li>[WFA-000003]
            - You must specify the following parameter: userAllocationCheckNoActivityAllowed.</li><li>[WFA-000003]
            - You must specify the following parameter: formProfile.</li><li>[WFA-000006]
            - The following object reference is invalid: formProfile.</li><li>[WFA-000007]
            - Entity or entities not found. Type: formProfile. Name or names or ID
            or IDs: {qualifier/id}.</li><li>[WFA-000003] - You must specify the following
            parameter: codeProfile.</li><li>[WFA-000006] - The following object reference
            is invalid: codeProfile.</li><li>[WFA-000007] - Entity or entities not
            found. Type: codeProfile. Name or names or ID or IDs: {qualifier/id}.</li><li>[WFA-000003]
            - You must specify the following parameter: queryProfile.</li><li>[WFA-000006]
            - The following object reference is invalid: queryProfile.</li><li>[WFA-000007]
            - Entity or entities not found. Type: queryProfile. Name or names or ID
            or IDs: {qualifier/id}.</li><li>[WFA-000006] - The following object reference
            is invalid: defaultActivity.</li><li>[WFA-000007] - Entity or entities
            not found. Type: defaultActivity. Name or names or ID or IDs: {qualifier/id}.</li><li>[WFA-214000]
            - You cannot assign non default activity to be default for defaultActivity.</li><li>[WFA-000006]
            - The following object reference is invalid: idleActivity.</li><li>[WFA-000007]
            - Entity or entities not found. Type: idleActivity. Name or names or ID
            or IDs: {qualifier/id}.</li><li>[WFA-214000] - You cannot assign non default
            activity to be default for idleActivity.</li><li>[WFA-000006] - The following
            object reference is invalid: unpaidMealActivity.</li><li>[WFA-000007]
            - Entity or entities not found. Type: unpaidMealActivity. Name or names
            or ID or IDs: {qualifier/id}.</li><li>[WFA-214000] - You cannot assign
            non default activity to be default for unpaidMealActivity.</li><li>[WFA-000006]
            - The following object reference is invalid: paidMealActivity.</li><li>[WFA-000007]
            - Entity or entities not found. Type: paidMealActivity. Name or names
            or ID or IDs: {qualifier/id}.</li><li>[WFA-214000] - You cannot assign
            non default activity to be default for paidMealActivity.</li><li>[WFA-116006]
            - The maximum duration of: {MaximumDuration} HRS is below the minimum
            duration of: {MinimumDuration} HRS for Activity Profile name: {Name}.</li><li>[WFA-160005]
            - Duration {Duration} of less than 1 minute not allowed.</li><li>[WFA-160001]
            - Duration {Duration} more than 24 hours not allowed.</li><li>[WFA-000003]
            - You must specify the following parameter: varianceCheck.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/activity_profiles/multi_create:
    post:
      tags:
      - Activity Profiles
      summary: Creates one or more Activity Profiles.
      description: This operation creates one or more Activity Profiles.
      operationId: Create Activity Profiles
      requestBody:
        description: The Create Activity Profiles request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Profile'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile_PartialPublicAPI'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: '<ul><li>[WFA-000035] - None of the entities were imported
            because of errors in the source data. Correct those errors and try again.</li><li>[WFA-000003]
            - You must specify the following parameter: varianceCheck.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/activity_profiles/multi_delete:
    post:
      tags:
      - Activity Profiles
      summary: Deletes one or more Activity Profiles.
      description: This operation deletes one or more Activity Profiles by object
        references.
      operationId: Delete Activity Profiles
      requestBody:
        description: The Delete Activity Profiles request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileRefs'
        required: true
      responses:
        204:
          description: Success.
          content: {}
        207:
          description: <ul><li>[WFA-000038] - Some of the entities were not deleted
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000039] - None of the entities were deleted because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/activity_profiles/multi_read:
    post:
      tags:
      - Activity Profiles
      summary: Returns one or more Activity Profiles.
      description: This operation returns one or more Activity Profiles by object
        references.
      operationId: Retrieve Activity Profiles
      requestBody:
        description: The Retrieve Activity Profiles request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileRefs'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
        207:
          description: <ul><li>[WFA-000036] - Some of the entities were not exported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000037] - None of the entities were exported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/activity_profiles/multi_update:
    post:
      tags:
      - Activity Profiles
      summary: Updates one or more Activity Profiles.
      description: This operation updates one or more Activity Profiles.
      operationId: Update Activity Profiles
      requestBody:
        description: The Update Activity Profiles request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Profile'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile_PartialPublicAPI'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: '<ul><li>[WFA-000035] - None of the entities were imported
            because of errors in the source data. Correct those errors and try again.</li><li>[WFA-000003]
            - You must specify the following parameter: varianceCheck.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/activity_profiles/setup/future_validation_types:
    get:
      tags:
      - Activity Profile Resources
      summary: Returns all Future Validation Types.
      description: This operation returns all Future Validation Types.
      operationId: Retrieve Future Validation Types
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/activity_profiles/setup/tracking_status_types:
    get:
      tags:
      - Activity Profile Resources
      summary: Returns all Tracking Status Types.
      description: This operation returns Tracking Status Types.
      operationId: Retrieve Tracking Status Types
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/activity_profiles/setup/variance_check_types:
    get:
      tags:
      - Activity Profile Resources
      summary: Returns all Variance Check Types.
      description: This operation returns all Variance Check Types.
      operationId: Retrieve Variance Check Types
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/activity_profiles/setup/work_rules:
    get:
      tags:
      - Activity Profile Resources
      summary: Returns all Work Rules.
      description: This operation returns all Work Rules.
      operationId: Retrieve Work Rules for Activities
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/activity_profiles/{id}:
    get:
      tags:
      - Activity Profiles
      summary: Returns an Activity Profile.
      description: This operation returns an Activity Profile by ID.
      operationId: Retrieve Activity Profile by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of an Activity Profile.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Profile. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
    put:
      tags:
      - Activity Profiles
      summary: Updates an Activity Profile.
      description: This operation updates an Activity Profile by ID.
      operationId: Update Activity Profile by ID
      parameters:
      - name: id
        in: path
        description: The Update Activity Profile by ID request payload.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: The Update Activity Profile by ID request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        400:
          description: '<ul><li>[WFA-000008] - The following parameter cannot be empty:
            id.</li><li>[WFA-000005] - ID from path does not match ID from request
            payload.</li><li>[WFA-000003] - You must specify the following parameter:
            name.</li><li>[WFA-000008] - The following parameter cannot be empty:
            name.</li><li>[WFA-000015] - Name length exceeds 50 characters. Shorten
            the name.</li><li>[WFA-000016] - The field name cannot contain any of
            the following characters:<>()/'';#.,$%=!.</li><li>[WFA-180001] - The name
            you specified {profileName} already exists. Enter a unique name.</li><li>[WFA-000015]
            - Description length exceeds 255 characters. Shorten the description.</li><li>[WFA-000016]
            - The field wfaDefault1TXT cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-000015]
            - WfaDefault1TXT length exceeds N characters. Shorten the wfaDefault1TXT.</li><li>[WFA-000016]
            - The field wfaDefault2TXT cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-000015]
            - WfaDefault2TXT length exceeds N characters. Shorten the wfaDefault1TXT.</li><li>[WFA-000016]
            - The field wfaDefault3TXT cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-000015]
            - WfaDefault3TXT length exceeds N characters. Shorten the wfaDefault3TXT.</li><li>[WFA-000016]
            - The field wfaDefault4TXT cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-000015]
            - WfaDefault4TXT length exceeds N characters. Shorten the wfaDefault3TXT.</li><li>[WFA-000018]
            - The following parameter cannot be a negative number: limitDirect.</li><li>[WFA-000019]
            - The limitDirect cannot be greater than 999.</li><li>[WFA-000018] - The
            following parameter cannot be a negative number: limitInDirect.</li><li>[WFA-000019]
            - The limitInDirect cannot be greater than 999.</li><li>[WFA-000018] -
            The following parameter cannot be a negative number: maxDurationAmount.</li><li>[WFA-000019]
            - The maxDurationAmount cannot be greater than 86400.</li><li>[WFA-000018]
            - The following parameter cannot be a negative number: minDurationAmount.</li><li>[WFA-000019]
            - The minDurationAmount cannot be greater than 86400.</li><li>[WFA-000003]
            - You must specify the following parameter: varBtwnActyMn.</li><li>[WFA-000018]
            - The following parameter cannot be a negative number: varBtwnActyMn.</li><li>[WFA-000019]
            - The varBtwnActyMn cannot be greater than 999.</li><li>[WFA-000003] -
            You must specify the following parameter: varFirstActyMn.</li><li>[WFA-000018]
            - The following parameter cannot be a negative number: varFirstActyMn.</li><li>[WFA-000019]
            - The varFirstActyMn cannot be greater than 999.</li><li>[WFA-000003]
            - You must specify the following parameter: varLastActyMn.</li><li>[WFA-000018]
            - The following parameter cannot be a negative number: varLastActyMn.</li><li>[WFA-000019]
            - The varLastActyMn cannot be greater than 999.</li><li>[WFA-000003] -
            You must specify the following parameter: multiStopVar.</li><li>[WFA-000018]
            - The following parameter cannot be a negative number: multiStopVar.</li><li>[WFA-000019]
            - The multiStopVar cannot be greater than 999.</li><li>[WFA-000018] -
            The following parameter cannot be a negative number: userUnderAllocationMaximumVarianceAllowed.</li><li>[WFA-000019]
            - The userUnderAllocationMaximumVarianceAllowed cannot be greater than
            86400.</li><li>[WFA-000003] - You must specify the following parameter:
            doNotSetSpanOrphaned.</li><li>[WFA-000003] - You must specify the following
            parameter: userCheckUnderAllocation.</li><li>[WFA-000003] - You must specify
            the following parameter: userCheckOverAllocation.</li><li>[WFA-000003]
            - You must specify the following parameter: userCheckFutureActivities.</li><li>[WFA-000003]
            - You must specify the following parameter: userAllocationCheckNoActivityAllowed.</li><li>[WFA-000003]
            - You must specify the following parameter: formProfile.</li><li>[WFA-000006]
            - The following object reference is invalid: formProfile.</li><li>[WFA-000007]
            - Entity or entities not found. Type: formProfile. Name or names or ID
            or IDs: {qualifier/id}.</li><li>[WFA-000003] - You must specify the following
            parameter: codeProfile.</li><li>[WFA-000006] - The following object reference
            is invalid: codeProfile.</li><li>[WFA-000007] - Entity or entities not
            found. Type: codeProfile. Name or names or ID or IDs: {qualifier/id}.</li><li>[WFA-000003]
            - You must specify the following parameter: queryProfile.</li><li>[WFA-000006]
            - The following object reference is invalid: queryProfile.</li><li>[WFA-000007]
            - Entity or entities not found. Type: queryProfile. Name or names or ID
            or IDs: {qualifier/id}.</li><li>[WFA-000006] - The following object reference
            is invalid: defaultActivity.</li><li>[WFA-000007] - Entity or entities
            not found. Type: defaultActivity. Name or names or ID or IDs: {qualifier/id}.</li><li>[WFA-214000]
            - You cannot assign non default activity to be default for defaultActivity.</li><li>[WFA-000006]
            - The following object reference is invalid: idleActivity.</li><li>[WFA-000007]
            - Entity or entities not found. Type: idleActivity. Name or names or ID
            or IDs: {qualifier/id}.</li><li>[WFA-214000] - You cannot assign non default
            activity to be default for idleActivity.</li><li>[WFA-000006] - The following
            object reference is invalid: unpaidMealActivity.</li><li>[WFA-000007]
            - Entity or entities not found. Type: unpaidMealActivity. Name or names
            or ID or IDs: {qualifier/id}.</li><li>[WFA-214000] - You cannot assign
            non default activity to be default for unpaidMealActivity.</li><li>[WFA-000006]
            - The following object reference is invalid: paidMealActivity.</li><li>[WFA-000007]
            - Entity or entities not found. Type: paidMealActivity. Name or names
            or ID or IDs: {qualifier/id}.</li><li>[WFA-214000] - You cannot assign
            non default activity to be default for paidMealActivity.</li><li>[WFA-116006]
            - The maximum duration of: {MaximumDuration} HRS is below the minimum
            duration of: {MinimumDuration} HRS for Activity Profile name: {Name}.</li><li>[WFA-160005]
            - Duration {Duration} of less than 1 minute not allowed.</li><li>[WFA-160001]
            - Duration {Duration} more than 24 hours not allowed.</li><li>[WFA-000003]
            - The following parameter cannot be empty: version.</li><li>[WFA-000022]
            - The data was modified by another user while you were working on this
            page. Your edits can not be saved. Please refresh your data and try again.</li><li>[WFA-116010]
            - The system-defined activity profile cannot be modified - Activity Profile
            name: {Name}.</li><li>[WFA-000003] - You must specify the following parameter:
            varianceCheck.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Profile. Name or names or ID or IDs: [{refs}].</ul></li>'
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Activity Profiles
      summary: Deletes an Activity Profile.
      description: This operation deletes an Activity Profile by ID.
      operationId: Delete Activity Profile by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of an Activity Profile.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: Success.
          content: {}
        400:
          description: '<ul><li>[WFA-116002] - The system-defined activity profile
            cannot be deleted - Activity Profile name: {Name}.</li><li>[WFA-116003]
            - The Activity Profile is currently used by an Employee - Activity Profile
            name: {Name}.</li><li>[WFA-116004] - The Activity Profile is currently
            used by a Cell and/or Resource - Activity Profile name: {Name}.</li><li>[WFA-116005]
            - The Activity Profile is currently used by an Activity Event - Activity
            Profile name: {Name}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Profile. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
  /v1/work/activity_shifts/multi_delete:
    post:
      tags:
      - Activity Shifts
      summary: Deletes one or more activity shifts.
      description: <p>This operation deletes one or more activity shifts.</p><br /><p>The
        associated Access Control Point is WFA_WORK_INTEGRATION_API.</p><br /><h2>Service
        limit</h2><p>A service limit constrains the number of employees and the number
        of activity segments that can be processed in a single request.</p><ul><li>The
        <strong>Number of Employees</strong> cannot exceed 30.</li><li>The <strong>Number
        of Activity Segments</strong> cannot exceed 30.</li></ul><p>Refer to the <strong>Docs
        > Service Limits</strong> topic for more information.</p>
      operationId: Delete Activity Shifts
      requestBody:
        description: The Delete Activity Shifts request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity Shift Delete Find Criteria'
        required: true
      responses:
        200:
          description: Successfully deleted activity shifts for multiple employees.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkActivitySegmentForRest'
        207:
          description: '<ul><li>[WTK-201005] - Some of the activity segments were
            not deleted because of errors in the source data. Correct those errors
            and try again.</li><li>[WTK-201007] - You must specify an activity segment
            identifier for delete operations.</li><li>[WTK-200101] - The specified
            identifier is not associated with any activity segment. Include valid
            parameters and try again.</li><li>[WTK-200102] - The activity segment
            identifier must contain an activity segment ID or an activity with date
            and time parameters.</li><li>[WTK-200103] - The following parameters are
            required for activitySegmentIdentifier: startDateTime or endDateTime or
            durationDate with durationInSeconds.</li><ul>'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkActivitySegmentForRest'
        400:
          description: '<ul><li>[WTK-201006] - None of the activity segments were
            deleted because of errors in the source data. Correct those errors and
            try again.</li><li>[WTK-201007] - You must specify an activity segment
            identifier for delete operations.</li><li>[WTK-200101] - The specified
            identifier is not associated with any activity segment. Include valid
            parameters and try again.</li><li>[WTK-200102] - The activity segment
            identifier must contain an activity segment ID or an activity with date
            and time parameters.</li><li>[WTK-200103] - The following parameters are
            required for activitySegmentIdentifier: startDateTime or endDateTime or
            durationDate with durationInSeconds.</li><ul>'
          content: {}
      x-codegen-request-body-name: body
  /v1/work/activity_shifts/multi_read:
    post:
      tags:
      - Activity Shifts
      summary: Returns activity shifts by object references.
      description: <p>This operation returns activity shifts by object references.</p><br
        /><h2>Service limit</h2><p>A service limit constrains the number of days multiplied
        by the number of employees that can be processed in a single request.</p><ul><li>The
        <strong>Number of Days</strong> multiplied by the <strong>Number of Employees</strong>
        cannot exceed 700.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong>
        topic for more information.</p>
      operationId: Retrieve Activity Shifts
      requestBody:
        description: The Retrieve Activity Shifts request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity Shift find criteria'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityShiftExportResult'
        400:
          description: '<ul><li>[WFA-000002] - The following collection cannot be
            empty: select.</li><li>[WTK-201800] - Invalid select option: selectOption.<li>[WTK-200005]
            - Employee is required.</li></li><li>[WTK-170000] - Invalid person number:
            personNumber.</li><li>[WTK-170001] - Invalid employee ID: id</li><li>[WTK-201816]
            - Number of employees multiplied by number of days exceeds the limit that
            equals {limit}.</li></ul>'
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            activity. Name or names or ID or IDs: {id}.</li><li>[WFA-000007] - Entity
            or entities not found. Type: Activity Query. Name or names or ID or IDs:
            {id}.</li><li>[WFA-000007] - Entity or entities not found. Type: Symbolic
            Period. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
      x-codegen-request-body-name: body
  /v1/work/activity_shifts/multi_upsert:
    post:
      tags:
      - Activity Shifts
      summary: Creates or updates one or more activity shifts.
      description: <p>This operation creates or updates activity shifts from a third
        party source for multiple employees.</p><br /><h2>Service limit</h2><p>A service
        limit constrains the number of employees, the number of activity segments,
        and the number of activity segments plus the number of result segments that
        can be processed in a single request.</p><ul><li>The <strong>Number of Employees</strong>
        cannot exceed 10.</li><li>The <strong>Number of Activity Segments</strong>
        cannot exceed 30.</li><li>The <strong>Number of Activity Segments</strong>
        plus the <strong>Number of Result Segments</strong> cannot exceed 120.</li></ul><p>Refer
        to the <strong>Docs > Service Limits</strong> topic for more information.</p>
      operationId: Create or Update Activity Shifts
      requestBody:
        description: The Create or Update Activity Shifts request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Bulk Activity Segment Context'
        required: false
      responses:
        200:
          description: Successfully created or updated activity shifts for multiple
            employees.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkActivitySegmentForRest'
        207:
          description: '<ul><li>[WTK-201002] - Some of the activity segments were
            not imported because of errors in the source data. Correct those errors
            and try again.</li><li>[WTK-200100] - You must specify an activity segment
            identifier for update operations.</li><li>[WTK-200101] - The specified
            identifier is not associated with any activity segment. Include valid
            parameters and try again.</li><li>[WTK-200102] - The activity segment
            identifier must contain an activity segment ID or an activity with date
            and time parameters.</li><li>[WTK-200103] - he following parameters are
            required for activitySegmentIdentifier: startDateTime or endDateTime or
            durationDate with durationInSeconds.</li><ul>'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BulkActivitySegmentForRest'
        400:
          description: '<ul><li>[WTK-201003] - None of the activity segments were
            imported because of errors in the source data. Correct those errors and
            try again.</li><li>[WTK-200100] - You must specify an activity segment
            identifier for update operations.</li><li>[WTK-200101] - The specified
            identifier is not associated with any activity segment. Include valid
            parameters and try again.</li><li>[WTK-200102] - The activity segment
            identifier must contain an activity segment ID or an activity with date
            and time parameters.</li><li>[WTK-200103] - he following parameters are
            required for activitySegmentIdentifier: startDateTime or endDateTime or
            durationDate with durationInSeconds.</li><ul>'
          content: {}
      x-codegen-request-body-name: body
  /v1/work/activity_shifts/net_changes/multi_read:
    post:
      tags:
      - Activity Net Changes
      summary: Returns Activity Shifts data for multiple employees based on the request
        parameters.
      description: <p>This operation returns Activity Shifts data. Required parameters
        include <code>select</code>, <code>lastRunDateTime</code>, and <code>endDateTime</code>.</p><br
        /><h2>Service limit</h2><p>A service limit constrains the number of employees
        and the duration in seconds that can be processed in a single request.</p><ul><li>The
        <strong>Number of Employees</strong> cannot exceed 100.</li><li>The <strong>Duration
        in Seconds</strong> cannot exceed 86,400.</li></ul><p><em><strong>Note:</strong>
        The <strong>Duration in Seconds</strong> limit is defined as the number of
        seconds between <code>lastRunDateTime</code> and <code>endDateTime</code>.</em></p><p>Refer
        to the <strong>Docs > Service Limits</strong> topic for more information.</p>
      operationId: Retrieve Net Changes for Activity Shifts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetChange find criteria'
        required: false
      responses:
        200:
          description: Successfully retrieved Activity Shifts data by specified parameters.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NetChangeResult'
        400:
          description: 'Bad Request: <ul><li>[WTK-201800] - Invalid select option:
            selectOption.</li><li>[WTK-201801] - The lastRunDateTime is required.</li><li>[WTK-201802]
            - The endDateTime is required.</li><li>[WTK-201803] - The lastRunDateTime
            should be in the past.</li><li>[WTK-201804] - The endDateTime should be
            in the past.</li><li>[WTK-201805] - The lastRunDateTime should be before
            the endDateTime.</li><li>[WTK-201806] - Either employees OR hyperFind
            can be specified.</li><li>[WTK-201807] - Invalid hyperfind id or qualifier:
            id/name.</li><li>[WTK-201808] - Either activities OR activityQuery can
            be specified.</li><li>[WTK-170000] - Invalid person number: personNumber.</li><li>[WTK-170001]
            - Invalid employee ID: id</li><li>[WFC-111206] - Please provide at least
            1 of id/qualifier in ref.</li><li>[WFA-000007] - Entity or entities not
            found. Type: activity. Name or names or ID or IDs: id.</li><li>[WFA-000007]
            - Entity or entities not found. Type: Activity Query. Name or names or
            ID or IDs: id.</li></ul>'
          content: {}
      x-codegen-request-body-name: body
  /v1/work/activity_totals:
    get:
      tags:
      - Activity Totals
      summary: Returns activity totals.
      description: This operation returns a list of activity totals for an employee
        over a specified timeframe.
      operationId: Retrieve Activity Totals
      parameters:
      - name: person_num
        in: query
        description: A unique identifier for a person. This is not an employee ID.
        required: true
        schema:
          type: string
      - name: from
        in: query
        description: The start date in ISO_LOCAL_DATE format (YYYY-MM-DD).
        required: true
        schema:
          type: string
      - name: to
        in: query
        description: The end date in ISO_LOCAL_DATE format (YYYY-MM-DD).
        required: true
        schema:
          type: string
      - name: timeframe_id
        in: query
        description: A symbolic identifier that represents a timeframe or a span of
          time.
        schema:
          type: string
          default: Range_Of_Dates
          enum:
          - Previous_Payperiod
          - Current_Payperiod
          - Next_Payperiod
          - Range_Of_Dates
      - name: total_rollup_type
        in: query
        description: The filtering criteria for activity totals.
        schema:
          type: string
          default: ALL
          enum:
          - ALL, SHIFT, TIMEITEM, DAILY, PERIOD_TO_DATE, RAW, ACTIVITY_EVENT
      - name: total_groupby_type
        in: query
        description: An enumeration of types available for grouping the activity totals
          records.
        schema:
          type: string
          default: ALL
          enum:
          - ALL, LOCATION_AND_JOB, COST_CENTER, LABOR_CATEGORY, PAYCODE, TIMEITEM_DETAIL,
            SEGMENT_DETAIL, ACTIVITY_SUMMARY
      - name: time_item_id
        in: query
        description: The ID of a time item.
        schema:
          type: string
      - name: context_date
        in: query
        description: The apply date used to filter activity totals when total_rollup_type
          = DAILY in ISO_LOCAL_DATE format (YYYY-MM-DD).
        schema:
          type: string
      - name: processed_segment_id
        in: query
        description: The ID of an activity processed segment.
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successfully retrieved a list of activity totals.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee Activity Total response'
        400:
          description: 'Bad Request: <ul><li>A list of employees with at least one
            employee in the list is required.</li><li>The start date must be in ISO_LOCAL_DATE
            format (YYYY-MM-DD).</li><li>The end date must be in ISO_LOCAL_DATE format
            (YYYY-MM-DD).</li></ul>'
          content: {}
  /v1/work/activity_totals/multi_read:
    post:
      tags:
      - Activity Totals
      summary: Returns activity totals.
      description: <p>This operation returns a list of activity totals for specified
        employees and activities over a specified timeframe.</p><br /><h2>Service
        limit</h2><p>A service limit constrains the number of activity totals and
        the number of activity totals grouped by time item details that can be processed
        in a single request.</p><ul><li>The <strong>Number of Activity Totals</strong>
        cannot exceed 150.</li><li>The <strong>Number of Activity Totals Grouped By
        Time Item Details</strong> cannot exceed 100.</li></ul><p><em><strong>Note:</strong>
        This service limit is enforced based on the <code>groupBy</code> request property.
        The <strong>Number of Activity Totals</strong> limit is enforced unless the
        <code>groupBy</code> property is set to <code>TIMEITEM_DETAIL</code>, in which
        case the <strong>Number of Activity Totals Grouped By Time Item Details</strong>
        limit is enforced.</em></p><p>Refer to the <strong>Docs > Service Limits</strong>
        topic for more information.</p>
      operationId: Retrieve Activity Totals for Multiple Employees
      requestBody:
        description: An object representing search criteria filter for Activity Totals.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity Total find criteria'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee Activity Total response'
        400:
          description: '<ul><li>[WTK-201806] - Either employees OR hyperFind can be
            specified</li><li>[WTK-201807] - Invalid hyperfind id or qualifier: {id}.</li><li>[WTK-201808]
            - Either activities OR activityQuery can be specified.</li><li>[WFA-000009]
            - Your request includes two or more of the following parameters: ids,
            qualifiers, refs. These parameters are mutually exclusive.</li><li>A list
            of employees with at least one employee in the list is required.</li></ul>'
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Activity Query. Name or names or ID or IDs: {id}.</li><li>[WFA-000007]
            - Entity or entities not found. Type: Activity. Name or names or ID or
            IDs: {id}.</li><li>[WFA-000007] - Entity or entities not found. Type:
            Symbolic Period. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
      x-codegen-request-body-name: body
  /v1/work/activity_transactions/multi_read:
    post:
      tags:
      - Activity Transactions
      summary: Returns activity transactions.
      description: <p>This operation returns a list of activity transactions for the
        specified activity and its child activities..</p><br /><p>The associated Access
        Control Point is WFA_WORK_INTEGRATION_API.</p>
      operationId: Retrieve Activity Transactions
      requestBody:
        description: v1.0.work-activity_transactions.post.multi_read.request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity Transactions Export criteria'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity Transactions Export Response'
        400:
          description: '<p>Bad Request:</p><ul><li>[WFA-000003] - You must specify
            the following parameter: activity.</li><li>[WFA-231101] - The startDate
            cannot be after the endDate.</li><li>[WFA-231102] - Invalid nextReadToken
            parameter.</li><li>[WFA-231100] - Invalid select option: option name.</li></ul>'
          content: {}
      x-codegen-request-body-name: body
  /v1/work/customers:
    get:
      tags:
      - Activity Customers
      summary: Returns all Customers, a list of Customers, or a particular Customer.
      description: This operation returns all Customers if no parameter is specified,
        all matching Customers if a name with wildcards is specified, or a particular
        Customer if a strict name is specified.
      operationId: Retrieve All Customers or by Name
      parameters:
      - name: name
        in: query
        description: The name of a Customer or a search phrase including a wildcard,
          which may return one or more Customers.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Customer. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
    post:
      tags:
      - Activity Customers
      summary: Creates a Customer.
      description: This operation creates a Customer.
      operationId: Create Customer
      requestBody:
        description: The Create Customer request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        400:
          description: '<ul><li>[WFA-000016] - The field name cannot contain any of
            the following characters:<>()/'';#.,$%=!.</li><li>[WFA-000016] - The field
            fullName cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-000015]
            - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000015]
            - FullName length exceeds N characters. Shorten the fullName.</li><li>[WFA-000015]
            - ContactName1 length exceeds N characters. Shorten the contactName1.</li><li>[WFA-000015]
            - ContactName2 length exceeds N characters. Shorten the contactName2.</li><li>[WFA-000015]
            - ContactName3 length exceeds N characters. Shorten the contactName3.</li><li>[WFA-000015]
            - Address1 length exceeds N characters. Shorten the address1.</li><li>[WFA-000015]
            - Address2 length exceeds N characters. Shorten the address2.</li><li>[WFA-000015]
            - Address3 length exceeds N characters. Shorten the address3.</li><li>[WFA-000015]
            - Phone1 length exceeds N characters. Shorten the phone1.</li><li>[WFA-000015]
            - Phone2 length exceeds N characters. Shorten the phone2.</li><li>[WFA-000015]
            - Phone3 length exceeds N characters. Shorten the phone3.</li><li>[WFA-000008]
            - The following parameter cannot be empty: name.</li><li>[WFA-000008]
            - The following parameter cannot be empty: fullName.</li><li>[WFA-119000]
            - The name is a duplicate of a name used previously - Customer name: {Name}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/customers/multi_create:
    post:
      tags:
      - Activity Customers
      summary: Creates one or more Customers.
      description: This operation creates one or more Customers.
      operationId: Create Customers
      requestBody:
        description: The Create Customers request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Customer'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/customers/multi_delete:
    post:
      tags:
      - Activity Customers
      summary: Deletes one or more Customers.
      description: This operation deletes one or more Customers by object references.
      operationId: Delete Customers
      requestBody:
        description: The Delete Customers request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRefs'
        required: true
      responses:
        204:
          description: Success.
          content: {}
        207:
          description: <ul><li>[WFA-000038] - Some of the entities were not deleted
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000039] - None of the entities were deleted because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/customers/multi_read:
    post:
      tags:
      - Activity Customers
      summary: Returns one or more Customers.
      description: This operation returns one or more Customers by object references.
      operationId: Retrieve Customers
      requestBody:
        description: The Retrieve Customers request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRefs'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        207:
          description: <ul><li>[WFA-000036] - Some of the entities were not exported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Customer. Name or names or ID or IDs: [{ids}].</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/customers/multi_update:
    post:
      tags:
      - Activity Customers
      summary: Updates one or more Customers.
      description: This operation updates one or more Customers.
      operationId: Update Customers
      requestBody:
        description: The Update Customers request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Customer'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/customers/{id}:
    get:
      tags:
      - Activity Customers
      summary: Returns a Customer.
      description: This operation returns a Customer by ID.
      operationId: Retrieve Customer by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a Customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Customer. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
    put:
      tags:
      - Activity Customers
      summary: Updates a Customer.
      description: This operation updates a Customer by ID.
      operationId: Update Customer by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a Customer.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: The Update Customer by ID request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        400:
          description: '<ul><li>[WFA-000016] - The field name cannot contain any of
            the following characters:<>()/'';#.,$%=!.</li><li>[WFA-000016] - The field
            fullName cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-000015]
            - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000015]
            - FullName length exceeds N characters. Shorten the fullName.</li><li>[WFA-000015]
            - ContactName1 length exceeds N characters. Shorten the contactName1.</li><li>[WFA-000015]
            - ContactName2 length exceeds N characters. Shorten the contactName2.</li><li>[WFA-000015]
            - ContactName3 length exceeds N characters. Shorten the contactName3.</li><li>[WFA-000015]
            - Address1 length exceeds N characters. Shorten the address1.</li><li>[WFA-000015]
            - Address2 length exceeds N characters. Shorten the address2.</li><li>[WFA-000015]
            - Address3 length exceeds N characters. Shorten the address3.</li><li>[WFA-000015]
            - Phone1 length exceeds N characters. Shorten the phone1.</li><li>[WFA-000015]
            - Phone2 length exceeds N characters. Shorten the phone2.</li><li>[WFA-000015]
            - Phone3 length exceeds N characters. Shorten the phone3.</li><li>[WFA-000008]
            - The following parameter cannot be empty: name.</li><li>[WFA-000008]
            - The following parameter cannot be empty: fullName.</li><li>[WFA-119000]
            - The name is a duplicate of a name used previously - Customer name: {Name}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Customer. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Activity Customers
      summary: Deletes a Customer.
      description: This operation deletes a Customer by ID.
      operationId: Delete Customer by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a Customer.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: Success.
          content: {}
        400:
          description: '<ul><li>[WFA-119004] - The customer is currently used by an
            Activity - Customer name: {Name}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Customer. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
  /v1/work/employee_activities/multi_read:
    post:
      tags:
      - Activity Assignments
      summary: Returns activities assigned to employees.
      description: <p>This operation returns the activities assigned to employees.</p><br
        /><p>The associated Access Control Point is WFA_WORK_INTEGRATION_API.</p>
      operationId: Retrieve Activities for Multiple Employees
      requestBody:
        description: The Retrieve Activities for Multiple Employees request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityEmployeeRefs'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeActivityAssignments'
        207:
          description: <ul><li>[WFA-000036] - Some of the entities were not exported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000037] - None of the entities were exported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/field_definitions:
    get:
      tags:
      - Field Definitions
      summary: Returns all Field Definitions or a particular Field Definitions by
        name.
      description: This operation returns all Field Definitions (active and inactive)
        if no parameter is specified or a particular Field Definition if a name is
        provided.
      operationId: Retrieve All Field Definitions by Name
      parameters:
      - name: name
        in: query
        description: The name of a Field Definition.
        schema:
          type: string
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivitiesFieldDefinition_PublicAPI'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Form Profile. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>'
          content: {}
    post:
      tags:
      - Field Definitions
      summary: Creates a Field Definition.
      description: This operation creates a Field Definition.
      operationId: Create Field Definition
      requestBody:
        description: The Create Field Definition request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivitiesFieldDefinition'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesFieldDefinition_PublicAPI'
        400:
          description: '<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten
            the name.</li><li>[WFA-000008] - The following parameter cannot be empty:
            name.</li><li>[WFA-000003] - You must specify the following parameter:
            name.</li><li>[WFA-000003] - You must specify the following parameter:
            fieldType.</li><li>[WFA-000003] - You must specify the following parameter:
            active.</li><li>[WFA-000016] - The field name cannot contain any of the
            following characters:<>()/'';#.,$%=!.</li><li>[WFA-000018] - The following
            parameter cannot be a negative number: fieldLength.</li><li>[WFA-000018]
            - The following parameter cannot be a negative number: scale.</li><li>[WFA-000018]
            - The following parameter cannot be a negative number: precision.</li><li>[WFA-000019]
            - The fieldLength cannot be greater than {limit}.</li><li>[WFA-000019]
            - The scale cannot be greater than {limit}.</li><li>[WFA-000019] - The
            precision cannot be greater than {limit}.</li><li>[WFA-122250] - The name
            is a duplicate of a name used previously - Field Definition name: {Name}.</li><li>[WFA-122252]
            - The system defined field definition cannot be updated or deleted - Field
            Definition name: {Name}.</li><li>[WFA-122253] - The field definition is
            currently used by an activity form - Field Definition name: {Name}</li><li>[WFA-122254]
            - The field definition is currently used by a result code - Field Definition
            name: {Name}.</li><li>[WFA-122255] - The field definition is currently
            used as an activity result - Field Definition name: {Name}.</li><li>[WFA-122256]
            - The field definition is currently used as an activity punch - Field
            Definition name: {Name}.</li><li>[WFA-122257] - The field definition cannot
            contain a value for the Field Length when the Data Type Id is Floating
            decimal or Numeric - Field Definition name: {Name}</li><li>[WFA-122258]
            - The field definition cannot contain a value for the Digits Left of Decimal
            when the Data Type Id is not Floating decimal - Field Definition name:
            {Name}</li><li>[WFA-122259] - The field definition cannot contain a value
            for the Digits Right of Decimal when the Data Type Id is not Floating
            decimal - Field Definition name: {Name}</li><li>[WFA-122266] - The field
            definition cannot be set as multi-select when Data Type ID is not Alpha
            numeric or Alpha numeric with slash with slash - Field Definition name:
            {Name}</li><li>[WFA-122267] - The field definition cannot have result
            codes assigned when Data Type ID is not Alpha numeric or Alpha numeric
            with slash with slash - Field Definition name: {Name}</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/field_definitions/multi_create:
    post:
      tags:
      - Field Definitions
      summary: Creates one or more Field Definitions.
      description: This operation creates one or more Field Definitions.
      operationId: Create Field Definitions
      requestBody:
        description: The Create Field Definitions request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ActivitiesFieldDefinition'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivitiesFieldDefinition_PublicAPI'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/field_definitions/multi_delete:
    post:
      tags:
      - Field Definitions
      summary: Deletes one or more Field Definitions.
      description: This operation deletes one or more Field Definitions.
      operationId: Delete Field Definitions
      requestBody:
        description: The Delete Field Definitions request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldDefinitionRefs'
        required: true
      responses:
        204:
          description: Success.
          content: {}
        207:
          description: <ul><li>[WFA-000038] - Some of the entities were not deleted
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000039] - None of the entities were deleted because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/field_definitions/multi_read:
    post:
      tags:
      - Field Definitions
      summary: Returns one or more Field Definitions.
      description: This operation returns one or more Field Definitions by object
        references.
      operationId: Retrieve Field Definitions
      requestBody:
        description: The Retrieve Field Definitions request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldDefinitionRefs'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivitiesFieldDefinition_PublicAPI'
        207:
          description: <ul><li>[WFA-000036] - Some of the entities were not exported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000037] - None of the entities were exported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/field_definitions/multi_update:
    post:
      tags:
      - Field Definitions
      summary: Updates one or more Field Definitions.
      description: This operation updates one or more Field Definitions.
      operationId: Update Field Definitions
      requestBody:
        description: The Update Field Definitions request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ActivitiesFieldDefinition'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivitiesFieldDefinition_PublicAPI'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/field_definitions/{id}:
    get:
      tags:
      - Field Definitions
      summary: Returns a Field Definition.
      description: This operation returns a Field Definition by ID.
      operationId: Retrieve Field Definition by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a Field Definition.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesFieldDefinition_PublicAPI'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Field Definition. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
    put:
      tags:
      - Field Definitions
      summary: Updates a Field Definition.
      description: This operation updates a Field Definition by ID.
      operationId: Update Field Definition by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a Field Definition.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: The Update Field Definition request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivitiesFieldDefinition'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesFieldDefinition_PublicAPI'
        400:
          description: '<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten
            the name.</li><li>[WFA-000008] - The following parameter cannot be empty:
            name.</li><li>[WFA-000003] - You must specify the following parameter:
            name.</li><li>[WFA-000003] - You must specify the following parameter:
            fieldType.</li><li>[WFA-000003] - You must specify the following parameter:
            active.</li><li>[WFA-000016] - The field name cannot contain any of the
            following characters:<>()/'';#.,$%=!.</li><li>[WFA-000018] - The following
            parameter cannot be a negative number: fieldLength.</li><li>[WFA-000018]
            - The following parameter cannot be a negative number: scale.</li><li>[WFA-000018]
            - The following parameter cannot be a negative number: precision.</li><li>[WFA-000019]
            - The fieldLength cannot be greater than {limit}.</li><li>[WFA-000019]
            - The scale cannot be greater than {limit}.</li><li>[WFA-000019] - The
            precision cannot be greater than {limit}.</li><li>[WFA-122250] - The name
            is a duplicate of a name used previously - Field Definition name: {Name}.</li><li>[WFA-122252]
            - The system defined field definition cannot be updated or deleted - Field
            Definition name: {Name}.</li><li>[WFA-122253] - The field definition is
            currently used by an activity form - Field Definition name: {Name}</li><li>[WFA-122254]
            - The field definition is currently used by a result code - Field Definition
            name: {Name}.</li><li>[WFA-122255] - The field definition is currently
            used as an activity result - Field Definition name: {Name}.</li><li>[WFA-122256]
            - The field definition is currently used as an activity punch - Field
            Definition name: {Name}.</li><li>[WFA-122257] - The field definition cannot
            contain a value for the Field Length when the Data Type Id is Floating
            decimal or Numeric - Field Definition name: {Name}</li><li>[WFA-122258]
            - The field definition cannot contain a value for the Digits Left of Decimal
            when the Data Type Id is not Floating decimal - Field Definition name:
            {Name}</li><li>[WFA-122259] - The field definition cannot contain a value
            for the Digits Right of Decimal when the Data Type Id is not Floating
            decimal - Field Definition name: {Name}</li><li>WFA-122263 - The system-defined
            field definition cannot be set as multi-select - Field Definition name:
            {Name}.</li><li>[WFA-122264] - The field type cannot be changed for the
            field definition that is currently being used as an activity result -
            Field Definition name: {Name}.</li><li>[WFA-122265] - The field type cannot
            be changed for the field definition that is currently being used by an
            activity form or an activity results template - Field Definition name:
            {Name}.</li><li>[WFA-122266] - The field definition cannot be set as multi-select
            when Data Type ID is not Alpha numeric or Alpha numeric with slash with
            slash - Field Definition name: {Name}</li><li>[WFA-122267] - The field
            definition cannot have result codes assigned when Data Type ID is not
            Alpha numeric or Alpha numeric with slash with slash - Field Definition
            name: {Name}</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Field Definition. Name or names or ID or IDs: [{ids}].</li></ul>'
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Field Definitions
      summary: Deletes a Field Definition.
      description: This operation deletes a Field Definition by ID.
      operationId: Delete Field Definition by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a Field Definition.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: Success.
          content: {}
        400:
          description: '<ul><li>[WFA-122252] - The system-defined field definition
            cannot be updated or deleted - Field Definition name: {Name}.</li><li>[WFA-122253]
            - The field definition is currently used by an activity form or an activity
            results template - Field Definition name: {Name}.</li><li>[WFA-122255]
            - The field definition is currently used as an activity result - Field
            Definition name: {Name}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Field Definition. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
  /v1/work/form_profiles:
    get:
      tags:
      - Activity Form Profiles
      summary: Returns all form profiles or a particular form profile by name.
      description: This operation returns all form profiles without associated forms
        if no parameter is specified or a particular form profile if a name is provided.
      operationId: Retrieve All Form Profiles or by Name
      parameters:
      - name: name
        in: query
        description: The name of a form profile.
        schema:
          type: string
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormProfile'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Form Profile. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>'
          content: {}
    post:
      tags:
      - Activity Form Profiles
      summary: Creates a form profile.
      description: This operation creates a form profile.
      operationId: Create Form Profile
      requestBody:
        description: The Create Form Profile request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormProfile'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormProfile'
        400:
          description: '<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten
            the name.</li><li>[WFA-000008] - The following parameter cannot be empty:
            name.</li><li>[WFA-123000] - The name is a duplicate of a name used previously
            - Form Profile name: {Name}.</li>[WFA-000015] - Description length exceeds
            N characters. Shorten the description.</li><li>[WFA-000016] - The field
            name cannot contain any of the following characters:<>_()/'';#.,$%=!.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/form_profiles/multi_create:
    post:
      tags:
      - Activity Form Profiles
      summary: Creates one or more form profiles.
      description: This operation creates one or more form profiles.
      operationId: Create Form Profiles
      requestBody:
        description: The Create Form Profiles request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FormProfile'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormProfile'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/form_profiles/multi_delete:
    post:
      tags:
      - Activity Form Profiles
      summary: Deletes one or more form profiles.
      description: This operation deletes one or more form profiles.
      operationId: Delete Form Profiles
      requestBody:
        description: The Delete Form Profiles request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormProfileRefs'
        required: true
      responses:
        204:
          description: Success.
          content: {}
        207:
          description: <ul><li>[WFA-000038] - Some of the entities were not deleted
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000039] - None of the entities were deleted because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/form_profiles/multi_read:
    post:
      tags:
      - Activity Form Profiles
      summary: Returns form profiles by object references.
      description: This operation returns form profiles according to the specified
        object references.
      operationId: Retrieve Form Profiles
      requestBody:
        description: The Retrieve Form Profiles request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormProfileRefs'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormProfile'
        207:
          description: <ul><li>[WFA-000036] - Some of the entities were not exported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000037] - None of the entities were exported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/form_profiles/multi_update:
    post:
      tags:
      - Activity Form Profiles
      summary: Updates one or more form profiles.
      description: This operation updates one or more form profiles.
      operationId: Update Form Profiles
      requestBody:
        description: The Update Form Profiles request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FormProfile'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormProfile'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/form_profiles/{id}:
    get:
      tags:
      - Activity Form Profiles
      summary: Returns a form profile.
      description: This operation returns a form profile by ID.
      operationId: Retrieve Form Profile by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a form profile.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormProfile'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Form Profile. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>'
          content: {}
    put:
      tags:
      - Activity Form Profiles
      summary: Updates a form profile.
      description: This operation updates a form profile by ID.
      operationId: Update Form Profile by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a form profile.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: The Update Form Profile by ID request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormProfile'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormProfile'
        400:
          description: '<ul><li>[WFA-000005] - ID from path does not match ID from
            request payload.</li><li>[WFA-000015] - Name length exceeds N characters.
            Shorten the name.</li><li>[WFA-000008] - The following parameter cannot
            be empty: name.</li><li>[WFA-123000] - The name is a duplicate of a name
            used previously - Form Profile name: {Name}.</li><li>[WFA-000015] - Description
            length exceeds N characters. Shorten the description.</li><li>[WFA-000016]
            - The field name cannot contain any of the following characters:<>_()/'';#.,$%=!.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Form Profile. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>'
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Activity Form Profiles
      summary: Deletes a form profile.
      description: This operation deletes a form profile by ID.
      operationId: Delete Form Profile by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a form profile.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: Success.
          content: {}
        400:
          description: '<ul><li>[WFA-122001] - The system-defined form profile cannot
            be deleted - Form Profile name: {Name}.</li><li>[WFA-122002] - The form
            profile is currently used by an activity profile - Form Profile name:
            {Name}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Form Profile. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>'
          content: {}
  /v1/work/forms:
    get:
      tags:
      - Activity Forms
      summary: Returns all Activity form or a particular form by name.
      description: This operation returns all Activity forms if no parameter is specified
        or a particular form if a name is provided.
      operationId: Retrieve All Activity Forms or by Name
      parameters:
      - name: name
        in: query
        description: The name of an Activity form.
        schema:
          type: string
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Form_PublicAPI'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Activity Form. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
    post:
      tags:
      - Activity Forms
      summary: Creates an Activity form.
      description: This operation creates and returns an Activity form.
      operationId: Create Activity Form
      requestBody:
        description: The Create Activity Form request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Form'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form_PublicAPI'
        400:
          description: '<ul><li>[WFA-000003] - You must specify the following parameter:
            formCode.</li><li>[WFA-000008] - The following parameter cannot be empty:
            formCode.</li><li>[WFA-000016] - The field formCode cannot contain any
            of the following characters:&_*%?:;=()/[]&bsol;|#@<>.</li><li>[WFA-122519]
            - The form code is invalid: {formCode}. A valid form code cannot contain
            more than {MaxLength} characters.</li><li>[WFA-122500] - The form code
            is a duplicate of a form code used previously - Form Code: {formCode}.</li><li>[WFA-122502]
            - The form code is invalid: {formCode}. The range between 90000 and 99999
            is reserved for system-defined forms.</li><li>[WFA-000003] - You must
            specify the following parameter: description.</li><li>[WFA-000008] - The
            following parameter cannot be empty: description.</li><li>[WFA-122507]
            - The form description is invalid. A valid form description cannot contain
            more than 255 characters.</li><li>[WFA-000003] - You must specify the
            following parameter: formType.</li><li>[WFA-000003] - You must specify
            the following parameter: verifyBiometric.</li><li>[WFA-122516] - The form
            time-out is required.</li><li>[WFA-122508] - The form time-out is invalid:
            {timeOut}. A valid form time-out value must be an integer between {MinValue}
            and {MaxValue}.</li><li>[WFA-000003] - You must specify the following
            parameter: fieldDefinition.</li><li>[WFA-122514] - The field definition
            is a duplicate for this form - Field Definition name: {name}.</li><li>[WFA-000003]
            - You must specify the following parameter: validationType.</li><li>[WFA-000003]
            - You must specify the following parameter: entryType.</li><li>[WFA-000003]
            - You must specify the following parameter: fieldType.</li><li>[WFA-000003]
            - You must specify the following parameter: inputSourceType.</li><li>[WFA-000003]
            - You must specify the following parameter: offline.</li><li>[WFA-000006]
            - The following object reference is invalid: localePolicy.</li><li>[WFA-122506]
            - The form description is required.</li><li>[WFA-122509] - The form type
            is unknown.</li><li>[WFA-122513] - The form biometric verification value
            is invalid.</li><li>[WFA-122750] - The step prompt is required.</li><li>[WFA-122751]
            - The step prompt is invalid: {StepPrompt}. A valid step prompt cannot
            contain more than {MaxChars} characters.</li><li>[WFA-122760] - The step
            prompt is invalid: {StepPrompt}. A valid step prompt cannot contain any
            of the following characters:{ForbiddenCharacters}</li><li>[WFA-122759]
            - {StepPrompt} - Step Length is required for the Field Definition.</li><li>[WFA-122755]
            - {StepPrompt} - Step Length is invalid: {StepLength}. A valid length
            is a number between 1 and {MaxLength}.</li><li>[WFA-122756] - {StepPrompt}
            - Step Length is not allowed for the Field Definition.</li><li>[WFA-122757]
            - {StepPrompt} - Step Digits left of the decimal separator is not allowed
            for this Field Definition.</li><li>[WFA-122758] - {StepPrompt} - Step
            Digits right of the decimal separator is not allowed for this Field Definition.</li><li>[WFA-122752]
            - {StepPrompt} - Step Default Value is invalid: {StepDefault}. A valid
            default value cannot contain more than {StepLength} characters.</li><li>[WFA-122761]
            - {StepPrompt} - Step Default Value is invalid: {StepDefault}. A valid
            default value cannot contain any of the following characters:{ForbiddenCharacters}</li><li>[WFA-122753]
            - {StepPrompt} - {Value} is invalid. The value cannot contain more than
            {MaxCount} digits.</li><li>[WFA-122754] - {StepPrompt} - {Value} is invalid.
            Digits Right of Decimal value cannot contain more than {MaxCount} digits.</li><li>[WFA-216006]
            - {stepPrompt} - Property {paramName} is not supported for a field definition.
            You can omit or set default value.</li><li>[WFA-122764] - {StepPrompt}
            - The Digits left of the decimal separator must be in the range between
            {MinValue} and {MaxValue}.</li><li>[WFA-122765] - {StepPrompt} - The Digits
            right of the decimal separator must be in the range between {MinValue}
            and {MaxValue}.</li><li>[WFA-216010] - {stepPrompt} - Maximum Value must
            be greater or equal to Minimum Value.</li><li>[WFA-216011] - {stepPrompt}
            - Property {paramName} is not supported for a field definition.</li><li>[WFA-122501]
            - The form code is required.</li><li>[WFA-216013] - Non-result type field
            definition {fieldDefinition} cannot be assigned to a step.</li><li>[WFA-216014]
            - Result type field definition {fieldDefinition} cannot be assigned to
            a step.</li><li>[WFA-216015] - Field definition {fieldDefinition} is not
            compatible with form type {formType}.</li><li>[WFA-216016] - {stepPrompt}
            - Property {paramName} is not supported for a control step.</li><li>[WFA-216017]
            - {stepPrompt} - Property {paramName} is not supported for a control step.
            You can omit or set default value.</li><li>[WFA-216017] - {stepPrompt}
            - Property {paramName} is not supported for a control step. You can omit
            or set default value.</li><li>[WFA-216018] - Offline form cannot contain
            control step: {stepPrompt}.</li><li>[WFA-216022] - Control type {controlType}
            is not compatible with form type {formType}.</li><li>[WFA-216023] - The
            following field definitions/controls are mutually exclusive: {entities}.</li><li>[WFA-216023]
            - The following field definitions/controls are mutually exclusive: {entities}.</li><li>[WFA-216024]
            - {dependentEntity} cannot be added without {entities}.</li><li>[WFA-216025]
            - The following control types cannot be added to Form several times: {controlType}.</li><li>[WFA-216026]
            - One of the following items is required to be added for this form type:
            {entities}.</li><li>[WFA-216028] - At least one of the following items
            is required: {entities} or any other result-type Field Definitions.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Form. Name or names or ID or IDs: [{id}].</li></ul>'
          content: {}
      x-codegen-request-body-name: body
  /v1/work/forms/multi_create:
    post:
      tags:
      - Activity Forms
      summary: Creates and returns Activity forms.
      description: This operation creates and returns Activity forms.
      operationId: Create Activity Forms
      requestBody:
        description: The Create Activity Forms request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Form'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Form_PartialPublicAPI'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/forms/multi_delete:
    post:
      tags:
      - Activity Forms
      summary: Deletes Activity forms.
      description: This operation deletes Activity forms.
      operationId: Delete Activity Forms
      requestBody:
        description: The Retrieve Activity Forms request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormRefs'
        required: true
      responses:
        204:
          description: Success.
          content: {}
        207:
          description: <ul><li>[WFA-000038] - Some of the entities were not deleted
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000039] - None of the entities were deleted because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/forms/multi_read:
    post:
      tags:
      - Activity Forms
      summary: Returns Activity forms.
      description: This operation returns a list of Activity forms by object references.
      operationId: Retrieve Activity Forms
      requestBody:
        description: The Retrieve Activity Forms request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormRefs'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Form_PublicAPI'
        207:
          description: <ul><li>[WFA-000036] - Some of the entities were not exported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000037] - None of the entities were exported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/forms/multi_update:
    post:
      tags:
      - Activity Forms
      summary: Updates and returns Activity forms.
      description: This operation updates and returns Activity forms.
      operationId: Update Activity Forms
      requestBody:
        description: The Update Activity Forms request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Form'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Form_PartialPublicAPI'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/forms/setup/control_types:
    get:
      tags:
      - Activity Form Resources
      summary: Returns all control types.
      description: This operation returns all control types or a single applicable
        control type by ID.
      operationId: Retrieve All Control Types or Only Applicable Type
      parameters:
      - name: formtypeid
        in: query
        description: The ID of a form type.
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/forms/setup/entry_types:
    get:
      tags:
      - Activity Form Resources
      summary: Returns all entry types.
      description: This operation returns all entry types.
      operationId: Retrieve All Entry Types
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/forms/setup/form_types:
    get:
      tags:
      - Activity Form Resources
      summary: Returns all form types complete statuses.
      description: This operation returns all form types complete statuses.
      operationId: Retrieve All Form Types
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/forms/setup/input_source_types:
    get:
      tags:
      - Activity Form Resources
      summary: Returns all input source types.
      description: This operation returns all input source types.
      operationId: Retrieve All Input Source Types
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/forms/setup/offline_forms:
    get:
      tags:
      - Activity Form Resources
      summary: Returns all offline forms.
      description: This operation returns all offline forms.
      operationId: Retrieve Offline Forms
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Form'
  /v1/work/forms/setup/validation_types:
    get:
      tags:
      - Activity Form Resources
      summary: Returns all validation types.
      description: This operation returns all validation types.
      operationId: Retrieve All Validation Types
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/forms/{id}:
    get:
      tags:
      - Activity Forms
      summary: Returns an Activity form.
      description: This operation returns an Activity form by ID.
      operationId: Retrieve Activity Form by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of an Activity form.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form_PublicAPI'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Activity Form. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
    put:
      tags:
      - Activity Forms
      summary: Updates an Activity form.
      description: This operation updates and returns an Activity form by ID.
      operationId: Update Activity Form by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of an Activity form.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: The Update Activity Form by ID request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Form'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form_PublicAPI'
        400:
          description: '<ul><li>[WFA-000003] - You must specify the following parameter:
            id.</li><li>[WFA-000003] - You must specify the following parameter: version.</li><li>[WFA-000005]
            - ID from path does not match ID from request payload.</li><li>[WFA-000003]
            - You must specify the following parameter: formCode.</li><li>[WFA-000008]
            - The following parameter cannot be empty: formCode.</li><li>[WFA-000016]
            - The field formCode cannot contain any of the following characters:&_*%?:;=()/[]&bsol;|#@<>.</li><li>[WFA-122519]
            - The form code is invalid: {formCode}. A valid form code cannot contain
            more than {MaxLength} characters.</li><li>[WFA-122500] - The form code
            is a duplicate of a form code used previously - Form Code: {formCode}.</li><li>[WFA-122502]
            - The form code is invalid: {formCode}. The range between 90000 and 99999
            is reserved for system-defined forms.</li><li>[WFA-000003] - You must
            specify the following parameter: description.</li><li>[WFA-000008] - The
            following parameter cannot be empty: description.</li><li>[WFA-122507]
            - The form description is invalid. A valid form description cannot contain
            more than 255 characters.</li><li>[WFA-000003] - You must specify the
            following parameter: formType.</li><li>[WFA-000003] - You must specify
            the following parameter: verifyBiometric.</li><li>[WFA-122516] - The form
            time-out is required.</li><li>[WFA-122508] - The form time-out is invalid:
            {timeOut}. A valid form time-out value must be an integer between {MinValue}
            and {MaxValue}.</li><li>[WFA-000003] - You must specify the following
            parameter: fieldDefinition.</li><li>[WFA-122514] - The field definition
            is a duplicate for this form - Field Definition name: {name}.</li><li>[WFA-000003]
            - You must specify the following parameter: validationType.</li><li>[WFA-000003]
            - You must specify the following parameter: entryType.</li><li>[WFA-000003]
            - You must specify the following parameter: fieldType.</li><li>[WFA-000003]
            - You must specify the following parameter: inputSourceType.</li><li>[WFA-122503]
            - The system-defined form cannot be modified - Form Code: {TransactionCode}.</li><li>[WFA-122511]
            - The form code cannot be updated.</li><li>[WFA-000003] - You must specify
            the following parameter: offline.</li><li>[WFA-000006] - The following
            object reference is invalid: localePolicy.</li><li>[WFA-122506] - The
            form description is required.</li><li>[WFA-122509] - The form type is
            unknown.</li><li>[WFA-122513] - The form biometric verification value
            is invalid.</li><li>[WFA-122518] - The form biometric verification value
            is required.</li><li>[WFA-122750] - The step prompt is required.</li><li>[WFA-122751]
            - The step prompt is invalid: {StepPrompt}. A valid step prompt cannot
            contain more than {MaxChars} characters.</li><li>[WFA-122760] - The step
            prompt is invalid: {StepPrompt}. A valid step prompt cannot contain any
            of the following characters:{ForbiddenCharacters}</li><li>[WFA-122759]
            - {StepPrompt} - Step Length is required for the Field Definition.</li><li>[WFA-122755]
            - {StepPrompt} - Step Length is invalid: {StepLength}. A valid length
            is a number between 1 and {MaxLength}.</li><li>[WFA-122756] - {StepPrompt}
            - Step Length is not allowed for the Field Definition.</li><li>[WFA-122757]
            - {StepPrompt} - Step Digits left of the decimal separator is not allowed
            for this Field Definition.</li><li>[WFA-122758] - {StepPrompt} - Step
            Digits right of the decimal separator is not allowed for this Field Definition.</li><li>[WFA-122752]
            - {StepPrompt} - Step Default Value is invalid: {StepDefault}. A valid
            default value cannot contain more than {StepLength} characters.</li><li>[WFA-122761]
            - {StepPrompt} - Step Default Value is invalid: {StepDefault}. A valid
            default value cannot contain any of the following characters:{ForbiddenCharacters}</li><li>[WFA-122753]
            - {StepPrompt} - {Value} is invalid. The value cannot contain more than
            {MaxCount} digits.</li><li>[WFA-122754] - {StepPrompt} - {Value} is invalid.
            Digits Right of Decimal value cannot contain more than {MaxCount} digits.</li><li>[WFA-216006]
            - {stepPrompt} - Property {paramName} is not supported for a field definition.
            You can omit or set default value.</li><li>[WFA-122764] - {StepPrompt}
            - The Digits left of the decimal separator must be in the range between
            {MinValue} and {MaxValue}.</li><li>[WFA-122765] - {StepPrompt} - The Digits
            right of the decimal separator must be in the range between {MinValue}
            and {MaxValue}.</li><li>[WFA-216010] - {stepPrompt} - Maximum Value must
            be greater or equal to Minimum Value.</li><li>[WFA-216011] - {stepPrompt}
            - Property {paramName} is not supported for a field definition.</li><li>[WFA-122501]
            - The form code is required.</li><li>[WFA-216005] - Form offline property
            cannot be changed.</li><li>[WFA-216013] - Non-result type field definition
            {fieldDefinition} cannot be assigned to a step.</li><li>[WFA-216014] -
            Result type field definition {fieldDefinition} cannot be assigned to a
            step.</li><li>[WFA-216015] - Field definition {fieldDefinition} is not
            compatible with form type {formType}.</li><li>[WFA-216016] - {stepPrompt}
            - Property {paramName} is not supported for a control step.</li><li>[WFA-216017]
            - {stepPrompt} - Property {paramName} is not supported for a control step.
            You can omit or set default value.</li><li>[WFA-216017] - {stepPrompt}
            - Property {paramName} is not supported for a control step. You can omit
            or set default value.</li><li>[WFA-216018] - Offline form cannot contain
            control step: {stepPrompt}.</li><li>[WFA-216019] - Form type cannot be
            changed after form creation. Form: {formName}, form Type : {formType}.</li><li>[WFA-216022]
            - Control type {controlType} is not compatible with form type {formType}.</li><li>[WFA-216023]
            - The following field definitions/controls are mutually exclusive: {entities}.</li><li>[WFA-216024]
            - {dependentEntity} cannot be added without {entities}.</li><li>[WFA-216025]
            - The following control types cannot be added to Form several times: {controlType}.</li><li>[WFA-216026]
            - One of the following items is required to be added for this form type:
            {entities}.</li><li>[WFA-216028] - At least one of the following items
            is required: {entities} or any other result-type Field Definitions.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Form. Name or names or ID or IDs: [{id}].</li></ul>'
          content: {}
        409:
          description: <ul><li>[WFA-000022] - The data was modified by another user
            while you were working on this page. Your edits can not be saved. Please
            refresh your data and try again.</li></ul>
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Activity Forms
      summary: Deletes an Activity form.
      description: This operation deletes an Activity form by ID.
      operationId: Delete Activity Form by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of an Activity form.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: Success.
          content: {}
        400:
          description: '<ul><li>[WFA-122504] - The form is currently used as an activity
            punch - Form Code: {formCode}.</li><li>[WFA-122505] - The form is currently
            used by a form profile - Form Code: {formCode}.</li><li>[WFA-122503] -
            The system-defined form cannot be modified - Form Code: {formCode}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Form. Name or names or ID or IDs: [{id}/{qualifier}].</li><li>[WFA-122504]
            - The form is currently used as an activity punch - Form Code: {formCode}.</li><li>[WFA-122505]
            - The form is currently used by a form profile - Form Code: {formCode}.</li><li>[WFA-122503]
            - The system-defined form cannot be modified - Form Code: {formCode}.</li></ul>'
          content: {}
  /v1/work/pay_code_actions:
    get:
      tags:
      - Paycode Actions
      summary: Returns all paycode actions or one by name.
      description: This operation returns a list of all paycode actions or returns
        a single paycode action by name.
      operationId: Retrieve All Paycode Actions or by Name
      parameters:
      - name: name
        in: query
        description: The name of a paycode action.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayCodeAction'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            PayCodeAction. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
    post:
      tags:
      - Paycode Actions
      summary: Creates a paycode action.
      description: This operation creates a paycode action.
      operationId: Create Paycode Action
      requestBody:
        description: The Create Paycode Action request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayCodeAction'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayCodeAction'
        400:
          description: '<ul><li>[WFA-000003] - You must specify the following parameter:
            {paramName}.</li><li>[WFA-000008] - The following parameter cannot be
            empty: {paramName}.</li><li>[WFA-000027] - The two instances of the following
            parameter must have the same value: {paramName}.</li><li>[WFA-000008]
            - The following parameter cannot be empty: name.</li><li>[WFA-000015]
            - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000016]
            - The field name cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-000015]
            - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008]
            - The following parameter cannot be empty: name.</li><li>WFA-000003 -
            You must specify the following parameter: name.</li><li>[WFA-000016] -
            The field name cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>WFA-000018
            - The following parameter cannot be a negative number: level.</li><li>WFA-000018
            - The following parameter cannot be a negative number: sequence.</li><li>WFA-000004
            - The following parameter must be null: header.id.</li><li>WFA-212009
            - You cannot add a level 2 - 4 activity under a pre-defined activity.</li><li>WFA-212011
            - Activity cannot contain labor category entry lists with the same labor
            category. Labor Category: {paramName}, Labor Category Entry List: {paramName}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/pay_code_actions/multi_create:
    post:
      tags:
      - Paycode Actions
      summary: Creates one or more Paycode Actions.
      description: This operation creates one or more Paycode Actions.
      operationId: Create Paycode Actions
      requestBody:
        description: The Create Paycode Actions request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PayCodeAction'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayCodeAction'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/pay_code_actions/multi_delete:
    post:
      tags:
      - Paycode Actions
      summary: Deletes one or more Paycode Actions.
      description: This operation deletes one or more Paycode Actions by object references.
      operationId: Delete Paycode Actions
      requestBody:
        description: The Delete Paycode Actions request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayCodeActionRefs'
        required: true
      responses:
        204:
          description: Success.
          content: {}
        207:
          description: <ul><li>[WFA-000038] - Some of the entities were not deleted
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000039] - None of the entities were deleted because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>.
          content: {}
      x-codegen-request-body-name: body
  /v1/work/pay_code_actions/multi_read:
    post:
      tags:
      - Paycode Actions
      summary: Returns paycode actions.
      description: This operation returns paycode actions by object references.
      operationId: Retrieve Paycode Actions
      requestBody:
        description: The Retrieve Paycode Actions request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayCodeActionRefs'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayCodeAction'
        207:
          description: <ul><li>[WFA-000036] - Some of the entities were not exported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000037] - None of the entities were exported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/pay_code_actions/multi_update:
    post:
      tags:
      - Paycode Actions
      summary: Updates one or more Paycode Actions.
      description: This operation updates one or more Paycode Actions.
      operationId: Update Paycode Actions
      requestBody:
        description: The Update Paycode Actions request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PayCodeAction'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PayCodeAction'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/pay_code_actions/{id}:
    get:
      tags:
      - Paycode Actions
      summary: Returns a paycode action.
      description: This operation returns a paycode action by ID.
      operationId: Retrieve Paycode Action by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a paycode action.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayCodeAction'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            PayCodeAction. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
    put:
      tags:
      - Paycode Actions
      summary: Updates a Paycode Action.
      description: This operation updates a Paycode Action by ID.
      operationId: Update Paycode Action by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a PayCodeAction.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: The Update Paycode Action by ID request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayCodeAction'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayCodeAction'
        400:
          description: '<ul><li>[WFA-000003] - You must specify the following parameter:
            {paramName}.</li><li>[WFA-000008] - The following parameter cannot be
            empty: {paramName}.</li><li>[WFA-000027] - The two instances of the following
            parameter must have the same value: {paramName}.</li><li>[WFA-000008]
            - The following parameter cannot be empty: name.</li><li>[WFA-000015]
            - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000016]
            - The field name cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-000015]
            - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008]
            - The following parameter cannot be empty: name.</li><li>WFA-000003 -
            You must specify the following parameter: name.</li><li>[WFA-000016] -
            The field name cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>WFA-000018
            - The following parameter cannot be a negative number: level.</li><li>WFA-000018
            - The following parameter cannot be a negative number: sequence.</li><li>WFA-000004
            - The following parameter must be null: header.id.</li><li>WFA-212009
            - You cannot add a level 2 - 4 activity under a pre-defined activity.</li><li>WFA-212011
            - Activity cannot contain labor category entry lists with the same labor
            category. Labor Category: {paramName}, Labor Category Entry List: {paramName}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            PayCodeAction. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Paycode Actions
      summary: Deletes a Paycode Action.
      description: This operation deletes a Paycode Action by ID.
      operationId: Delete Paycode Action by ID
      parameters:
      - name: id
        in: path
        description: The ID of a Paycode Action.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: Success.
          content: {}
        400:
          description: '<ul><li>[WFA-000003] - You must specify the following parameter:
            {paramName}.</li><li>[WFA-000008] - The following parameter cannot be
            empty: {paramName}.</li><li>[WFA-000027] - The two instances of the following
            parameter must have the same value: {paramName}.</li><li>[WFA-000008]
            - The following parameter cannot be empty: name.</li><li>[WFA-000015]
            - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000016]
            - The field name cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-000015]
            - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008]
            - The following parameter cannot be empty: name.</li><li>WFA-000003 -
            You must specify the following parameter: name.</li><li>[WFA-000016] -
            The field name cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>WFA-000018
            - The following parameter cannot be a negative number: level.</li><li>WFA-000018
            - The following parameter cannot be a negative number: sequence.</li><li>WFA-000004
            - The following parameter must be null: header.id.</li><li>WFA-212009
            - You cannot add a level 2 - 4 activity under a pre-defined activity.</li><li>WFA-212011
            - Activity cannot contain labor category entry lists with the same labor
            category. Labor Category: {paramName}, Labor Category Entry List: {paramName}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            PayCodeAction. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
  /v1/work/queries:
    get:
      tags:
      - Activity Queries
      summary: Returns all Activity queries or a particular query by name.
      description: This operation returns all Activity queries if no parameter is
        specified or a particular query if a name is provided.
      operationId: Retrieve All Activity Queries or by Name
      parameters:
      - name: name
        in: query
        description: The name of an Activity query.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Query_PublicAPI'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Query. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
    post:
      tags:
      - Activity Queries
      summary: Creates an Activity query.
      description: This operation creates an Activity query.
      operationId: Create Activity Query
      requestBody:
        description: The Create Activity Query request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query_PublicAPI'
        400:
          description: '<ul><li>[WFA-000008] - The following parameter cannot be empty:
            name.</li><li>[WFA-000015] - Name length exceeds N characters. Shorten
            the name.</li><li>[WFA-000016] - The field name cannot contain any of
            the following characters:<>()/'';#.,$%=!.</li><li>[WFA-180001] - The name
            you specified {queryName} already exists. Enter a unique name.</li><li>[WFA-213000]
            - Your query cannot use more than two time periods. Enter a valid number
            of time periods.</li><li>[WFA-213001] - Your query cannot have more than
            one time period for {dateRangeType}. Select a different activity date
            for each time period.</li><li>[WFA-213002] - The time period for {dateRangeType}
            has invalid start or end day values. Modify the time period so day values
            are numeric and start day is before or the same as end day.</li><li>[WFA-213003]
            - The activity name {nameSearch} cannot contain more than 3 activity level
            delimiters (/).  Enter a valid activity name.</li><li>[WFA-213004] - You
            cannot assign an Organization Set of the type Manager Organizational Groups
            to an activity query. Organizational Set name or ID: {name/id}.</li><li>[WFA-213006]
            - The time period for {dateRangeType} has invalid start or end day values.
            Modify the time period so day values are not allowed to be more then 999999.</li><li>[WFA-213007]
            - {paramName} cannot be selected if one of the following fields is specified:
            {paramNames}</li><li>[WFA-213009] - The field {paramName} is not applicable
            for queries with the following type: {queryType}.</li><li>[WFA-213010]
            - The number of activities exceeds the following service limit: {limit}.</li><li>[WFA-213011]
            - The system-defined activity cannot be assigned to a query. Activity:
            {combinedName}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/queries/multi_create:
    post:
      tags:
      - Activity Queries
      summary: Creates one or more Activity queries.
      description: This operation creates one or more Activity queries.
      operationId: Create Activity Queries
      requestBody:
        description: The Create Activity Queries request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Query'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Query_PartialPublicAPI'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/queries/multi_delete:
    post:
      tags:
      - Activity Queries
      summary: Deletes one or more Activity queries.
      description: This operation deletes one or more Activity queries.
      operationId: Delete Activity Queries
      requestBody:
        description: The Delete Activity Queries request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRefs'
        required: true
      responses:
        204:
          description: Success.
          content: {}
        207:
          description: <ul><li>[WFA-000038] - Some of the entities were not deleted
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000039] - None of the entities were deleted because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/queries/multi_read:
    post:
      tags:
      - Activity Queries
      summary: Returns one or more Activity queries by object references.
      description: This operation returns one or more Activity queries by object references.
      operationId: Retrieve Activity Queries
      requestBody:
        description: The Retrieve Activity Queries request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRefs'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Query_PublicAPI'
        207:
          description: <ul><li>[WFA-000036] - Some of the entities were not exported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000037] - None of the entities were exported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/queries/multi_update:
    post:
      tags:
      - Activity Queries
      summary: Updates one or more Activity queries.
      description: This operation updates one or more Activity queries.
      operationId: Update Activity Queries
      requestBody:
        description: The Update Activity Queries request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Query'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Query_PartialPublicAPI'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/queries/setup/date_types:
    get:
      tags:
      - Activity Query Resources
      summary: Returns all Activity query date range date types.
      description: This operation returns all Activity query date range date types.
      operationId: Retrieve All Activity Query Date Range Date Types
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/queries/setup/query_types:
    get:
      tags:
      - Activity Query Resources
      summary: Returns all query types.
      description: This operation returns all query types.
      operationId: Retrieve All Query Types
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/queries/{id}:
    get:
      tags:
      - Activity Queries
      summary: Returns an Activity query.
      description: This operation returns an Activity query by ID.
      operationId: Retrieve Activity Query by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of an Activity query.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query_PublicAPI'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Query. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
    put:
      tags:
      - Activity Queries
      summary: Updates an Activity query.
      description: This operation updates an Activity query by ID.
      operationId: Update Activity Query by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of an Activity query.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: The Update Activity Query by ID request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query_PublicAPI'
        400:
          description: '<ul><li>[WFA-000008] - The following parameter cannot be empty:
            name.</li><li>[WFA-000015] - Name length exceeds N characters. Shorten
            the name.</li><li>[WFA-000016] - The field name cannot contain any of
            the following characters:<>()/'';#.,$%=!.</li><li>[WFA-180001] - The name
            you specified {queryName} already exists. Enter a unique name.</li><li>[WFA-213000]
            - Your query cannot use more than two time periods. Enter a valid number
            of time periods.</li><li>[WFA-213001] - Your query cannot have more than
            one time period for {dateRangeType}. Select a different activity date
            for each time period.</li><li>[WFA-213002] - The time period for {dateRangeType}
            has invalid start or end day values. Modify the time period so day values
            are numeric and start day is before or the same as end day.</li><li>[WFA-213003]
            - The activity name {nameSearch} cannot contain more than 3 activity level
            delimiters (/).  Enter a valid activity name.</li><li>[WFA-213004] - You
            cannot assign an Organization Set of the type Manager Organizational Groups
            to an activity query. Organizational Set name or ID: {name/id}.</li><li>[WFA-213006]
            - The time period for {dateRangeType} has invalid start or end day values.
            Modify the time period so day values are not allowed to be more then 999999.</li><li>[WFA-213007]
            - {paramName} cannot be selected if one of the following fields is specified:
            {paramNames}</li><li>[WFA-213008] - The query type cannot be changed after
            a query is created using that type. Query: {queryName}; query type: {queryType}.</li><li>[WFA-213009]
            - The field {paramName} is not applicable for queries with the following
            type: {queryType}.</li><li>[WFA-213010] - The number of activities exceeds
            the following service limit: {limit}.</li><li>[WFA-213011] - The system-defined
            activity cannot be assigned to a query. Activity: {combinedName}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Query. Name or names or ID or IDs: [{refs}].</li></ul>'
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Activity Queries
      summary: Deletes an Activity query.
      description: This operation deletes an Activity query by ID.
      operationId: Delete Activity Query by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of an Activity query.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: Success.
          content: {}
        400:
          description: <ul><li>[WFA-180016] - The query {queryName} is a system-defined
            query and cannot be deleted.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Query. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
  /v1/work/query_profiles:
    get:
      tags:
      - Activity Query Profiles
      summary: Returns all Activity query profiles or a particular Activity query
        profile by name.
      description: This operation returns all Activity query profiles if no parameter
        is specified or a particular Activity query profile if a name is provided.
      operationId: Retrieve All Activity Query Profiles by Name
      parameters:
      - name: name
        in: query
        description: The unique name of an Activity query profile.
        schema:
          type: string
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QueryProfile'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Query Profile. Name or names or ID or IDs: {name}.</li></ul>'
          content: {}
    post:
      tags:
      - Activity Query Profiles
      summary: Creates an Activity query profile.
      description: This operation creates an Activity query profile.
      operationId: Create Activity Query Profile
      requestBody:
        description: The Create Activity Query Profile request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryProfile'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryProfile'
        400:
          description: '<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten
            the name.</li><li>[WFA-000008] - The following parameter cannot be empty:
            name.</li><li>[WFA-000016] - The field name cannot contain any of the
            following characters:<>()/'';#.,$%=!.</li><li>[WFA-000015] - Description
            length exceeds N characters. Shorten the description.</li><li>[WFA-000006]
            - The following object reference is invalid: query.</li><li>[WFA-000007]
            - Entity or entities not found. Type: Activity Query. Name or names or
            ID or IDs: [query id or name].</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/query_profiles/multi_create:
    post:
      tags:
      - Activity Query Profiles
      summary: Creates one or more Activity query profiles.
      description: This operation creates one or more Activity query profiles.
      operationId: Create Activity Query Profiles
      requestBody:
        description: The Create Activity Query Profiles request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/QueryProfile'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QueryProfile'
        207:
          description: <ul><li>[WFA-000036] - Some of the entities were not exported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/query_profiles/multi_delete:
    post:
      tags:
      - Activity Query Profiles
      summary: Deletes one or more Activity query profiles.
      description: This operation deletes one or more Activity query profiles by object
        references.
      operationId: Delete Activity Query Profiles
      requestBody:
        description: The Delete Activity Query Profiles request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryProfileRefs'
        required: true
      responses:
        204:
          description: Success.
          content: {}
        207:
          description: <ul><li>[WFA-000036] - Some of the entities were not exported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000039] - None of the entities were deleted because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/query_profiles/multi_read:
    post:
      tags:
      - Activity Query Profiles
      summary: Returns one or more Activity query profiles.
      description: This operation returns one or more Activity query profiles by object
        references.
      operationId: Retrieve Activity Query Profiles
      requestBody:
        description: The Retrieve Activity Query Profiles request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryProfileRefs'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QueryProfile'
        207:
          description: <ul><li>[WFA-000036] - Some of the entities were not exported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000037] - None of the entities were exported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/query_profiles/multi_update:
    post:
      tags:
      - Activity Query Profiles
      summary: Updates one or more Activity query profiles.
      description: This operation updates one or more Activity query profiles.
      operationId: Update Activity Query Profiles
      requestBody:
        description: The Update Activity Query Profiles request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/QueryProfile'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QueryProfile'
        207:
          description: <ul><li>[WFA-000036] - Some of the entities were not exported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/query_profiles/{id}:
    get:
      tags:
      - Activity Query Profiles
      summary: Returns an Activity query profile.
      description: This operation returns an Activity query profile by ID.
      operationId: Retrieve Activity Query Profile by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of an Activity query profile.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryProfile'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Query Profile. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
    put:
      tags:
      - Activity Query Profiles
      summary: Updates an Activity query profile.
      description: This operation updates an Activity query profile by ID.
      operationId: Update Activity Query Profile by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of an Activity query profile.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: The Update Activity Query Profile by ID request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryProfile'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryProfile'
        400:
          description: '<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten
            the name.</li><li>[WFA-000008] - The following parameter cannot be empty:
            name.</li><li>[WFA-000016] - The field name cannot contain any of the
            following characters:<>()/'';#.,$%=!.</li><li>[WFA-000015] - Description
            length exceeds N characters. Shorten the description.</li><li>[WFA-000006]
            - The following object reference is invalid: query.</li><li>[WFA-000007]
            - Entity or entities not found. Type: Activity Query. Name or names or
            ID or IDs: [query id or name].</li><li>[WFA-000007] - Entity or entities
            not found. Type: Query Profile. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Query Profile. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Activity Query Profiles
      summary: Deletes an Activity query profile.
      description: This operation deletes an Activity query profile by ID.
      operationId: Delete Activity Query Profile by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of an Activity query profile.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: Success.
          content: {}
        400:
          description: <ul><li>[WFA-170006] - The query profile [profile name] is
            a system-defined query profile and cannot be deleted.</li><li>[WFA-170006]
            - The query profile [profile name] is a system-defined query profile and
            cannot be deleted.</li><li>[WFA-170001] - You cannot delete the query
            profile [profile name] because it is assigned to at least one activity
            profile. First, unassign the query profile from all activity profiles.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Query Profile. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
  /v1/work/result_code_profiles:
    get:
      tags:
      - Result Code Profiles
      summary: Returns all result code profiles or a particular result code profile
        by name.
      description: This operation returns all result code profiles without associated
        assignments if no parameter is specified or a particular result code profile
        with assignments if a name is provided, including both active and inactive
        profiles.
      operationId: Retrieve All Result Code Profiles by Name
      parameters:
      - name: name
        in: query
        description: The name of a result code profile.
        schema:
          type: string
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultCodeProfile'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Result Code Profile. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>'
          content: {}
    post:
      tags:
      - Result Code Profiles
      summary: Creates a result code profile.
      description: This operation creates a result code profile.
      operationId: Create Result Code Profile
      requestBody:
        description: The Create Result Code Profile request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResultCodeProfile'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultCodeProfile'
        400:
          description: '<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten
            the name.</li><li>[WFA-000008] - The following parameter cannot be empty:
            name.</li><li>[WFA-121503] - The name is a duplicate of a name used previously
            - Result Code Profile: {Name}.</li><li>[WFA-000015] - description length
            exceeds N characters. Shorten the description.</li><li>[WFA-000016] -
            The field name cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-000016]
            - The field description cannot contain any of the following characters:<>()/'';#.,$%=!.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/result_code_profiles/multi_create:
    post:
      tags:
      - Result Code Profiles
      summary: Creates one or more result code profiles.
      description: This operation creates one or more result code profiles.
      operationId: Create Result Code Profiles
      requestBody:
        description: The Create Result Code Profiles request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ResultCodeProfile'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultCodeProfile_PartialPublicAPI'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/result_code_profiles/multi_delete:
    post:
      tags:
      - Result Code Profiles
      summary: Deletes one or more result code profiles.
      description: This operation deletes one or more result code profiles.
      operationId: Delete Result Code Profiles
      requestBody:
        description: The Retrieve Result Code Profiles request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResultCodeProfileRefs'
        required: true
      responses:
        204:
          description: Success.
          content: {}
        207:
          description: <ul><li>[WFA-000038] - Some of the entities were not deleted
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000039] - None of the entities were deleted because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/result_code_profiles/multi_read:
    post:
      tags:
      - Result Code Profiles
      summary: Returns one or more result code profiles.
      description: This operation returns one or more result code profiles by object
        references.
      operationId: Retrieve Result Code Profiles
      requestBody:
        description: The Retrieve Result Code Profiles request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResultCodeProfileRefs'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultCodeProfile'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000037] - None of the entities were exported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/result_code_profiles/multi_update:
    post:
      tags:
      - Result Code Profiles
      summary: Updates one or more result code profiles.
      description: This operation updates one or more result code profiles.
      operationId: Update Result Code Profiles
      requestBody:
        description: The Update Result Code Profiles request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ResultCodeProfile'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultCodeProfile_PartialPublicAPI'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/result_code_profiles/{id}:
    get:
      tags:
      - Result Code Profiles
      summary: Returns a result code profile.
      description: This operation returns a result code profile by ID.
      operationId: Retrieve Result Code Profile by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a result code profile.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultCodeProfile'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Result Code Profile. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>'
          content: {}
    put:
      tags:
      - Result Code Profiles
      summary: Updates a result code profile.
      description: This operation updates a result code profile by ID.
      operationId: Update Result Code Profile by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a result code profile.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: The Update Result Code Profile by ID request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResultCodeProfile'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultCodeProfile'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Result Code Profile. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>'
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Result Code Profiles
      summary: Deletes a result code profile.
      description: This operation deletes a result code profile by ID.
      operationId: Delete Result Code Profile by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a result code profile.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: Success.
          content: {}
        400:
          description: '<ul><li>[WFA-121501] - The system defined result code profile
            cannot be deleted - Result Code Profile name: {Name}.</li><li>[WFA-121502]
            - The result code profile is currently used by an activity profile - Result
            Code Profile name: {Name}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Result Code Profile. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>'
          content: {}
  /v1/work/result_codes:
    get:
      tags:
      - Result Codes
      summary: Returns all result codes.
      description: This operation returns all result codes, including both active
        and inactive.
      operationId: Retrieve All Result Codes
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultCode_PublicAPI'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
    post:
      tags:
      - Result Codes
      summary: Creates a result code.
      description: This operation creates a result code.
      operationId: Create Result Code
      requestBody:
        description: The Create Result Code request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResultCode'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultCode_PublicAPI'
        400:
          description: '<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten
            the name.</li><li>[WFA-000008] - The following parameter cannot be empty:
            name.</li><li>[WFA-211000] - The Result Code name should be uniqueness
            for this Field Definition: {paramName}.</li><li>[WFA-000015] - Description
            length exceeds N characters. Shorten the description.</li><li>[WFA-000016]
            - The field name cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-000016]
            - The field description cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-211001]
            - The default Field Definition {paramName} does not support result codes.</li><li>[WFA-121005]
            - The Result Code cannot be assigned to a Field Definition with a Data
            Type ID other than Alpha numeric or Alpha numeric with slash - {ResultCode}
            name: {Name}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/result_codes/multi_create:
    post:
      tags:
      - Result Codes
      summary: Creates one or more result codes.
      description: <p>This operation creates one or more result codes.</p><br /><h2>Service
        limit</h2><p>A service limit constrains the number of result codes that can
        be processed in a single request.</p><ul><li>The <strong>Number of Result
        Codes</strong> cannot exceed 200.</li></ul><p>Refer to the <strong>Docs >
        Service Limits</strong> topic for more information.</p>
      operationId: Create Result Codes
      requestBody:
        description: The Create Result Codes request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ResultCode'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultCode_PublicAPI'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultCode_PublicAPI'
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/result_codes/multi_delete:
    post:
      tags:
      - Result Codes
      summary: Deletes one or more result codes.
      description: <p>This operation deletes one or more result codes.</p><br /><h2>Service
        limit</h2><p>A service limit constrains the number of result codes that can
        be processed in a single request.</p><ul><li>The <strong>Number of Result
        Codes</strong> cannot exceed 200.</li></ul><p>Refer to the <strong>Docs >
        Service Limits</strong> topic for more information.</p>
      operationId: Delete Result Codes
      requestBody:
        description: The Delete Result Codes request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResultCodeRefs'
        required: true
      responses:
        204:
          description: Success.
          content: {}
        207:
          description: <ul><li>[WFA-000038] - Some of the entities were not deleted
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000039] - None of the entities were deleted because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/result_codes/multi_read:
    post:
      tags:
      - Result Codes
      summary: Returns one or more result codes.
      description: <p>This operation returns one or more result codes.</p><br /><h2>Service
        limit</h2><p>A service limit constrains the number of result codes that can
        be processed in a single request.</p><ul><li>The <strong>Number of Result
        Codes</strong> cannot exceed 200.</li></ul><p>Refer to the <strong>Docs >
        Service Limits</strong> topic for more information.</p>
      operationId: Retrieve Result Codes
      requestBody:
        description: The Retrieve Result Codes request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResultCodeRefs'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultCode_PublicAPI'
        400:
          description: Invalid request body.
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/result_codes/multi_update:
    post:
      tags:
      - Result Codes
      summary: Updates one or more result codes.
      description: <p>This operation updates one or more result codes.</p><br /><h2>Service
        limit</h2><p>A service limit constrains the number of result codes that can
        be processed in a single request.</p><ul><li>The <strong>Number of Result
        Codes</strong> cannot exceed 200.</li></ul><p>Refer to the <strong>Docs >
        Service Limits</strong> topic for more information.</p>
      operationId: Update Result Codes
      requestBody:
        description: The Update Result Codes request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ResultCode'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultCode_PublicAPI'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultCode_PublicAPI'
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/result_codes/multi_upsert:
    post:
      tags:
      - Result Codes
      summary: Creates or updates one or more result codes.
      description: <p>This operation creates or updates one or more result codes.</p><br
        /><h2>Service limit</h2><p>A service limit constrains the number of result
        codes that can be processed in a single request.</p><ul><li>The <strong>Number
        of Result Codes</strong> cannot exceed 200.</li></ul><p>Refer to the <strong>Docs
        > Service Limits</strong> topic for more information.</p>
      operationId: Create or Update Result Codes
      requestBody:
        description: The Create or Update Result Codes request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ResultCode'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultCode_PublicAPI'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultCode_PublicAPI'
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/result_codes/{id}:
    get:
      tags:
      - Result Codes
      summary: Returns a result code.
      description: This operation returns a result code by ID.
      operationId: Retrieve Result Code by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a result code.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultCode_PublicAPI'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Result Code. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
    put:
      tags:
      - Result Codes
      summary: Updates a result code.
      description: This operation updates a result code by ID.
      operationId: Update Result Code by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a result code.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: The Update Result Code by ID request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResultCode'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultCode_PublicAPI'
        400:
          description: '<ul><li>[WFA-000005] - ID from path does not match ID from
            request payload.</li><li>[WFA-000015] - Name length exceeds N characters.
            Shorten the name.</li><li>[WFA-000008] - The following parameter cannot
            be empty: name.</li><li>[WFA-211000] - The Result Code name should be
            uniqueness for this Field Definition: {paramName}.</li><li>[WFA-000015]
            - Description length exceeds N characters. Shorten the description.</li><li>[WFA-000016]
            - The field name cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-000016]
            - The field description cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-211001]
            - The default Field Definition {paramName} does not support Result Codes.</li><li>[WFA-121005]
            - The Result Code cannot be assigned to a Field Definition with a Data
            Type ID other than Alpha numeric or Alpha numeric with slash - {ResultCode}
            name: {Name}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Result Code. Name or names or ID or IDs: [{resultCodeIds}].</li></ul>'
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Result Codes
      summary: Deletes a result code.
      description: This operation deletes a result code by ID.
      operationId: Delete Result Code by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a result code.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: Success.
          content: {}
        400:
          description: <ul><li>[WFA-121004] - Can't delete result code with id = {id}
            due to the dependence of decision answer on it.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Result Code. Name or names or ID or IDs: {id}.</li><li>[WFA-121004] -
            Can''t delete result code with id = {id} due to the dependence of decision
            answer on it.</li></ul>'
          content: {}
  /v1/work/results_templates:
    get:
      tags:
      - Activity Results Templates
      summary: Returns all results templates or a particular results template by name.
      description: This operation returns all results templates if no parameter is
        specified or a particular results template if a name is provided.
      operationId: Retrieve All Results Templates or by Name
      parameters:
      - name: name
        in: query
        description: The name of a results template.
        schema:
          type: string
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultsTemplate_PublicAPI'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Activity Results Template. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
    post:
      tags:
      - Activity Results Templates
      summary: Creates a results template.
      description: This operation creates a results template.
      operationId: Create Results Template
      requestBody:
        description: The Create Results Template request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResultsTemplate'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsTemplate_PublicAPI'
        400:
          description: '<ul><li>[WFA-000004] - The following parameter must be null:
            id.</li><li>[WFA-000003] - You must specify the following parameter: name.</li><li>[WFA-000008]
            - The following parameter cannot be empty: name.</li><li>[WFA-000015]
            - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000016]
            - The field name cannot contain any of the following characters: {forbiddenSymbols}.</li><li>[WFA-000015]
            - Description length exceeds N characters. Shorten the description</li><li>[WFA-000016]
            - The field description cannot contain any of the following characters:
            {forbiddenSymbols}.</li><li>[WFA-000013] - You must specify the following
            parameter: steps.</li><li>[WFA-000002] - The following collection cannot
            be empty: steps.</li><li>[WFA-000003] - You must specify the following
            parameter: fieldDefinition.</li><li>[WFA-216000] - Activity results template
            contains steps with duplicate field definitions: {duplicateNames}.</li><li>[WFA-216001]
            - {stepPrompt} - Decision answer for result code {resultCode} cannot contain
            steps with duplicate field definitions.The following field definitions
            have duplicate names: {duplicateNames}.</li><li>[WFA-216002] - {stepPrompt}
            - Property {paramName} is not supported for a decision step.</li><li>[WFA-216003]
            - {stepPrompt} - Property {paramName} is not supported for a decision
            step. You can omit or disable this property.</li><li>[WFA-216004] - {stepPrompt}
            - Decision step answer steps must be of type: field definition.</li><li>[WFA-216006]
            - {stepPrompt} - Property {paramName} is not supported for a field definition.
            You can omit or set default value.</li><li>[WFA-216008] - {stepPrompt}
            - Decision step cannot contain answers with duplicate result codes. The
            following result codes have duplicate names: {duplicateNames}.</li><li>[WFA-216010]
            - {stepPrompt} - Maximum Value must be greater or equal to Minimum Value.</li><li>[WFA-216011]
            - {stepPrompt} - Property {paramName} is not supported for a field definition.</li><li>[WFA-122600]
            - The name is a duplicate of a name used previously - Name: {TransactionCode}.</li><li>[WFA-000003]
            - You must specify the following parameter: validationType.</li><li>[WFA-000003]
            - You must specify the following parameter: entryType.</li><li>[WFA-000003]
            - You must specify the following parameter: inputSourceType.</li><li>[WFA-122750]
            - The step prompt is required.</li><li>[WFA-122751] - The step prompt
            is invalid: {StepPrompt}. A valid step prompt cannot contain more than
            {MaxChars} characters.</li><li>[WFA-122752] - {StepPrompt} - Step Default
            Value is invalid: {StepDefault}. A valid default value cannot contain
            more than{StepLength} characters.</li><li>[WFA-122753] - {StepPrompt}
            - {Value} is invalid. The value cannot contain more than {MaxCount} digits.</li><li>[WFA-122754]
            - {StepPrompt} - {Value} is invalid. Digits Right of Decimal value cannot
            contain more than {MaxCount} digits.</li><li>[WFA-122755] - {StepPrompt}
            - Step Length is invalid: {StepLength}. A valid length is a number between
            {MinLength} and{MaxLength}.</li><li>[WFA-122756] - {StepPrompt} - Step
            Length is not allowed for the Field Definition.</li><li>[WFA-122757] -
            {StepPrompt} - Step Scale of Decimal is not allowed for this Field Definition.</li><li>[WFA-122758]
            - {StepPrompt} - Step Precision of Decimal is not allowed for this Field
            Definition.</li><li>[WFA-122759] - {StepPrompt} - Step Length is required
            for the Field Definition.</li><li>[WFA-122760] - The step prompt is invalid:
            {StepPrompt}. A valid step prompt cannot contain any of the following
            characters:{ForbiddenCharacters}</li><li>[WFA-122761] - {StepPrompt} -
            Step Default Value is invalid: {StepDefault}. A valid default value cannot
            contain any of the following characters:{ForbiddenCharacters}</li><li>[WFA-122764]
            - {StepPrompt} - The Digits Left of Decimal value must be in the range
            between {MinValue} and {MaxValue}.</li><li>[WFA-122765] - {StepPrompt}
            - The Digits Right of Decimal value must be in the range between {MinValue}
            and {MaxValue}.</li><li>[WFA-216020] - Quantity Field Definition is already
            associated with another Step or Decision Answer Step. Quantity Field Definition
            name: {duplicateNames}.</li><li>[WFA-216021] - {stepPrompt} - Only the
            validation type In List can be specified for a decision step.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/results_templates/multi_create:
    post:
      tags:
      - Activity Results Templates
      summary: Creates one or more results templates.
      description: This operation creates one or more results templates.
      operationId: Create Results Templates
      requestBody:
        description: The Create Results Templates request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ResultsTemplate'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultsTemplate_PublicAPI'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/results_templates/multi_delete:
    post:
      tags:
      - Activity Results Templates
      summary: Deletes one or more results templates.
      description: This operation deletes one or more results templates.
      operationId: Delete Results Templates
      requestBody:
        description: The Retrieve Results Templates request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResultsTemplateRefs'
        required: true
      responses:
        204:
          description: Success.
          content: {}
        207:
          description: <ul><li>[WFA-000038] - Some of the entities were not deleted
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000039] - None of the entities were deleted because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/results_templates/multi_read:
    post:
      tags:
      - Activity Results Templates
      summary: Returns one or more results templates.
      description: This operation returns one or more results templates by object
        references.
      operationId: Retrieve Results Templates
      requestBody:
        description: The Retrieve Results Templates request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResultsTemplateRefs'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultsTemplate_PublicAPI'
        207:
          description: <ul><li>[WFA-000036] - Some of the entities were not exported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000037] - None of the entities were exported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/results_templates/multi_update:
    post:
      tags:
      - Activity Results Templates
      summary: Updates one or more results templates.
      description: This operation updates one or more results templates.
      operationId: Update Results Templates
      requestBody:
        description: The Update Results Templates request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ResultsTemplate'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResultsTemplate_PublicAPI'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/results_templates/setup/step_types:
    get:
      tags:
      - Activity Results Template Resources
      summary: Returns all step types.
      description: This operation returns all step types.
      operationId: Retrieve All Step Types
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/results_templates/{id}:
    get:
      tags:
      - Activity Results Templates
      summary: Returns a results template.
      description: This operation returns a results template by ID.
      operationId: Retrieve Results Template by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a results template.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsTemplate_PublicAPI'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
    put:
      tags:
      - Activity Results Templates
      summary: Updates a results template.
      description: This operation updates a results template by ID.
      operationId: Update Results Template by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a results template.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: The Update Results Template by ID request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResultsTemplate'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultsTemplate_PublicAPI'
        400:
          description: '<ul><li>[WFA-000003] - You must specify the following parameter:
            id.</li><li>[WFA-000003] - You must specify the following parameter: version.</li><li>[WFA-000022]
            - The data was modified by another user while you were working on this
            page. Your edits can not be saved. Please refresh your data and try again.</li><li>[WFA-000005]
            - ID from path does not match ID from request payload.</li><li>[WFA-000003]
            - You must specify the following parameter: name.</li><li>[WFA-000008]
            - The following parameter cannot be empty: name.</li><li>[WFA-000015]
            - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000016]
            - The field name cannot contain any of the following characters: {forbiddenSymbols}.</li><li>[WFA-000015]
            - Description length exceeds N characters. Shorten the description</li><li>[WFA-000016]
            - The field description cannot contain any of the following characters:
            {forbiddenSymbols}.</li><li>[WFA-000013] - You must specify the following
            parameter: steps.</li><li>[WFA-000002] - The following collection cannot
            be empty: steps.</li><li>[WFA-000003] - You must specify the following
            parameter: fieldDefinition.</li><li>[WFA-216000] - Activity results template
            contains steps with duplicate field definitions: {duplicateNames}.</li><li>[WFA-216001]
            - {stepPrompt} - Decision answer for result code {resultCode} cannot contain
            steps with duplicate field definitions.The following field definitions
            have duplicate names: {duplicateNames}.</li><li>[WFA-216002] - {stepPrompt}
            - Property {paramName} is not supported for a decision step.</li><li>[WFA-216003]
            - {stepPrompt} - Property {paramName} is not supported for a decision
            step. You can omit or disable this property.</li><li>[WFA-216004] - {stepPrompt}
            - Decision step answer steps must be of type: field definition.</li><li>[WFA-216006]
            - {stepPrompt} - Property {paramName} is not supported for a field definition.
            You can omit or set default value.</li><li>[WFA-216008] - {stepPrompt}
            - Decision step cannot contain answers with duplicate result codes. The
            following result codes have duplicate names: {duplicateNames}.</li><li>[WFA-216010]
            - {stepPrompt} - Maximum Value must be greater or equal to Minimum Value.</li><li>[WFA-216011]
            - {stepPrompt} - Property {paramName} is not supported for a field definition.</li><li>[WFA-122600]
            - The name is a duplicate of a name used previously - Name: {TransactionCode}.</li><li>[WFA-122601]
            - The system-defined activity results template cannot be modified - Name:
            {TransactionCode}.</li><li>[WFA-000003] - You must specify the following
            parameter: validationType.</li><li>[WFA-000003] - You must specify the
            following parameter: entryType.</li><li>[WFA-000003] - You must specify
            the following parameter: inputSourceType.</li><li>[WFA-122750] - The step
            prompt is required.</li><li>[WFA-122751] - The step prompt is invalid:
            {StepPrompt}. A valid step prompt cannot contain more than {MaxChars}
            characters.</li><li>[WFA-122752] - {StepPrompt} - Step Default Value is
            invalid: {StepDefault}. A valid default value cannot contain more than{StepLength}
            characters.</li><li>[WFA-122753] - {StepPrompt} - {Value} is invalid.
            The value cannot contain more than {MaxCount} digits.</li><li>[WFA-122754]
            - {StepPrompt} - {Value} is invalid. Digits Right of Decimal value cannot
            contain more than {MaxCount} digits.</li><li>[WFA-122755] - {StepPrompt}
            - Step Length is invalid: {StepLength}. A valid length is a number between
            {MinLength} and{MaxLength}.</li><li>[WFA-122756] - {StepPrompt} - Step
            Length is not allowed for the Field Definition.</li><li>[WFA-122757] -
            {StepPrompt} - Step Scale of Decimal is not allowed for this Field Definition.</li><li>[WFA-122758]
            - {StepPrompt} - Step Precision of Decimal is not allowed for this Field
            Definition.</li><li>[WFA-122759] - {StepPrompt} - Step Length is required
            for the Field Definition.</li><li>[WFA-122760] - The step prompt is invalid:
            {StepPrompt}. A valid step prompt cannot contain any of the following
            characters:{ForbiddenCharacters}</li><li>[WFA-122761] - {StepPrompt} -
            Step Default Value is invalid: {StepDefault}. A valid default value cannot
            contain any of the following characters:{ForbiddenCharacters}</li><li>[WFA-122764]
            - {StepPrompt} - The Digits Left of Decimal value must be in the range
            between {MinValue} and {MaxValue}.</li><li>[WFA-122765] - {StepPrompt}
            - The Digits Right of Decimal value must be in the range between {MinValue}
            and {MaxValue}.</li><li>[WFA-216020] - Quantity Field Definition is already
            associated with another Step or Decision Answer Step. Quantity Field Definition
            name: {duplicateNames}.</li><li>[WFA-216021] - {stepPrompt} - Only the
            validation type In List can be specified for a decision step.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Activity Results Templates
      summary: Deletes a results template.
      description: This operation deletes a results template by ID.
      operationId: Delete Results Template by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a results template.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: Success.
          content: {}
        400:
          description: '<ul><li>[WFA-122601] - The system-defined activity results
            template cannot be modified - Name: {TransactionCode}.</li><li>[WFA-122602]
            - The activity results template is already being used by another Activity
            - Name: {TransactionCode}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
  /v1/work/settings:
    get:
      tags:
      - Activity Settings
      summary: Returns all Activity settings.
      description: This operation returns all Activity settings.
      operationId: Retrieve All Activity Settings
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Setting'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
  /v1/work/settings/multi_read:
    post:
      tags:
      - Activity Settings
      summary: Returns one or more Activity settings.
      description: This operation returns one or more Activity settings by object
        references.
      operationId: Retrieve Activity Settings
      requestBody:
        description: The Retrieve Activity Settings request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingRefs'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Setting'
        207:
          description: <ul><li>[WFA-000036] - Some of the entities were not exported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Setting'
        400:
          description: <ul><li>[WFA-000037] - None of the entities were exported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/settings/multi_update:
    post:
      tags:
      - Activity Settings
      summary: Updates one or more Activity settings.
      description: This operation updates one or more Activity settings.
      operationId: Update Activity Settings
      requestBody:
        description: The Update Activity Settings request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Setting'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Setting'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Setting'
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/settings/{id}:
    get:
      tags:
      - Activity Settings
      summary: Returns an Activity setting.
      description: This operation returns an Activity setting by ID.
      operationId: Retrieve Activity Setting by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of an Activity setting.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setting'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Setting. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
    put:
      tags:
      - Activity Settings
      summary: Updates an Activity setting.
      description: This operation updates an Activity setting.
      operationId: Update Activity Setting by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of an Activity setting.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: The Update Activity Setting by ID request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Setting'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setting'
        400:
          description: '<ul><li>[WFA-000008] - The following parameter cannot be empty:
            value.</li><li>[WFA-000020] - The value should consists of digits only.</li><li>[WFA-000018]
            - The following parameter cannot be a negative number: value.</li><li>[WFA-000019]
            - The value cannot be greater than 999999.</li><li>[WFA-000021] - The
            value should represents boolean true(1)/false(0).</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Setting. Name or names or ID or IDs: [{refs}].</li></ul>'
          content: {}
      x-codegen-request-body-name: body
  /v1/work/team_segments/active_members/multi_read:
    post:
      tags:
      - Active Team Members
      summary: Returns active team members by activity team segment identifiers.
      description: <p>This operation returns active team members by activity team
        segment identifiers.</p><br /><p>The associated Access Control Points are
        WFA_WORK_INTEGRATION_API, WFA_VIEW_TEAM_ACTIVITY_EVENT_MEMBERS.</p>
      operationId: Retrieve Active Team Members
      requestBody:
        description: The Retrieve Activity Team Segments request payload, which contains
          either a collection of team segments IDs or a collection of activity team
          segment identifiers.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity Team Segment Request'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Active Team Members for the team segment
                    identifier'
        207:
          description: <ul><li>[WFA-000036] - Some of the entities were not exported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: '<ul><li>[WFA-000011] - At least one of the following parameters
            is mandatory: [activitySegmentIds, activitySegmentIdentifiers].</li><li>[WFA-000013]
            - A conflict occurred. The following parameters are mutually exclusive
            and cannot be null both: [activitySegmentIds, activitySegmentIdentifiers].</li><li>[WFA-000037]
            - None of the entities were exported because of errors in the source data.
            Correct those errors and try again.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/team_segments/audits/multi_read:
    post:
      tags:
      - Activity Team Segment Audits
      summary: Returns audits for activity team segments or activity team segment
        results.
      description: <p>This operation returns audits for activity team segments or
        activity team segment results according to the specified date range.</p><br
        /><p>The associated Access Control Point is WFA_WORK_INTEGRATION_API.</p>
      operationId: Retrieve Activity Team Segment Audits
      requestBody:
        description: v1.0.work-activity_team_segments_audits.post.request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity Team Event Audits Request model'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity Team Event Audits Response model'
        400:
          description: '<ul><li>WFA-000002 - The following collection cannot be empty:
            audit type.</li><li>WFA-000002 - The following collection cannot be empty:
            teams.</li><li>WFA-000003 - You must specify the following parameter:
            audit type.</li><li>WFA-000003 - You must specify the following parameter:
            teams.</li><li>WFA-000003 - You must specify the following parameter:
            start date time.</li><li>WFA-000003 - You must specify the following parameter:
            end date time.</li></ul>'
          content: {}
        403:
          description: WFA-000030 - The current user does not have access to Activities
            Integration API operations.
          content: {}
        404:
          description: 'WFA-000007 - Entity or entities not found. Type: Activity
            Team Definition. Name or names or ID or IDs: [].'
          content: {}
      x-codegen-request-body-name: body
  /v1/work/team_segments/multi_delete:
    post:
      tags:
      - Activity Team Segments
      summary: Deletes one or more activity team segments.
      description: <p>This operation deletes activity team segments from a third party
        source for multiple teams.</p><br /><p>The associated Access Control Points
        are WFA_WORK_INTEGRATION_API, WFA_EDIT_TEAM_ACTIVITY_EVENTS.</p>
      operationId: Delete Activity Team Segments
      requestBody:
        description: v1.0.work-activity_team_segments.multi_delete.request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity Team Segment Request'
        required: true
      responses:
        200:
          description: Successfully deleted activity team segments for multiple teams.
          content: {}
        207:
          description: '@v1.0.work-activity_team_segments.post.multi_delete.response.207.message'
          content: {}
        400:
          description: <ul><li>[WFA-000037] - None of the activity team segments were
            deleted because of errors in the source data. Correct those errors and
            try again.</li><ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/team_segments/multi_read:
    post:
      tags:
      - Activity Team Segments
      summary: Returns activity team segments by teams or by activity team segment
        identifiers.
      description: <p>This operation returns activity team segments by teams or by
        activity team segment identifiers.</p><br /><p>The associated Access Control
        Points are WFA_WORK_INTEGRATION_API, WFA_VIEW_TEAM_ACTIVITY_EVENTS.</p>
      operationId: Retrieve Activity Team Segments
      requestBody:
        description: v1.0.work-activity_team_segments.post.multi_read.request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity Team Segment Read Request'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity Team Segments Read Response'
        207:
          description: <ul><li>[WFA-000036] - Some of the entities were not exported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity Team Segments Read Response'
        400:
          description: '<ul><li>[WFA-000002] - The following collection cannot be
            empty: teams.</li><li>[WFA-000003] - You must specify the following parameter:
            startDate.</li><li>[WFA-000003] - You must specify the following parameter:
            endDate.</li><li>[WFA-000037] - None of the entities were exported because
            of errors in the source data. Correct those errors and try again.</li></ul>'
          content: {}
      x-codegen-request-body-name: body
  /v1/work/team_segments/multi_upsert:
    post:
      tags:
      - Activity Team Segments
      summary: Creates or updates one or more activity team segments.
      description: <p>This operation creates or updates activity team segments from
        a third party source for multiple teams.</p><br /><p>The associated Access
        Control Points are WFA_WORK_INTEGRATION_API, WFA_EDIT_TEAM_ACTIVITY_EVENTS.</p>
      operationId: Create or Update Activity Team Segments
      requestBody:
        description: v1.0.work-activity_team_segments.post.multi_upsert.request
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ActivityTeamSegmentWithResultsForRest'
        required: true
      responses:
        200:
          description: Successfully created or updated activity team segments for
            multiple teams.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity Team Segments Response'
        207:
          description: '@v1.0.work-activity_team_segments.post.multi_upsert.response.207.message'
          content: {}
        400:
          description: <ul><li>[WFA-000037] - None of the activity team segments were
            imported because of errors in the source data. Correct those errors and
            try again.</li><ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/team_segments/net_changes/apply_read:
    post:
      tags:
      - Team Segments Net Changes
      summary: Returns team segments for multiple teams based on the request parameters.
      description: <p>This operation returns Team Segments. Required parameters include
        select, lastRunDateTime and endDateTime.</p><br /><p>The associated Access
        Control Point is WFA_WORK_INTEGRATION_API.</p>
      operationId: Retrieve Net Changes for Team Segments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team segment net change find criteria'
        required: false
      responses:
        200:
          description: Successfully retrieved team segments according to the specified
            parameters.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team segment net change find criteria'
        400:
          description: 'Bad Request: <ul><li>[WTK-201800] - Invalid select option:
            selectOption.</li><li>[WTK-201801] - The lastRunDateTime is required.</li><li>[WTK-201802]
            - The endDateTime is required.</li><li>[WTK-201803] - The lastRunDateTime
            should be in the past.</li><li>[WTK-201804] - The endDateTime should be
            in the past.</li><li>[WTK-201805] - The lastRunDateTime should be before
            the endDateTime.</li><li>[WFC-111206] - Please provide at least 1 of id/qualifier
            in ref.</li><li>[WFA-000007] - Entity or entities not found. Type: activity.
            Name or names or ID or IDs: id.</li></ul>'
          content: {}
      x-codegen-request-body-name: body
  /v1/work/teams:
    get:
      tags:
      - Activity Teams
      summary: Returns all Activity teams or a particular team by name.
      description: <p>This operation returns all Activity teams if no parameter is
        specified or a particular team if a name is provided.</p><br /><p>The associated
        Access Control Point is WFA_FULL_WORK_SETUP.</p>
      operationId: Retrieve All Activity Teams or by Name
      parameters:
      - name: name
        in: query
        description: The name of an Activity team.
        schema:
          type: string
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTeamDefinition_PublicAPI'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Activity Team Definition. Name or names or ID or IDs: {id}.</li></ul>'
          content: {}
    post:
      tags:
      - Activity Teams
      summary: Creates an Activity team.
      description: <p>This operation creates and returns an Activity team.</p><br
        /><p>The associated Access Control Point is WFA_FULL_WORK_SETUP.</p>
      operationId: Create Activity Team
      requestBody:
        description: The Create Activity Team request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTeamDefinition'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTeamDefinition_PublicAPI'
        400:
          description: '<ul><li>[WFA-218002] - The name is a duplicate of a name used
            previously - Activity Team name: {name}.</li><li>[WFA-218003] - You cannot
            assign a non-default activity to be the default for the activity team
            - Activity name: {name}.</li><li>[WFA-000004] - The following parameter
            must be null: {paramName}.</li><li>[WFA-000003] - You must specify the
            following parameter: {paramName}.</li><li>[WFA-000008] - The following
            parameter cannot be empty: {paramName}.</li><li>[WFA-000016] - The field
            {paramName} cannot contain any of the following characters: {forbiddenSymbols}.</li><li>[WFA-000015]
            - {capParamName} length exceeds {length} characters. Shorten the {paramName}.</li><li>[WFA-000006]
            - The following object reference is invalid: {refName}.</li><li>[WFA-000025]
            - The {paramName} must be in the range: {minValue} - {maxValue}.</li><li>[WFA-000013]
            - A conflict occurred. The following parameters are mutually exclusive
            and cannot be null both: {paramNames}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/teams/multi_delete:
    post:
      tags:
      - Activity Teams
      summary: Deletes Activity teams.
      description: <p>This operation deletes Activity teams.</p><br /><p>The associated
        Access Control Point is WFA_FULL_WORK_SETUP.</p>
      operationId: Delete Activity Teams
      requestBody:
        description: The Delete Activity Teams request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTeamDefinitionRefs'
        required: true
      responses:
        204:
          description: Success.
          content: {}
        207:
          description: <ul><li>[WFA-000038] - Some of the entities were not deleted
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000039] - None of the entities were deleted because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/teams/multi_read:
    post:
      tags:
      - Activity Teams
      summary: Returns Activity teams.
      description: <p>This operation returns a list of Activity teams by object references.</p><br
        /><p>The associated Access Control Point is WFA_FULL_WORK_SETUP.</p>
      operationId: Retrieve Activity Teams
      requestBody:
        description: The Retrieve Activity Teams request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTeamDefinitionRefs'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity_PublicAPI'
        207:
          description: <ul><li>[WFA-000036] - Some of the entities were not exported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000037] - None of the entities were exported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/teams/multi_upsert:
    post:
      tags:
      - Activity Teams
      summary: Creates or updates one or more Activity teams.
      description: <p>This operation creates or updates one or more Activity teams.</p><br
        /><p>The associated Access Control Point is WFA_FULL_WORK_SETUP.</p>
      operationId: Create or Update Activity Teams
      requestBody:
        description: The Create or Update Activity Teams request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ActivityTeamDefinition'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity_PublicAPI'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li><li>
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity_PublicAPI'
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/teams/setup/days_of_week:
    get:
      tags:
      - Activity Team Resources
      summary: Returns all days of a week.
      description: <p>This operation returns all days of a week.</p><br /><p>The associated
        Access Control Points are WFA_FULL_WORK_SETUP, WFA_MANAGER_EDIT_ACTIVITY_TEAM.</p>
      operationId: Retrieve All Days of a Week
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedObjectRef'
  /v1/work/teams/{id}:
    get:
      tags:
      - Activity Teams
      summary: Returns an Activity team.
      description: <p>This operation returns an Activity team by ID.</p><br /><p>The
        associated Access Control Point is WFA_FULL_WORK_SETUP.</p>
      operationId: Retrieve Activity Team by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of an Activity team.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTeamDefinition_PublicAPI'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Activity Team Definition. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>'
          content: {}
    put:
      tags:
      - Activity Teams
      summary: Updates an Activity team.
      description: <p>This operation updates and returns an Activity team by ID.</p><br
        /><p>The associated Access Control Point is WFA_FULL_WORK_SETUP.</p>
      operationId: Update Activity Team by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of an Activity team.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: The Update Activity Team by ID request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTeamDefinition'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTeamDefinition_PublicAPI'
        400:
          description: '<ul><li>[WFA-218002] - The name is a duplicate of a name used
            previously - Activity Team name: {name}.</li><li>[WFA-218003] - You cannot
            assign a non-default activity to be the default for the activity team
            - Activity name: {name}.</li><li>[WFA-000004] - The following parameter
            must be null: {paramName}.</li><li>[WFA-000003] - You must specify the
            following parameter: {paramName}.</li><li>[WFA-000008] - The following
            parameter cannot be empty: {paramName}.</li><li>[WFA-000016] - The field
            {paramName} cannot contain any of the following characters: {forbiddenSymbols}.</li><li>[WFA-000015]
            - {capParamName} length exceeds {length} characters. Shorten the {paramName}.</li><li>[WFA-000006]
            - The following object reference is invalid: {refName}.</li><li>[WFA-000025]
            - The {paramName} must be in the range: {minValue} - {maxValue}.</li><li>[WFA-000013]
            - A conflict occurred. The following parameters are mutually exclusive
            and cannot be null both: {paramNames}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Activity Team Definition. Name or names or ID or IDs: [{id}].</li></ul>'
          content: {}
        409:
          description: <ul><li>[WFA-000022] - The data was modified by another user
            while you were working on this page. Your edits can not be saved. Please
            refresh your data and try again.</li></ul>
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Activity Teams
      summary: Deletes an Activity team.
      description: <p>This operation deletes an Activity team by ID.</p><br /><p>The
        associated Access Control Point is WFA_FULL_WORK_SETUP.</p>
      operationId: Delete Activity Team by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of an Activity team.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: Success.
          content: {}
        400:
          description: '<ul><li>[WFA-218000] - The Activity Team is currently used
            by an Activity Event - Activity Team name: {name}.</li><li>[WFA-218001]
            - The Activity Team with assigned members cannot be deleted - Activity
            Team name: {name}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Activity Team Definition. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>'
          content: {}
  /v1/work/units_of_measure:
    get:
      tags:
      - Units of Measure
      summary: Returns all units of measure or a particular unit of measure by name.
      description: This operation returns all units of measure if no parameter is
        specified or a particular unit of measure if a name is provided. The response
        may include both active and inactive units of measure.
      operationId: Retrieve All Units of Measure or by Name
      parameters:
      - name: name
        in: query
        description: The name of a unit of measure.
        schema:
          type: string
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitOfMeasure'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Unit of Measure. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>'
          content: {}
    post:
      tags:
      - Units of Measure
      summary: Creates a unit of measure.
      description: This operation creates a unit of measure.
      operationId: Create Unit of Measure
      requestBody:
        description: The Create Unit of Measure request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitOfMeasure'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitOfMeasure'
        400:
          description: '<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten
            the name.</li><li>[WFA-000008] - The following parameter cannot be empty:
            name.</li><li>[WFA-123000] - The name is a duplicate of a name used previously
            - Unit Of Measure name: {Name}.</li><li>[WFA-123003] - The abbreviated
            name is a duplicate of a abbreviated name used previously - Unit Of Measure
            abbreviated name: {Name}.</li><li>[WFA-000015] - abbreviatedName length
            exceeds N characters. Shorten the abbreviatedName.</li><li>[WFA-000016]
            - The field name cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-000016]
            - The field abbreviatedName cannot contain any of the following characters:<>()/'';#.,$%=!.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/units_of_measure/multi_create:
    post:
      tags:
      - Units of Measure
      summary: Creates one or more units of measure.
      description: This operation creates one or more units of measure.
      operationId: Create Units of Measure
      requestBody:
        description: The Create Units of Measure request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UnitOfMeasure'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitOfMeasure'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/units_of_measure/multi_delete:
    post:
      tags:
      - Units of Measure
      summary: Deletes units of measure.
      description: This operation deletes units of measure.
      operationId: Delete Units of Measure
      requestBody:
        description: The Delete Units of Measure request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitOfMeasureRefs'
        required: true
      responses:
        204:
          description: Success.
          content: {}
        207:
          description: <ul><li>[WFA-000038] - Some of the entities were not deleted
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000039] - None of the entities were deleted because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/units_of_measure/multi_read:
    post:
      tags:
      - Units of Measure
      summary: Returns one or more units of measure by object references.
      description: This operation returns one or more units of measure by object references.
      operationId: Retrieve Units of Measure
      requestBody:
        description: The Retrieve Units of Measure request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitOfMeasureRefs'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitOfMeasure'
        207:
          description: <ul><li>[WFA-000036] - Some of the entities were not exported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000037] - None of the entities were exported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/units_of_measure/multi_update:
    post:
      tags:
      - Units of Measure
      summary: Updates one or more units of measure.
      description: This operation updates one or more units of measure.
      operationId: Update Units of Measure
      requestBody:
        description: The Update Units of Measure request payload.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UnitOfMeasure'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitOfMeasure'
        207:
          description: <ul><li>[WFA-000034] - Some of the entities were not imported
            because of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        400:
          description: <ul><li>[WFA-000035] - None of the entities were imported because
            of errors in the source data. Correct those errors and try again.</li></ul>
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
      x-codegen-request-body-name: body
  /v1/work/units_of_measure/{id}:
    get:
      tags:
      - Units of Measure
      summary: Returns a unit of measure.
      description: This operation returns a unit of measure by ID.
      operationId: Retrieve Unit of Measure by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a unit of measure.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitOfMeasure'
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Unit of Measure. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>'
          content: {}
    put:
      tags:
      - Units of Measure
      summary: Updates a unit of measure.
      description: This operation updates a unit of measure by ID.
      operationId: Update Unit of Measure by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a unit of measure.
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: The Update Unit of Measure by ID request payload.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitOfMeasure'
        required: true
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitOfMeasure'
        400:
          description: '<ul><li>[WFA-000005] - ID from path does not match ID from
            request payload.</li><li>[WFA-000007] - Entity or entities not found.
            Type: Unit of Measure. Name or names or ID or IDs: [{id}].</li><li>[WFA-000015]
            - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008]
            - The following parameter cannot be empty: name.</li><li>[WFA-123000]
            - The name is a duplicate of a name used previously - Unit Of Measure
            name: {Name}.</li><li>[WFA-000015] - abbreviatedName length exceeds N
            characters. Shorten the abbreviatedName.</li><li>[WFA-000016] - The field
            name cannot contain any of the following characters:<>()/'';#.,$%=!.</li><li>[WFA-000016]
            - The field abbreviatedName cannot contain any of the following characters:<>()/'';#.,$%=!.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Unit of Measure. Name or names or ID or IDs: [{id}].</li></ul>'
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Units of Measure
      summary: Deletes a unit of measure.
      description: This operation deletes a unit of measure by ID.
      operationId: Delete Unit of Measure by ID
      parameters:
      - name: id
        in: path
        description: The unique ID of a unit of measure.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: Success.
          content: {}
        400:
          description: '<ul><li>[WFA-123004] - The unit of measure is currently used
            by an Activity - Unit Of Measure abbreviated name: {Name}.</li></ul>'
          content: {}
        403:
          description: <ul><li>[WFA-000030] - The current user does not have access
            to {facpName}.</li></ul>
          content: {}
        404:
          description: '<ul><li>[WFA-000007] - Entity or entities not found. Type:
            Unit of Measure. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>'
          content: {}
components:
  schemas:
    Activity_PublicAPI:
      required:
      - id
      - name
      type: object
      properties:
        actualCompleteDate:
          type: string
          description: The actual complete date in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        actualStartDate:
          type: string
          description: The actual start date in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        autoMoveMultiQuantity:
          type: number
          description: The auto-move multiplier quantity associated with an activity.
        bottomLevel:
          type: boolean
        canBeDefault:
          type: boolean
          description: A Boolean indicator of whether or not an activity can be set
            as the default.
        combinedName:
          type: string
          description: The combined name of an activity.
        completeStatus:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        completedPercent:
          type: number
          description: The percentage completed of an activity.
          format: double
        completedQuantity:
          type: number
          description: The completed quantity associated with an activity.
        createdDateTime:
          type: string
          description: The date and time an activity was created in ISO_LOCAL_DATE_TIME
            format (yyyy-mm-ddThh:mm:ss.sss).
        currentStandard:
          $ref: '#/components/schemas/ActivityStandard_PublicAPI'
        dataAccess:
          $ref: '#/components/schemas/ActivityDataAccess_PublicAPI'
        description:
          type: string
          description: The description of an activity.
        employees:
          type: array
          description: A list of employees associated with an activity.
          items:
            $ref: '#/components/schemas/ActivityEmployee_PublicAPI'
        header:
          $ref: '#/components/schemas/ActivityHeader_PublicAPI'
        heldHistory:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        id:
          type: integer
          description: The ID of an activity.
          format: int64
        isEditableHeldHistory:
          type: boolean
          description: A Boolean indicator of whether or not the held history is editable
            for an activity.
        isExcludedFromSequenceValidation:
          type: boolean
          description: A Boolean indicator of whether or not an activity is excluded
            from sequence validation.
        isMilestone:
          type: boolean
          description: A Boolean indicator of whether or not an activity is a milestone.
        laborHoursAllocationType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        laborQuantityAllocationType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        level:
          type: integer
          description: The level count of an activity.
          format: int32
          readOnly: true
        maxCompleteHours:
          type: integer
          description: The maximum hours-to-complete associated with an activity.
          format: int64
        maxDurationAmount:
          type: integer
          description: The maximum allowed duration of an activity.
          format: int64
        minCompleteHours:
          type: integer
          description: The minimum hours-to-complete associated with an activity.
          format: int64
        minDurationAmount:
          type: integer
          description: The minimum allowed duration of an activity..
          format: int64
        movedQuantity:
          type: number
          description: The moved quantity associated with an activity.
        movedToReworkQuantity:
          type: number
          description: The moved-to-rework quantity associated with an activity.
        name:
          type: string
          description: The name of an activity.
        parent:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        priorityType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        processType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        receivedQuantity:
          type: number
          description: The received quantity associated with an activity.
        receivedVarianceOverPct:
          type: number
          description: The received variance over percent associated with an activity.
          format: double
        relatedResultTemplate:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        replaceAllStandards:
          type: boolean
          description: A Boolean indicator of whether or not updated standards replace
            the full standards history.
        requiredQuantity:
          type: number
          description: The required quantity associated with an activity.
        requiredVarianceOverPct:
          type: number
          description: The required variance over percent associated with an activity.
          format: double
        revisedCompleteDate:
          type: string
          description: The revised complete date in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        revisedStartDate:
          type: string
          description: The revised start date in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        scheduledCompleteDate:
          type: string
          description: The scheduled complete date in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        scheduledStartDate:
          type: string
          description: The scheduled start date in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        scrappedQuantity:
          type: number
          description: The scrapped quantity associated with an activity.
        sdmKey:
          type: string
        searchName:
          type: string
          description: The search name of an activity.
        sequence:
          type: integer
          description: The sequence amongst siblings of an activity.
          format: int32
        standards:
          type: array
          description: A list of standards associated with an activity.
          items:
            $ref: '#/components/schemas/ActivityStandard_PublicAPI'
        transfer:
          $ref: '#/components/schemas/ActivityTransfer_PublicAPI'
        unaccountedQuantity:
          type: number
          description: The unaccounted quantity associated with an activity.
        unitOfMeasure:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        updatedDateTime:
          type: string
          description: The date and time of the last update to an activity in ISO_LOCAL_DATE_TIME
            format (yyyy-mm-ddThh:mm:ss.sss).
        userField1:
          type: string
          description: The user field 1 associated with an activity.
        userField2:
          type: string
          description: The user field 2 associated with an activity.
        userField3:
          type: string
          description: The user field 3 associated with an activity.
        userField4:
          type: string
          description: The user field 4 associated with an activity.
        validateReceivedQuantity:
          type: boolean
          description: A Boolean indicator of whether or not to validate the received
            quantity associated with an activity.
        validateRequiredQuantity:
          type: boolean
          description: A Boolean indicator of whether or not an activity must validate
            a required quantity.
        version:
          type: integer
          description: The version of an activity.
          format: int32
        weightAmount:
          type: number
          description: The weight amount associated with an activity.
          format: double
      description: The Activity model.
    Activity:
      required:
      - id
      - name
      type: object
      properties:
        actualCompleteDate:
          type: string
          description: The actual complete date in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        actualStartDate:
          type: string
          description: The actual start date in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        autoMoveMultiQuantity:
          type: number
          description: The auto-move multiplier quantity associated with an activity.
        bottomLevel:
          type: boolean
        canBeDefault:
          type: boolean
          description: A Boolean indicator of whether or not an activity can be set
            as the default.
        combinedName:
          type: string
          description: The combined name of an activity.
        completeStatus:
          $ref: '#/components/schemas/ObjectRef'
        completedPercent:
          type: number
          description: The percentage completed of an activity.
          format: double
        completedQuantity:
          type: number
          description: The completed quantity associated with an activity.
        createdDateTime:
          type: string
          description: The date and time an activity was created in ISO_LOCAL_DATE_TIME
            format (yyyy-mm-ddThh:mm:ss.sss).
        currentStandard:
          $ref: '#/components/schemas/ActivityStandard'
        dataAccess:
          $ref: '#/components/schemas/ActivityDataAccess'
        description:
          type: string
          description: The description of an activity.
        employees:
          type: array
          description: A list of employees associated with an activity.
          items:
            $ref: '#/components/schemas/ActivityEmployee'
        header:
          $ref: '#/components/schemas/ActivityHeader'
        heldHistory:
          $ref: '#/components/schemas/ObjectRef'
        id:
          type: integer
          description: The ID of an activity.
          format: int64
        isEditableHeldHistory:
          type: boolean
          description: A Boolean indicator of whether or not the held history is editable
            for an activity.
        isExcludedFromSequenceValidation:
          type: boolean
          description: A Boolean indicator of whether or not an activity is excluded
            from sequence validation.
        isMilestone:
          type: boolean
          description: A Boolean indicator of whether or not an activity is a milestone.
        laborHoursAllocationType:
          $ref: '#/components/schemas/ObjectRef'
        laborQuantityAllocationType:
          $ref: '#/components/schemas/ObjectRef'
        level:
          type: integer
          description: The level count of an activity.
          format: int32
          readOnly: true
        maxCompleteHours:
          type: integer
          description: The maximum hours-to-complete associated with an activity.
          format: int64
        maxDurationAmount:
          type: integer
          description: The maximum allowed duration of an activity.
          format: int64
        minCompleteHours:
          type: integer
          description: The minimum hours-to-complete associated with an activity.
          format: int64
        minDurationAmount:
          type: integer
          description: The minimum allowed duration of an activity..
          format: int64
        movedQuantity:
          type: number
          description: The moved quantity associated with an activity.
        movedToReworkQuantity:
          type: number
          description: The moved-to-rework quantity associated with an activity.
        name:
          type: string
          description: The name of an activity.
        parent:
          $ref: '#/components/schemas/ObjectRef'
        priorityType:
          $ref: '#/components/schemas/ObjectRef'
        processType:
          $ref: '#/components/schemas/ObjectRef'
        receivedQuantity:
          type: number
          description: The received quantity associated with an activity.
        receivedVarianceOverPct:
          type: number
          description: The received variance over percent associated with an activity.
          format: double
        relatedResultTemplate:
          $ref: '#/components/schemas/ObjectRef'
        replaceAllStandards:
          type: boolean
          description: A Boolean indicator of whether or not updated standards replace
            the full standards history.
        requiredQuantity:
          type: number
          description: The required quantity associated with an activity.
        requiredVarianceOverPct:
          type: number
          description: The required variance over percent associated with an activity.
          format: double
        revisedCompleteDate:
          type: string
          description: The revised complete date in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        revisedStartDate:
          type: string
          description: The revised start date in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        scheduledCompleteDate:
          type: string
          description: The scheduled complete date in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        scheduledStartDate:
          type: string
          description: The scheduled start date in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        scrappedQuantity:
          type: number
          description: The scrapped quantity associated with an activity.
        sdmKey:
          type: string
        searchName:
          type: string
          description: The search name of an activity.
        sequence:
          type: integer
          description: The sequence amongst siblings of an activity.
          format: int32
        standards:
          type: array
          description: A list of standards associated with an activity.
          items:
            $ref: '#/components/schemas/ActivityStandard'
        transfer:
          $ref: '#/components/schemas/ActivityTransfer'
        transfers:
          type: array
          items:
            $ref: '#/components/schemas/ActivityTransfer'
        unaccountedQuantity:
          type: number
          description: The unaccounted quantity associated with an activity.
        unitOfMeasure:
          $ref: '#/components/schemas/ObjectRef'
        updatedDateTime:
          type: string
          description: The date and time of the last update to an activity in ISO_LOCAL_DATE_TIME
            format (yyyy-mm-ddThh:mm:ss.sss).
        userField1:
          type: string
          description: The user field 1 associated with an activity.
        userField2:
          type: string
          description: The user field 2 associated with an activity.
        userField3:
          type: string
          description: The user field 3 associated with an activity.
        userField4:
          type: string
          description: The user field 4 associated with an activity.
        validateReceivedQuantity:
          type: boolean
          description: A Boolean indicator of whether or not to validate the received
            quantity associated with an activity.
        validateRequiredQuantity:
          type: boolean
          description: A Boolean indicator of whether or not an activity must validate
            a required quantity.
        version:
          type: integer
          description: The version of an activity.
          format: int32
        weightAmount:
          type: number
          description: The weight amount associated with an activity.
          format: double
      description: The Activity model.
    ActivityExportRequest:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/ActivityExportRequestOptions'
        where:
          $ref: '#/components/schemas/ActivityExportRequestWhere'
      description: The Activity Definitions Export criteria.
    ActivityExportResponse:
      type: object
      properties:
        activityExportDefinitions:
          type: array
          description: An array of activities.
          items:
            $ref: '#/components/schemas/ActivityExportDefinition'
        nextReadToken:
          type: string
          description: A token which identifies the next section of paginated results
            to return.
      description: The Activity Definitions Export response model.
    ActivityRefs:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/ActivityRefsWhere'
      description: The Activity References model.
    ResultCode:
      required:
      - active
      - description
      - fieldDefinition
      - id
      - name
      type: object
      properties:
        active:
          type: boolean
          description: A Boolean indicator of whether or not a result code is active.
        description:
          type: string
          description: The description of a result code.
        fieldDefinition:
          $ref: '#/components/schemas/ObjectRef'
        id:
          type: integer
          description: An ID associated with a result code.
          format: int64
        name:
          type: string
          description: The name of a result code.
        sdmKey:
          type: string
        version:
          type: integer
          description: The version of a result code.
          format: int32
      description: The Result Code object model.
    ActivityExportRefs:
      required:
      - partialSuccess
      - where
      type: object
      properties:
        partialSuccess:
          type: boolean
          description: A Boolean indicator of whether or not to return a detailed
            Partial Success response. In a detailed response, the INPUT property contains
            the entire request payload to facilitate resubmitting a corrected request.
        where:
          $ref: '#/components/schemas/ActivityRefsWhere'
      description: The Activity References model.
    LocalizedObjectRef:
      type: object
      properties:
        id:
          type: integer
          description: The ID of a Localized Object Reference.
          format: int64
          example: 1
        localizedName:
          type: string
          description: The localized name of a Localized Object Reference.
          example: name
        name:
          type: string
          description: The name of a Localized Object Reference.
          example: name
      description: Model for a Localized Object Reference.
    ObjectRef:
      type: object
      properties:
        id:
          type: integer
          description: The ID associated with an object reference.
          format: int64
          readOnly: true
        qualifier:
          type: string
          description: The qualifier associated with an object reference.
          readOnly: true
      description: The HCA object reference object model.
    Activity Efficiency Multi Read Criteria:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/Activity Efficiency Multi Read Where'
      description: The Activity Efficiency retrieve model.
    Activity Efficiency Multi Read Result:
      type: object
      properties:
        efficiencySegments:
          type: array
          description: An object representing a collection of activity efficiencies.
          items:
            $ref: '#/components/schemas/Activity Efficiency DTO'
        employee:
          $ref: '#/components/schemas/ObjectRef'
      description: An object representing a collection of activity efficiencies for
        a particular employee.
    Profile:
      required:
      - betweenActivityVariance
      - codeProfile
      - doNotSetSpanOrphaned
      - firstActivityVariance
      - formProfile
      - id
      - lastActivityVariance
      - name
      - openActivityLookbackWindow
      - queryProfile
      - timecardValidation
      - version
      type: object
      properties:
        autoResolveActivity:
          $ref: '#/components/schemas/ObjectRef'
        betweenActivityVariance:
          type: integer
          description: The between activity variance associated with a profile.
          format: int64
        closedOrphanConnectionGap:
          type: integer
          description: A closed orphan activity segment and the following orphan activity
            segment will be combined if the interval between is less than or equal
            to this setting.
          format: int64
        codeProfile:
          $ref: '#/components/schemas/ObjectRef'
        defaultActivity:
          $ref: '#/components/schemas/ObjectRef'
        description:
          type: string
          description: The description of a profile.
        doNotSetSpanOrphaned:
          type: boolean
          description: A Boolean indicator of whether or not to include activity events
            entered outside of timecard shifts.
        firstActivityVariance:
          type: integer
          description: The first activity variance associated with a profile.
          format: int64
        formProfile:
          $ref: '#/components/schemas/ObjectRef'
        id:
          type: integer
          description: The ID of a profile.
          format: int64
        idleActivity:
          $ref: '#/components/schemas/ObjectRef'
        lastActivityVariance:
          type: integer
          description: The last activity variance associated with a profile.
          format: int64
        limitDirect:
          type: integer
          description: The Profile's maximum number of direct activities that it can
            be working on simultaneously.
          format: int64
        limitInDirect:
          type: integer
          description: The Profile's maximum number of indirect activities that it
            can be working on simultaneously.
          format: int64
        maxDurationAmount:
          type: integer
          description: The maximum duration transaction entry amount allowed.
          format: int64
        minDurationAmount:
          type: integer
          description: The minimum duration transaction entry amount allowed.
          format: int64
        multiStopVariance:
          type: integer
          description: Deprecated. This property no longer has any function.
          format: int64
          readOnly: true
        name:
          type: string
          description: The name of a profile.
        openActivityLookbackWindow:
          type: integer
          description: The search time offset of open activities associated with a
            profile.
          format: int64
        openOrphanConnectionGap:
          type: integer
          description: A started orphan activity segment and the following orphan
            activity segment will be combined if the interval between is less than
            or equal to this setting.
          format: int64
        paidMealActivity:
          $ref: '#/components/schemas/ObjectRef'
        queryProfile:
          $ref: '#/components/schemas/ObjectRef'
        timecardValidation:
          $ref: '#/components/schemas/Configuration'
        unpaidMealActivity:
          $ref: '#/components/schemas/ObjectRef'
        version:
          type: integer
          description: The version of a profile.
          format: int32
        workRule:
          $ref: '#/components/schemas/ObjectRef'
      description: The Profile object model.
    Profile_PartialPublicAPI:
      required:
      - betweenActivityVariance
      - codeProfile
      - doNotSetSpanOrphaned
      - firstActivityVariance
      - formProfile
      - id
      - lastActivityVariance
      - name
      - openActivityLookbackWindow
      - queryProfile
      - timecardValidation
      - version
      type: object
      properties:
        autoResolveActivity:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        betweenActivityVariance:
          type: integer
          description: The between activity variance associated with a profile.
          format: int64
        closedOrphanConnectionGap:
          type: integer
          description: A closed orphan activity segment and the following orphan activity
            segment will be combined if the interval between is less than or equal
            to this setting.
          format: int64
        codeProfile:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        defaultActivity:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        description:
          type: string
          description: The description of a profile.
        doNotSetSpanOrphaned:
          type: boolean
          description: A Boolean indicator of whether or not to include activity events
            entered outside of timecard shifts.
        firstActivityVariance:
          type: integer
          description: The first activity variance associated with a profile.
          format: int64
        formProfile:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        id:
          type: integer
          description: The ID of a profile.
          format: int64
        idleActivity:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        lastActivityVariance:
          type: integer
          description: The last activity variance associated with a profile.
          format: int64
        limitDirect:
          type: integer
          description: The Profile's maximum number of direct activities that it can
            be working on simultaneously.
          format: int64
        limitInDirect:
          type: integer
          description: The Profile's maximum number of indirect activities that it
            can be working on simultaneously.
          format: int64
        maxDurationAmount:
          type: integer
          description: The maximum duration transaction entry amount allowed.
          format: int64
        minDurationAmount:
          type: integer
          description: The minimum duration transaction entry amount allowed.
          format: int64
        multiStopVariance:
          type: integer
          description: Deprecated. This property no longer has any function.
          format: int64
          readOnly: true
        name:
          type: string
          description: The name of a profile.
        openActivityLookbackWindow:
          type: integer
          description: The search time offset of open activities associated with a
            profile.
          format: int64
        openOrphanConnectionGap:
          type: integer
          description: A started orphan activity segment and the following orphan
            activity segment will be combined if the interval between is less than
            or equal to this setting.
          format: int64
        paidMealActivity:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        queryProfile:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        timecardValidation:
          $ref: '#/components/schemas/Configuration_PartialPublicAPI'
        unpaidMealActivity:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        version:
          type: integer
          description: The version of a profile.
          format: int32
        workRule:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
      description: The Profile object model.
    ProfileRefs:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/ProfileRefsWhere'
      description: The Profile References model.
    Activity Shift Delete Find Criteria:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/ActivityShiftMultiDeleteWhere'
      description: The Delete Activity Shifts request payload.
    BulkActivitySegmentForRest:
      type: object
      properties:
        accepted:
          type: boolean
          description: A Boolean indicator of whether or not the segment is accepted.
        activity:
          $ref: '#/components/schemas/ObjectRef Entity'
        activitySegmentIdentifier:
          $ref: '#/components/schemas/BulkActivitySegmentIdentifier'
        commentNotes:
          type: array
          description: A reference to a list of Comments. This object can have multiple
            Comments with multiple Notes for each Comment.
          items:
            $ref: '#/components/schemas/Timecard Comment Note'
        concurrentWithPrevious:
          type: boolean
          description: A Boolean indicator of whether or not an activity segment is
            concurrent with prior segment(s).
        costCenter:
          $ref: '#/components/schemas/ObjectRef Entity'
        createdDateTime:
          type: string
          description: The date and time this record was created in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-dd HH:mm:ss.SSS).
        dataSourceId:
          type: integer
          description: The ID of the data source.
          format: int64
        direct:
          type: boolean
          description: A Boolean indicator of whether or not the activity is direct.
        durationDate:
          type: string
          description: The duration date of the activity in ISO_LOCAL_DATE_TIME format
            (yyyy-MM-dd HH:mm:ss.SSS).
          format: date
        durationInSeconds:
          type: integer
          description: The duration in seconds of the activity.
          format: int32
        durationOrder:
          type: integer
          description: The order number of an activity duration segment.
          format: int32
        editByTypeId:
          type: integer
          description: The ID of the edit by type.
          format: int64
        employee:
          $ref: '#/components/schemas/ObjectRef Entity'
        emptyTransfer:
          type: boolean
          description: A Boolean indicator of whether or not the transfer is empty.
        endDateTime:
          type: string
          description: The end date and time in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd
            HH:mm:ss.SSS).
        endTimezone:
          $ref: '#/components/schemas/ObjectRef Entity'
        eventTypeId:
          type: integer
          description: The ID of an event type.
          format: int64
        hoursAllocatedType:
          $ref: '#/components/schemas/ObjectRef Entity'
        laborAccountId:
          type: integer
          description: The ID of the labor account, which combines the cost center
            and labor categories.
          format: int64
        laborCategories:
          type: array
          description: A list of labor category entry lists containing labor categories.
          items:
            $ref: '#/components/schemas/Timecard Activity Segment Bulk Labor Category
              Transfer'
        orgJob:
          $ref: '#/components/schemas/ObjectRef Entity'
        orgJobId:
          type: integer
          description: The ID of a job associated with an activity.
          format: int64
        reordered:
          type: boolean
          description: A Boolean indicator of whether or not type operation is reordered.
        resultSegments:
          type: array
          description: A reference to a list of Activity Result Segments.
          items:
            $ref: '#/components/schemas/BulkActivityResultSegment'
        startDateTime:
          type: string
          description: The date and time of the start of the activity in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-dd HH:mm:ss.SSS).
        startTimezone:
          $ref: '#/components/schemas/ObjectRef Entity'
        transactionType:
          $ref: '#/components/schemas/ObjectRef Entity'
        unitId:
          type: integer
          description: The ID of the unit.
          format: int64
        updatedDateTime:
          type: string
          description: The date and time this record was last updated in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-dd HH:mm:ss.SSS).
        weightValueAmount:
          type: number
          description: The amount (as a decimal value representing money) of the activity.
          format: double
        wfaTransId:
          type: integer
          description: A reference to the form.
          format: int64
        workRule:
          $ref: '#/components/schemas/ObjectRef Entity'
      description: Entity describing an Activity Result Segment for an Activity Segment.
    Activity Shift find criteria:
      required:
      - select
      - where
      type: object
      properties:
        select:
          type: array
          description: The select criteria for retrieving activity shifts. Possible
            values include SEGMENTS and SEGMENTS_WITH_RESULTS.
          items:
            type: string
            enum:
            - SEGMENTS
            - SEGMENTS_WITH_RESULTS
        where:
          $ref: '#/components/schemas/Activity Shift Where'
      description: The activity shift multi-read request model.
    ActivityShiftExportResult:
      type: object
      properties:
        activityShifts:
          type: array
          description: An array of activity shifts.
          items:
            $ref: '#/components/schemas/Activity Shift'
        employee:
          $ref: '#/components/schemas/ObjectRef'
      description: Model for activity shift export results.
    Bulk Activity Segment Context:
      type: object
      properties:
        activitySegments:
          type: array
          description: A list of the activity segments associated with a timecard.
          items:
            $ref: '#/components/schemas/BulkActivitySegmentForRest'
        employee:
          $ref: '#/components/schemas/ObjectRef Entity'
      description: Entity containing necessary data to add and update Activity Segment
        context transactions.
    NetChange find criteria:
      required:
      - select
      - where
      type: object
      properties:
        select:
          type: array
          description: The objects returned in the Retrieve Net Changes for Activity
            Shifts response. If the select list is empty, it will equal SEGMENT as
            default.
          items:
            type: string
            enum:
            - SEGMENTS
            - SEGMENTS_WITH_RESULTS
        where:
          $ref: '#/components/schemas/NetChange Where'
      description: The Net Changes request model.
    NetChangeResult:
      type: object
      properties:
        employee:
          $ref: '#/components/schemas/ObjectRef'
        segments:
          type: array
          description: A segment that is a bundle of current and previous states.
          items:
            $ref: '#/components/schemas/NetChangeBundle'
      description: The net change response model.
    Employee Activity Total response:
      type: object
      properties:
        aggregatedTotals:
          type: array
          description: A list of aggregated activity totals objects.
          items:
            $ref: '#/components/schemas/Aggregated Activity Total Entity'
        employeeContext:
          $ref: '#/components/schemas/EmployeeContextForREST'
        totalAggregationType:
          type: string
          description: 'The filtering criteria for activity totals. Valid values are:
            ALL, SHIFT, DAILY, and PERIOD_TO_DATE.'
        totalGroupByType:
          type: string
          description: An enumeration of types available for grouping the activity
            totals records. Valid values include TIMEITEM_DETAIL, COST_CENTER, LOCATION_AND_JOB,
            PAYCODE, and LABOR_CATEGORY.
      description: The activity total context transactions retrieve and update model.
    Activity Total find criteria:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/Activity Total Where'
      description: The Activity Total retrieve model.
    Activity Transactions Export criteria:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Transaction Export Request Token options'
        select:
          type: array
          description: The secondary components returned in a transaction.
          items:
            type: string
            enum:
            - RESULTS
            - EFFICIENCIES
            - SUB_EFFICIENCIES
            - TOTALS
        where:
          $ref: '#/components/schemas/Activity Transactions Export find criteria'
      description: The Activity Transactions Export criteria.
    Activity Transactions Export Response:
      type: object
      properties:
        activityTransactions:
          type: array
          description: An array of activity transactions.
          items:
            $ref: '#/components/schemas/Activity Transaction'
        nextReadToken:
          type: string
          description: The token which describes the next chunk of activity transactions.
        references:
          $ref: '#/components/schemas/Activity Transactions Export References'
      description: Activity Transactions Export Response
    Customer:
      required:
      - fullName
      - id
      - name
      - version
      type: object
      properties:
        address1:
          type: string
          description: The first address of a Customer.
        address2:
          type: string
          description: The second address of a Customer.
        address3:
          type: string
          description: The third address of a Customer.
        contactName1:
          type: string
          description: The first contact name for a Customer.
        contactName2:
          type: string
          description: The second contact name for a Customer.
        contactName3:
          type: string
          description: The third contact name for a Customer.
        fullName:
          type: string
          description: The full name of a Customer.
        id:
          type: integer
          description: An ID associated with a Customer.
          format: int64
        name:
          type: string
          description: The name of a Customer.
        phone1:
          type: string
          description: The first phone number of a Customer.
        phone2:
          type: string
          description: The second phone number of a Customer.
        phone3:
          type: string
          description: The third phone number of a Customer.
        version:
          type: integer
          description: The version of a Customer.
          format: int32
      description: The Customer model.
    CustomerRefs:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/CustomerRefsWhere'
      description: The Customer References model.
    ActivityEmployeeRefs:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/ActivityEmployeeRefsWhere'
      description: The Employee References model.
    EmployeeActivityAssignments:
      type: object
      properties:
        activities:
          type: array
          description: A list of activities directly assigned to an employee.
          items:
            $ref: '#/components/schemas/AssignedActivity'
        employee:
          $ref: '#/components/schemas/ObjectRef'
      description: The Employee with Assigned Activities model.
    ActivitiesFieldDefinition_PublicAPI:
      required:
      - active
      - fieldType
      - id
      - multiSelect
      - name
      type: object
      properties:
        active:
          type: boolean
          description: A Boolean indicator of whether or not a field definition is
            active.
        default:
          type: boolean
        fieldLength:
          type: integer
          description: The field length of a field definition.
          format: int64
        fieldType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        id:
          type: integer
          description: An ID associated with a field definition.
          format: int64
        multiSelect:
          type: boolean
          description: A Boolean indicator of whether or not a field definition allows
            multi-select.
        name:
          type: string
          description: The name of a field definition.
        precision:
          type: integer
          description: The precision of a field definition.
          format: int32
        resultCode:
          type: boolean
          description: A Boolean indicator of whether or not a field definition contains
            a result code.
          readOnly: true
        resultType:
          type: boolean
          description: A Boolean indicator of whether or not a field definition contains
            a result type.
          readOnly: true
        scale:
          type: integer
          description: The scale of a field definition.
          format: int32
        version:
          type: integer
          description: The version of a field definition.
          format: int32
      description: The Field Definition model.
    ActivitiesFieldDefinition:
      required:
      - active
      - fieldType
      - id
      - multiSelect
      - name
      type: object
      properties:
        active:
          type: boolean
          description: A Boolean indicator of whether or not a field definition is
            active.
        default:
          type: boolean
        fieldLength:
          type: integer
          description: The field length of a field definition.
          format: int64
        fieldType:
          $ref: '#/components/schemas/ObjectRef'
        id:
          type: integer
          description: An ID associated with a field definition.
          format: int64
        multiSelect:
          type: boolean
          description: A Boolean indicator of whether or not a field definition allows
            multi-select.
        name:
          type: string
          description: The name of a field definition.
        precision:
          type: integer
          description: The precision of a field definition.
          format: int32
        resultCode:
          type: boolean
          description: A Boolean indicator of whether or not a field definition contains
            a result code.
          readOnly: true
        resultType:
          type: boolean
          description: A Boolean indicator of whether or not a field definition contains
            a result type.
          readOnly: true
        scale:
          type: integer
          description: The scale of a field definition.
          format: int32
        version:
          type: integer
          description: The version of a field definition.
          format: int32
      description: The Field Definition model.
    FieldDefinitionRefs:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/FieldDefinitionRefsWhere'
      description: The Field Definition References model.
    FormProfile:
      required:
      - description
      - forms
      - id
      - name
      - version
      type: object
      properties:
        default:
          type: boolean
        description:
          type: string
          description: The description of a form profile.
        forms:
          type: array
          description: A list of forms associated with a form profile.
          items:
            $ref: '#/components/schemas/ObjectRef'
        id:
          type: integer
          description: The ID associated with a form profile.
          format: int64
        name:
          type: string
          description: The name of a form profile.
        version:
          type: integer
          description: The version of a form profile.
          format: int32
      description: The Form Profile model.
    FormProfileRefs:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/FormProfileRefsWhere'
      description: The Form Profile References model.
    Form_PublicAPI:
      required:
      - formCode
      - formType
      - id
      - localePolicy
      - offline
      - steps
      - timeOut
      type: object
      properties:
        clocksSearchConfiguration:
          $ref: '#/components/schemas/ClocksSearchConfiguration_PublicAPI'
        defaultQuery:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        description:
          type: string
          description: The description an activity form or a results template.
        formCode:
          type: string
          description: The code of an activity form.
        formType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        id:
          type: integer
          description: The ID of an activity form or a results template.
          format: int64
        localePolicy:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        offline:
          type: boolean
          description: A Boolean indicator of whether or not the form is offline.
        relatedOfflineForm:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        relatedOfflineFormType:
          type: integer
          format: int64
        steps:
          type: array
          description: The steps associated with an activity form or a results template.
          items:
            $ref: '#/components/schemas/FormStep_PublicAPI'
        timeOut:
          type: integer
          description: The number of seconds the system waits for the user to submit
            data.
          format: int32
        version:
          type: integer
          description: The version of an activity form or a results template.
          format: int32
      description: The Activity Form model.
    Form:
      required:
      - formCode
      - formType
      - id
      - localePolicy
      - offline
      - steps
      - timeOut
      type: object
      properties:
        clocksSearchConfiguration:
          $ref: '#/components/schemas/ClocksSearchConfiguration'
        defaultQuery:
          $ref: '#/components/schemas/ObjectRef'
        description:
          type: string
          description: The description an activity form or a results template.
        formCode:
          type: string
          description: The code of an activity form.
        formType:
          $ref: '#/components/schemas/ObjectRef'
        id:
          type: integer
          description: The ID of an activity form or a results template.
          format: int64
        localePolicy:
          $ref: '#/components/schemas/ObjectRef'
        offline:
          type: boolean
          description: A Boolean indicator of whether or not the form is offline.
        relatedOfflineForm:
          $ref: '#/components/schemas/ObjectRef'
        relatedOfflineFormType:
          type: integer
          format: int64
        steps:
          type: array
          description: The steps associated with an activity form or a results template.
          items:
            $ref: '#/components/schemas/FormStep'
        timeOut:
          type: integer
          description: The number of seconds the system waits for the user to submit
            data.
          format: int32
        version:
          type: integer
          description: The version of an activity form or a results template.
          format: int32
      description: The Activity Form model.
    Form_PartialPublicAPI:
      required:
      - formCode
      - formType
      - id
      - localePolicy
      - offline
      - steps
      - timeOut
      type: object
      properties:
        clocksSearchConfiguration:
          $ref: '#/components/schemas/ClocksSearchConfiguration_PartialPublicAPI'
        defaultQuery:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        description:
          type: string
          description: The description an activity form or a results template.
        formCode:
          type: string
          description: The code of an activity form.
        formType:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        id:
          type: integer
          description: The ID of an activity form or a results template.
          format: int64
        localePolicy:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        offline:
          type: boolean
          description: A Boolean indicator of whether or not the form is offline.
        relatedOfflineForm:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        relatedOfflineFormType:
          type: integer
          format: int64
        steps:
          type: array
          description: The steps associated with an activity form or a results template.
          items:
            $ref: '#/components/schemas/FormStep_PartialPublicAPI'
        timeOut:
          type: integer
          description: The number of seconds the system waits for the user to submit
            data.
          format: int32
        version:
          type: integer
          description: The version of an activity form or a results template.
          format: int32
      description: The Activity Form model.
    FormRefs:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/FormRefsWhere'
      description: The Activity Form References model.
    PayCodeAction:
      required:
      - activity
      - id
      - name
      - payCode
      - version
      type: object
      properties:
        activity:
          $ref: '#/components/schemas/ObjectRef'
        default:
          type: boolean
        id:
          type: integer
          description: The ID associated with a paycode action.
          format: int64
        name:
          type: string
          description: The name of a paycode action.
        payCode:
          $ref: '#/components/schemas/ObjectRef'
        version:
          type: integer
          description: The version of a paycode action.
          format: int32
      description: The Paycode Action model.
    PayCodeActionRefs:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/PayCodeActionRefsWhere'
      description: The Paycode Actions references model.
    Query_PublicAPI:
      required:
      - activityTypes
      - completionStatuses
      - excludeDefaultActivity
      - excludeIdleTimeActivity
      - excludePaidMealActivity
      - excludeUnpaidMealActivity
      - heldStatuses
      - id
      - name
      - version
      type: object
      properties:
        activities:
          type: array
          description: A collection of activities assigned to a query.
          items:
            $ref: '#/components/schemas/ListQueryActivity_PublicAPI'
        activityTypes:
          type: array
          description: A collection of activity types assigned to a query.
          items:
            $ref: '#/components/schemas/ObjectRef_PublicAPI'
        completionStatuses:
          type: array
          description: A collection of completion statuses assigned to a query.
          items:
            $ref: '#/components/schemas/ObjectRef_PublicAPI'
        default:
          type: boolean
        description:
          type: string
          description: The description of a query.
        directlyAssignedActivities:
          type: boolean
          description: A Boolean indicator of whether or not a query considers only
            activities directly assigned to an employee.
          readOnly: true
        excludeDefaultActivity:
          type: boolean
          description: A Boolean indicator of whether or not a query excludes default
            activity.
        excludeIdleTimeActivity:
          type: boolean
          description: A Boolean indicator of whether or not a query excludes idle
            activity.
        excludePaidMealActivity:
          type: boolean
          description: A Boolean indicator of whether or not a query excludes paid
            break activity.
        excludePayCodeActions:
          type: boolean
          description: A Boolean indicator of whether or not a query excludes activities
            that are added in any pay code as a pay code action.
        excludeUnpaidMealActivity:
          type: boolean
          description: A Boolean indicator of whether or not a query excludes meal
            break activity.
        heldStatuses:
          type: array
          description: A collection of held statuses assigned to a query.
          items:
            $ref: '#/components/schemas/ObjectRef_PublicAPI'
        id:
          type: integer
          description: The ID of a query.
          format: int64
        jobTransferSet:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        laborCategoryProfile:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        name:
          type: string
          description: The name of a query.
        notEqualToUserField1:
          type: boolean
          description: A Boolean indicator of whether or not userfield1 values must
            be matched.
        notEqualToUserField2:
          type: boolean
          description: A Boolean indicator of whether or not userfield2 values must
            be matched.
        notEqualToUserField3:
          type: boolean
          description: A Boolean indicator of whether or not userfield3 values must
            be matched.
        notEqualToUserField4:
          type: boolean
          description: A Boolean indicator of whether or not userfield4 values must
            be matched.
        processTypes:
          type: array
          description: A collection of process types assigned to a query.
          items:
            $ref: '#/components/schemas/ObjectRef_PublicAPI'
        queryDateRanges:
          type: array
          description: A collection of time period assigned to a query.
          items:
            $ref: '#/components/schemas/QueryDateRange_PublicAPI'
        queryType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        searchName:
          type: string
          description: The search name of a query.
        useEmployeeJobTransferSet:
          type: boolean
          description: A Boolean indicator of whether or not a query can use an employee
            job transfer set.
        useEmployeeLaborCategoryProfileSet:
          type: boolean
          description: A Boolean indicator of whether or not a query can use an employee
            labor category profile.
        userField1:
          type: string
          description: The user field 1 associated with a query.
        userField2:
          type: string
          description: The user field 2 associated with a query.
        userField3:
          type: string
          description: The user field 3 associated with a query.
        userField4:
          type: string
          description: The user field 4 associated with a query.
        version:
          type: integer
          description: The version of a query.
          format: int32
      description: The query model.
    Query:
      required:
      - activityTypes
      - completionStatuses
      - excludeDefaultActivity
      - excludeIdleTimeActivity
      - excludePaidMealActivity
      - excludeUnpaidMealActivity
      - heldStatuses
      - id
      - name
      - version
      type: object
      properties:
        activities:
          type: array
          description: A collection of activities assigned to a query.
          items:
            $ref: '#/components/schemas/ListQueryActivity'
        activityTypes:
          type: array
          description: A collection of activity types assigned to a query.
          items:
            $ref: '#/components/schemas/ObjectRef'
        completionStatuses:
          type: array
          description: A collection of completion statuses assigned to a query.
          items:
            $ref: '#/components/schemas/ObjectRef'
        default:
          type: boolean
        description:
          type: string
          description: The description of a query.
        directlyAssignedActivities:
          type: boolean
          description: A Boolean indicator of whether or not a query considers only
            activities directly assigned to an employee.
          readOnly: true
        excludeDefaultActivity:
          type: boolean
          description: A Boolean indicator of whether or not a query excludes default
            activity.
        excludeIdleTimeActivity:
          type: boolean
          description: A Boolean indicator of whether or not a query excludes idle
            activity.
        excludePaidMealActivity:
          type: boolean
          description: A Boolean indicator of whether or not a query excludes paid
            break activity.
        excludePayCodeActions:
          type: boolean
          description: A Boolean indicator of whether or not a query excludes activities
            that are added in any pay code as a pay code action.
        excludeUnpaidMealActivity:
          type: boolean
          description: A Boolean indicator of whether or not a query excludes meal
            break activity.
        heldStatuses:
          type: array
          description: A collection of held statuses assigned to a query.
          items:
            $ref: '#/components/schemas/ObjectRef'
        id:
          type: integer
          description: The ID of a query.
          format: int64
        jobTransferSet:
          $ref: '#/components/schemas/ObjectRef'
        laborCategoryProfile:
          $ref: '#/components/schemas/ObjectRef'
        name:
          type: string
          description: The name of a query.
        notEqualToUserField1:
          type: boolean
          description: A Boolean indicator of whether or not userfield1 values must
            be matched.
        notEqualToUserField2:
          type: boolean
          description: A Boolean indicator of whether or not userfield2 values must
            be matched.
        notEqualToUserField3:
          type: boolean
          description: A Boolean indicator of whether or not userfield3 values must
            be matched.
        notEqualToUserField4:
          type: boolean
          description: A Boolean indicator of whether or not userfield4 values must
            be matched.
        processTypes:
          type: array
          description: A collection of process types assigned to a query.
          items:
            $ref: '#/components/schemas/ObjectRef'
        queryDateRanges:
          type: array
          description: A collection of time period assigned to a query.
          items:
            $ref: '#/components/schemas/QueryDateRange'
        queryType:
          $ref: '#/components/schemas/ObjectRef'
        searchName:
          type: string
          description: The search name of a query.
        useEmployeeJobTransferSet:
          type: boolean
          description: A Boolean indicator of whether or not a query can use an employee
            job transfer set.
        useEmployeeLaborCategoryProfileSet:
          type: boolean
          description: A Boolean indicator of whether or not a query can use an employee
            labor category profile.
        userField1:
          type: string
          description: The user field 1 associated with a query.
        userField2:
          type: string
          description: The user field 2 associated with a query.
        userField3:
          type: string
          description: The user field 3 associated with a query.
        userField4:
          type: string
          description: The user field 4 associated with a query.
        version:
          type: integer
          description: The version of a query.
          format: int32
      description: The query model.
    Query_PartialPublicAPI:
      required:
      - activityTypes
      - completionStatuses
      - excludeDefaultActivity
      - excludeIdleTimeActivity
      - excludePaidMealActivity
      - excludeUnpaidMealActivity
      - heldStatuses
      - id
      - name
      - version
      type: object
      properties:
        activities:
          type: array
          description: A collection of activities assigned to a query.
          items:
            $ref: '#/components/schemas/ListQueryActivity_PartialPublicAPI'
        activityTypes:
          type: array
          description: A collection of activity types assigned to a query.
          items:
            $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        completionStatuses:
          type: array
          description: A collection of completion statuses assigned to a query.
          items:
            $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        default:
          type: boolean
        description:
          type: string
          description: The description of a query.
        directlyAssignedActivities:
          type: boolean
          description: A Boolean indicator of whether or not a query considers only
            activities directly assigned to an employee.
          readOnly: true
        excludeDefaultActivity:
          type: boolean
          description: A Boolean indicator of whether or not a query excludes default
            activity.
        excludeIdleTimeActivity:
          type: boolean
          description: A Boolean indicator of whether or not a query excludes idle
            activity.
        excludePaidMealActivity:
          type: boolean
          description: A Boolean indicator of whether or not a query excludes paid
            break activity.
        excludePayCodeActions:
          type: boolean
          description: A Boolean indicator of whether or not a query excludes activities
            that are added in any pay code as a pay code action.
        excludeUnpaidMealActivity:
          type: boolean
          description: A Boolean indicator of whether or not a query excludes meal
            break activity.
        heldStatuses:
          type: array
          description: A collection of held statuses assigned to a query.
          items:
            $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        id:
          type: integer
          description: The ID of a query.
          format: int64
        jobTransferSet:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        laborCategoryProfile:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        name:
          type: string
          description: The name of a query.
        notEqualToUserField1:
          type: boolean
          description: A Boolean indicator of whether or not userfield1 values must
            be matched.
        notEqualToUserField2:
          type: boolean
          description: A Boolean indicator of whether or not userfield2 values must
            be matched.
        notEqualToUserField3:
          type: boolean
          description: A Boolean indicator of whether or not userfield3 values must
            be matched.
        notEqualToUserField4:
          type: boolean
          description: A Boolean indicator of whether or not userfield4 values must
            be matched.
        processTypes:
          type: array
          description: A collection of process types assigned to a query.
          items:
            $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        queryDateRanges:
          type: array
          description: A collection of time period assigned to a query.
          items:
            $ref: '#/components/schemas/QueryDateRange_PartialPublicAPI'
        queryType:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        searchName:
          type: string
          description: The search name of a query.
        useEmployeeJobTransferSet:
          type: boolean
          description: A Boolean indicator of whether or not a query can use an employee
            job transfer set.
        useEmployeeLaborCategoryProfileSet:
          type: boolean
          description: A Boolean indicator of whether or not a query can use an employee
            labor category profile.
        userField1:
          type: string
          description: The user field 1 associated with a query.
        userField2:
          type: string
          description: The user field 2 associated with a query.
        userField3:
          type: string
          description: The user field 3 associated with a query.
        userField4:
          type: string
          description: The user field 4 associated with a query.
        version:
          type: integer
          description: The version of a query.
          format: int32
      description: The query model.
    QueryRefs:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/QueryRefsWhere'
      description: The Query References model.
    QueryProfile:
      required:
      - id
      - name
      type: object
      properties:
        accessLevelType:
          $ref: '#/components/schemas/ObjectRef'
        default:
          type: boolean
        description:
          type: string
          description: The description of a query profile.
        displayActivitySelectInDevices:
          type: boolean
          description: A Boolean indicator of whether or not display activity selection
            in devices for a query profile.
        id:
          type: integer
          description: The ID of a query profile.
          format: int64
        name:
          type: string
          description: The name of a query profile.
        queries:
          type: array
          description: The activity queries associated with a query profile.
          items:
            $ref: '#/components/schemas/ObjectRef'
        version:
          type: integer
          description: The version of a query profile.
          format: int32
      description: The Query Profile model.
    QueryProfileRefs:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/QueryProfileRefsWhere'
      description: The Query Profile References model.
    ResultCodeProfile:
      required:
      - id
      - name
      - version
      type: object
      properties:
        default:
          type: boolean
        description:
          type: string
          description: The description of a result code profile.
        fieldDefinitionResultCodeAssignments:
          type: array
          description: A collection of objects representing result code assignments
            to field definitions.
          items:
            $ref: '#/components/schemas/FieldDefinitionResultCodeAssignment'
        id:
          type: integer
          description: The ID associated with a result code profile.
          format: int64
        name:
          type: string
          description: The name of a result code profile.
        version:
          type: integer
          description: The version of a result code profile.
          format: int32
      description: The Result Code Profile model.
    ResultCodeProfile_PartialPublicAPI:
      required:
      - id
      - name
      - version
      type: object
      properties:
        default:
          type: boolean
        description:
          type: string
          description: The description of a result code profile.
        fieldDefinitionResultCodeAssignments:
          type: array
          description: A collection of objects representing result code assignments
            to field definitions.
          items:
            $ref: '#/components/schemas/FieldDefinitionResultCodeAssignment_PartialPublicAPI'
        id:
          type: integer
          description: The ID associated with a result code profile.
          format: int64
        name:
          type: string
          description: The name of a result code profile.
        version:
          type: integer
          description: The version of a result code profile.
          format: int32
      description: The Result Code Profile model.
    ResultCodeProfileRefs:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/ResultCodeProfileRefsWhere'
      description: The Result Code Profile References model.
    ResultCode_PublicAPI:
      required:
      - active
      - description
      - fieldDefinition
      - id
      - name
      type: object
      properties:
        active:
          type: boolean
          description: A Boolean indicator of whether or not a result code is active.
        description:
          type: string
          description: The description of a result code.
        fieldDefinition:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        id:
          type: integer
          description: An ID associated with a result code.
          format: int64
        name:
          type: string
          description: The name of a result code.
        sdmKey:
          type: string
        version:
          type: integer
          description: The version of a result code.
          format: int32
      description: The Result Code object model.
    ResultCodeRefs:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/ResultCodeRefsWhere'
      description: The Result Code reference model.
    ResultsTemplate_PublicAPI:
      required:
      - id
      - name
      - steps
      type: object
      properties:
        description:
          type: string
          description: The description an activity form or a results template.
        id:
          type: integer
          description: The ID of an activity form or a results template.
          format: int64
        name:
          type: string
          description: The name of a results template.
        steps:
          type: array
          description: The steps associated with an activity form or a results template.
          items:
            $ref: '#/components/schemas/ResultsTemplateStep_PublicAPI'
        version:
          type: integer
          description: The version of an activity form or a results template.
          format: int32
      description: The Results Template model.
    ResultsTemplate:
      required:
      - id
      - name
      - steps
      type: object
      properties:
        description:
          type: string
          description: The description an activity form or a results template.
        id:
          type: integer
          description: The ID of an activity form or a results template.
          format: int64
        name:
          type: string
          description: The name of a results template.
        steps:
          type: array
          description: The steps associated with an activity form or a results template.
          items:
            $ref: '#/components/schemas/ResultsTemplateStep'
        version:
          type: integer
          description: The version of an activity form or a results template.
          format: int32
      description: The Results Template model.
    ResultsTemplateRefs:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/ResultsTemplateRefsWhere'
      description: The Results Template References model.
    Setting:
      required:
      - id
      - internalName
      - name
      - value
      - version
      type: object
      properties:
        booleanValue:
          type: boolean
          description: The Boolean value of a setting.
        displayContent:
          type: string
          description: The display content of a setting.
        id:
          type: integer
          description: An ID associated with a setting.
          format: int64
        integerValue:
          type: integer
          description: The integer value of a setting.
          format: int32
        internalName:
          type: string
          description: The internal name of a setting.
        name:
          type: string
          description: The name of a setting.
        value:
          type: string
          description: The value of a setting.
        version:
          type: integer
          description: The version of a setting.
          format: int32
      description: The Setting model.
    SettingRefs:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/SettingRefsWhere'
      description: The Setting References model.
    Activity Team Segment Request:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/Activity Team Segment Multi Delete Where'
      description: Activity Team Segments identifier model.
    Active Team Members for the team segment identifier:
      type: object
      properties:
        activeTeamMembers:
          type: array
          description: A list of Active Team Members.
          items:
            $ref: '#/components/schemas/Active Team Member'
        identifier:
          $ref: '#/components/schemas/Activity Team Segment Identifier'
      description: The Active Team Member List model, which contains a list of Active
        Team Members together with an Activity Team Segment identifier.
    Activity Team Event Audits Request model:
      type: object
      properties:
        select:
          $ref: '#/components/schemas/Activity Team Event Audits Select model'
        where:
          $ref: '#/components/schemas/Activity Team Event Audits Where model'
      description: Activity Team Event Audit Request model.
    Activity Team Event Audits Response model:
      type: object
      properties:
        results:
          type: array
          description: A list of activity team result segments associated with an
            audit.
          items:
            $ref: '#/components/schemas/Activity Team Result Segment Audit model'
        segments:
          type: array
          description: A list of activity team segments associated with an audit.
          items:
            $ref: '#/components/schemas/Activity Team Segment Audit model'
        team:
          $ref: '#/components/schemas/ObjectRef'
      description: Activity Team Event Audits Response model.
    Activity Team Segment Read Request:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/Activity Team Segment Multi Read Where'
      description: Activity Team Segment Read Request
    Activity Team Segments Read Response:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/Activity Team Segment Identifier'
        team:
          $ref: '#/components/schemas/ObjectRef'
        teamResults:
          type: array
          description: '@v1.0.activityteamsegmentsreadresponse.apimodelproperty.results.description'
          readOnly: true
          items:
            $ref: '#/components/schemas/Activity Team Segment Result'
        teamSegment:
          $ref: '#/components/schemas/Activity Team Segment'
        teamSegments:
          type: array
          description: A list of Activity Team Segments.
          readOnly: true
          items:
            $ref: '#/components/schemas/Activity Team Segment'
      description: Activity Team Segments Read Response
    ActivityTeamSegmentWithResultsForRest:
      type: object
      properties:
        acceptAction:
          type: string
          enum:
          - ACCEPT
          - REMOVE
        identifier:
          $ref: '#/components/schemas/Activity Team Segment Identifier'
        teamResults:
          type: array
          items:
            $ref: '#/components/schemas/Activity Team Segment Result'
        teamSegment:
          $ref: '#/components/schemas/Activity Team Segment'
    Activity Team Segments Response:
      type: object
      properties:
        activityTeamSegments:
          type: array
          description: A list of Activity Team Segments.
          items:
            $ref: '#/components/schemas/Activity Team Segment'
      description: Activity Team Segments Response
    Team segment net change find criteria:
      required:
      - select
      - where
      type: object
      properties:
        select:
          type: array
          description: The objects returned in the Retrieve Net Changes for Team Segments.
          items:
            type: string
            enum:
            - SEGMENTS
            - SEGMENTS_WITH_RESULTS
        where:
          $ref: '#/components/schemas/Team Segment NetChange find criteria'
      description: The Team Segment Net Changes request model.
    ActivityTeamDefinition_PublicAPI:
      required:
      - defaultMembershipDurationInMinutes
      - defaultSegmentDurationInMinutes
      - id
      - name
      type: object
      properties:
        active:
          type: boolean
          description: A Boolean indicator of whether or not an activity team is active.
        createdDateTime:
          type: string
          description: The date and time an activity team was created in ISO_LOCAL_DATE_TIME
            format (yyyy-mm-ddThh:mm:ss.sss).
          readOnly: true
        defaultActivity:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        defaultActivityIsIdle:
          type: boolean
          description: A Boolean indicator of whether or not the default activity
            is idle.
        defaultMembershipDurationInMinutes:
          type: integer
          description: The default maximum duration in minutes of an activity team
            membership.
          format: int32
        defaultSegmentDurationInMinutes:
          type: integer
          description: The default maximum duration in minutes of an activity team
            segment.
          format: int32
        description:
          type: string
          description: The description of an activity team.
        firstDayOfWeek:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        id:
          type: integer
          description: The ID associated with an activity team.
          format: int64
        locations:
          type: array
          description: A list of locations associated with an activity team.
          items:
            $ref: '#/components/schemas/ObjectRef_PublicAPI'
        maxConcurrentActivities:
          type: integer
          description: A maximum number of direct/indirect activities that an activity
            team can be working on simultaneously.
          format: int32
        maxDirectActivities:
          type: integer
          description: A maximum number of direct activities that an activity team
            can be working on simultaneously.
          format: int32
        maxIndirectActivities:
          type: integer
          description: A maximum number of indirect activities that an activity team
            can be working on simultaneously.
          format: int32
        name:
          type: string
          description: The name of an activity team.
        timezone:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        updatedDateTime:
          type: string
          description: The date and time of the last update to an activity team in
            ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).
          readOnly: true
        userField1:
          type: string
          description: The user field 1 associated with an activity team.
        userField2:
          type: string
          description: The user field 2 associated with an activity team.
        userField3:
          type: string
          description: The user field 3 associated with an activity team.
        userField4:
          type: string
          description: The user field 4 associated with an activity team.
        version:
          type: integer
          description: The version of an activity team.
          format: int32
      description: The Activity Team model.
    ActivityTeamDefinition:
      required:
      - defaultMembershipDurationInMinutes
      - defaultSegmentDurationInMinutes
      - id
      - name
      type: object
      properties:
        active:
          type: boolean
          description: A Boolean indicator of whether or not an activity team is active.
        createdDateTime:
          type: string
          description: The date and time an activity team was created in ISO_LOCAL_DATE_TIME
            format (yyyy-mm-ddThh:mm:ss.sss).
          readOnly: true
        defaultActivity:
          $ref: '#/components/schemas/ObjectRef'
        defaultActivityIsIdle:
          type: boolean
          description: A Boolean indicator of whether or not the default activity
            is idle.
        defaultMembershipDurationInMinutes:
          type: integer
          description: The default maximum duration in minutes of an activity team
            membership.
          format: int32
        defaultSegmentDurationInMinutes:
          type: integer
          description: The default maximum duration in minutes of an activity team
            segment.
          format: int32
        description:
          type: string
          description: The description of an activity team.
        firstDayOfWeek:
          $ref: '#/components/schemas/ObjectRef'
        id:
          type: integer
          description: The ID associated with an activity team.
          format: int64
        locations:
          type: array
          description: A list of locations associated with an activity team.
          items:
            $ref: '#/components/schemas/ObjectRef'
        maxConcurrentActivities:
          type: integer
          description: A maximum number of direct/indirect activities that an activity
            team can be working on simultaneously.
          format: int32
        maxDirectActivities:
          type: integer
          description: A maximum number of direct activities that an activity team
            can be working on simultaneously.
          format: int32
        maxIndirectActivities:
          type: integer
          description: A maximum number of indirect activities that an activity team
            can be working on simultaneously.
          format: int32
        name:
          type: string
          description: The name of an activity team.
        timezone:
          $ref: '#/components/schemas/ObjectRef'
        updatedDateTime:
          type: string
          description: The date and time of the last update to an activity team in
            ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).
          readOnly: true
        userField1:
          type: string
          description: The user field 1 associated with an activity team.
        userField2:
          type: string
          description: The user field 2 associated with an activity team.
        userField3:
          type: string
          description: The user field 3 associated with an activity team.
        userField4:
          type: string
          description: The user field 4 associated with an activity team.
        version:
          type: integer
          description: The version of an activity team.
          format: int32
      description: The Activity Team model.
    ActivityTeamDefinitionRefs:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/ActivityTeamDefinitionRefsWhere'
      description: The Activity Team References model.
    UnitOfMeasure:
      required:
      - abbreviatedName
      - active
      - id
      - name
      - version
      type: object
      properties:
        abbreviatedName:
          type: string
          description: The abbreviated name of a unit of measure.
        active:
          type: boolean
          description: A Boolean indicator of whether or not a unit of measure is
            active.
        id:
          type: integer
          description: The ID associated with a unit of measure.
          format: int64
        name:
          type: string
          description: The name of a unit of measure.
        version:
          type: integer
          description: The version of a unit of measure.
          format: int32
      description: The Unit of Measure model.
    UnitOfMeasureRefs:
      required:
      - where
      type: object
      properties:
        where:
          $ref: '#/components/schemas/UnitOfMeasureRefsWhere'
      description: The Unit of Measure References model.
    ObjectRef_PublicAPI:
      type: object
      properties:
        id:
          type: integer
          description: The ID associated with an object reference.
          format: int64
          readOnly: true
        qualifier:
          type: string
          description: The qualifier associated with an object reference.
          readOnly: true
      description: The HCA object reference object model.
    ActivityStandard_PublicAPI:
      required:
      - effectiveStartDate
      - id
      - laborStandardQuantity
      - laborStandardSeconds
      type: object
      properties:
        activityId:
          type: integer
          format: int64
        effectiveEndDate:
          type: string
          description: The effective end date in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
          readOnly: true
        effectiveStartDate:
          type: string
          description: The effective start date in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        id:
          type: integer
          description: The ID of an activity standard.
          format: int64
        laborStandardQuantity:
          type: number
          description: The labor standard quantity of an activity standard.
        laborStandardSeconds:
          type: integer
          description: The labor standard time in seconds of an activity standard.
          format: int64
      description: The Activity Standard model.
    ActivityDataAccess_PublicAPI:
      type: object
      properties:
        dataAccessType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        genericJobs:
          type: array
          description: A list of generic jobs associated with an activity.
          items:
            $ref: '#/components/schemas/ObjectRef_PublicAPI'
        laborCategories:
          type: array
          description: A list of labor category entry lists containing the labor categories
            associated with an activity.
          items:
            $ref: '#/components/schemas/LaborCategoryEntryListRef_PublicAPI'
        orgSet:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
      description: The Activity Data Access model.
    ActivityEmployee_PublicAPI:
      type: object
      properties:
        fullName:
          type: string
        id:
          type: integer
          description: The ID of an employee. This is not a person number.
          format: int64
        qualifier:
          type: string
          description: The person number of an employee. This is not an employee ID.
      description: The Activity Employee model.
    ActivityHeader_PublicAPI:
      required:
      - id
      - name
      type: object
      properties:
        activityType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        canBeStartedAfterEndDate:
          type: boolean
          description: A Boolean indicator of whether or not activities can be started
            after the scheduled end date.
        canBeStartedBeforeStartDate:
          type: boolean
          description: A Boolean indicator of whether or not activities can be started
            before the scheduled start date.
        customer:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        id:
          type: integer
          description: The ID of an activity header.
          format: int64
        isAutoMoves:
          type: boolean
          description: A Boolean indicator of whether or not to enable automatic moves.
        isExtendedCompletionStatus:
          type: boolean
          description: A Boolean indicator of whether or not the completion status
            is extended.
        isHoldParent:
          type: boolean
          description: A Boolean indicator of whether or not to hold the parent.
        isIncludedCompleteQuantity:
          type: boolean
          description: A Boolean indicator of whether or not to include the complete
            quantity in efficiencies.
        isIncludedReworkedQuantity:
          type: boolean
          description: A Boolean indicator of whether or not to include the reworked
            quantity in efficiencies.
        isIncludedScrappedQuantity:
          type: boolean
          description: A Boolean indicator of whether or not to include the scrapped
            quantity in efficiencies.
        name:
          type: string
          description: The name of an activity header.
        sequenceValidationType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
      description: The Activity Header model.
    ActivityTransfer_PublicAPI:
      type: object
      properties:
        costCenter:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        expiredLocation:
          type: boolean
          description: A Boolean indicator of whether or not a job's location is expired.
            This property is only returned if it is true.
          readOnly: true
        inactiveCostCenter:
          type: boolean
          description: A Boolean indicator of whether or not the cost center is inactive.
            This property is only returned if it is true.
          readOnly: true
        inactiveLaborCategory:
          type: boolean
          description: A Boolean indicator of whether or not a labor category in the
            list of labor categories is inactive. This property is only returned if
            it is true.
          readOnly: true
        isEmptyTransfer:
          type: boolean
          description: A Boolean indicator of whether or not an activity transfer
            is empty.
        laborCategories:
          type: array
          description: A list of labor category entry lists containing the labor categories
            associated with an activity transfer.
          items:
            $ref: '#/components/schemas/TransferLaborCategory_PublicAPI'
        locationJob:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        nonDefaultTransfers:
          type: array
          description: A list of non-default activity transfers associated with an
            activity transfer.
          items:
            $ref: '#/components/schemas/ActivityTransfer_PublicAPI'
        transferLabel:
          type: string
          description: A label associated with an activity transfer.
        workRule:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
      description: The Activity Transfer Type model.
    ActivityStandard:
      required:
      - effectiveStartDate
      - id
      - laborStandardQuantity
      - laborStandardSeconds
      type: object
      properties:
        activityId:
          type: integer
          format: int64
        effectiveEndDate:
          type: string
          description: The effective end date in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
          readOnly: true
        effectiveStartDate:
          type: string
          description: The effective start date in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        id:
          type: integer
          description: The ID of an activity standard.
          format: int64
        laborStandardQuantity:
          type: number
          description: The labor standard quantity of an activity standard.
        laborStandardSeconds:
          type: integer
          description: The labor standard time in seconds of an activity standard.
          format: int64
      description: The Activity Standard model.
    ActivityDataAccess:
      type: object
      properties:
        dataAccessType:
          $ref: '#/components/schemas/ObjectRef'
        genericJobs:
          type: array
          description: A list of generic jobs associated with an activity.
          items:
            $ref: '#/components/schemas/ObjectRef'
        laborCategories:
          type: array
          description: A list of labor category entry lists containing the labor categories
            associated with an activity.
          items:
            $ref: '#/components/schemas/LaborCategoryEntryListRef'
        orgSet:
          $ref: '#/components/schemas/ObjectRef'
      description: The Activity Data Access model.
    ActivityEmployee:
      type: object
      properties:
        fullName:
          type: string
        id:
          type: integer
          description: The ID of an employee. This is not a person number.
          format: int64
        qualifier:
          type: string
          description: The person number of an employee. This is not an employee ID.
      description: The Activity Employee model.
    ActivityHeader:
      required:
      - id
      - name
      type: object
      properties:
        activityType:
          $ref: '#/components/schemas/ObjectRef'
        canBeStartedAfterEndDate:
          type: boolean
          description: A Boolean indicator of whether or not activities can be started
            after the scheduled end date.
        canBeStartedBeforeStartDate:
          type: boolean
          description: A Boolean indicator of whether or not activities can be started
            before the scheduled start date.
        customer:
          $ref: '#/components/schemas/ObjectRef'
        id:
          type: integer
          description: The ID of an activity header.
          format: int64
        isAutoMoves:
          type: boolean
          description: A Boolean indicator of whether or not to enable automatic moves.
        isExtendedCompletionStatus:
          type: boolean
          description: A Boolean indicator of whether or not the completion status
            is extended.
        isHoldParent:
          type: boolean
          description: A Boolean indicator of whether or not to hold the parent.
        isIncludedCompleteQuantity:
          type: boolean
          description: A Boolean indicator of whether or not to include the complete
            quantity in efficiencies.
        isIncludedReworkedQuantity:
          type: boolean
          description: A Boolean indicator of whether or not to include the reworked
            quantity in efficiencies.
        isIncludedScrappedQuantity:
          type: boolean
          description: A Boolean indicator of whether or not to include the scrapped
            quantity in efficiencies.
        name:
          type: string
          description: The name of an activity header.
        sequenceValidationType:
          $ref: '#/components/schemas/ObjectRef'
      description: The Activity Header model.
    ActivityTransfer:
      type: object
      properties:
        costCenter:
          $ref: '#/components/schemas/ObjectRef'
        expiredLocation:
          type: boolean
          description: A Boolean indicator of whether or not a job's location is expired.
            This property is only returned if it is true.
          readOnly: true
        inactiveCostCenter:
          type: boolean
          description: A Boolean indicator of whether or not the cost center is inactive.
            This property is only returned if it is true.
          readOnly: true
        inactiveLaborCategory:
          type: boolean
          description: A Boolean indicator of whether or not a labor category in the
            list of labor categories is inactive. This property is only returned if
            it is true.
          readOnly: true
        isEmptyTransfer:
          type: boolean
          description: A Boolean indicator of whether or not an activity transfer
            is empty.
        laborCategories:
          type: array
          description: A list of labor category entry lists containing the labor categories
            associated with an activity transfer.
          items:
            $ref: '#/components/schemas/TransferLaborCategory'
        locationJob:
          $ref: '#/components/schemas/ObjectRef'
        nonDefaultTransfers:
          type: array
          description: A list of non-default activity transfers associated with an
            activity transfer.
          items:
            $ref: '#/components/schemas/ActivityTransfer'
        transferLabel:
          type: string
          description: A label associated with an activity transfer.
        workRule:
          $ref: '#/components/schemas/ObjectRef'
      description: The Activity Transfer Type model.
    ActivityExportRequestOptions:
      type: object
      properties:
        nextReadToken:
          type: string
          description: A token which identifies the next section of paginated results
            to return.
      description: The Retrieve Activity Export Definitions request Options model.
    ActivityExportRequestWhere:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/ObjectRef'
      description: The Retrieve Activity Export Definitions request Where model.
    ActivityExportDefinition:
      type: object
      properties:
        activityType:
          $ref: '#/components/schemas/ObjectRef'
        actualCompleteDate:
          type: string
          description: The actual complete date in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        actualStartDate:
          type: string
          description: The actual start date in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        combinedName:
          type: string
          description: The combined name of an activity.
        completeStatus:
          $ref: '#/components/schemas/ObjectRef'
        description:
          type: string
          description: The description of an activity.
        id:
          type: integer
          description: The ID of an activity.
          format: int64
        priorityType:
          $ref: '#/components/schemas/ObjectRef'
        processType:
          $ref: '#/components/schemas/ObjectRef'
        relatedResultTemplate:
          $ref: '#/components/schemas/ObjectRef'
        scheduledCompleteDate:
          type: string
          description: The scheduled complete date in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        scheduledStartDate:
          type: string
          description: The scheduled start date in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
      description: The Activity Export Definition model.
    ActivityRefsWhere:
      required:
      - activities
      type: object
      properties:
        activities:
          $ref: '#/components/schemas/ObjectRefList'
      description: The Activity where clause model.
    Activity Efficiency Multi Read Where:
      required:
      - dateRange
      - employees
      type: object
      properties:
        activities:
          $ref: '#/components/schemas/ObjectRefList'
        dateRange:
          $ref: '#/components/schemas/Activity Efficiency Date Range'
        employees:
          $ref: '#/components/schemas/ObjectRefList'
      description: The activity efficiencies where clause model.
    Activity Efficiency DTO:
      type: object
      properties:
        activity:
          $ref: '#/components/schemas/ObjectRef'
        activitySegmentId:
          type: integer
          description: A reference to an activity segment.
          format: int64
        allocatedSeconds:
          type: number
          description: The number of allocated seconds used to calculate an efficiency.
        earnedSeconds:
          type: number
          description: The calculated value of earned seconds for a particular activity
            span.
        efficiency:
          type: number
          description: The calculated value of efficiency for a particular activity
            span.
        efficiencyQuantity:
          type: number
          description: The quantity used to calculate an efficiency.
        efficiencySubSegments:
          type: array
          description: An object representing a collection of sub-segment efficiencies.
          items:
            $ref: '#/components/schemas/Activity Efficiency DTO'
        endDateTime:
          type: string
          description: The date and time of the end of the activity efficiency in
            ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).
        endTimezone:
          $ref: '#/components/schemas/ObjectRef Entity'
        startDateTime:
          type: string
          description: The date and time of the start of the activity efficiency in
            ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).
        startTimezone:
          $ref: '#/components/schemas/ObjectRef Entity'
        workItemId:
          type: integer
          description: A reference to a work item.
          format: int64
      description: An object representing an Activity Efficiency.
    Configuration:
      type: object
      properties:
        timeframe:
          $ref: '#/components/schemas/SchedulingObjectRef'
        useAllHomeLocations:
          type: boolean
    ObjectRef_PartialPublicAPI:
      type: object
      properties:
        id:
          type: integer
          description: The ID associated with an object reference.
          format: int64
          readOnly: true
        qualifier:
          type: string
          description: The qualifier associated with an object reference.
          readOnly: true
      description: The HCA object reference object model.
    Configuration_PartialPublicAPI:
      required:
      - checkOrphanSpanCreation
      - futureValidation
      - overAllocation
      - underAllocation
      type: object
      properties:
        checkOrphanSpanCreation:
          type: boolean
          description: A Boolean indicator of whether or not to validate user orphan
            span creation.
        futureValidation:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        overAllocation:
          $ref: '#/components/schemas/Configuration_PartialPublicAPI'
        underAllocation:
          $ref: '#/components/schemas/Configuration_PartialPublicAPI'
        varianceCheck:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
      description: Timecard validation model.
    ProfileRefsWhere:
      required:
      - activityProfiles
      type: object
      properties:
        activityProfiles:
          $ref: '#/components/schemas/ObjectRefList'
      description: The Profile where clause model.
    ActivityShiftMultiDeleteWhere:
      type: object
      properties:
        activitySegments:
          type: array
          description: A list of activity segments associated with an activity shift.
          items:
            $ref: '#/components/schemas/Bulk Activity Segments Delete Context'
    ObjectRef Entity:
      type: object
      properties:
        id:
          type: integer
          description: Object Ref Id
          format: int64
        qualifier:
          type: string
          description: Object Ref Unique qualifier
      description: ObjectRef contains an id and qualifier and either field should
        be able to uniquely identify an Object
    BulkActivitySegmentIdentifier:
      type: object
      properties:
        accepted:
          type: boolean
          description: A Boolean indicator of whether or not the segment is accepted.
        activity:
          $ref: '#/components/schemas/ObjectRef Entity'
        durationDate:
          type: string
          description: The duration date of the activity in ISO_LOCAL_DATE format
            (yyyy-MM-dd).
          format: date
        durationInSeconds:
          type: integer
          description: The duration in seconds of the activity.
          format: int32
        endDateTime:
          type: string
          description: The date and time of the end of the activity in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-dd HH:mm:ss.SSS).
        endTimezone:
          $ref: '#/components/schemas/ObjectRef Entity'
        id:
          type: integer
          description: The ID of an activity segment.
          format: int64
        reordered:
          type: boolean
          description: A Boolean indicator of whether or not type operation is reordered.
        startDateTime:
          type: string
          description: The date and time of the start of the activity in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-dd HH:mm:ss.SSS).
        startTimezone:
          $ref: '#/components/schemas/ObjectRef Entity'
      description: An activity segment identifier for resolving activity segments
        during import.
    Timecard Comment Note:
      type: object
      properties:
        comment:
          $ref: '#/components/schemas/Timecard Comment'
        id:
          type: integer
          description: The ID of this set of Comments and attached Notes.
          format: int64
        notes:
          type: array
          description: The Notes associated with a Comment.
          items:
            $ref: '#/components/schemas/Timecard Note'
      description: Entity describing a set of Comments and attached Notes.
    Timecard Activity Segment Bulk Labor Category Transfer:
      type: object
      properties:
        laborCategoryDef:
          $ref: '#/components/schemas/ObjectRef Entity'
        laborCategoryEntry:
          $ref: '#/components/schemas/ObjectRef Entity'
      description: Entity containing information regarding a transfer of a labor category.
    BulkActivityResultSegment:
      type: object
      properties:
        childResultSegments:
          type: array
          description: A reference to a list of child Activity Result Segments.
          items:
            $ref: '#/components/schemas/BulkActivityResultSegment'
        createdDateTime:
          type: string
          description: The date and time this record was created in ISO_LOCAL_DATE_TIME
            format (yyyy-mm-ddThh:mm:ss.sss).
        dataSourceId:
          type: integer
          description: The ID of the Data Source.
          format: int64
        dateTimeResult:
          type: string
          description: The DateTime result for the Activity Result Segment.
        decimalResult:
          type: number
          description: The decimal result for the Activity Result Segment.
          format: double
        effectiveDateTime:
          type: string
          description: The effective date and time of this record in ISO_LOCAL_DATE_TIME
            format (yyyy-mm-ddThh:mm:ss.sss).
        fieldDefinition:
          $ref: '#/components/schemas/ObjectRef'
        id:
          type: integer
          description: The ID of an Activity Result Segment.
          format: int64
        numericResult:
          type: integer
          description: The numeric result for the Activity Result Segment.
          format: int64
        resultCode:
          $ref: '#/components/schemas/ObjectRef'
        textResult:
          type: string
          description: The text result for the Activity Result Segment.
        timeResult:
          type: string
          description: The time result for the Activity Result Segment.
        updatedDateTime:
          type: string
          description: The date and time this record was last updated in ISO_LOCAL_DATE_TIME
            format (yyyy-mm-ddThh:mm:ss.sss).
      description: The bulk activity result segment object model.
    Activity Shift Where:
      required:
      - employees
      type: object
      properties:
        activities:
          $ref: '#/components/schemas/ObjectRefList'
        dateRange:
          $ref: '#/components/schemas/ActivityShiftDateRange'
        employees:
          $ref: '#/components/schemas/ObjectRefList'
        returnDataWithoutApplyDatesOnLastDay:
          type: boolean
          description: A Boolean indicator of whether or not to return data without
            apply dates on the last day.
      description: The ActivityShift where object model.
    Activity Shift:
      type: object
      properties:
        activitySpans:
          type: array
          description: An array of activity spans.
          items:
            $ref: '#/components/schemas/ActivitySpan'
        workShiftId:
          type: integer
          description: The ID of a Work shift.
          format: int64
      description: The activity shift for export model.
    NetChange Where:
      required:
      - endDateTime
      - lastRunDateTime
      type: object
      properties:
        activities:
          $ref: '#/components/schemas/ObjectRefList'
        employees:
          $ref: '#/components/schemas/ObjectRefList'
        endDateTime:
          type: string
          description: The inclusive end date for the timeperiod to be selected in
            ISO_LOCAL_DATE format (YYYY-MM-DD).
        futureDatedActivities:
          type: boolean
          description: A Boolean indicator of whether or not to include activity segments
            which are in future (false by default).
        lastRunDateTime:
          type: string
          description: The inclusive starting date for the timeperiod to be selected
            in ISO_LOCAL_DATE format (YYYY-MM-DD).
      description: Entity defining the NetChange where object.
    NetChangeBundle:
      type: object
      properties:
        current:
          $ref: '#/components/schemas/NetChangeRevision'
        previous:
          $ref: '#/components/schemas/NetChangeRevision'
      description: The net changes bundle model, which bundles current and previous
        states.
    Aggregated Activity Total Entity:
      type: object
      properties:
        accepted:
          type: boolean
          description: A Boolean indicator of whether or not the segment is accepted.
        activity:
          $ref: '#/components/schemas/ObjectRef Entity'
        amount:
          type: number
          description: The amount of time of a worked shift.
        applyDate:
          type: string
          description: The date to which the totals are applied when totals are derived
            from more than one day.
        approvedByEmployee:
          type: boolean
          description: A Boolean indicator of whether or not the totals have been
            approved by the employee.
        approvedByManager:
          type: boolean
          description: A Boolean indicator of whether or not the totals have been
            approved by a manager.
        costCenter:
          $ref: '#/components/schemas/ObjectRef Entity'
        currencyCode:
          type: string
          description: A code of the wage currency.
        efficiency:
          type: number
          description: The activity segment efficiency.
        employee:
          $ref: '#/components/schemas/ObjectRef Entity'
        endDateTime:
          type: string
          description: The date and time of the end of the associated segment in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-dd HH:mm:ss.SSS).
        isDuration:
          type: boolean
          description: A Boolean indicator of whether or not the associated activity
            segment has the duration type.
        job:
          $ref: '#/components/schemas/ObjectRef Entity'
        jobTransfer:
          type: boolean
          description: A Boolean indicator of whether or not the totals object contains
            a job transfer.
        laborCategory:
          $ref: '#/components/schemas/ObjectRef Entity'
        laborCategoryTransfer:
          type: boolean
          description: A Boolean indicator of whether or not the totals object contains
            a labor category.
        location:
          $ref: '#/components/schemas/ObjectRef Entity'
        payCode:
          $ref: '#/components/schemas/ObjectRef Entity'
        payPeriodNumber:
          type: integer
          description: A number representing a pay period.
          format: int32
        payPeriodWeek:
          type: integer
          description: A number representing a pay period week.
          format: int32
        percentage:
          type: number
          description: The percentage expression of the actual amount of time spent
            on the activity relative to the total time spent on all activities.
          format: double
        processedSegmentId:
          type: integer
          description: The ID of the associated processed segment.
          format: int64
        startDateTime:
          type: string
          description: The date and time of the start of the associated segment in
            ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).
        timeItemId:
          type: integer
          description: The ID of the time item.
          format: int64
        timeItemType:
          $ref: '#/components/schemas/ObjectRef Entity'
        totalActual:
          type: integer
          description: The actual amount of time spent on the activity.
          format: int64
        totalAllocated:
          type: integer
          description: The allocated amount of time spent on the activity.
          format: int64
        totalVariance:
          type: integer
          description: The difference between the actual amount and the allocated
            amount of time spent on the activity.
          format: int64
        wages:
          type: number
          description: The money amount calculated in totals as wages.
        workRule:
          $ref: '#/components/schemas/ObjectRef Entity'
      description: A list of aggregated totals objects.
    EmployeeContextForREST:
      type: object
      properties:
        employee:
          $ref: '#/components/schemas/ObjectRef Entity'
        timezone:
          $ref: '#/components/schemas/ObjectRef Entity'
    Activity Total Where:
      required:
      - dateRange
      type: object
      properties:
        activities:
          $ref: '#/components/schemas/ObjectRefList'
        dateRange:
          $ref: '#/components/schemas/ActivityTotalDateRange'
        employees:
          $ref: '#/components/schemas/ObjectRefList'
        groupBy:
          type: string
          description: An enumeration of types available for grouping the activity
            totals records. Valid values include TIMEITEM_DETAIL, COST_CENTER, LOCATION_AND_JOB,
            PAYCODE, and LABOR_CATEGORY.
        rollupType:
          type: string
          description: The filtering criteria for activity totals. Valid values include
            TIMEITEM, ALL, and DAILY.
      description: The activity totals where clause model.
    Transaction Export Request Token options:
      type: object
      properties:
        nextReadToken:
          type: string
          description: The token which describes the next chunk of transactions.
      description: Model of the options of a Retrieve Transactions request in which
        special criteria for retrieving transactions is specified.
    Activity Transactions Export find criteria:
      required:
      - activity
      type: object
      properties:
        activity:
          $ref: '#/components/schemas/ObjectRef'
        dateRange:
          $ref: '#/components/schemas/Transaction Export Request Date Range'
        returnComponentsOnLastDay:
          type: boolean
          description: A Boolean indicator of whether or not to return data without
            apply dates on the last day.
      description: The where criteria of a Retrieve Activity Transactions request
        in which the actual criteria for retrieving transactions is specified.
    Activity Transaction:
      type: object
      properties:
        activityResults:
          type: array
          description: An array of activity results in the activity transaction.
          items:
            $ref: '#/components/schemas/Activity Result'
        activitySegmentEfficiency:
          $ref: '#/components/schemas/Exportable Activity Efficiency'
        activitySubSegmentEfficiencies:
          type: array
          description: An array of sub segment efficiencies in the activity transaction.
          items:
            $ref: '#/components/schemas/Exportable Activity Efficiency'
        activityTotals:
          type: array
          description: An array of totals in the activity transaction.
          items:
            $ref: '#/components/schemas/Exportable Activity Total Entity'
        employee:
          $ref: '#/components/schemas/ObjectRef'
        processedSegment:
          $ref: '#/components/schemas/Exportable Activity Processed Segment'
      description: Activity Transaction object.
    Activity Transactions Export References:
      type: object
      properties:
        activities:
          type: array
          description: An array of activity references.
          items:
            $ref: '#/components/schemas/ObjectRef'
        costCenters:
          type: array
          description: An array of cost center references.
          items:
            $ref: '#/components/schemas/ObjectRef'
        employees:
          type: array
          description: An array of employee references.
          items:
            $ref: '#/components/schemas/ObjectRef'
        jobs:
          type: array
          description: An array of job references.
          items:
            $ref: '#/components/schemas/ObjectRef'
        laborCategories:
          type: array
          description: An array of labor category references.
          items:
            $ref: '#/components/schemas/ObjectRef'
        locations:
          type: array
          description: An array of location references.
          items:
            $ref: '#/components/schemas/ObjectRef'
        payCodes:
          type: array
          description: An array of pay code references.
          items:
            $ref: '#/components/schemas/ObjectRef'
        teams:
          type: array
          description: An array of team references.
          items:
            $ref: '#/components/schemas/ObjectRef'
        workItemTypes:
          type: array
          description: An array of Work Item types references.
          items:
            $ref: '#/components/schemas/ObjectRef'
        workRules:
          type: array
          description: An array of work rule references.
          items:
            $ref: '#/components/schemas/ObjectRef'
      description: References for entities in activity transactions.
    CustomerRefsWhere:
      required:
      - customers
      type: object
      properties:
        customers:
          $ref: '#/components/schemas/ObjectRefList'
      description: The Customer where clause model.
    ActivityEmployeeRefsWhere:
      required:
      - employees
      type: object
      properties:
        employees:
          $ref: '#/components/schemas/ObjectRefList'
      description: The Employee where clause model.
    AssignedActivity:
      type: object
      properties:
        combinedName:
          type: string
          description: The combined name of an activity.
        completeStatus:
          $ref: '#/components/schemas/ObjectRef'
        description:
          type: string
          description: The description of an activity.
        id:
          type: integer
          description: The ID of an activity.
          format: int64
      description: The Assigned Activity model.
    FieldDefinitionRefsWhere:
      required:
      - fieldDefinitions
      type: object
      properties:
        fieldDefinitions:
          $ref: '#/components/schemas/ObjectRefList'
      description: The Field Definition where clause model.
    FormProfileRefsWhere:
      required:
      - formProfiles
      type: object
      properties:
        formProfiles:
          $ref: '#/components/schemas/ObjectRefList'
      description: The Form Profile where clause model.
    ClocksSearchConfiguration_PublicAPI:
      type: object
      properties:
        direct:
          type: boolean
          description: A Boolean indicator of whether or not the activity search mode
            is direct.
        hierarchy:
          type: boolean
          description: A Boolean indicator of whether or not the activity search mode
            is hierarchy.
        query:
          type: boolean
          description: A Boolean indicator of whether or not the activity search mode
            is query.
      description: The Clocks Search Activity Configuration model.
    FormStep_PublicAPI:
      required:
      - id
      type: object
      properties:
        controlType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        dateDefaultValue:
          type: string
          description: The default value of date type of a step.
          format: date
        decimalDefaultValue:
          type: number
          description: The default value of decimal type of a step.
          format: double
        decimalMaxValue:
          type: number
          description: The maximum value of step of decimal type.
          format: double
        decimalMinValue:
          type: number
          description: The minimum value of step of decimal type.
          format: double
        defaultValue:
          type: string
          description: The default value of string type of a step.
        entryType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        fieldDefinition:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        fieldLength:
          type: integer
          description: The field length of a step.
          format: int64
        fieldType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        id:
          type: integer
          description: The ID of a step.
          format: int64
        initialResult:
          type: boolean
          description: A Boolean indicator of whether or not to treat this step as
            an initial result. This property is read-only when the step represents
            a decision answer.
        inputSourceType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        matchFieldLength:
          type: boolean
          description: A Boolean indicator of whether or not to match field length.
        multiSelect:
          type: boolean
          description: A Boolean indicator of whether or not this step allows multi-select
            as an option for result codes. This property is read-only.
          readOnly: true
        name:
          type: string
          description: This property represents the prompt of the step and is read
            only.
          readOnly: true
        numericDefaultValue:
          type: integer
          description: The default value of numeric type of a step.
          format: int64
        numericMaxValue:
          type: integer
          description: The maximum value of step of numeric type.
          format: int64
        numericMinValue:
          type: integer
          description: The minimum value of step of numeric type.
          format: int64
        precision:
          type: integer
          description: The digits right of decimal count.
          format: int32
        preserveValue:
          type: boolean
          description: A Boolean indicator of whether or not to preserve the value
            of a step.
        prompt:
          type: string
          description: The prompt of a step. This property is read only when the prompt
            represents a control step.
        scale:
          type: integer
          description: The digits left of decimal count.
          format: int32
        sdmKey:
          type: string
        timeDefaultValue:
          type: string
          description: The default value of time type of a step.
        validationType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
      description: The Form Step model.
    ClocksSearchConfiguration:
      type: object
      properties:
        direct:
          type: boolean
          description: A Boolean indicator of whether or not the activity search mode
            is direct.
        hierarchy:
          type: boolean
          description: A Boolean indicator of whether or not the activity search mode
            is hierarchy.
        query:
          type: boolean
          description: A Boolean indicator of whether or not the activity search mode
            is query.
      description: The Clocks Search Activity Configuration model.
    FormStep:
      required:
      - id
      type: object
      properties:
        controlType:
          $ref: '#/components/schemas/ObjectRef'
        dateDefaultValue:
          type: string
          description: The default value of date type of a step.
          format: date
        decimalDefaultValue:
          type: number
          description: The default value of decimal type of a step.
          format: double
        decimalMaxValue:
          type: number
          description: The maximum value of step of decimal type.
          format: double
        decimalMinValue:
          type: number
          description: The minimum value of step of decimal type.
          format: double
        defaultValue:
          type: string
          description: The default value of string type of a step.
        entryType:
          $ref: '#/components/schemas/ObjectRef'
        fieldDefinition:
          $ref: '#/components/schemas/ObjectRef'
        fieldLength:
          type: integer
          description: The field length of a step.
          format: int64
        fieldType:
          $ref: '#/components/schemas/ObjectRef'
        id:
          type: integer
          description: The ID of a step.
          format: int64
        initialResult:
          type: boolean
          description: A Boolean indicator of whether or not to treat this step as
            an initial result. This property is read-only when the step represents
            a decision answer.
        inputSourceType:
          $ref: '#/components/schemas/ObjectRef'
        matchFieldLength:
          type: boolean
          description: A Boolean indicator of whether or not to match field length.
        multiSelect:
          type: boolean
          description: A Boolean indicator of whether or not this step allows multi-select
            as an option for result codes. This property is read-only.
          readOnly: true
        name:
          type: string
          description: This property represents the prompt of the step and is read
            only.
          readOnly: true
        numericDefaultValue:
          type: integer
          description: The default value of numeric type of a step.
          format: int64
        numericMaxValue:
          type: integer
          description: The maximum value of step of numeric type.
          format: int64
        numericMinValue:
          type: integer
          description: The minimum value of step of numeric type.
          format: int64
        precision:
          type: integer
          description: The digits right of decimal count.
          format: int32
        preserveValue:
          type: boolean
          description: A Boolean indicator of whether or not to preserve the value
            of a step.
        prompt:
          type: string
          description: The prompt of a step. This property is read only when the prompt
            represents a control step.
        scale:
          type: integer
          description: The digits left of decimal count.
          format: int32
        sdmKey:
          type: string
        timeDefaultValue:
          type: string
          description: The default value of time type of a step.
        validationType:
          $ref: '#/components/schemas/ObjectRef'
      description: The Form Step model.
    ClocksSearchConfiguration_PartialPublicAPI:
      type: object
      properties:
        direct:
          type: boolean
          description: A Boolean indicator of whether or not the activity search mode
            is direct.
        hierarchy:
          type: boolean
          description: A Boolean indicator of whether or not the activity search mode
            is hierarchy.
        query:
          type: boolean
          description: A Boolean indicator of whether or not the activity search mode
            is query.
      description: The Clocks Search Activity Configuration model.
    FormStep_PartialPublicAPI:
      required:
      - id
      type: object
      properties:
        controlType:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        dateDefaultValue:
          type: string
          description: The default value of date type of a step.
          format: date
        decimalDefaultValue:
          type: number
          description: The default value of decimal type of a step.
          format: double
        decimalMaxValue:
          type: number
          description: The maximum value of step of decimal type.
          format: double
        decimalMinValue:
          type: number
          description: The minimum value of step of decimal type.
          format: double
        defaultValue:
          type: string
          description: The default value of string type of a step.
        entryType:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        fieldDefinition:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        fieldLength:
          type: integer
          description: The field length of a step.
          format: int64
        fieldType:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        id:
          type: integer
          description: The ID of a step.
          format: int64
        initialResult:
          type: boolean
          description: A Boolean indicator of whether or not to treat this step as
            an initial result. This property is read-only when the step represents
            a decision answer.
        inputSourceType:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        matchFieldLength:
          type: boolean
          description: A Boolean indicator of whether or not to match field length.
        multiSelect:
          type: boolean
          description: A Boolean indicator of whether or not this step allows multi-select
            as an option for result codes. This property is read-only.
          readOnly: true
        name:
          type: string
          description: This property represents the prompt of the step and is read
            only.
          readOnly: true
        numericDefaultValue:
          type: integer
          description: The default value of numeric type of a step.
          format: int64
        numericMaxValue:
          type: integer
          description: The maximum value of step of numeric type.
          format: int64
        numericMinValue:
          type: integer
          description: The minimum value of step of numeric type.
          format: int64
        precision:
          type: integer
          description: The digits right of decimal count.
          format: int32
        preserveValue:
          type: boolean
          description: A Boolean indicator of whether or not to preserve the value
            of a step.
        prompt:
          type: string
          description: The prompt of a step. This property is read only when the prompt
            represents a control step.
        scale:
          type: integer
          description: The digits left of decimal count.
          format: int32
        sdmKey:
          type: string
        timeDefaultValue:
          type: string
          description: The default value of time type of a step.
        validationType:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
      description: The Form Step model.
    FormRefsWhere:
      required:
      - forms
      type: object
      properties:
        forms:
          $ref: '#/components/schemas/ObjectRefList'
      description: The Form where clause model.
    PayCodeActionRefsWhere:
      required:
      - payCodeActions
      type: object
      properties:
        payCodeActions:
          $ref: '#/components/schemas/ObjectRefList'
      description: The Paycode Action where clause model.
    ListQueryActivity_PublicAPI:
      type: object
      properties:
        description:
          type: string
        id:
          type: integer
          description: The ID of an activity.
          format: int64
        priorityType:
          type: string
        qualifier:
          type: string
          description: The combined name of an activity.
        scheduledCompleteDate:
          type: string
          format: date
        scheduledStartDate:
          type: string
          format: date
      description: Model for Activity assigned to a List type Query.
    QueryDateRange_PublicAPI:
      required:
      - dateRangeType
      - fromDays
      - toDays
      type: object
      properties:
        dateRangeType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        fromDays:
          type: integer
          description: The number of days before a query run date.
          format: int32
        toDays:
          type: integer
          description: The number of days after a query run date.
          format: int32
      description: The Query Date Range References model.
    ListQueryActivity:
      type: object
      properties:
        description:
          type: string
        id:
          type: integer
          description: The ID of an activity.
          format: int64
        priorityType:
          type: string
        qualifier:
          type: string
          description: The combined name of an activity.
        scheduledCompleteDate:
          type: string
          format: date
        scheduledStartDate:
          type: string
          format: date
      description: Model for Activity assigned to a List type Query.
    QueryDateRange:
      required:
      - dateRangeType
      - fromDays
      - toDays
      type: object
      properties:
        dateRangeType:
          $ref: '#/components/schemas/ObjectRef'
        fromDays:
          type: integer
          description: The number of days before a query run date.
          format: int32
        toDays:
          type: integer
          description: The number of days after a query run date.
          format: int32
      description: The Query Date Range References model.
    ListQueryActivity_PartialPublicAPI:
      type: object
      properties:
        description:
          type: string
        id:
          type: integer
          description: The ID of an activity.
          format: int64
        priorityType:
          type: string
        qualifier:
          type: string
          description: The combined name of an activity.
        scheduledCompleteDate:
          type: string
          format: date
        scheduledStartDate:
          type: string
          format: date
      description: Model for Activity assigned to a List type Query.
    QueryDateRange_PartialPublicAPI:
      required:
      - dateRangeType
      - fromDays
      - toDays
      type: object
      properties:
        dateRangeType:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        fromDays:
          type: integer
          description: The number of days before a query run date.
          format: int32
        toDays:
          type: integer
          description: The number of days after a query run date.
          format: int32
      description: The Query Date Range References model.
    QueryRefsWhere:
      required:
      - queries
      type: object
      properties:
        queries:
          $ref: '#/components/schemas/ObjectRefList'
      description: The Query where clause model.
    QueryProfileRefsWhere:
      required:
      - queryProfiles
      type: object
      properties:
        queryProfiles:
          $ref: '#/components/schemas/ObjectRefList'
      description: The Query Profile where clause model.
    FieldDefinitionResultCodeAssignment:
      required:
      - fieldDefinition
      - resultCodes
      type: object
      properties:
        fieldDefinition:
          $ref: '#/components/schemas/ObjectRef'
        resultCodes:
          type: array
          description: A collection of result codes assigned to field definition.
          items:
            $ref: '#/components/schemas/ObjectRef'
      description: The Field Definition Result Code Assignments model.
    FieldDefinitionResultCodeAssignment_PartialPublicAPI:
      required:
      - fieldDefinition
      - resultCodes
      type: object
      properties:
        fieldDefinition:
          $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
        resultCodes:
          type: array
          description: A collection of result codes assigned to field definition.
          items:
            $ref: '#/components/schemas/ObjectRef_PartialPublicAPI'
      description: The Field Definition Result Code Assignments model.
    ResultCodeProfileRefsWhere:
      required:
      - resultCodeProfiles
      type: object
      properties:
        resultCodeProfiles:
          $ref: '#/components/schemas/ObjectRefList'
      description: The Result Code Profile where clause model.
    ResultCodeRefsWhere:
      required:
      - resultCodes
      type: object
      properties:
        resultCodes:
          $ref: '#/components/schemas/ResultCodeRefList'
      description: The Result Code where clause model.
    ResultsTemplateStep_PublicAPI:
      required:
      - id
      - stepType
      type: object
      properties:
        dateDefaultValue:
          type: string
          description: The default value of date type of a step.
          format: date
        decimalDefaultValue:
          type: number
          description: The default value of decimal type of a step.
          format: double
        decimalMaxValue:
          type: number
          description: The maximum value of step of decimal type.
          format: double
        decimalMinValue:
          type: number
          description: The minimum value of step of decimal type.
          format: double
        decisionAnswers:
          type: array
          description: The answers for a results template step of type decision.
          items:
            $ref: '#/components/schemas/DecisionAnswer_PublicAPI'
        defaultValue:
          type: string
          description: The default value of string type of a step.
        entryType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        fieldDefinition:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        fieldLength:
          type: integer
          description: The field length of a step.
          format: int64
        fieldType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        id:
          type: integer
          description: The ID of a step.
          format: int64
        initialResult:
          type: boolean
          description: A Boolean indicator of whether or not to treat this step as
            an initial result. This property is read-only when the step represents
            a decision answer.
        inputSourceType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        matchFieldLength:
          type: boolean
          description: A Boolean indicator of whether or not to match field length.
        multiSelect:
          type: boolean
          description: A Boolean indicator of whether or not this step allows multi-select
            as an option for result codes. This property is read-only.
          readOnly: true
        name:
          type: string
          description: This property represents the prompt of the step and is read
            only.
          readOnly: true
        numericDefaultValue:
          type: integer
          description: The default value of numeric type of a step.
          format: int64
        numericMaxValue:
          type: integer
          description: The maximum value of step of numeric type.
          format: int64
        numericMinValue:
          type: integer
          description: The minimum value of step of numeric type.
          format: int64
        precision:
          type: integer
          description: The digits right of decimal count.
          format: int32
        preserveValue:
          type: boolean
          description: A Boolean indicator of whether or not to preserve the value
            of a step.
        prompt:
          type: string
          description: The prompt of a step. This property is read only when the prompt
            represents a control step.
        scale:
          type: integer
          description: The digits left of decimal count.
          format: int32
        sdmKey:
          type: string
        stepType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        timeDefaultValue:
          type: string
          description: The default value of time type of a step.
        validationType:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
      description: The Results Template Step model.
    ResultsTemplateStep:
      required:
      - id
      - stepType
      type: object
      properties:
        dateDefaultValue:
          type: string
          description: The default value of date type of a step.
          format: date
        decimalDefaultValue:
          type: number
          description: The default value of decimal type of a step.
          format: double
        decimalMaxValue:
          type: number
          description: The maximum value of step of decimal type.
          format: double
        decimalMinValue:
          type: number
          description: The minimum value of step of decimal type.
          format: double
        decisionAnswers:
          type: array
          description: The answers for a results template step of type decision.
          items:
            $ref: '#/components/schemas/DecisionAnswer'
        defaultValue:
          type: string
          description: The default value of string type of a step.
        entryType:
          $ref: '#/components/schemas/ObjectRef'
        fieldDefinition:
          $ref: '#/components/schemas/ObjectRef'
        fieldLength:
          type: integer
          description: The field length of a step.
          format: int64
        fieldType:
          $ref: '#/components/schemas/ObjectRef'
        id:
          type: integer
          description: The ID of a step.
          format: int64
        initialResult:
          type: boolean
          description: A Boolean indicator of whether or not to treat this step as
            an initial result. This property is read-only when the step represents
            a decision answer.
        inputSourceType:
          $ref: '#/components/schemas/ObjectRef'
        matchFieldLength:
          type: boolean
          description: A Boolean indicator of whether or not to match field length.
        multiSelect:
          type: boolean
          description: A Boolean indicator of whether or not this step allows multi-select
            as an option for result codes. This property is read-only.
          readOnly: true
        name:
          type: string
          description: This property represents the prompt of the step and is read
            only.
          readOnly: true
        numericDefaultValue:
          type: integer
          description: The default value of numeric type of a step.
          format: int64
        numericMaxValue:
          type: integer
          description: The maximum value of step of numeric type.
          format: int64
        numericMinValue:
          type: integer
          description: The minimum value of step of numeric type.
          format: int64
        precision:
          type: integer
          description: The digits right of decimal count.
          format: int32
        preserveValue:
          type: boolean
          description: A Boolean indicator of whether or not to preserve the value
            of a step.
        prompt:
          type: string
          description: The prompt of a step. This property is read only when the prompt
            represents a control step.
        scale:
          type: integer
          description: The digits left of decimal count.
          format: int32
        sdmKey:
          type: string
        stepType:
          $ref: '#/components/schemas/ObjectRef'
        timeDefaultValue:
          type: string
          description: The default value of time type of a step.
        validationType:
          $ref: '#/components/schemas/ObjectRef'
      description: The Results Template Step model.
    ResultsTemplateRefsWhere:
      required:
      - resultsTemplates
      type: object
      properties:
        resultsTemplates:
          $ref: '#/components/schemas/ObjectRefList'
      description: The Results Template where clause model.
    SettingRefsWhere:
      required:
      - settings
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/ObjectRefList'
      description: The Setting where clause model.
    Activity Team Segment Multi Delete Where:
      type: object
      properties:
        activitySegmentIDs:
          type: array
          description: An collection of team segments ids.
          items:
            type: integer
            format: int64
        activitySegmentIdentifiers:
          type: array
          description: An object representing a collection of team segments ids.
          items:
            $ref: '#/components/schemas/Activity Teams Segment Identifier Request'
      description: Active team segments where clause model.
    Active Team Member:
      type: object
      properties:
        effectiveMembershipId:
          type: integer
          description: The ID of an effective team membership.
          format: int64
        employee:
          $ref: '#/components/schemas/ObjectRef'
        endDateTime:
          type: string
          description: The date and time of the end of the effective-dated activity
            team membership in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).
        endTimezone:
          $ref: '#/components/schemas/ObjectRef'
        membershipId:
          type: integer
          description: The ID of an activity team membership.
          format: int64
        startDateTime:
          type: string
          description: The date and time of the start of the effective-dated activity
            team membership in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).
        startTimezone:
          $ref: '#/components/schemas/ObjectRef'
        workItemId:
          type: integer
          description: The ID of a work item.
          format: int64
      description: The Active Team Member model, which is an effective-dated Activity
        team membership which overlaps an activity team segment.
    Activity Team Segment Identifier:
      type: object
      properties:
        activity:
          $ref: '#/components/schemas/ObjectRef'
        id:
          type: integer
          description: The ID of a selected activity team segment.
          format: int64
        start:
          type: string
          description: The start date and time of a selected activity team segment
            in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).
        startTimezone:
          $ref: '#/components/schemas/ObjectRef'
        team:
          $ref: '#/components/schemas/ObjectRef'
      description: The activity Team Segment Identifier model, which represents an
        object intended for the selection of a particular activity team segment.
    Activity Team Event Audits Select model:
      required:
      - auditType
      type: object
      properties:
        auditType:
          type: array
          description: The type of data for which audits are returned.
          items:
            type: string
            enum:
            - TEAM_SEGMENT
            - TEAM_SEGMENT_RESULT
      description: Activity Team Event Audits Select model.
    Activity Team Event Audits Where model:
      type: object
      properties:
        endDateTime:
          type: string
          description: The end date and time in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss).
        startDateTime:
          type: string
          description: The start date and time in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss).
        teams:
          type: array
          description: An object representing a collection of team references.
          items:
            $ref: '#/components/schemas/ObjectRef'
      description: Activity Team Event Audits Where model.
    Activity Team Result Segment Audit model:
      type: object
      properties:
        auditKey:
          type: integer
          description: The version key of an audit.
          format: int64
        childIndex:
          type: integer
          description: The child index of a result segment.
          format: int32
        createdDateTime:
          type: string
          description: The date and time a team segment was created in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-ddTHH:mm:ss).
        dataSource:
          $ref: '#/components/schemas/ObjectRef Entity'
        dateResult:
          type: string
          description: The date value of a result segment.
          format: date
        decimalResult:
          type: number
          description: The decimal value of a result segment.
          format: double
        effectiveDateTime:
          type: string
          description: The effective date and time of a result segment in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-ddTHH:mm:ss).
        fieldDefinition:
          $ref: '#/components/schemas/ObjectRef'
        groupIndex:
          type: integer
          description: The group index of a result segment.
          format: int32
        id:
          type: integer
          description: The ID of an audit.
          format: int64
        numericResult:
          type: integer
          description: The numeric value of a result segment.
          format: int64
        resultCode:
          $ref: '#/components/schemas/ObjectRef'
        revisionDateTime:
          type: string
          description: The date and time of the most recent update in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-ddTHH:mm:ss).
        revisionId:
          type: integer
          description: The ID of the revision entity associated with an audit.
          format: int64
        revisionUser:
          $ref: '#/components/schemas/ObjectRef'
        teamSegmentId:
          type: integer
          description: The ID of a team segment.
          format: int64
        textResult:
          type: string
          description: The text value of a result segment.
        timeResult:
          type: string
          description: The time value of a result segment.
        type:
          type: string
          description: The type of an audit.
          enum:
          - ADD
          - MOD
          - DEL
        updatedDateTime:
          type: string
          description: The date and time of the most recent update in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-ddTHH:mm:ss).
      description: Activity Team Result Segment Audit model.
    Activity Team Segment Audit model:
      type: object
      properties:
        accepted:
          type: boolean
          description: A Boolean indicator of whether or not the segment is accepted.
        activity:
          $ref: '#/components/schemas/ObjectRef'
        auditKey:
          type: integer
          description: The version key of an audit.
          format: int64
        closable:
          type: boolean
          description: A Boolean indicator of whether or not the segment is closable
            in the Activity Transaction Manager.
        costCenter:
          $ref: '#/components/schemas/ObjectRef'
        createdDateTime:
          type: string
          description: The date and time a team segment was created in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-ddTHH:mm:ss).
        dataSource:
          $ref: '#/components/schemas/ObjectRef Entity'
        direct:
          type: boolean
          description: A Boolean indicator of whether or not the activity is direct.
        emptyTransfer:
          type: boolean
          description: '@v1.0.teamsegmentauditdto.apimodelproperty.emptytransfer.description'
        endDateTime:
          type: string
          description: The end date and time of an activity in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-ddTHH:mm:ss).
        endTimezone:
          $ref: '#/components/schemas/ObjectRef'
        eventType:
          $ref: '#/components/schemas/ObjectRef'
        hoursAllocatedType:
          $ref: '#/components/schemas/ObjectRef'
        id:
          type: integer
          description: The ID of an audit.
          format: int64
        laborAccount:
          $ref: '#/components/schemas/ObjectRef'
        orgJob:
          $ref: '#/components/schemas/ObjectRef'
        revisionDateTime:
          type: string
          description: The date and time of the most recent update in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-ddTHH:mm:ss).
        revisionId:
          type: integer
          description: The ID of the revision entity associated with an audit.
          format: int64
        revisionUser:
          $ref: '#/components/schemas/ObjectRef'
        startDateTime:
          type: string
          description: The start date and time of an activity in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-ddTHH:mm:ss).
        startTimezone:
          $ref: '#/components/schemas/ObjectRef'
        team:
          $ref: '#/components/schemas/ObjectRef'
        type:
          type: string
          description: The type of an audit.
          enum:
          - ADD
          - MOD
          - DEL
        updatedDateTime:
          type: string
          description: The date and time of the most recent update in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-ddTHH:mm:ss).
        workRule:
          $ref: '#/components/schemas/ObjectRef'
      description: Activity Team Segment Audit model.
    Activity Team Segment Multi Read Where:
      type: object
      properties:
        endDate:
          type: string
          description: The end date of the search date range in ISO_LOCAL_DATE format
            (YYYY-MM-DD).
          format: date
        returnResults:
          type: boolean
          description: '@v1.0.activityteamsegmentsmultireadwhere.apimodelproperty.returnresults.description'
        segments:
          $ref: '#/components/schemas/Activity Team Segments Multi Read by Segments'
        startDate:
          type: string
          description: The start date of the search date range in ISO_LOCAL_DATE format
            (YYYY-MM-DD).
          format: date
        symbolicPeriod:
          $ref: '#/components/schemas/ObjectRef'
        teams:
          $ref: '#/components/schemas/ObjectRefList'
      description: Activity Team Segment Read Where Request
    Activity Team Segment Result:
      type: object
      properties:
        activityTeamSegmentId:
          type: integer
          description: '@v1.0.activityteamsegmentresultforrest.apimodelproperty.activityteamsegmentid.description'
          format: int64
        childResults:
          type: array
          description: '@v1.0.activityteamsegmentresultforrest.apimodelproperty.childresultsegments.description'
          items:
            $ref: '#/components/schemas/Activity Team Segment Result'
        createdDateTime:
          type: string
          description: '@v1.0.activityteamsegmentresultforrest.apimodelproperty.createddatetime.description'
        dataSource:
          $ref: '#/components/schemas/ObjectRef Entity'
        dateResult:
          type: string
          description: '@v1.0.activityteamsegmentresultforrest.apimodelproperty.dateresult.description'
          format: date
        decimalResult:
          type: number
          description: '@v1.0.activityteamsegmentresultforrest.apimodelproperty.decimalresult.description'
          format: double
        effectiveDateTime:
          type: string
          description: '@v1.0.activityteamsegmentresultforrest.apimodelproperty.effectivedatetime.description'
        fieldDefinition:
          $ref: '#/components/schemas/ObjectRef'
        id:
          type: integer
          description: '@v1.0.activityteamsegmentresultforrest.apimodelproperty.id.description'
          format: int64
        numericResult:
          type: integer
          description: '@v1.0.activityteamsegmentresultforrest.apimodelproperty.numericresult.description'
          format: int64
        resultCode:
          $ref: '#/components/schemas/ObjectRef'
        textResult:
          type: string
          description: '@v1.0.activityteamsegmentresultforrest.apimodelproperty.textresult.description'
        timeResult:
          type: string
          description: '@v1.0.activityteamsegmentresultforrest.apimodelproperty.timeresult.description'
        updatedDateTime:
          type: string
          description: '@v1.0.activityteamsegmentresultforrest.apimodelproperty.updateddatetime.description'
      description: '@v1.0.activityteamsegmentresultforrest.apimodel.description'
    Activity Team Segment:
      type: object
      properties:
        accepted:
          type: boolean
          description: A Boolean indicator of whether or not the segment is accepted.
        activity:
          $ref: '#/components/schemas/ObjectRef'
        closable:
          type: boolean
          description: A Boolean indicator of whether or not the segment is closable
            in ATM.
        costCenter:
          $ref: '#/components/schemas/ObjectRef'
        createdDateTime:
          type: string
          description: The date and time this record was created in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-dd HH:mm:ss.SSS).
        dataSource:
          $ref: '#/components/schemas/ObjectRef Entity'
        deleted:
          type: boolean
          description: A Boolean indicator of whether or not the segment is deleted.
        direct:
          type: boolean
          description: A Boolean indicator of whether or not the activity is direct.
        emptyTransfer:
          type: boolean
          description: A Boolean indicator of whether or not the activity team segment
            has an empty transfer.
        endDateTime:
          type: string
          description: The date and time of the end of the activity in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-dd HH:mm:ss.SSS).
        endTimezone:
          $ref: '#/components/schemas/ObjectRef'
        eventType:
          $ref: '#/components/schemas/ObjectRef'
        hoursAllocatedType:
          $ref: '#/components/schemas/ObjectRef'
        id:
          type: integer
          description: The ID of the activity team segment.
          format: int64
        laborCategories:
          type: array
          description: A list of labor category entry lists containing the labor categories
            associated with an activity team segment transfer.
          items:
            $ref: '#/components/schemas/Activity Team Segment Labor Category Transfer'
        mismatchedResults:
          type: boolean
          description: A Boolean indicator of whether or not an Activity Team Segment
            has Activity Results that do not match the Activity Results Template.
          readOnly: true
        missingResults:
          type: boolean
          description: A Boolean indicator of whether or not an Activity Team Segment
            is missing Activity Results, which are required.
          readOnly: true
        orgJob:
          $ref: '#/components/schemas/ObjectRef'
        startDateTime:
          type: string
          description: The date and time of the start of the activity in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-dd HH:mm:ss.SSS).
        startTimezone:
          $ref: '#/components/schemas/ObjectRef'
        team:
          $ref: '#/components/schemas/ObjectRef'
        updatedDateTime:
          type: string
          description: The date and time this record was last updated in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-dd HH:mm:ss.SSS).
        workRule:
          $ref: '#/components/schemas/ObjectRef'
      description: Activity Team Segment
    Team Segment NetChange find criteria:
      required:
      - endDateTime
      - lastRunDateTime
      type: object
      properties:
        activities:
          $ref: '#/components/schemas/ObjectRefList'
        endDateTime:
          type: string
          description: The inclusive end date for the timeperiod in ISO_LOCAL_DATE
            format (YYYY-MM-DD).
        lastRunDateTime:
          type: string
          description: The inclusive starting date for the timeperiod in ISO_LOCAL_DATE
            format (YYYY-MM-DD).
        teams:
          $ref: '#/components/schemas/ObjectRefList'
      description: The Team Segment Net Changes where clause model.
    ActivityTeamDefinitionRefsWhere:
      required:
      - teams
      type: object
      properties:
        teams:
          $ref: '#/components/schemas/ObjectRefList'
      description: The Activity Team where clause model.
    UnitOfMeasureRefsWhere:
      required:
      - unitsOfMeasure
      type: object
      properties:
        unitsOfMeasure:
          $ref: '#/components/schemas/ObjectRefList'
      description: The Unit of Measure where clause model.
    LaborCategoryEntryListRef_PublicAPI:
      type: object
      properties:
        id:
          type: integer
          description: The ID associated with an object reference.
          format: int64
          readOnly: true
        laborCategory:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        qualifier:
          type: string
          description: The qualifier associated with an object reference.
          readOnly: true
      description: The Activity Labor Category Entry lists model.
    TransferLaborCategory_PublicAPI:
      type: object
      properties:
        laborCategoryDef:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        laborCategoryEntry:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
    LaborCategoryEntryListRef:
      type: object
      properties:
        id:
          type: integer
          description: The ID associated with an object reference.
          format: int64
          readOnly: true
        laborCategory:
          $ref: '#/components/schemas/ObjectRef'
        qualifier:
          type: string
          description: The qualifier associated with an object reference.
          readOnly: true
      description: The Activity Labor Category Entry lists model.
    TransferLaborCategory:
      type: object
      properties:
        laborCategoryDef:
          $ref: '#/components/schemas/ObjectRef'
        laborCategoryEntry:
          $ref: '#/components/schemas/ObjectRef'
    ObjectRefList:
      type: object
      properties:
        ids:
          uniqueItems: true
          type: array
          description: The list of references by ID.
          items:
            type: integer
            format: int64
        qualifiers:
          uniqueItems: true
          type: array
          description: The qualifier of the object reference, such as name.
          items:
            type: string
        refs:
          type: array
          description: The object references.
          items:
            $ref: '#/components/schemas/ObjectRef'
      description: Model describing a collection of object references.
    Activity Efficiency Date Range:
      type: object
      properties:
        endDate:
          type: string
          description: The end date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        startDate:
          type: string
          description: The start date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
      description: The date range model.
    SchedulingObjectRef:
      type: object
      properties:
        id:
          type: integer
          description: The ID associated with an object reference.
          format: int64
          readOnly: true
        localizedQualifier:
          type: string
          description: The localized qualifier of the object reference. The value
            of this property is imported from the Setup Data component by means of
            an XLS file.
        qualifier:
          type: string
          description: The qualifier associated with an object reference.
          readOnly: true
      description: The HCA object reference object model.
    Bulk Activity Segments Delete Context:
      type: object
      properties:
        activitySegmentIdentifiers:
          type: array
          description: A list of activity segment identifiers.
          items:
            $ref: '#/components/schemas/BulkActivitySegmentIdentifier'
        employee:
          $ref: '#/components/schemas/ObjectRef Entity'
      description: The Delete Activity Shifts execution context model.
    Timecard Comment:
      type: object
      properties:
        categories:
          type: array
          description: A list of the categories assigned to a Comment. At least one
            category is required when creating a new Comment.
          items:
            $ref: '#/components/schemas/ObjectRef Entity'
        id:
          type: integer
          description: The ID of a Comment.
          format: int64
        name:
          type: string
          description: The name of a Comment.
      description: Information necessary for using Comments.
    Timecard Note:
      type: object
      properties:
        dataSourceDisplayName:
          type: string
          description: A string identifier that describes the data source, if one
            exists. Normally, this indicates that the context object came from a different
            source, such as a clock or device or an external data source import or
            interface.
        dataSourceId:
          type: integer
          description: The ID of the data source, if one exists. Normally, this indicates
            that the context object came from a different source, such as a clock,
            device, or an external data source such as an import or interface.
          format: int64
        text:
          type: string
          description: The plaintext entered for a Note.
        timestamp:
          type: string
          description: The timestamp associated with a Note.
      description: Entity describing a Note.
    ActivityShiftDateRange:
      type: object
      properties:
        endDate:
          type: string
          description: The inclusive end date for the timeperiod to be selected in
            ISO_LOCAL_DATE format (YYYY-MM-DD). Exclusive with symbolicPeriod.
          format: date
        startDate:
          type: string
          description: The inclusive starting date for the timeperiod to be selected
            in ISO_LOCAL_DATE format (YYYY-MM-DD). Exclusive with symbolicPeriod.
          format: date
      description: The date range model.
    ActivitySpan:
      type: object
      properties:
        activityResultSegments:
          type: array
          description: An array of activity result segments.
          items:
            $ref: '#/components/schemas/Timecard Activity Result Segment'
        efficiencies:
          $ref: '#/components/schemas/Timecard Activity Efficiency'
        processedSegments:
          type: array
          description: An array of processed segments.
          items:
            $ref: '#/components/schemas/Timecard Activity Processed Segment'
      description: The activity span for export model.
    NetChangeRevision:
      type: object
      properties:
        activityResultSegments:
          type: array
          description: The result segments data for a particular state.
          items:
            $ref: '#/components/schemas/ActivityResultSegmentForNetChange'
        activityTotals:
          type: array
          description: A list of activity total segments.
          items:
            $ref: '#/components/schemas/ActivityTotalForNetChange'
        processedSegments:
          type: array
          description: A list of activity processed segments.
          items:
            $ref: '#/components/schemas/ActivityProcessedSegmentForNetChange'
        status:
          type: string
          description: The status of a net change. Possible values include ADDED,
            UPDATED, and DELETED.
          enum:
          - ADDED
          - UPDATED
          - DELETED
          - NOT_CHANGED
      description: The net change revision model that unites activity processed segments,
        activity results, and activity totals.
    ActivityTotalDateRange:
      type: object
      properties:
        endDate:
          type: string
          description: The end date of the date range in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        startDate:
          type: string
          description: The start date of the date range in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        symbolicPeriod:
          $ref: '#/components/schemas/ObjectRef'
      description: Date range criteria.
    Transaction Export Request Date Range:
      type: object
      properties:
        endDate:
          type: string
          description: The inclusive end date for the timeperiod to be selected in
            ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        startDate:
          type: string
          description: The inclusive starting date for the timeperiod to be selected
            in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
      description: The date range object for a transaction.
    Activity Result:
      type: object
      properties:
        childResultSegments:
          type: array
          description: A reference to a list of child Activity Result Segments.
          items:
            $ref: '#/components/schemas/Exportable Activity Result'
        createdDateTime:
          type: string
          description: The date and time this record was created in ISO_LOCAL_DATE_TIME
            format (yyyy-mm-ddThh:mm:ss.sss).
        dataSourceId:
          type: integer
          description: The ID of the Data Source.
          format: int64
        dateTimeResult:
          type: string
          description: The DateTime result for the Activity Result Segment.
        decimalResult:
          type: number
          description: The decimal result for the Activity Result Segment.
          format: double
        effectiveDateTime:
          type: string
          description: The effective date and time associated with an Activity Result
            Segment in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).
        fieldDefinition:
          $ref: '#/components/schemas/ObjectRef'
        id:
          type: integer
          description: The ID of an Activity Result Segment.
          format: int64
        numericResult:
          type: integer
          description: The numeric result for the Activity Result Segment.
          format: int64
        resultCode:
          $ref: '#/components/schemas/ObjectRef'
        textResult:
          type: string
          description: The text result for the Activity Result Segment.
        timeResult:
          type: string
          description: The time result for the Activity Result Segment.
        updatedDateTime:
          type: string
          description: The date and time this record was last updated in ISO_LOCAL_DATE_TIME
            format (yyyy-mm-ddThh:mm:ss.sss).
      description: Activity Result object.
    Exportable Activity Efficiency:
      type: object
      properties:
        allocatedSeconds:
          type: integer
          description: The number of allocated seconds used to calculate an efficiency.
          format: int32
        earnedSeconds:
          type: number
          description: The calculated value of earned seconds for a particular activity
            span.
        efficiency:
          type: number
          description: The calculated value of efficiency for a particular activity
            span.
        efficiencyQuantity:
          type: number
          description: The quantity used to calculate an efficiency.
        endDateTime:
          type: string
          description: The date and time of the end of the activity efficiency in
            ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).
        endTimezone:
          $ref: '#/components/schemas/ObjectRef'
        startDateTime:
          type: string
          description: The date and time of the start of the activity efficiency in
            ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).
        startTimezone:
          $ref: '#/components/schemas/ObjectRef'
      description: An object representing an Activity Efficiency.
    Exportable Activity Total Entity:
      type: object
      properties:
        amount:
          type: number
          description: The amount of time of an activity total.
        applyDate:
          type: string
          description: The date to which the totals are applied when totals are derived
            from more than one day.
          format: date
        costCenter:
          $ref: '#/components/schemas/ObjectRef'
        currencyCode:
          type: string
          description: The currency code of a total.
        endDateTime:
          type: string
          description: The date and time of the end of the total in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-dd HH:mm:ss.SSS).
        endTimezone:
          $ref: '#/components/schemas/ObjectRef'
        job:
          $ref: '#/components/schemas/ObjectRef'
        jobTransfer:
          type: boolean
          description: A Boolean indicator of whether or not the totals object contains
            a job transfer.
        laborCategory:
          $ref: '#/components/schemas/ObjectRef'
        laborCategoryTransfer:
          type: boolean
          description: A Boolean indicator of whether or not the totals object contains
            a labor category.
        location:
          $ref: '#/components/schemas/ObjectRef'
        payCode:
          $ref: '#/components/schemas/ObjectRef'
        startDateTime:
          type: string
          description: The date and time of the start of the total in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-dd HH:mm:ss.SSS).
        startTimezone:
          $ref: '#/components/schemas/ObjectRef'
        wages:
          type: number
          description: The money amount calculated in totals as wages.
        workRule:
          $ref: '#/components/schemas/ObjectRef'
      description: An object representing an Activity Total.
    Exportable Activity Processed Segment:
      type: object
      properties:
        accepted:
          type: boolean
          description: A Boolean indicator of whether or not the segment is accepted.
        activity:
          $ref: '#/components/schemas/ObjectRef'
        activitySegmentId:
          type: integer
          description: A reference to an activity segment.
          format: int64
        activityTeam:
          $ref: '#/components/schemas/ObjectRef'
        activityTeamSegmentId:
          type: integer
          description: A reference to an activity team segment.
          format: int64
        allocatedSeconds:
          type: integer
          description: The number of seconds charged to the work processed segment.
          format: int64
        applyDate:
          type: string
          description: The apply date for an activity processed segment date range
            in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        approvedByEmployee:
          type: boolean
          description: A Boolean indicator of whether or not the activity is employee-approved.
        approvedByManager:
          type: boolean
          description: A Boolean indicator of whether or not an activity processed
            segment has been approved by a manager.
        concurrent:
          type: boolean
          description: A Boolean indicator of whether or not an activity is concurrent.
        deductedSeconds:
          type: integer
          description: The number of seconds deducted from the span for unpaid meals
            and breaks.
          format: int64
        durationInSeconds:
          type: integer
          description: The duration in seconds of the activity processed segment.
          format: int64
        endDateTime:
          type: string
          description: The date and time of the end of the activity in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-dd HH:mm:ss.SSS).
        endTimezone:
          $ref: '#/components/schemas/ObjectRef'
        eventTypeId:
          type: integer
          description: The ID of an event type.
          format: int64
        id:
          type: integer
          description: The ID of an activity processed segment.
          format: int64
        moneyAmount:
          type: number
          description: The amount (as a decimal value representing money) of the activity
            processed segment.
          format: double
        orderNumber:
          type: integer
          description: The order number associated with an activity segment.
          format: int64
        orphan:
          type: boolean
          description: A Boolean indicator of whether or not the activity is an orphan.
        overageDurationSeconds:
          type: integer
          description: The number of seconds of the activity processed segment that
            are not within the worked shift.
          format: int64
        roundedEndDateTime:
          type: string
          description: An optional field containing the end date and time based on
            configured rounding rules.
        roundedEndTimezone:
          $ref: '#/components/schemas/ObjectRef'
        roundedStartDateTime:
          type: string
          description: An optional field containing the start date and time based
            on configured rounding rules.
        roundedStartTimezone:
          $ref: '#/components/schemas/ObjectRef'
        startDateTime:
          type: string
          description: The date and time of the start of the activity in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-dd HH:mm:ss.SSS).
        startTimezone:
          $ref: '#/components/schemas/ObjectRef'
        systemGeneratedEnd:
          type: boolean
          description: A Boolean indicator of whether or not the end time is system-generated.
        systemGeneratedStart:
          type: boolean
          description: A Boolean indicator of whether or not the start time is system-generated.
        workItemId:
          type: integer
          description: The Work Item ID associated with an activity processed segment.
          format: int64
        workItemType:
          $ref: '#/components/schemas/ObjectRef'
      description: Entity describing an Activity Processed Segment for an employee.
    ResultCodeRefList:
      type: object
      properties:
        ids:
          uniqueItems: true
          type: array
          description: A list of IDs of result codes.
          items:
            type: integer
            format: int64
        qualifiers:
          uniqueItems: true
          type: array
          description: The qualifier of the result code including the result code
            name and field definition name.
          items:
            $ref: '#/components/schemas/ResultCodeQualifier'
        refs:
          type: array
          description: A list of references to result code objects.
          items:
            $ref: '#/components/schemas/ObjectRef'
      description: A result code object reference list model.
    DecisionAnswer_PublicAPI:
      required:
      - resultCode
      - steps
      type: object
      properties:
        resultCode:
          $ref: '#/components/schemas/ObjectRef_PublicAPI'
        steps:
          type: array
          description: The steps associated with the result code.
          items:
            $ref: '#/components/schemas/ResultsTemplateStep_PublicAPI'
      description: The Decision Answer model.
    DecisionAnswer:
      required:
      - resultCode
      - steps
      type: object
      properties:
        resultCode:
          $ref: '#/components/schemas/ObjectRef'
        steps:
          type: array
          description: The steps associated with the result code.
          items:
            $ref: '#/components/schemas/ResultsTemplateStep'
      description: The Decision Answer model.
    Activity Teams Segment Identifier Request:
      type: object
      properties:
        activity:
          $ref: '#/components/schemas/ObjectRef'
        start:
          type: string
          description: The start date and time of a selected activity team segment
            in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).
        startTimezone:
          $ref: '#/components/schemas/ObjectRef'
        team:
          $ref: '#/components/schemas/ObjectRef'
      description: The activity Team Segment Identifier model, which represents an
        object intended for the selection of a particular activity team segment.
    Activity Team Segments Multi Read by Segments:
      type: object
      properties:
        activitySegmentIDs:
          type: array
          description: An collection of team segments ids.
          items:
            type: integer
            format: int64
        activitySegmentIdentifiers:
          type: array
          description: An object representing a collection of team segments ids.
          items:
            $ref: '#/components/schemas/Activity Teams Segment Identifier Request'
      description: Activity Team Segments by id and identifier retriever model.
    Activity Team Segment Labor Category Transfer:
      type: object
      properties:
        laborCategoryDef:
          $ref: '#/components/schemas/ObjectRef'
        laborCategoryEntry:
          $ref: '#/components/schemas/ObjectRef'
      description: Entity containing information regarding a transfer of a labor category
    Timecard Activity Result Segment:
      type: object
      properties:
        activitySegmentId:
          type: integer
          description: The ID of an Activity Segment.
          format: int64
        childResultSegments:
          type: array
          description: A reference to a list of child Activity Result Segments.
          items:
            $ref: '#/components/schemas/Timecard Activity Result Segment'
        createdDateTime:
          type: string
          description: The date and time this record was created in ISO_LOCAL_DATE_TIME
            format (yyyy-mm-ddThh:mm:ss.sss).
        dataSourceId:
          type: integer
          description: The ID of the Data Source.
          format: int64
        dateTimeResult:
          type: string
          description: The DateTime result for the Activity Result Segment.
        decimalResult:
          type: number
          description: The decimal result for the Activity Result Segment.
          format: double
        deleted:
          type: boolean
          description: A Boolean indicator of whether or not the Activity Result Segment
            is deleted.
        effectiveDateTime:
          type: string
          description: The effective date and time associated with an Activity Result
            Segment in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).
        fieldDefinition:
          $ref: '#/components/schemas/ObjectRef Entity'
        id:
          type: integer
          description: The ID of an Activity Result Segment.
          format: int64
        numericResult:
          type: integer
          description: The numeric result for the Activity Result Segment.
          format: int64
        resultCode:
          $ref: '#/components/schemas/ObjectRef Entity'
        textResult:
          type: string
          description: The text result for the Activity Result Segment.
        timeResult:
          type: string
          description: The time result for the Activity Result Segment.
        updatedDateTime:
          type: string
          description: The date and time this record was last updated in ISO_LOCAL_DATE_TIME
            format (yyyy-mm-ddThh:mm:ss.sss).
      description: Entity describing an Activity Result Segment for an Activity Segment.
    Timecard Activity Efficiency:
      type: object
      properties:
        earnedSeconds:
          type: number
          description: The calculated value of earned seconds for a particular activity
            span.
        efficiency:
          type: number
          description: The calculated value of efficiency for a particular activity
            span.
        efficiencyQuantity:
          type: number
          description: The quantity used to calculate an efficiency.
      description: Entity describing Activity Efficiency for a particular activity
        span.
    Timecard Activity Processed Segment:
      type: object
      properties:
        accepted:
          type: boolean
          description: A Boolean indicator of whether or not the segment is accepted.
        activity:
          $ref: '#/components/schemas/ObjectRef Entity'
        activityId:
          type: integer
          description: The ID of an activity.
          format: int64
        activitySegmentId:
          type: integer
          description: A reference to an activity segment.
          format: int64
        activityTeam:
          $ref: '#/components/schemas/ObjectRef Entity'
        activityTeamSegmentId:
          type: integer
          description: A reference to an activity team segment.
          format: int64
        allocatedSeconds:
          type: integer
          description: The number of seconds charged to the work processed segment.
          format: int64
        applyDate:
          type: string
          description: The apply date for an activity processed segment date range
            in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        approvedByEmployee:
          type: boolean
          description: A Boolean indicator whether or not the segment was approved
            by employee.
        approvedByManager:
          type: boolean
          description: A Boolean indicator of whether or not an activity processed
            segment has been approved by a manager.
        concurrent:
          type: boolean
          description: A Boolean indicator of whether or not an activity is concurrent.
        dayDivideState:
          type: integer
          description: The day divide indicator. Valid values include 0 - No Day Divide,
            1 - Before Day Divide, 2 - After Day Divide, and -1 - Undetermined.
          format: int32
        deductedSeconds:
          type: integer
          description: The number of seconds deducted from the span for unpaid meals
            and breaks.
          format: int64
        durationInSeconds:
          type: integer
          description: The duration in seconds of the activity processed segment.
          format: int64
        endDateTime:
          type: string
          description: The date and time of the end of the activity in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-dd HH:mm:ss.SSS).
        endTimezone:
          $ref: '#/components/schemas/ObjectRef Entity'
        eventTypeId:
          type: integer
          description: The ID of an event type.
          format: int64
        id:
          type: integer
          description: The ID of an activity processed segment.
          format: int64
        moneyAmount:
          type: number
          description: The amount (as a decimal value representing money) of the activity
            processed segment.
          format: double
        orderNumber:
          type: integer
          description: The order number associated with an activity segment.
          format: int64
        orphan:
          type: boolean
          description: A Boolean indicator of whether or not the activity is an orphan.
        overageDurationSeconds:
          type: integer
          description: The number of seconds of the activity processed segment that
            are not within the worked shift.
          format: int64
        roundedEndDateTime:
          type: string
          description: An optional field containing the end date and time based on
            configured rounding rules.
        roundedEndTimezone:
          $ref: '#/components/schemas/ObjectRef Entity'
        roundedStartDateTime:
          type: string
          description: An optional field containing the start date and time based
            on configured rounding rules.
        roundedStartTimezone:
          $ref: '#/components/schemas/ObjectRef Entity'
        shiftLocatorDateTime:
          type: string
          description: The shift locator date time in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd
            HH:mm:ss.SSS).
        startDateTime:
          type: string
          description: The date and time of the start of the activity in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-dd HH:mm:ss.SSS).
        startTimezone:
          $ref: '#/components/schemas/ObjectRef Entity'
        systemGeneratedEnd:
          type: boolean
          description: A Boolean indicator of whether or not the end time is system-generated.
        systemGeneratedStart:
          type: boolean
          description: A Boolean indicator of whether or not the start time is system-generated.
        workItemId:
          type: integer
          description: The Work Item ID associated with an activity processed segment.
          format: int64
      description: Entity describing an Activity Processed Segment for an employee.
    ActivityResultSegmentForNetChange:
      type: object
      properties:
        activitySegmentId:
          type: integer
          description: The ID of an Activity Segment.
          format: int64
        childResultSegments:
          type: array
          description: A reference to a list of child Activity Result Segments.
          items:
            $ref: '#/components/schemas/Timecard Activity Result Segment'
        createdDateTime:
          type: string
          description: The date and time this record was created in ISO_LOCAL_DATE_TIME
            format (yyyy-mm-ddThh:mm:ss.sss).
        dataSourceId:
          type: integer
          description: The ID of the Data Source.
          format: int64
        dateTimeResult:
          type: string
          description: The DateTime result for the Activity Result Segment.
        decimalResult:
          type: number
          description: The decimal result for the Activity Result Segment.
          format: double
        effectiveDateTime:
          type: string
          description: The effective date and time associated with an Activity Result
            Segment in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).
        fieldDefinition:
          $ref: '#/components/schemas/ObjectRef Entity'
        id:
          type: integer
          description: The ID of an Activity Result Segment.
          format: int64
        numericResult:
          type: integer
          description: The numeric result for the Activity Result Segment.
          format: int64
        resultCode:
          $ref: '#/components/schemas/ObjectRef Entity'
        status:
          type: string
          description: The Activity Result Segment status. Possible values include
            ADDED, UPDATED, and DELETED.
          enum:
          - ADDED
          - UPDATED
          - DELETED
          - NOT_CHANGED
        textResult:
          type: string
          description: The text result for the Activity Result Segment.
        timeResult:
          type: string
          description: The time result for the Activity Result Segment.
        updatedDateTime:
          type: string
          description: The date and time this record was last updated in ISO_LOCAL_DATE_TIME
            format (yyyy-mm-ddThh:mm:ss.sss).
      description: The Activity Result Segment for net changes model.
    ActivityTotalForNetChange:
      type: object
      properties:
        applyDate:
          type: string
          description: The apply date for an activity total date range in ISO_LOCAL_DATE
            format (YYYY-MM-DD).
          format: date
        costCenter:
          $ref: '#/components/schemas/ObjectRef Entity'
        durationInSeconds:
          type: integer
          description: The duration in seconds of the total.
          format: int64
        endDateTime:
          type: string
          description: The date and time of the end of the total in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-dd HH:mm:ss.SSS).
        endTimezone:
          $ref: '#/components/schemas/ObjectRef Entity'
        laborAccountId:
          type: integer
          description: The ID of the labor account, which combines the cost center
            and labor categories.
          format: int64
        laborCategory:
          $ref: '#/components/schemas/ObjectRef Entity'
        moneyAmount:
          type: number
          description: The amount (as a decimal value representing money) of the activity
            total.
          format: double
        orgJob:
          $ref: '#/components/schemas/ObjectRef Entity'
        orgJobId:
          type: integer
          description: The ID of a job associated with an activity.
          format: int64
        payCode:
          $ref: '#/components/schemas/ObjectRef Entity'
        payCodeId:
          type: integer
          description: The ID of a pay code.
          format: int64
        startDateTime:
          type: string
          description: The date and time of the start of the total in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-dd HH:mm:ss.SSS).
        startTimezone:
          $ref: '#/components/schemas/ObjectRef Entity'
        status:
          type: string
          description: The status of an activity total. Possible values include ADDED,
            UPDATED, DELETED, and NOT_CHANGED.
          enum:
          - ADDED
          - UPDATED
          - DELETED
          - NOT_CHANGED
        transferLaborAccount:
          type: boolean
          description: A Boolean indicator of whether or not the activity total is
            generated from a transfer labor account.
        transferOrgJob:
          type: boolean
          description: A Boolean indicator of whether or not the activity total is
            generated from a transfer organizational job.
        transferWorkRule:
          type: boolean
          description: A Boolean indicator of whether or not the activity total is
            generated from a transfer work rule.
        updatedDateTime:
          type: string
          description: The date and time of the last update in ISO_LOCAL_DATE_TIME
            format (yyyy-mm-ddThh:mm:ss.sss).
        workRule:
          $ref: '#/components/schemas/ObjectRef Entity'
        workRuleId:
          type: integer
          description: The ID of a work rule.
          format: int64
      description: The activity totals for net changes model.
    ActivityProcessedSegmentForNetChange:
      type: object
      properties:
        accepted:
          type: boolean
          description: A Boolean indicator of whether or not the segment is accepted.
        activity:
          $ref: '#/components/schemas/ObjectRef Entity'
        activitySegmentId:
          type: integer
          description: A reference to an activity segment.
          format: int64
        activityTeam:
          $ref: '#/components/schemas/ObjectRef Entity'
        activityTeamSegmentId:
          type: integer
          description: A reference to an activity team segment.
          format: int64
        allocatedSeconds:
          type: integer
          description: The number of seconds charged to the work processed segment.
          format: int64
        applyDate:
          type: string
          description: The apply date for an activity processed segment date range
            in ISO_LOCAL_DATE format (YYYY-MM-DD).
          format: date
        approvedByEmployee:
          type: boolean
          description: A Boolean indicator whether or not the segment was approved
            by employee.
        approvedByManager:
          type: boolean
          description: A Boolean indicator of whether or not an activity processed
            segment has been approved by a manager.
        concurrent:
          type: boolean
          description: A Boolean indicator of whether or not an activity is concurrent.
        dayDivideState:
          type: integer
          description: The day divide indicator. Valid values include 0 - No Day Divide,
            1 - Before Day Divide, 2 - After Day Divide, and -1 - Undetermined.
          format: int32
        deductedSeconds:
          type: integer
          description: The number of seconds deducted from the span for unpaid meals
            and breaks.
          format: int64
        durationInSeconds:
          type: integer
          description: The duration in seconds of the activity processed segment.
          format: int64
        endDateTime:
          type: string
          description: The date and time of the end of the activity in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-dd HH:mm:ss.SSS).
        endTimezone:
          $ref: '#/components/schemas/ObjectRef Entity'
        eventTypeId:
          type: integer
          description: The ID of an event type.
          format: int64
        moneyAmount:
          type: number
          description: The amount (as a decimal value representing money) of the activity
            processed segment.
          format: double
        orderNumber:
          type: integer
          description: The order number associated with an activity segment.
          format: int64
        orphan:
          type: boolean
          description: A Boolean indicator of whether or not the activity is an orphan.
        overageDurationSeconds:
          type: integer
          description: The number of seconds of the activity processed segment that
            are not within the worked shift.
          format: int64
        roundedEndDateTime:
          type: string
          description: An optional field containing the end date and time based on
            configured rounding rules.
        roundedEndTimezone:
          $ref: '#/components/schemas/ObjectRef Entity'
        roundedStartDateTime:
          type: string
          description: An optional field containing the start date and time based
            on configured rounding rules.
        roundedStartTimezone:
          $ref: '#/components/schemas/ObjectRef Entity'
        shiftLocatorDateTime:
          type: string
          description: The shift locator date time in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd
            HH:mm:ss.SSS).
        startDateTime:
          type: string
          description: The date and time of the start of the activity in ISO_LOCAL_DATE_TIME
            format (yyyy-MM-dd HH:mm:ss.SSS).
        startTimezone:
          $ref: '#/components/schemas/ObjectRef Entity'
        systemGeneratedEnd:
          type: boolean
          description: A Boolean indicator of whether or not the end time is system-generated.
        systemGeneratedStart:
          type: boolean
          description: A Boolean indicator of whether or not the start time is system-generated.
        updatedDateTime:
          type: string
          description: The date and time of the last update in ISO_LOCAL_DATE_TIME
            format (yyyy-mm-ddThh:mm:ss.sss).
        workItemId:
          type: integer
          description: The Work Item ID associated with an activity processed segment.
          format: int64
      description: The Activity Processed Segment for net changes model.
    Exportable Activity Result:
      type: object
      properties:
        childResultSegments:
          type: array
          description: A reference to a list of child Activity Result Segments.
          items:
            $ref: '#/components/schemas/Exportable Activity Result'
        createdDateTime:
          type: string
          description: The date and time this record was created in ISO_LOCAL_DATE_TIME
            format (yyyy-mm-ddThh:mm:ss.sss).
        dataSourceId:
          type: integer
          description: The ID of the Data Source.
          format: int64
        dateTimeResult:
          type: string
          description: The DateTime result for the Activity Result Segment.
        decimalResult:
          type: number
          description: The decimal result for the Activity Result Segment.
          format: double
        effectiveDateTime:
          type: string
          description: The effective date and time associated with an Activity Result
            Segment in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).
        fieldDefinition:
          $ref: '#/components/schemas/ObjectRef'
        id:
          type: integer
          description: The ID of an Activity Result Segment.
          format: int64
        numericResult:
          type: integer
          description: The numeric result for the Activity Result Segment.
          format: int64
        resultCode:
          $ref: '#/components/schemas/ObjectRef'
        textResult:
          type: string
          description: The text result for the Activity Result Segment.
        timeResult:
          type: string
          description: The time result for the Activity Result Segment.
        updatedDateTime:
          type: string
          description: The date and time this record was last updated in ISO_LOCAL_DATE_TIME
            format (yyyy-mm-ddThh:mm:ss.sss).
      description: Entity describing an Activity Result Segment for an Activity Segment.
    ResultCodeQualifier:
      required:
      - fieldDefinitionName
      - resultCodeName
      type: object
      properties:
        fieldDefinitionName:
          type: string
          description: The name of a field definition.
        resultCodeName:
          type: string
          description: The name of a result code.
      description: The Result Code qualifier model.
