{
  "swagger" : "2.0", 
  "produces" : null, 
  "host" : "", 
  "info" : {
    "description" : "Rest APIs", 
    "title" : "Rest APIs", 
    "version" : "1.0"
  }, 
  "basePath" : "/", 
  "tags" : [ {
    "description" : "<p markdown=\"1\">From here you may browse our library of API resources, organized hierarchically by domain, or major functional area, logical subgroup, API resource, and all available operations against that resource. For more information about the concepts and technology behind our API, refer to the [Getting started](C:636f581c-50a8-41a7-af43-e5057f9c20bd) documentation.</p><p>Our platform provides a powerful application programming interface and documentation to help you develop secure, scalable, and high-performance applications that leverage the full breadth of capabilities offered by our backend services.</p><p markdown=\"1\">The Workforce Management suite's API is founded on a pragmatic implementation of the [representational state transfer](http://en.wikipedia.org/wiki/Representational_State_Transfer) architectural style and allows access to your organization's workforce management data using common HTTP methods and the [JSON](http://www.json.org) interchange format.</p>", 
    "name" : "API"
  }, {
    "description" : "<p>This resource allows you to run integrations directly from the API to the data elements without the user interface.</p><p>API-based integrations do not use SFTP or flat files to pass the data, cannot be scheduled, and pass the data in the payload of the REST API calls. The size of the data payload is limited, and the data is not transformed in any way. This type of integration is synchronous, responses are detected quickly, and the status is updated immediately even if the integration fails or is blocked. Use this type of integration when you must preserve the data without transformations, for example: import people, update punches, or update accrual balances.</p>", 
    "name" : "API integrations", 
    "x-parent" : "Integrations"
  }, {
    "description" : "This resource allows you to retrieve an action template definition by ID or retrieve all action template definitions.", 
    "name" : "Action Templates", 
    "x-parent" : "Platform"
  }, {
    "description" : "This resource allows you to retrieve and manipulate batch events.", 
    "name" : "Batch Events", 
    "x-parent" : "Batch Processing"
  }, {
    "description" : "This resource allows you to retrieve and manipulate batch groups.", 
    "name" : "Batch Groups", 
    "x-parent" : "Batch Processing"
  }, {
    "description" : "This resource allows you to retrieve batch job statuses.", 
    "name" : "Batch Job Statuses", 
    "x-parent" : "Batch Processing"
  }, {
    "description" : "Batch processing reduces processing time. Schedule long-running and resource-intensive tasks at times that do not degrade system performance.", 
    "name" : "Batch Processing", 
    "x-parent" : "Platform"
  }, {
    "description" : "This resource allows you to retrieve and manipulate batch tasks.", 
    "name" : "Batch Tasks", 
    "x-parent" : "Batch Processing"
  }, {
    "description" : "Change Indicators allow you to identify all changes within a domain and according to a specified timeframe. These change markers allow you to efficiently extract transactional data from your UKG system into an external system, such as an Enterprise Data Warehouse (EDW).", 
    "name" : "Change Indicators", 
    "x-parent" : "Platform"
  }, {
    "description" : "The Document Management domain provides a set of resources and operations related to managing documents. This domain allows you to retrieve, forward, and audit documents, manage document templates, and to retrieve tags associated with domains or document templates.", 
    "name" : "Document Management", 
    "x-parent" : "Platform"
  }, {
    "description" : "This resource allows an employee to access announcements.", 
    "name" : "Employee Announcements", 
    "x-parent" : "Platform"
  }, {
    "description" : "<p>Event Connectors provides a synchronization framework with a messaging system that allows the suite and external systems to share information.</p>", 
    "name" : "Event Connectors", 
    "x-parent" : "Platform"
  }, {
    "description" : "<p>This resource allows you to run file-based integration processes.</p><p>The payload is a flat file delivered by SFTP. You can run the integration from the Integration Hub user interface or with API calls. The REST API calls do not carry the data. The amount of data is not limited, and the response time depends on the size of the file. These integrations can transform or map the incoming or outgoing data, and can be run on-demand or be scheduled. Use this type of integration for bulk updates or when you need to transform the data.</p>", 
    "name" : "File-based Integrations", 
    "x-parent" : "Integrations"
  }, {
    "description" : "<p>This resource allows you to retrieve the details of on-demand and scheduled integration runs.</p><p>The execution data includes start date, completion date, parameters passed, status, and the ID of the person who initiated the run.</p>", 
    "name" : "Integration Executions", 
    "x-parent" : "Integrations"
  }, {
    "description" : "<p>This resource allows you to retrieve the details of schedules that run integrations once or at recurring intervals.</p><p>The schedule data includes name, parameters passed, start date, end date, frequency, interval, and the next run.</p>", 
    "name" : "Integration Schedules", 
    "x-parent" : "Integrations"
  }, {
    "description" : "<p>Integrations exchange business and transactional data - such as person records, payroll data, punches, accruals balances, or business structures - between applications.</p>", 
    "name" : "Integrations", 
    "x-parent" : "Platform"
  }, {
    "description" : "The KPI domain provides operations that allow you to create and update Key Performance Indicators (KPIs) and metrics and retrieve the computed values of KPIs or metrics.", 
    "name" : "KPI Framework", 
    "x-parent" : "Platform"
  }, {
    "description" : "<p>This resource allows you to retrieve Kiosk login transactions.</p>", 
    "name" : "Kiosk", 
    "x-parent" : "Platform"
  }, {
    "description" : "This resource allows a manager to create an announcement.", 
    "name" : "Manager Announcements", 
    "x-parent" : "Platform"
  }, {
    "description" : "This resource provides a set of operations that allows you to retrieve and manipulate mapping categories.", 
    "name" : "Mapping Categories", 
    "x-parent" : "KPI Framework"
  }, {
    "description" : "This resource allows you to retrieve mapping category types for the KPI Builder.", 
    "name" : "Mapping Category Types", 
    "x-parent" : "KPI Framework"
  }, {
    "description" : "<p>This resource allows you retrieve menu items specific to the current user that can be displayed on desktop or mobile devices.</p><p>Note that Dimensions webpages have an embedded navigation wrapper and do not allow only a portion of the page to be rendered. As a result, it is not possible to open a Dimensions page without the nav-bar.</p>", 
    "name" : "Menu Items", 
    "x-parent" : "Platform"
  }, {
    "description" : "This resource allows you to send and retrieve generic notifications, which are an extensive category of notifications that are associated with a number of application-specific functions to send messages to users.", 
    "name" : "Messaging with Generic Notifications", 
    "x-parent" : "Platform"
  }, {
    "description" : "Platform comprises API resources with supporting capabilities that are neutral to Workforce Management concepts.", 
    "name" : "Platform", 
    "x-parent" : "API"
  }, {
    "description" : "This resource helps to log integration execution information.", 
    "name" : "Process Callback", 
    "x-parent" : "Integrations"
  }, {
    "description" : "<p>This resource allows you to publish report designs and run reports.</p><p>This resource provides details about required report parameters and metadata, including name, description, category, default output type, and report paramaters. Only published reports are available to users based on their report profiles.</p>", 
    "name" : "Publish and Run Reports", 
    "x-parent" : "Reporting"
  }, {
    "description" : "This resource allows you to view the list of all report categories and report categories by name. Reports can be associated with multiple report categories, and by default, each report is associated with 'ALL' report categories.", 
    "name" : "Report Categories", 
    "x-parent" : "Reporting"
  }, {
    "description" : "This resource allows you to retrieve and manipulate report data objects, which affect reporting Dataviews and data object metadata and publishes data designs to the Reporting system.", 
    "name" : "Report Data Objects", 
    "x-parent" : "Reporting"
  }, {
    "description" : "This resource allows you to view all report design details and parameters. You can view report design parameters only for a single report design.", 
    "name" : "Report Designs", 
    "x-parent" : "Reporting"
  }, {
    "description" : "This resource allows you to retrieve and manipulate report runs. Each run is recorded by execution history for the current user. You can cancel in-progress report runs, view all successfully completed runs, and delete completed report runs.", 
    "name" : "Report Executions", 
    "x-parent" : "Reporting"
  }, {
    "description" : "This resource allows you to view, add, delete, or edit report profiles. Users can access only those reports in their report profile. By default, all published reports are associated with the ALL report profile.", 
    "name" : "Report Profiles", 
    "x-parent" : "Reporting"
  }, {
    "description" : "<p>This resource allows you to view, add, delete, or edit a report request.</p><p>Report requests can be scheduled to run once or recurrently. The current user can schedule only reports that are in their report profiles. Users who have access to SCHEDULE REPORT FOR OTHERS can schedule reports on behalf of others. All recipients of a schedule report request are notified in Control Center and can view the report and report execution history.</p>", 
    "name" : "Report Requests", 
    "x-parent" : "Reporting"
  }, {
    "description" : "<p>Reports enable you to organize information into an easy-to-read, easy-to-distribute file. With highly formatted and customizable layouts, reports can be scheduled to run at regular intervals and managers can be notified when a report is available.</p><p>The Reporting domain provides operations that you can use to configure and run reports, assign reports into profiles, and assign report profiles to people who can then run and schedule the reports. The current user can also track the run-report history and view or delete executed reports.</p>", 
    "name" : "Reporting", 
    "x-parent" : "Platform"
  }, {
    "description" : "This resource allows you to retrieve and manipulate SSH File Transfer Protocol (SFTP) connections. SFTP connections allow users to download files from defined SFTP locations and are used by the TIP platform when configuring integrations through the Integration - Quick Setup feature.", 
    "name" : "SFTP Connections", 
    "x-parent" : "Integrations"
  }, {
    "description" : "This resource allows you to schedule batch events.", 
    "name" : "Schedule Batch Events", 
    "x-parent" : "Batch Processing"
  }, {
    "description" : "This resource allows you to retrieve the target threshold evaluation period for the KPI Builder.", 
    "name" : "Target Threshold Evaluation Period", 
    "x-parent" : "KPI Framework"
  }, {
    "description" : "This resource allows you to retrieve target threshold indicator texts for the KPI Builder.", 
    "name" : "Target Threshold Indicator Texts", 
    "x-parent" : "KPI Framework"
  }, {
    "description" : "This resource allows you to retrieve all target threshold metric sets for the KPI Builder.", 
    "name" : "Target Threshold Metric Sets", 
    "x-parent" : "KPI Framework"
  }, {
    "description" : "This resource allows you to retrieve target threshold operators for the KPI Builder.", 
    "name" : "Target Threshold Operators", 
    "x-parent" : "KPI Framework"
  }, {
    "description" : "This resource allows you to retrieve and manipulate target thresholds for the KPI Builder.", 
    "name" : "Target Thresholds", 
    "x-parent" : "KPI Framework"
  }, {
    "description" : "Workflow is a component that takes as input a formal description of business processes and maintains the state of process executions, thereby delegating activities among people and applications.", 
    "name" : "Workflow", 
    "x-parent" : "Platform"
  }, {
    "description" : "This resource allows you to perform operations on business processes. Business processes are organized flows of business activities or tasks that achieve a business goal.", 
    "name" : "Workflow Business Processes", 
    "x-parent" : "Workflow"
  } ], 
  "paths" : {
    "/v1/platform/analytics/mapping_categories" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a list of all mapping categories based on the name of a mapping category definition, the ID and name of a domain function, the ID and name of a mapping category type, and any combination of parameters in the query. For a standard KPI, the name must correspond to the key in the database. The name cannot be localized.", 
        "operationId" : "Retrieve All Mapping Categories", 
        "parameters" : [ {
          "description" : "The name of a mapping category definition.", 
          "in" : "query", 
          "name" : "name", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The ID of a mapping category definition.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "mapping_category_type_id", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "The type, or name, of a mapping category definition.", 
          "in" : "query", 
          "name" : "mapping_category_type_name", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The ID of the data source.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "datasource_id", 
          "required" : false, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved.", 
            "schema" : {
              "$ref" : "#/definitions/MappingCategoryDefinitionBean"
            }
          }, 
          "400" : {
            "description" : "Bad request"
          }, 
          "500" : {
            "description" : "Internal server error"
          }
        }, 
        "summary" : "Returns a list of all mapping categories.", 
        "tags" : [ "Mapping Categories" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation creates a mapping category.", 
        "operationId" : "Create Mapping Category", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/MappingCategoryDefinitionBean"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully created.", 
            "schema" : {
              "$ref" : "#/definitions/MappingCategoryDefinitionBean"
            }
          }, 
          "400" : {
            "description" : "Bad request"
          }, 
          "500" : {
            "description" : "Internal server error"
          }
        }, 
        "summary" : "Creates a mapping category.", 
        "tags" : [ "Mapping Categories" ]
      }
    }, 
    "/v1/platform/analytics/mapping_categories/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a mapping category by ID.", 
        "operationId" : "Retrieve Mapping Category by ID", 
        "parameters" : [ {
          "description" : "The ID of a mapping category definition.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved.", 
            "schema" : {
              "$ref" : "#/definitions/MappingCategoryDefinitionBean"
            }
          }, 
          "400" : {
            "description" : "Bad request"
          }, 
          "500" : {
            "description" : "Internal server error"
          }
        }, 
        "summary" : "Returns a mapping category.", 
        "tags" : [ "Mapping Categories" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation updates a mapping category by ID.", 
        "operationId" : "Update Mapping Category by ID", 
        "parameters" : [ {
          "description" : "Updated mapping category definition", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/MappingCategoryDefinitionBean"
          }
        }, {
          "description" : "The ID of a mapping category definition.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully updated.", 
            "schema" : {
              "$ref" : "#/definitions/MappingCategoryDefinitionBean"
            }
          }, 
          "400" : {
            "description" : "Bad request"
          }, 
          "500" : {
            "description" : "Internal server error"
          }
        }, 
        "summary" : "Updates a mapping category.", 
        "tags" : [ "Mapping Categories" ]
      }
    }, 
    "/v1/platform/analytics/mapping_category_types" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns all mapping category types or a single mapping category type by name.", 
        "operationId" : "Retrieve All Mapping Category Types or by Name", 
        "parameters" : [ {
          "description" : "The name of a mapping category type.", 
          "in" : "query", 
          "name" : "name", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved.", 
            "schema" : {
              "$ref" : "#/definitions/Mapping Category Type"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }, 
          "500" : {
            "description" : "Internal server error."
          }
        }, 
        "summary" : "Returns all mapping category types or one by name.", 
        "tags" : [ "Mapping Category Types" ]
      }
    }, 
    "/v1/platform/analytics/mapping_category_types/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a mapping category type by ID.", 
        "operationId" : "Retrieve Mapping Category Type by ID", 
        "parameters" : [ {
          "description" : "The ID of a mapping category type.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved.", 
            "schema" : {
              "$ref" : "#/definitions/Mapping Category Type"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }, 
          "500" : {
            "description" : "Internal server error."
          }
        }, 
        "summary" : "Returns a mapping category type.", 
        "tags" : [ "Mapping Category Types" ]
      }
    }, 
    "/v1/platform/announcements/action_templates" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns all announcement action template definitions.</p><br /><p>The associated Access Control Point is SEND_TO_SELECTED_EMPS.</p>", 
        "operationId" : "Retrieve All Announcement Action Templates", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved all announcement action template definitions.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/ActionTemplate"
              }, 
              "type" : "array"
            }
          }, 
          "403" : {
            "description" : "You are not authorized to perform this operation."
          }
        }, 
        "summary" : "Returns all announcement action template definitions.", 
        "tags" : [ "Action Templates" ]
      }
    }, 
    "/v1/platform/announcements/action_templates/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns an announcement action template by ID.</p><br /><p>The associated Access Control Point is SEND_TO_SELECTED_EMPS.</p>", 
        "operationId" : "Retrieve Announcement Action Template by ID", 
        "parameters" : [ {
          "description" : "An ID that uniquely identifies an announcement action template definition.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved an announcement action template definition by ID.", 
            "schema" : {
              "$ref" : "#/definitions/ActionTemplate"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }, 
          "403" : {
            "description" : "You are not authorized to perform this operation."
          }, 
          "404" : {
            "description" : "The requested ID does not exist."
          }
        }, 
        "summary" : "Returns an announcement action template definition.", 
        "tags" : [ "Action Templates" ]
      }
    }, 
    "/v1/platform/announcements/employee_announcements/apply_update" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation updates an announcement message response as an employee.", 
        "operationId" : "Update Announcement Message Response as Employee", 
        "parameters" : [ {
          "description" : "The Update Announcement Message Response as Employee request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Announcement Response Update Request"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "Successfully updated an announcement message response."
          }, 
          "400" : {
            "description" : "Bad request."
          }, 
          "404" : {
            "description" : "Not Found."
          }
        }, 
        "summary" : "Updates an announcement response as an employee.", 
        "tags" : [ "Employee Announcements" ]
      }
    }, 
    "/v1/platform/announcements/employee_announcements/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns an announcement message response by message ID.", 
        "operationId" : "Retrieve Announcement Message Response by ID as Employee", 
        "parameters" : [ {
          "description" : "The ID of an announcement message.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved an announcement message response.", 
            "schema" : {
              "$ref" : "#/definitions/Announcement Message"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }, 
          "404" : {
            "description" : "Not Found."
          }
        }, 
        "summary" : "Returns an announcement message response as an employee.", 
        "tags" : [ "Employee Announcements" ]
      }
    }, 
    "/v1/platform/announcements/manager_announcements" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation creates an announcement as a manager.</p><br /><p>The associated Access Control Points are SEND_TO_SELECTED_EMPS and SEND_TO_ALL_EMPS. SEND_TO_SELECTED_EMPS governs whether or not a manager can send announcements to selecte recipients. SEND_TO_ALL_EMPS governs whether or not a manager can send announcements to all employees.</p>", 
        "operationId" : "Create Announcement as Manager", 
        "parameters" : [ {
          "description" : "The Create Announcement as Manager request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Announcement Message For Creation"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully created an announcement message.", 
            "schema" : {
              "$ref" : "#/definitions/Announcement Message For Creation"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }, 
          "403" : {
            "description" : "You are not authorized to perform this operation."
          }, 
          "413" : {
            "description" : "Request Entity Too Large."
          }
        }, 
        "summary" : "Creates an announcement message as a manager.", 
        "tags" : [ "Manager Announcements" ]
      }
    }, 
    "/v1/platform/announcements/manager_announcements/apply_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of announcements and associated responses as a manager.</p><br /><p>The associated Access Control Point is SEND_TO_SELECTED_EMPS.</p>", 
        "operationId" : "Retrieve Announcement Messages as Manager", 
        "parameters" : [ {
          "description" : "The Retrieve Announcement Messages as Manager request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Apply Read Request"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of announcements and associated responses.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/Announcement Message"
              }, 
              "type" : "array"
            }
          }, 
          "207" : {
            "description" : "Retrieved a list of announcements and associated responses with partial success.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/APIExceptionDetailResult"
              }, 
              "type" : "array"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }, 
          "401" : {
            "description" : "You are not authorized to perform this operation."
          }
        }, 
        "summary" : "Returns a list of announcements and associated responses as a manager.", 
        "tags" : [ "Manager Announcements" ]
      }
    }, 
    "/v1/platform/announcements/manager_announcements/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns an announcement message response by message ID.</p><br /><p>The associated Access Control Point is SEND_TO_SELECTED_EMPS.</p>", 
        "operationId" : "Retrieve Announcement Message Response by ID as Manager", 
        "parameters" : [ {
          "description" : "The Announcement Message ID.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "default" : false, 
          "description" : "Whether or not to include responses in the response. Default is false. If true, then responses will be returned but recipients will not.  If false, then responses will not be returned but recipients will.", 
          "in" : "query", 
          "name" : "include_responses", 
          "required" : false, 
          "type" : "boolean"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved an announcement message response.", 
            "schema" : {
              "$ref" : "#/definitions/Announcement Message"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }, 
          "404" : {
            "description" : "Not Found."
          }
        }, 
        "summary" : "Returns an announcement message response as a manager.", 
        "tags" : [ "Manager Announcements" ]
      }
    }, 
    "/v1/platform/api_integrations" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a list of all API integrations in the system. You can use this operation to get the key that is required to run an API integration execution.", 
        "operationId" : "Retrieve API Integrations", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returns the list of all API integrations.", 
            "schema" : {
              "$ref" : "#/definitions/API Integration"
            }
          }
        }, 
        "summary" : "Returns a list of all API integrations.", 
        "tags" : [ "API integrations" ]
      }
    }, 
    "/v1/platform/api_integrations/execute/{key}" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation executes an API integration with a key that is generated when an API integration is installed. This operation is asynchronous and returns an identifier (ID) which allows you to monitor the status from another operation.", 
        "operationId" : "Execute API Integration by Key", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/API Integration Request"
          }
        }, {
          "description" : "A key is a code that uniquely identifies an API integration. This key is generated when an API integration is installed.", 
          "in" : "path", 
          "name" : "key", 
          "required" : true, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful submission of the request to execute an API integration by given key.", 
            "schema" : {
              "$ref" : "#/definitions/API Integration Response"
            }
          }, 
          "400" : {
            "description" : "<ul><li>[WFP-105125] - Could not execute the API integration. Some of the user parameters are missing from the request. </li><li>[WFP-105126] - Could not execute the API integration. Some of the parameters provided with request are invalid.</li></ul>"
          }
        }, 
        "summary" : "Executes an API integration.", 
        "tags" : [ "API integrations" ]
      }
    }, 
    "/v1/platform/api_integrations/{id}/status" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns the execution status of an API integration by ID. In the event of a failure, error details are provided. <br> Status currently supported: <br> <ul><li>In Progress</li><li>Failed</li><li>Completed</li><li>Completed with errors</li></ul>", 
        "operationId" : "Retrieve Integration Status by ID", 
        "parameters" : [ {
          "description" : "The ID of an executed API integration.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful retrieval of the status of executed API integration.", 
            "schema" : {
              "$ref" : "#/definitions/API Integration Response"
            }
          }, 
          "404" : {
            "description" : "[WFP-105128] - Could not get the status of the API integration execution because it is not in the system."
          }
        }, 
        "summary" : "Returns the execution status of an API integration.", 
        "tags" : [ "API integrations" ]
      }
    }, 
    "/v1/platform/api_integrations/{key}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns the details of an API integration that is identified by key.", 
        "operationId" : "Retrieve API Integration by Key", 
        "parameters" : [ {
          "description" : "A key is a code that uniquely identifies an API integration. This key is generated when an API integration is installed.", 
          "in" : "path", 
          "name" : "key", 
          "required" : true, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returns the API integration associated with the given key.", 
            "schema" : {
              "$ref" : "#/definitions/API Integration"
            }
          }
        }, 
        "summary" : "Returns the details of an API integration.", 
        "tags" : [ "API integrations" ]
      }
    }, 
    "/v1/platform/batch_processing/batch_events" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns all batch events.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_EVENTS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Retrieve All Batch Events", 
        "parameters" : [ {
          "default" : true, 
          "description" : "A Boolean indicator of whether or not the response returns all details of each batch event.", 
          "in" : "query", 
          "name" : "all_details", 
          "required" : false, 
          "type" : "boolean"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved all the batch events in the system.", 
            "schema" : {
              "$ref" : "#/definitions/WFPBatchEvent"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }
        }, 
        "summary" : "Returns all batch events.", 
        "tags" : [ "Batch Events" ]
      }
    }, 
    "/v1/platform/batch_processing/batch_events/apply_update" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates one or more batch events.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_EVENTS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Update Batch Events", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/WFPBatchEventsTasksUpdate"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: All of the batch events were updated.", 
            "schema" : {
              "$ref" : "#/definitions/WFPBatchEvent"
            }
          }, 
          "207" : {
            "description" : "Partial Success: There were errors updating some of the batch events."
          }, 
          "400" : {
            "description" : "Bad Request: Failed to update any of the batch events."
          }
        }, 
        "summary" : "Updates one or more batch events.", 
        "tags" : [ "Batch Events" ]
      }
    }, 
    "/v1/platform/batch_processing/batch_events/multi_create" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation creates one or more batch events.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_EVENTS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Create Batch Events", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/WFPBatchEvent"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: The batch events were created.", 
            "schema" : {
              "$ref" : "#/definitions/WFPBatchEvent"
            }
          }, 
          "207" : {
            "description" : "Partial Success: there were errors creating some of the batch events."
          }, 
          "400" : {
            "description" : "Bad Request: Failed to create any of the batch events."
          }
        }, 
        "summary" : "Creates one or more batch events.", 
        "tags" : [ "Batch Events" ]
      }
    }, 
    "/v1/platform/batch_processing/batch_events/multi_delete" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation deletes one or more batch events.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_EVENTS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Delete Batch Events", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Combination Event Request"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: All of the batch events were deleted."
          }, 
          "207" : {
            "description" : "Partial Success: There were errors deleting some of the batch events."
          }, 
          "404" : {
            "description" : "The requested resource cannot be found."
          }
        }, 
        "summary" : "Deletes one or more batch events.", 
        "tags" : [ "Batch Events" ]
      }
    }, 
    "/v1/platform/batch_processing/batch_events/schedule/multi_create" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation schedules one or more batch events.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_EVENT</li><li><strong>API Access Controlled By:</strong> Add - Allowed</li><li><strong>Default Values:</strong> Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Schedule Configuration</li></ul>", 
        "operationId" : "Schedule Batch Events", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/BatchEventSchedule"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: The batch events were scheduled.", 
            "schema" : {
              "$ref" : "#/definitions/BatchEventSchedule"
            }
          }, 
          "207" : {
            "description" : "Partial Success: There were errors scheduling some of the batch events."
          }, 
          "400" : {
            "description" : "Bad Request: Failed to schedule any of the batch events."
          }, 
          "500" : {
            "description" : "Internal Server Error"
          }
        }, 
        "summary" : "Schedules one or more batch events.", 
        "tags" : [ "Schedule Batch Events" ]
      }
    }, 
    "/v1/platform/batch_processing/batch_events/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation deletes a batch event by ID.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_EVENTS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Delete Batch Event by ID", 
        "parameters" : [ {
          "description" : "The ID of a batch event.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: batch event was deleted."
          }, 
          "400" : {
            "description" : "Bad Request: Failed to delete batch event."
          }, 
          "404" : {
            "description" : "The requested resource cannot be found."
          }
        }, 
        "summary" : "Deletes a batch event.", 
        "tags" : [ "Batch Events" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a batch event by ID.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_EVENTS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Retrieve Batch Event by ID", 
        "parameters" : [ {
          "description" : "The unique ID of a batch event.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a batch event by ID.", 
            "schema" : {
              "$ref" : "#/definitions/WFPBatchEvent"
            }
          }, 
          "404" : {
            "description" : "The requested resource cannot be found."
          }
        }, 
        "summary" : "Returns a batch event.", 
        "tags" : [ "Batch Events" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates a batch event by ID.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_EVENTS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Update Batch Events by ID", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/WFPBatchEvent"
          }
        }, {
          "description" : "The unique ID of a batch event", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: batch event was updated.", 
            "schema" : {
              "$ref" : "#/definitions/WFPBatchEvent"
            }
          }, 
          "400" : {
            "description" : "Bad Request: Failed to update batch event."
          }, 
          "404" : {
            "description" : "The requested resource cannot be found."
          }
        }, 
        "summary" : "Updates a batch event.", 
        "tags" : [ "Batch Events" ]
      }
    }, 
    "/v1/platform/batch_processing/batch_events/{id}/batch_tasks" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of all batch tasks that are available to a batch event by batch event ID.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_EVENTS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Retrieve Batch Tasks by Batch Event ID", 
        "parameters" : [ {
          "description" : "The ID of a batch event.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of batch tasks according to the specified batch event.", 
            "schema" : {
              "$ref" : "#/definitions/WFPBatchEvent"
            }
          }, 
          "404" : {
            "description" : "The requested resource cannot be found."
          }
        }, 
        "summary" : "Returns a list of all batch tasks available to a batch event.", 
        "tags" : [ "Batch Events" ]
      }
    }, 
    "/v1/platform/batch_processing/batch_groups" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns all batch groups.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_GROUPS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul><br /><h2>Service limit</h2><p>A service limit constrains the number of batch groups that can be processed in a single request.</p><ul><li>The <strong>Number of Batch Groups</strong> cannot exceed 999.</li></ul><p><em><strong>Note:</strong> If your system has more than 999 batch groups, set the <code>all_details</code> Boolean to <code>false</code> to return an unlimited number of batch group references, which include the name (qualifier) and ID. When <code>true</code>, you can use this operation to return the full details of all batch groups up to a total of 999.</em></p><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>", 
        "operationId" : "Retrieve All Batch Groups", 
        "parameters" : [ {
          "default" : true, 
          "description" : "A Boolean indicator of whether or not the response returns all details of each batch group. When false, the response returns only the ID and name of each batch group.", 
          "in" : "query", 
          "name" : "all_details", 
          "required" : false, 
          "type" : "boolean"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved all the batch groups in the system.", 
            "schema" : {
              "$ref" : "#/definitions/WFPBatchGroup"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }
        }, 
        "summary" : "Returns all batch groups.", 
        "tags" : [ "Batch Groups" ]
      }
    }, 
    "/v1/platform/batch_processing/batch_groups/apply_update" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates one or more batch groups.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_GROUPS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Update Batch Groups", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/WFPBatchGroupEventsUpdate"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: All of the batch groups were updated.", 
            "schema" : {
              "$ref" : "#/definitions/WFPBatchGroup"
            }
          }, 
          "207" : {
            "description" : "Partial Success: There were errors updating some of the batch groups."
          }, 
          "400" : {
            "description" : "Bad Request: Failed to update any of the batch groups."
          }
        }, 
        "summary" : "Updates one or more batch groups.", 
        "tags" : [ "Batch Groups" ]
      }
    }, 
    "/v1/platform/batch_processing/batch_groups/multi_create" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation creates one or more batch groups.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_GROUPS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Create Batch Groups", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/WFPBatchGroup"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: The batch groups were created.", 
            "schema" : {
              "$ref" : "#/definitions/WFPBatchGroup"
            }
          }, 
          "207" : {
            "description" : "Partial Success: There were errors creating some of the batch groups."
          }, 
          "400" : {
            "description" : "Bad Request: Failed to create any of the batch groups."
          }
        }, 
        "summary" : "Creates one or more batch groups.", 
        "tags" : [ "Batch Groups" ]
      }
    }, 
    "/v1/platform/batch_processing/batch_groups/multi_delete" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation deletes one or more batch groups.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_GROUPS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Delete Batch Groups", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Combination Group Request"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: All of the batch groups were deleted."
          }, 
          "207" : {
            "description" : "Partial Success: There were errors deleting some of the batch groups."
          }, 
          "400" : {
            "description" : "Bad Request: Failed to delete any of the batch groups."
          }, 
          "404" : {
            "description" : "The requested resource cannot be found."
          }
        }, 
        "summary" : "Deletes one or more batch groups.", 
        "tags" : [ "Batch Groups" ]
      }
    }, 
    "/v1/platform/batch_processing/batch_groups/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation deletes a batch group by ID.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_GROUPS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Delete Batch Group by ID", 
        "parameters" : [ {
          "description" : "The ID of a batch group.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "Successful: batch group was deleted."
          }, 
          "404" : {
            "description" : "The requested resource cannot be found."
          }
        }, 
        "summary" : "Deletes a batch group.", 
        "tags" : [ "Batch Groups" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a batch group by ID.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_GROUPS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Retrieve Batch Group by ID", 
        "parameters" : [ {
          "description" : "The unique ID of a batch group.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a batch group by ID.", 
            "schema" : {
              "$ref" : "#/definitions/WFPBatchGroup"
            }
          }, 
          "404" : {
            "description" : "The requested resource cannot be found."
          }
        }, 
        "summary" : "Returns a batch group.", 
        "tags" : [ "Batch Groups" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates a batch group by ID.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_GROUPS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Update Batch Group by ID", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/WFPBatchGroup"
          }
        }, {
          "description" : "The unique ID of a batch group.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: batch group was updated.", 
            "schema" : {
              "$ref" : "#/definitions/WFPBatchGroup"
            }
          }, 
          "400" : {
            "description" : "Bad Request: Failed to update batch group."
          }, 
          "404" : {
            "description" : "The requested resource cannot be found."
          }
        }, 
        "summary" : "Updates a batch group.", 
        "tags" : [ "Batch Groups" ]
      }
    }, 
    "/v1/platform/batch_processing/batch_groups/{id}/batch_events" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of all batch events available to a batch group by batch group ID.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_GROUPS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Retrieve Batch Events by Batch Group ID", 
        "parameters" : [ {
          "description" : "The ID of a batch group.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of batch events according to the specified batch group.", 
            "schema" : {
              "$ref" : "#/definitions/ObjectRef"
            }
          }, 
          "404" : {
            "description" : "The requested resource cannot be found."
          }
        }, 
        "summary" : "Returns a list of all batch events available to a batch group.", 
        "tags" : [ "Batch Groups" ]
      }
    }, 
    "/v1/platform/batch_processing/batch_job_status/multi_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns one or more batch job statuses.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> SCHEDULE_RULES</li><li><strong>API Access Controlled By:</strong> View - Allowed</li><li><strong>Default Values:</strong> View - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Schedule Configuration</li></ul>", 
        "operationId" : "Retrieve Batch Job Statuses", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/WFPBatchJob"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved one or more batch job statuses.", 
            "schema" : {
              "$ref" : "#/definitions/BatchJobResponseDTO"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }
        }, 
        "summary" : "Returns one or more batch job statuses.", 
        "tags" : [ "Batch Job Statuses" ]
      }
    }, 
    "/v1/platform/batch_processing/batch_tasks" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns all batch tasks.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_TASKS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Retrieve All Batch Tasks", 
        "parameters" : [ {
          "default" : true, 
          "description" : "A Boolean indicator of whether or not the response returns all details of each batch task.", 
          "in" : "query", 
          "name" : "all_details", 
          "required" : false, 
          "type" : "boolean"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved all the batch tasks in the system.", 
            "schema" : {
              "$ref" : "#/definitions/WFPBatchTask"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }
        }, 
        "summary" : "Returns all batch tasks.", 
        "tags" : [ "Batch Tasks" ]
      }
    }, 
    "/v1/platform/batch_processing/batch_tasks/apply_update" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates one or more batch tasks.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_TASKS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Update Batch Tasks", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/WFPAddBatchItems"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: All of the batch tasks were updated.", 
            "schema" : {
              "$ref" : "#/definitions/WFPBatchTask"
            }
          }, 
          "207" : {
            "description" : "Partial Success: There were errors updating some of the batch tasks."
          }, 
          "400" : {
            "description" : "Bad Request: Failed to update any of the batch tasks."
          }
        }, 
        "summary" : "Updates one or more batch tasks.", 
        "tags" : [ "Batch Tasks" ]
      }
    }, 
    "/v1/platform/batch_processing/batch_tasks/multi_create" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation creates one or more batch tasks.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_TASKS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Create Batch Tasks", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/WFPBatchTask"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: The batch tasks were created.", 
            "schema" : {
              "$ref" : "#/definitions/WFPBatchTask"
            }
          }, 
          "207" : {
            "description" : "Partial Success: There were errors creating some of the batch tasks."
          }, 
          "400" : {
            "description" : "Bad Request: Failed to create any of the batch tasks."
          }
        }, 
        "summary" : "Creates one or more batch tasks.", 
        "tags" : [ "Batch Tasks" ]
      }
    }, 
    "/v1/platform/batch_processing/batch_tasks/multi_delete" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation deletes one or more batch tasks.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_TASKS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Delete Batch Tasks", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Combination Task Request"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: All of the batch tasks were deleted."
          }, 
          "207" : {
            "description" : "Partial Success: There were errors deleting some of the batch tasks."
          }, 
          "400" : {
            "description" : "Bad Request: Failed to delete any of the batch tasks."
          }, 
          "404" : {
            "description" : "The requested resource cannot be found."
          }
        }, 
        "summary" : "Deletes one or more batch tasks.", 
        "tags" : [ "Batch Tasks" ]
      }
    }, 
    "/v1/platform/batch_processing/batch_tasks/setup/action_types" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns all batch task action types.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_TASKS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Retrieve All Batch Task Action Types", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved all the batch task action types in the system.", 
            "schema" : {
              "$ref" : "#/definitions/ObjectRef"
            }
          }, 
          "500" : {
            "description" : "Server error."
          }
        }, 
        "summary" : "Returns all batch task action types.", 
        "tags" : [ "Batch Tasks" ]
      }
    }, 
    "/v1/platform/batch_processing/batch_tasks/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation deletes a batch task by ID.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_TASKS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Delete Batch Task by ID", 
        "parameters" : [ {
          "description" : "The ID of a batch task.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "successful operation", 
            "schema" : {
              "$ref" : "#/definitions/WFPBatchTask"
            }
          }, 
          "204" : {
            "description" : "Successful: batch task was deleted."
          }, 
          "404" : {
            "description" : "The requested resource cannot be found."
          }
        }, 
        "summary" : "Deletes a batch task.", 
        "tags" : [ "Batch Tasks" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a batch task by ID.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_TASKS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Retrieve Batch Task by ID", 
        "parameters" : [ {
          "description" : "The unique ID of a batch task.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a batch task by ID.", 
            "schema" : {
              "$ref" : "#/definitions/WFPBatchTask"
            }
          }, 
          "404" : {
            "description" : "The requested resource cannot be found."
          }
        }, 
        "summary" : "Returns a batch task.", 
        "tags" : [ "Batch Tasks" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates a batch task by ID.</p><br /><p>The associated Access Control Point is as follows:</p><ul><li><strong>ACP Key:</strong> BATCH_TASKS</li><li><strong>API Access Controlled By:</strong> View - Allowed or Edit - Allowed</li><li><strong>Default Values:</strong> View - Disallowed, Edit - Disallowed</li><li><strong>Location in the Dimensions UI:</strong> Location: Manager - Common Setup > Batch Processing</li></ul>", 
        "operationId" : "Update Batch Task by ID", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/WFPBatchTask"
          }
        }, {
          "description" : "The unique ID of a batch task.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful: batch task was updated.", 
            "schema" : {
              "$ref" : "#/definitions/WFPBatchTask"
            }
          }, 
          "400" : {
            "description" : "Bad Request: Failed to update batch task."
          }, 
          "404" : {
            "description" : "The requested resource cannot be found."
          }
        }, 
        "summary" : "Updates a batch task.", 
        "tags" : [ "Batch Tasks" ]
      }
    }, 
    "/v1/platform/change_indicators" : {
      "get" : {
        "description" : "<p>This operation returns a list of active change markers available for subscription, a list of all available marker cadences, and a list of available retention periods. A marker cadence defines the interval (or cadence) of tracked changes, and retention periods apply to events generated for a marker type.</p>", 
        "operationId" : "Retrieve Marker Types", 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful operation.", 
            "schema" : {
              "$ref" : "#/definitions/MarkerTypeList"
            }
          }
        }, 
        "summary" : "Returns a list of active change markers available for subscription.", 
        "tags" : [ "Change Indicators" ]
      }
    }, 
    "/v1/platform/change_indicators/markers/apply_read" : {
      "post" : {
        "description" : "<p>This operation returns marker events according to the specified criteria.</p><p>Marker events can be returned according to the following criteria:</p><ul><li><strong>Marker type IDs or names.</strong> Marker types must be of the same cadence. Marker types with different cadences cannot be returned in a single call.</li><li><strong>Time frame.</strong> The start and end date and time of the marker events. The specified date range must be equivalent to or a multiple of a change marker's cadence.</li><li><strong>Page index.</strong> The page index applies to paginated response bodies. Note that if you specify a page index along with any other query parameters, all other parameters except page index are ignored.</li><li><strong>Additional options.</strong> You can also specify a page size or cadence. The subscription's existing cadence is used if no cadence is specified.</li></ul>", 
        "operationId" : "Retrieve Marker Events", 
        "parameters" : [ {
          "description" : "The Retrieve Marker Events request payload.", 
          "in" : "body", 
          "name" : "FirstRequest", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/EventReadRequestFirst"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returned a list of marker events for the specified criteria.", 
            "schema" : {
              "$ref" : "#/definitions/EventReadResponse"
            }
          }, 
          "401" : {
            "description" : "Unauthorized"
          }
        }, 
        "summary" : "Returns marker events according to the specified criteria.", 
        "tags" : [ "Change Indicators" ]
      }
    }, 
    "/v1/platform/change_indicators/subscriptions" : {
      "get" : {
        "description" : "<p>This operation returns the complete list of change marker subscriptions as well as all marker type attributes.</p><p>The response is divided by marker types, with each marker type containing a <code>subscriptions</code> array that lists effective-dated subscriptions to that marker type along with cadence and retention period.</p>", 
        "operationId" : "Retrieve Subscriptions", 
        "parameters" : [ {
          "description" : "The version of the returned change marker subscriptions. Valid values include \"all\" and \"latest\". The default value is \"latest\".", 
          "in" : "query", 
          "name" : "version", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returned a complete list of change marker subscriptions.", 
            "schema" : {
              "$ref" : "#/definitions/MarkerSubscription"
            }
          }, 
          "401" : {
            "description" : "Unauthorized"
          }
        }, 
        "summary" : "Returns the complete list of change marker subscriptions as well as all marker type attributes.", 
        "tags" : [ "Change Indicators" ]
      }
    }, 
    "/v1/platform/change_indicators/subscriptions/{action}" : {
      "post" : {
        "description" : "<p>This operation subscribes to or unsubscribes from active change markers and sets or updates the retention period and cadence of new or existing subscriptions. If you do not specify a retention period and cadence, their default values are applied to the subscription. The response returns all active subscriptions.</p><br /><h2>Example requests</h2><br /><p>The following example request payloads demonstrate the most common use cases.</p><br /><h3>First use case</h3><br /><p>This example request creates or updates a subscription and sets the cadence and retention period:</p><br /><pre><code>[<br />  {<br />    \"id\": \"1\",<br />    \"retention\": \"15d\",<br />    \"cadence\": \"1h\"<br />  }<br />]</code></pre><br /><h3>Second use case</h3><br /><p>This example request creates or updates a subscription and sets the cadence and retention period to default values:</p><br /><pre><code>[<br />  {<br />    \"id\": \"1\"<br />  },<br />  {<br />    \"id\": \"2\"<br />  }<br />]</code></pre><br /><h3>Third use case</h3><br /><p>This example request creates or updates a subscription and sets the cadence and retention period, and includes all of the unchangeable, read-only values in the request payload:</p><br /><pre><code>[<br />  {<br />    \"markerTypeId\": 13,<br />    \"product\": \"forecasting\",<br />    \"category\": \"labor-forecast\",<br />    \"subCategory\": \"labor-forecast\",<br />    \"markerName\": \"forecasting_labor-forecast_labor-forecast\",<br />    \"objectType\": \"emp\",<br />    \"active\": \"true\",<br />    \"resourceUrl\": \"/v1/timekeeping/timecard_metrics/multi_read\",<br />    \"retention\": \"30d\",<br />    \"cadence\": \"15m\"<br />  }<br />]</code></pre>", 
        "operationId" : "Subscribe or Unsubscribe to Change Indicators", 
        "parameters" : [ {
          "description" : "The subscription action to perform. Valid values include \"subscribe\" and \"unsubscribe\".", 
          "in" : "path", 
          "name" : "action", 
          "required" : true, 
          "type" : "string"
        }, {
          "description" : "The Subscribe or Unsubscribe to Change Indicators request payload.", 
          "in" : "body", 
          "name" : "subscriptionRequest", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/SubscriptionRequest"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully subscribed or unsubscribed from the specified change markers.", 
            "schema" : {
              "$ref" : "#/definitions/MarkerSubscription"
            }
          }, 
          "401" : {
            "description" : "Unauthorized"
          }, 
          "default" : {
            "description" : "ErrorResponse", 
            "schema" : {
              "$ref" : "#/definitions/CommonFailureResponse"
            }
          }
        }, 
        "summary" : "Subscribes to or unsubscribes from active change markers and sets or updates the retention period and cadence of new or existing subscriptions.", 
        "tags" : [ "Change Indicators" ]
      }
    }, 
    "/v1/platform/integration_executions" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of all integration runs including completed, in-progress, scheduled, and failed integration runs. The list shows details including start and end times, parameter settings, which employee ran each integration, and the status. You can filter the integration runs. To retrieve integrations from the past four days, filter by <code>integrationId</code> alone. Otherwise, you must filter by <code>integrationId</code>, <code>fromDate</code>, and <code>toDate</code>.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of integration runs that can be returned in a single request.</p><ul><li>The <strong>Number of Integration Runs</strong> cannot exceed 500.</li></ul>", 
        "operationId" : "Retrieve All Integration Executions", 
        "parameters" : [ {
          "description" : "The start date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "in" : "query", 
          "name" : "fromDate", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The end date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "in" : "query", 
          "name" : "toDate", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The ID of an integration.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "integrationId", 
          "required" : false, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful retrieval of the list of all integration executions.", 
            "schema" : {
              "$ref" : "#/definitions/Integration Execution Details"
            }
          }
        }, 
        "summary" : "Retrieves a list of all integration executions.", 
        "tags" : [ "Integration Executions" ]
      }
    }, 
    "/v1/platform/integration_executions/multi_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of integration runs. The list includes details such as start date and time, end date and time, parameter settings, status, and the employee for each integration run.</p><br /><p>The associated Access Control Point is VIEW_INTEGRATION_RESULTS.</p><br/> <h2>Service limit</h2><p>A service limit constrains the number of days that can be processed in a single request.</p><ul><li>The <strong>Number of Days</strong> cannot exceed 7.</li></ul>", 
        "operationId" : "Retrieve Integration Executions", 
        "parameters" : [ {
          "description" : "The Retrieve Integration Executions request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Integration Details Request"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful retrieval of the list of integration executions.", 
            "schema" : {
              "$ref" : "#/definitions/Executed Integration Details Model"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p> <ul> <li>[WFP-105293] - You must specify both startDateTime and endDateTime or leave both properties blank.</li> <li>[WFP-105294] - The startDateTime and endDateTime must use the format: YYYY-MM-dd'T'HH:mm</li> <li>[WFP-105295] - The startDateTime must be earlier than the endDateTime.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }, 
          "403" : {
            "description" : "[WFP-105083] - Could not access the service due to insufficient privileges. Contact system administrator.", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }, 
          "413" : {
            "description" : "[WFP-105296] - The time between the startDateTime and endDateTime is longer than the service limit of {limit}.", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }
        }, 
        "summary" : "Retrieves a list of integration executions.", 
        "tags" : [ "Integration Executions" ]
      }
    }, 
    "/v1/platform/integration_executions/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns the status of and detailed information about an executed integration by ID. Use this operation to monitor an integration.</p><br /><p>The associated Access Control Point is ROLE PROFILES > INTEGRATIONS > RUN INTEGRATIONS.</p>", 
        "operationId" : "Retrieve Integration Execution by ID", 
        "parameters" : [ {
          "description" : "An identifier that uniquely identifies an executed integration.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful retrieval of an integration execution based on its identifier.", 
            "schema" : {
              "$ref" : "#/definitions/Integration Execution Details"
            }
          }
        }, 
        "summary" : "Returns an integration execution.", 
        "tags" : [ "Integration Executions" ]
      }
    }, 
    "/v1/platform/integration_executions/{id}/additional_details" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation submits all additional details related to an integration execution (API or batch) into system. The saved additional details are returned in response when successful. The API should be called from within an integration run to capture the additional details.</p><p><p>This operation supports Test Mode by passing an ID of -1. In Test Mode, no update nor record is made in the system.</p></p>", 
        "operationId" : "Submit Integration Execution Additional Details", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Integration Errors Request"
          }
        }, {
          "description" : "An identifier that uniquely identifies an executed integration.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful submission of all the additional details records", 
            "schema" : {
              "$ref" : "#/definitions/Additional Details Response"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>[WFP-105266] – The request cannot be blank (null).</li><li>[WFP-105267] – One and only one of the given inputs must be specified. Input: batchIntegration,apiIntegration.</li><li>[WFP-105076] – Could not get the details of executed integration because it is not in the system.</li><li>[WCO-128103] – The error value of the following indices cannot be blank (null): {invalidIndices}.</li><li>[WCO-128104] – The source type in the request is not correct: {sourceType}.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }, 
          "413" : {
            "description" : "[WFP-90003] - Service Limits are exceeded for operation on additional details, No more than {X} items are permitted.", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }, 
          "500" : {
            "description" : "<ul><li>[WCO-128105] – The additional details cannot be submitted because of errors in the system.</li><li>[WCO-128106] – The additional details cannot be submitted because of errors.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }
        }, 
        "summary" : "Submits additional details of an integration execution.", 
        "tags" : [ "Integration Executions" ]
      }
    }, 
    "/v1/platform/integration_executions/{id}/file" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation downloads a file by integration ID and file name.", 
        "operationId" : "Download File by Integration", 
        "parameters" : [ {
          "description" : "An identifier that uniquely identifies an executed integration.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "The name of a file, including its extension.", 
          "in" : "query", 
          "name" : "file_name", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/octet-stream" ], 
        "responses" : {
          "200" : {
            "description" : "Successful download of a file based on its identifiers."
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>[WFP-105401] – file_name input parameter is missing.</li><li>[WFP-105400] – Given filename: {filename} is missing extension.</li><li>[WFP-105396] - Given filename: {filename} is not associated with given integration id: {id}</li><li>[WFP-105399] - File: {filename} exceeds the maximum download size limit of {size}Mb.</li><li>[WFP-105076] – Could not get the details of executed integration because it is not in the system.</li></ul>"
          }
        }, 
        "summary" : "Downloads a file by integration ID and file name.", 
        "tags" : [ "Integration Executions" ]
      }
    }, 
    "/v1/platform/integration_executions/{id}/filelist" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of file names by integration ID.</p><br /><p>The associated Access Control Point is ROLE PROFILES > INTEGRATIONS > RUN INTEGRATIONS.</p>", 
        "operationId" : "Retrieve File Names by Integration ID", 
        "parameters" : [ {
          "description" : "An identifier that uniquely identifies an executed integration.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful retrieval of list of file names associated with a specified integration ID."
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>[WFP-105076] – Could not get the details of executed integration because it is not in the system.</li><li>[WFP-105397] - Could not parse downloadable filenames in run summary of executed integration with id: {id}</li><li>[WFP-105398] - Could not find the file(s) of executed integration with id: {id}</li></ul>"
          }
        }, 
        "summary" : "Returns a list of file names associated with a specified integration.", 
        "tags" : [ "Integration Executions" ]
      }
    }, 
    "/v1/platform/integration_schedules" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a list of all scheduled integrations for a date range.", 
        "operationId" : "Retrieve All Scheduled Integration Instances", 
        "parameters" : [ {
          "description" : "From date", 
          "in" : "query", 
          "name" : "fromDate", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "To date", 
          "in" : "query", 
          "name" : "toDate", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The ID of the integration.", 
          "format" : "int64", 
          "in" : "query", 
          "name" : "integrationId", 
          "required" : false, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful retrieval of all scheduled integration instances within a date range.", 
            "schema" : {
              "$ref" : "#/definitions/Integration Instance"
            }
          }
        }, 
        "summary" : "Returns a list of all scheduled integration instances.", 
        "tags" : [ "Integration Schedules" ]
      }
    }, 
    "/v1/platform/integration_schedules/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation deletes a scheduled integration instance by ID.", 
        "operationId" : "Delete Scheduled Integration Instance by ID", 
        "parameters" : [ {
          "description" : "The ID of the integration instance.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "pattern" : "[0-9]+", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful deletion of the scheduled integration instance."
          }
        }, 
        "summary" : "Deletes a scheduled integration instance.", 
        "tags" : [ "Integration Schedules" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns details about a scheduled integration instance by ID.", 
        "operationId" : "Retrieve Scheduled Integration Instance by ID", 
        "parameters" : [ {
          "description" : "The ID of the integration instance.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "pattern" : "[0-9]+", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful retrieval of scheduled integration instance.", 
            "schema" : {
              "$ref" : "#/definitions/IhubScheduleProcessInstanceBean"
            }
          }
        }, 
        "summary" : "Returns a scheduled integration instance.", 
        "tags" : [ "Integration Schedules" ]
      }
    }, 
    "/v1/platform/integrations" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a list of all integrations and user-prompted parameters. The integrations are ready to be run or scheduled.", 
        "operationId" : "Retrieve Integrations", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returned a list of all integrations.", 
            "schema" : {
              "$ref" : "#/definitions/IhubIntegrationResponseBean"
            }
          }
        }, 
        "summary" : "Returns all integrations.", 
        "tags" : [ "File-based Integrations" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation creates an integration process and returns the process along with its unique ID.</p><br /><p>The associated Access Control Point is INSTALL_CONFIGURE_INTEGRATIONS.</p>", 
        "operationId" : "Create an Integration Process", 
        "parameters" : [ {
          "description" : "The Create an Integration Process request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/IhubIntegration Process Response Bean"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "successful operation", 
            "schema" : {
              "$ref" : "#/definitions/IhubIntegration Process Response Bean"
            }
          }, 
          "201" : {
            "description" : "Successfully created an integration process.", 
            "schema" : {
              "$ref" : "#/definitions/IhubIntegration Process Response Bean"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>[WFP-105110] - The {templateParameter} parameter should be defined in the integration for SFTP properties.</li><li>[WFP-105060] - Could not create or update the integration because the integration name is already in the system.</li><li>[WFP-105523] - Specify the integration name.</li><li>[WFP-105425] - Specify the connection ID.</li><li>[WFP-105428] - The connection definition cannot be retrieved because it is not in the system.</li><li>[WFP-105501] - You entered {fieldName}. This process parameter field is not valid for process parameter : {processParamName}.</li><li>[WFP-105502] - Multiple parameters with the same name were found. Parameter names must be unique.</li><li>[WFP-105503] - The system could not find the integration template name in the integration template List.</li><li>[WFP-105504] - The Source Platform Name is invalid.</li><li>[WFP-105505] - A connection is not required for Integration Type NONE.</li><li>[WFP-105506] - This integration type is invalid. Supported integration types are IMPORT, EXPORT or NONE only.</li><li>[WFP-105507] - An integration template name is required.</li><li>[WFP-105508] - You cannot specify 'id' in a create operation.</li><li>[WFP-105526] - One or more of the following required fields for integration parameters are missing: (Fields- name,parameterType,templateParameter).</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }, 
          "403" : {
            "description" : "<p>Forbidden:</p><ul><li>[WFP-105517] - The service cannot be accessed due to insufficient privileges. Contact your system administrator.</li></ul>"
          }, 
          "500" : {
            "description" : "<p>Internal Server Error:</p><ul><li>[WFP-105098] - Could not get the connection definition because of a database error.</li><li>[WFP-105099] - Could not get the connection definition.</li><li>[WFP-105034] - Could not create the integration because of an error in the system.</li><li>[WFP-105035] - Could not create the integration.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }
        }, 
        "summary" : "Creates and returns an integration process.", 
        "tags" : [ "File-based Integrations" ]
      }
    }, 
    "/v1/platform/integrations/sftp_connections" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns all SFTP connection definitions.</p><br /><p>The associated Access Control Point is DESIGN_INTEGRATIONS.</p>", 
        "operationId" : "Retrieve All SFTP Connections", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returned a list of all SFTP integration connection definitions.", 
            "schema" : {
              "$ref" : "#/definitions/Integration Connection Definition"
            }
          }, 
          "403" : {
            "description" : "<p><ul><li>[WFP-105517] - The service cannot be accessed due to insufficient privileges. Contact your system administrator.</li></ul>"
          }, 
          "500" : {
            "description" : "<p>System error:</p><ul><li>[WFP-105510] - The list of connection definitions cannot be retrieved because of a database error.</li><li>[WFP-105511] - The list of connection definitions cannot be retrieved.</li></ul>"
          }
        }, 
        "summary" : "Returns all SFTP connection definitions.", 
        "tags" : [ "SFTP Connections" ]
      }
    }, 
    "/v1/platform/integrations/sftp_connections/apply_update" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates all installed integrations with the specified connection ID for the same integration process ID.</p><br /><p>The associated Access Control Point is DESIGN_INTEGRATIONS.</p>", 
        "operationId" : "Update SFTP Connections for Integrations", 
        "parameters" : [ {
          "description" : "The Update SFTP Connections for Integrations request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/SFTP Connection Update Request"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully updated all eligible installed integrations.", 
            "schema" : {
              "$ref" : "#/definitions/Integration Update Response"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>[WFP-105520] - The integration cannot be retrieved because it is not in the system.</li><li>[WFP-105425] - Specify the connection ID.</li><li>[WFP-105523] - Specify the integration name.</li><li>[WFP-105427] - There are no SFTP connections to update in the Integration Environment.</li><li>[WFP-105428] - The connection definition cannot be retrieved because it is not in the system.</li><li>[WFP-105426] - \tOne or more SFTP connections could not retrieve the connection definition because there are no connection definitions in the system.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }, 
          "403" : {
            "description" : "<p>Forbidden:</p><ul><li>[WFP-105517] - The service cannot be accessed due to insufficient privileges. Contact your system administrator.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }, 
          "500" : {
            "description" : "<p>Internal Server Error:</p><ul><li>[WFP-105521] - The integration cannot be updated because of an error in the system.</li><li>[WFP-105522] - The integration cannot be updated at this time.</li><li>[WFP-105519] - The integration cannot be retrieved at this time.</li><li>[WFP-105518] - The integration cannot be retrieved because of an error in the system.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }
        }, 
        "summary" : "Updates all installed integrations with the specified connection ID for the same integration process ID.", 
        "tags" : [ "SFTP Connections" ]
      }
    }, 
    "/v1/platform/integrations/sftp_connections/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns an SFTP connection definition by ID.</p><br /><p>The associated Access Control Point is DESIGN_INTEGRATIONS.</p>", 
        "operationId" : "Retrieve SFTP Connection by ID", 
        "parameters" : [ {
          "description" : "The ID of an SFTP connection.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returned a connection definition based on provided integration identifier.", 
            "schema" : {
              "$ref" : "#/definitions/Integration Connection Definition"
            }
          }, 
          "403" : {
            "description" : "<ul><li>[WFP-105517] - The service cannot be accessed due to insufficient privileges. Contact your system administrator.</li></ul>"
          }, 
          "404" : {
            "description" : "<p>Not found:</p><ul><li>[WFP-105512] - The connection definition cannot be retrieved because it is not in the system. </li></ul>"
          }, 
          "500" : {
            "description" : "<p>System error:</p><ul><li>[WFP-105513] - The connection definition cannot be retrieved because of a database error. </li><li>[WFP-105514] - The connection definition cannot be retrieved because of an unknown error. </li></ul>"
          }
        }, 
        "summary" : "Returns an SFTP connection definition.", 
        "tags" : [ "SFTP Connections" ]
      }
    }, 
    "/v1/platform/integrations/sftp_connections/{id}/connection_status" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation tests an SFTP connection by iHub connection definition ID.</p><br /><p>The associated Access Control Point is DESIGN_INTEGRATIONS.</p>", 
        "operationId" : "Test SFTP Connection by ID", 
        "parameters" : [ {
          "description" : "Connection definition identifier", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "valid", 
            "schema" : {
              "additionalProperties" : {
                "type" : "object"
              }, 
              "type" : "object"
            }
          }, 
          "400" : {
            "description" : "[WFP-105516] - The connection to the server failed."
          }, 
          "403" : {
            "description" : "[WFP-105517] - The service cannot be accessed due to insufficient privileges. Contact your system administrator."
          }, 
          "404" : {
            "description" : "<p>Not found:</p> <ul> <li>[WFP-105512] - The connection definition cannot be retrieved because it is not in the system. </li></ul>"
          }, 
          "500" : {
            "description" : "<p>Internal server error:</p> <ul> <li>[WFP-105513] - The connection definition cannot be retrieved because of a database error. </li><li>[WFP-105514] - The connection definition cannot be retrieved because of an unknown error. </li><li>[WFP-105515] - The connection cannot be tested at this time. </li></ul>"
          }
        }, 
        "summary" : "Tests an SFTP connection.", 
        "tags" : [ "SFTP Connections" ]
      }
    }, 
    "/v1/platform/integrations/update_status" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates and returns the callback instance against the provided integration execution details. This operation requires one, but not both, of the following properties: <code>batchIntegration</code> or <code>apiIntegration</code>.</p><p>This operation supports Test Mode by passing an ID of -1. In Test Mode, no update nor record is made in the system.</p>", 
        "operationId" : "Update Integration Execution Details", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Process Callback Details"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully updates and returns the callback instance against the provided integration execution details.", 
            "schema" : {
              "$ref" : "#/definitions/Process Callback Details"
            }
          }, 
          "400" : {
            "description" : "<p>Bad request:</p> <ul> <li>[WFP-105033] - Could not get the integration because it is not in the system. </li> <li>[WFP-105177] - Could not get the result as incomplete date range filter is provided in search criteria. Either both fromDate and toDate must be given or none. Past four days records will be fetched if no date range is provided. </li> <li>[WFP-105178] - Too many records in the system match the search criteria provided. Refine your search to display the most relevant results. </li> <li>[WFP-105179] - Could not get the result as 'fromDate' is greater than 'toDate'. </li> <li>[WFP-105180] - Could not get the result as dates provided are not in ISO format(YYYY-MM-DD). </li> <li>[WFP-105241] - The request cannot include both <code>batchIntegration</code> and <code>apiIntegration</code> as null. </li> <li>[WFP-105242] - The request cannot include both <code>batchIntegration</code> and <code>apiIntegration</code> together.</li> <li>[WFP-105243] - The request must include an ID with <code>batchIntegration</code>.</li> <li>[WFP-105244] - The request must include an ID with <code>apiIntegration</code>. </li> </ul>"
          }
        }, 
        "summary" : "Updates integration execution details.", 
        "tags" : [ "Process Callback" ]
      }
    }, 
    "/v1/platform/integrations/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns an integration process by ID.</p><br /><p>The associated Access Control Point is INSTALL_INTEGRATIONS.</p>", 
        "operationId" : "v1.0.platform-integrations.get.{id}.nickname", 
        "parameters" : [ {
          "description" : "The ID of an integration process.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returned the corresponding integration definition for the provided process identifier.", 
            "schema" : {
              "$ref" : "#/definitions/IhubIntegration Process Response Bean"
            }
          }, 
          "403" : {
            "description" : "<p>Forbidden:</p><ul><li>[WFP-105083] - The service cannot be accessed due to insufficient privileges. Contact your system administrator.</li></ul>"
          }, 
          "404" : {
            "description" : "<ul><li>[WFP-105500] - The integration cannot be retrieved because it is not in the system.</li></ul>"
          }
        }, 
        "summary" : "Returns an integration process.", 
        "tags" : [ "File-based Integrations" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation updates an integration process by ID.</p><br /><p>The associated Access Control Point is INSTALL_CONFIGURE_INTEGRATIONS.</p>", 
        "operationId" : "Update Integration by ID", 
        "parameters" : [ {
          "description" : "The unique ID of an integration process.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/IhubIntegration Process Response Bean"
          }
        }, {
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully updated an integration process.", 
            "schema" : {
              "$ref" : "#/definitions/IhubIntegration Process Response Bean"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>[WFP-105110] - The {templateParameter} parameter should be defined in the integration for SFTP properties.</li><li>[WFP-105060] - Could not create or update the integration because the integration name is already in the system.</li><li>[WFP-105523] - Specify the integration name.</li><li>[WFP-105425] - Specify the connection ID.</li><li>[WFP-105428] - The connection definition cannot be retrieved because it is not in the system.</li><li>[WFP-105501] - You entered {fieldName}. This process parameter field is not valid for process parameter : {processParamName}.</li><li>[WFP-105502] - Multiple parameters with the same name were found. Parameter names must be unique.</li><li>[WFP-105503] - The system could not find the integration template name in the integration template List.</li><li>[WFP-105504] - The Source Platform Name is invalid.</li><li>[WFP-105505] - A connection is not required for Integration Type NONE.</li><li>[WFP-105506] - This integration type is invalid. Supported integration types are IMPORT, EXPORT or NONE only.</li><li>[WFP-105507] - An integration template name is required.</li><li>[WFP-105526] - One or more of the following required fields for integration parameters are missing: (Fields- name,parameterType,templateParameter).</li><li>[WFP-105528] - The integration cannot be updated because associated scheduled integration requests are active and integration runs are pending. Copy and save the integration as a new integration.</li><li>[WFP-105529] - The integration cannot be updated because associated scheduled integration requests are active. Copy and save the integration as a new integration.</li><li>[WFP-105530] - The integration cannot be updated because associated integration runs are in progress. Copy and save the integration as a new integration.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }, 
          "403" : {
            "description" : "<p>Forbidden:</p><ul><li>[WFP-105517] - The service cannot be accessed due to insufficient privileges. Contact your system administrator.</li></ul>"
          }, 
          "404" : {
            "description" : "<p>Not Found:</p><ul><li>[WFP-105500] - The integration cannot be retrieved because it is not in the system.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }, 
          "500" : {
            "description" : "<p>Internal Server Error:</p><ul><li>[WFP-105098] - Could not get the connection definition because of a database error.</li><li>[WFP-105099] - Could not get the connection definition.</li><li>[WFP-105521] - The integration cannot be updated because of an error in the system.</li><li>[WFP-105522] - The integration cannot be updated at this time.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }
        }, 
        "summary" : "Updates an integration process.", 
        "tags" : [ "File-based Integrations" ]
      }
    }, 
    "/v1/platform/integrations/{id}/execute" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation submits an integration by ID to run immediately.", 
        "operationId" : "Execute Integration by ID", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Execute Integration Request"
          }
        }, {
          "description" : "The ID of an integration.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful executions of integration", 
            "schema" : {
              "$ref" : "#/definitions/Execute Integration Response"
            }
          }
        }, 
        "summary" : "Executes an integration.", 
        "tags" : [ "File-based Integrations" ]
      }
    }, 
    "/v1/platform/integrations/{id}/schedule" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation submits an integration by ID to schedule for execution. The integration can be scheduled to run once or at a recurring frequency.</p><table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" align=\"left\"> <tbody> <tr><td><p><strong>Frequency Type</strong></p> </td> <td> <p><strong>Frequency</strong></p> </td> <td> <p><strong>Interval&nbsp; &nbsp;&nbsp;</strong></p> </td></tr> <tr> <td> <p>1 (Once) -</p> <p>This frequency type is used to schedule an integration that will be executed only once on provided future date time.&nbsp;</p> </td> <td>Not Applicable</td> <td>Not Applicable</td> </tr> <tr> <td> <p>2 (Daily) -</p> <p>This frequency type is used to schedule an integration to execute daily.</p> </td> <td> <p>Not Applicable</p> </td> <td> <p>Any valid numeric number.</p> <p>The&nbsp;number of&nbsp;days to skip between runs.</p> </td> </tr> <tr> <td> <p>3 (Weekly) -&nbsp;</p> <p>This frequency type is used to schedule integration to execute weekly</p> </td> <td> <p>Days of week on which to run the schedule</p> <p>1 (Sunday)</p> <p>2 (Monday)</p> <p>3 (Tuesday)</p> <p>4 (Wednesday)</p> <p>5 (Thursday)</p> <p>6 (Friday)</p> <p>7 (Saturday)</p> </td> <td> <p>Any valid numeric number.</p> <p>The&nbsp;number of weeks to skip between runs.</p> </td> </tr> <tr> <td> <p>4 (Monthly)</p> <p>This frequency type is used to schedule integration request to execute monthly.</p> </td> <td> <p>Months on which to run the schedule:</p> <p>0 (January)</p> <p>1 (February)</p> <p>2 (March)</p> <p>3 (April)</p> <p>4 (May)</p> <p>5 (June)</p> <p>6 (July)</p> <p>7 (August)</p> <p>8 (September)</p> <p>9 (October)</p> <p>10 (November)</p> <p>11 (December)</p> </td> <td> <p>1 to 31 (January, March, May, July,&nbsp;August, October,&nbsp;December)</p> <p>1 to 28&nbsp;(February - Non Leap Year) &nbsp;</p> <p>1 to 29&nbsp;(February - Leap Year)</p> <p>1 to&nbsp;30 (April,&nbsp;June,&nbsp;September, November)</p> <p>&nbsp;</p> </td> </tr> <tr> <td> <p>5 (Hourly)</p> <p>This frequency type is used to schedule integration request to execute hourly.</p> </td> <td>Not Applicable</td> <td>Not Applicable</td> </tr> </tbody> </table>", 
        "operationId" : "Schedule Integration by ID", 
        "parameters" : [ {
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/IhubScheduleInstanceBean"
          }
        }, {
          "description" : "The ID of an integration.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful scheduling of integration.", 
            "schema" : {
              "$ref" : "#/definitions/Response Status"
            }
          }
        }, 
        "summary" : "Schedules an integration for execution.", 
        "tags" : [ "File-based Integrations" ]
      }
    }, 
    "/v1/platform/messaging/generic_notifications" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a list of all available generic notifications, including the corresponding generic notification if a specific name is provided.", 
        "operationId" : "Retrieve Generic Notifications for Messaging", 
        "parameters" : [ {
          "description" : "Name of the generic notification.", 
          "in" : "query", 
          "name" : "name", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful retrieval of list of generic notifications.", 
            "schema" : {
              "$ref" : "#/definitions/Generic Workflow Notification"
            }
          }, 
          "400" : {
            "description" : "[CONTROL_CENTER-10001]-Notification couldn't be loaded. Try again."
          }
        }, 
        "summary" : "Returns a list of all generic notifications.", 
        "tags" : [ "Messaging with Generic Notifications" ]
      }
    }, 
    "/v1/platform/messaging/generic_notifications/notify" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation sends a generic notification according to the provided event type. An event type is a combination of domain and event.", 
        "operationId" : "Send Notification by Event Type", 
        "parameters" : [ {
          "description" : "Notification Message JSON", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Event Message"
          }
        }, {
          "description" : "Name of the generic notification.", 
          "in" : "query", 
          "name" : "name", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Notifications were sent successfully."
          }, 
          "400" : {
            "description" : "<ul><li>[CONTROL_CENTER-10005]-That Event Type doesn't exist for passed domain and event.</li><li>[CONTROL_CENTER-10001]-Notification couldn't be sent. Try again.</li></ul>"
          }
        }, 
        "summary" : "Sends a generic notification by domain and event.", 
        "tags" : [ "Messaging with Generic Notifications" ]
      }
    }, 
    "/v1/platform/messaging/generic_notifications/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a generic notification according to the provided reference ID.", 
        "operationId" : "Retrieve Generic Notification by ID for Messaging", 
        "parameters" : [ {
          "description" : "The ID of the generic notification.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful retrieval of details of generic notifications for the logged-in user.", 
            "schema" : {
              "$ref" : "#/definitions/Generic Workflow Notification"
            }
          }, 
          "400" : {
            "description" : "[CONTROL_CENTER-10001]-Notification couldn't be loaded. Try again."
          }
        }, 
        "summary" : "Returns details about a generic notification.", 
        "tags" : [ "Messaging with Generic Notifications" ]
      }
    }, 
    "/v1/platform/messaging/generic_notifications/{id}/notify" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation sends a generic notification according to the provided reference ID of the generic notification.", 
        "operationId" : "Send Notification by ID", 
        "parameters" : [ {
          "description" : "Notification Message JSON", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Notification Message"
          }
        }, {
          "description" : "The ID of the generic notification.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Notifications were sent successfully."
          }, 
          "400" : {
            "description" : "<ul><li>[CONTROL_CENTER-10006]-That Notification ID doesn't exist.</li><li>[CONTROL_CENTER-10001]-Notification couldn't be sent. Try again.</li></ul>"
          }
        }, 
        "summary" : "Sends a generic notification.", 
        "tags" : [ "Messaging with Generic Notifications" ]
      }
    }, 
    "/v1/platform/report_categories" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns all report categories with associated reports.", 
        "operationId" : "Get All Report Categories", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returns a list of report categories.", 
            "schema" : {
              "$ref" : "#/definitions/Report Category"
            }
          }
        }, 
        "summary" : "Returns all report categories.", 
        "tags" : [ "Report Categories" ]
      }
    }, 
    "/v1/platform/report_categories/{name}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns the report category, with associated reports, that corresponds to the name.", 
        "operationId" : "Get Report Category By Name", 
        "parameters" : [ {
          "description" : "Report Category Name", 
          "in" : "path", 
          "name" : "name", 
          "required" : true, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returns report category that corresponds to the requested name", 
            "schema" : {
              "$ref" : "#/definitions/Report Category"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Requested report category name is invalid</li></ul>"
          }
        }, 
        "summary" : "Returns a report category.", 
        "tags" : [ "Report Categories" ]
      }
    }, 
    "/v1/platform/report_dataobjects" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns all report data objects or a single report data object by name.", 
        "operationId" : "Retrieve All Report Data Objects or by Name", 
        "parameters" : [ {
          "description" : "The name of a report data object.", 
          "in" : "query", 
          "name" : "name", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returns list of all report data objects.", 
            "schema" : {
              "$ref" : "#/definitions/Model for Report Data Object API"
            }
          }
        }, 
        "summary" : "Returns all report data objects or a single report data object by name.", 
        "tags" : [ "Report Data Objects" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation creates a reporting data object, which represents a reporting dataview, data object metadata, and publishes the corresponding data design file to the Reporting system.", 
        "operationId" : "Create Report Data Object", 
        "parameters" : [ {
          "description" : "Reporting Data Object to be created", 
          "in" : "body", 
          "name" : "reportingDataObject", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Model for Report Data Object API"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returns newly created report data object.", 
            "schema" : {
              "$ref" : "#/definitions/Model for Report Data Object API"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Incorrect report data object request</li></ul>"
          }
        }, 
        "summary" : "Creates a reporting data object, which represents a reporting dataview, data object metadata, and data design file.", 
        "tags" : [ "Report Data Objects" ]
      }
    }, 
    "/v1/platform/report_dataobjects/dataelements" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns data element definitions by Data Dictionary keys.", 
        "operationId" : "Retrieve Report Data Element Definitions", 
        "parameters" : [ {
          "description" : "data elements search criteria", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "items" : {
              "type" : "string"
            }, 
            "type" : "array"
          }
        }, {
          "description" : "The roll up level.", 
          "in" : "query", 
          "name" : "rollupBy", 
          "required" : true, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful returns list of reporting data element definitions.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/Reporting Data Element Definition"
              }, 
              "type" : "array"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Requested data dictionary keys are invalid</li></ul>"
          }
        }, 
        "summary" : "Returns data element definitions.", 
        "tags" : [ "Report Data Objects" ]
      }
    }, 
    "/v1/platform/report_dataobjects/{dId}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation deletes a reporting data object, which represents a reporting dataview, data object metadata, and data design file by ID.", 
        "operationId" : "Delete Report Data Object by ID", 
        "parameters" : [ {
          "description" : "The ID of a report data object.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "No Contents"
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Requested data object id is invalid</li></ul>"
          }
        }, 
        "summary" : "Deletes a reporting data object, which represents a reporting dataview, data object metadata, and data design file.", 
        "tags" : [ "Report Data Objects" ]
      }
    }, 
    "/v1/platform/report_dataobjects/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a report data object by ID.", 
        "operationId" : "Retrieve Report Data Object by ID", 
        "parameters" : [ {
          "description" : "The ID of a report data object.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returns report data object that corresponds to the requested name", 
            "schema" : {
              "$ref" : "#/definitions/Model for Report Data Object API"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Requested report data object id is invalid</li></ul>"
          }
        }, 
        "summary" : "Returns a report data object.", 
        "tags" : [ "Report Data Objects" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation updates a reporting data object, which represents a reporting dataview, data object metadata, and data design file by ID.", 
        "operationId" : "Update Report Data Object by ID", 
        "parameters" : [ {
          "description" : "The ID of a report data object.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "Reporting Data Object update request", 
          "in" : "body", 
          "name" : "reportingDataObject", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Model for Report Data Object API"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successful returns updated report data object.", 
            "schema" : {
              "$ref" : "#/definitions/Model for Report Data Object API"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Requested report data object id is invalid</li><li>Incorrect report data object request</li></ul>"
          }
        }, 
        "summary" : "Updates a reporting data object, which represents a reporting dataview, data object metadata, and data design file.", 
        "tags" : [ "Report Data Objects" ]
      }
    }, 
    "/v1/platform/report_dataobjects/{name}/data" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a reporting data object, which represents a reporting dataview, data object metadata, and data design file, by name.", 
        "operationId" : "Retrieve Report Data Object by Name", 
        "parameters" : [ {
          "description" : "The name of a report data object.", 
          "in" : "path", 
          "name" : "name", 
          "required" : true, 
          "type" : "string"
        }, {
          "description" : "Data Request for Reporting Data View", 
          "in" : "body", 
          "name" : "request", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Reporting Data Request"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returns reporting data response that corresponds to the requested name", 
            "schema" : {
              "$ref" : "#/definitions/Reporting Data Response"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Requested report data object name is invalid</li></ul>"
          }
        }, 
        "summary" : "Returns a reporting data object, which represents a reporting dataview, data object metadata, and data design file.", 
        "tags" : [ "Report Data Objects" ]
      }
    }, 
    "/v1/platform/report_dataobjects/{name}/data/generate_request_batches" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation generates and returns batches of Retrieve Report Data Object requests by name.", 
        "operationId" : "Generate Report Data Object Batched Requests by Name", 
        "parameters" : [ {
          "description" : "The name of a report data object.", 
          "in" : "path", 
          "name" : "name", 
          "required" : true, 
          "type" : "string"
        }, {
          "description" : "Data Request for Reporting Data View", 
          "in" : "body", 
          "name" : "request", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Reporting Data Request"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returns report data request batches that corresponds to the requested name", 
            "schema" : {
              "$ref" : "#/definitions/Reporting Chunk Response"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Requested report data object name is invalid</li></ul>"
          }
        }, 
        "summary" : "Generates and returns Retrieve Report Data Object request batches.", 
        "tags" : [ "Report Data Objects" ]
      }
    }, 
    "/v1/platform/report_designs" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns all report designs. If <code>reportType</code> is equal to Published, this operation returns only report designs that are published or available. If <code>reportType</code> is equal to Unpublished, this operation returns only report designs that are neither published nor available.", 
        "operationId" : "Retrieve All Report Designs", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returned the list of all report design details.", 
            "schema" : {
              "$ref" : "#/definitions/Internal Report Design"
            }
          }
        }, 
        "summary" : "Returns all report designs.", 
        "tags" : [ "Report Designs" ]
      }
    }, 
    "/v1/platform/report_designs/{name}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation deletes an unpublished report design by ID.", 
        "operationId" : "Delete Unpublished Report Design by ID", 
        "parameters" : [ {
          "description" : "The ID of a report design file.", 
          "in" : "path", 
          "name" : "name", 
          "required" : true, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "No Contents."
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Requested report design ID is invalid.</li></ul>"
          }
        }, 
        "summary" : "Deletes a report design.", 
        "tags" : [ "Report Designs" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a single report design by name.", 
        "operationId" : "Retrieve a Report Design by Name", 
        "parameters" : [ {
          "description" : "The name of the report design file.", 
          "in" : "path", 
          "name" : "name", 
          "required" : true, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returns the report design that correspond to the identifier (name).", 
            "schema" : {
              "$ref" : "#/definitions/Internal Report Design"
            }
          }
        }, 
        "summary" : "Returns a report design.", 
        "tags" : [ "Report Designs" ]
      }
    }, 
    "/v1/platform/report_designs/{name}/parameters" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns report design parameters that correspond to the identifier <code>ReportName</code>.", 
        "operationId" : "Retrieve Report Design Parameters", 
        "parameters" : [ {
          "description" : "The name of a report design file.", 
          "in" : "path", 
          "name" : "name", 
          "required" : true, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returned the list of report design parameters.", 
            "schema" : {
              "$ref" : "#/definitions/Report Design Parameter"
            }
          }
        }, 
        "summary" : "Returns report design parameters.", 
        "tags" : [ "Report Designs" ]
      }
    }, 
    "/v1/platform/report_executions" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns the entire report run history for the current user.", 
        "operationId" : "Retrieve Report History", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returns all report executions.", 
            "schema" : {
              "$ref" : "#/definitions/Internal Report Execution History"
            }
          }
        }, 
        "summary" : "Returns the report run history.", 
        "tags" : [ "Report Executions" ]
      }
    }, 
    "/v1/platform/report_executions/apply_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns the report run history for the current user based on specified criteria.</p><br /><p>The associated Access Control Point is REPORT_PAGE_ACCESS. This ACP is located in the Dimensions UI as Manager - Department Manager > Reports > Report Page.</p>", 
        "operationId" : "Retrieve Report History by Criteria", 
        "parameters" : [ {
          "description" : "Report Execution History Request", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Report Execution History Request"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returned report executions based on the specified criteria.", 
            "schema" : {
              "$ref" : "#/definitions/Report Execution History Response"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p> <ul><li>Invalid report execution request</li></ul>"
          }
        }, 
        "summary" : "Returns report run history by criteria.", 
        "tags" : [ "Report Executions" ]
      }
    }, 
    "/v1/platform/report_executions/{id}/file" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns an executed report by ID as an attachment.", 
        "operationId" : "Retrieve Executed Report Output by ID", 
        "parameters" : [ {
          "description" : "The ID of an executed report.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json", "application/pdf", "application/xlsx" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returns report as an attachment.", 
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p> <ul><li>Requested report execution ID is invalid.</li></ul>"
          }
        }, 
        "summary" : "Returns a report as an attachment.", 
        "tags" : [ "Report Executions" ]
      }
    }, 
    "/v1/platform/report_profiles" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns all report profiles.", 
        "operationId" : "Retrieve All Report Profiles", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returns a list of all report profiles.", 
            "schema" : {
              "$ref" : "#/definitions/Report Base Profile"
            }
          }
        }, 
        "summary" : "Returns all report profiles.", 
        "tags" : [ "Report Profiles" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation creates and saves a report profile.", 
        "operationId" : "Create Report Profile", 
        "parameters" : [ {
          "description" : "Report Profile Request", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Report Base Profile"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returned newly created report profile.", 
            "schema" : {
              "$ref" : "#/definitions/Report Base Profile"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Incorrect report profile request</li></ul>"
          }
        }, 
        "summary" : "Creates and saves a report profile.", 
        "tags" : [ "Report Profiles" ]
      }
    }, 
    "/v1/platform/report_profiles/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation deletes a report profile by ID.", 
        "operationId" : "Delete Report Profile by ID", 
        "parameters" : [ {
          "description" : "An ID that uniquely identifies a report profile.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "Successfully deleted the report profile."
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Requested report profile ID is invalid</li></ul>"
          }
        }, 
        "summary" : "Deletes a report profile.", 
        "tags" : [ "Report Profiles" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a report profile by ID.", 
        "operationId" : "Retrieve Report Profile by ID", 
        "parameters" : [ {
          "description" : "An ID that uniquely identifies a report profile.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returned report profile.", 
            "schema" : {
              "$ref" : "#/definitions/Report Base Profile"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Requested report profile ID is invalid</li></ul>"
          }
        }, 
        "summary" : "Returns a report profile.", 
        "tags" : [ "Report Profiles" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation updates a report profile by ID.", 
        "operationId" : "Update Report Profile by ID", 
        "parameters" : [ {
          "description" : "An ID that uniquely identifies a report profile.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "Report Profile Request", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Report Base Profile"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returned the updated report profile.", 
            "schema" : {
              "$ref" : "#/definitions/Report Base Profile"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Requested report profile ID is invalid</li><li>Incorrect report profile request</li></ul>"
          }
        }, 
        "summary" : "Updates a report profile.", 
        "tags" : [ "Report Profiles" ]
      }
    }, 
    "/v1/platform/reports" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a list of all published reports. If admin is true, this operation returns all reports that are available. If false, it returns the reports that are available to current user as defined in the report profile.", 
        "operationId" : "Retrieve Published Reports", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returns a list of all reports.", 
            "schema" : {
              "$ref" : "#/definitions/Published Report"
            }
          }
        }, 
        "summary" : "Returns all published reports.", 
        "tags" : [ "Publish and Run Reports" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation saves a report along with the saved report's metadata.", 
        "operationId" : "Save Report", 
        "parameters" : [ {
          "description" : "Report Request", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Published Report"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returned newly created report.", 
            "schema" : {
              "$ref" : "#/definitions/Published Report"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Incorrect report request</li></ul>"
          }
        }, 
        "summary" : "Saves a report.", 
        "tags" : [ "Publish and Run Reports" ]
      }
    }, 
    "/v1/platform/reports/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation deletes the report that corresponds to the identifier (ID).", 
        "operationId" : "Delete Report", 
        "parameters" : [ {
          "description" : "The ID of the requested report. Report id is an unique identifer.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "No Contents"
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Requested report id is invalid</li></ul>"
          }
        }, 
        "summary" : "Deletes a report.", 
        "tags" : [ "Publish and Run Reports" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a report by ID.", 
        "operationId" : "Retrieve Report by ID", 
        "parameters" : [ {
          "description" : "The ID of the requested report.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returned report data.", 
            "schema" : {
              "$ref" : "#/definitions/Published Report"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Requested report ID is invalid.</li></ul>"
          }
        }, 
        "summary" : "Returns a report.", 
        "tags" : [ "Publish and Run Reports" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation updates a report by ID.", 
        "operationId" : "Update Report by ID", 
        "parameters" : [ {
          "description" : "The ID of the requested report.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "Report Request", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Published Report"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returns updated report.", 
            "schema" : {
              "$ref" : "#/definitions/Published Report"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Requested report ID is invalid.</li><li>Incorrect report request.</li></ul>"
          }
        }, 
        "summary" : "Updates a report.", 
        "tags" : [ "Publish and Run Reports" ]
      }
    }, 
    "/v1/platform/reports/{name}/execute" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation runs a report by name.", 
        "operationId" : "Run Report by Name", 
        "parameters" : [ {
          "description" : "Report Param Request", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Report Parameter"
          }
        }, {
          "description" : "Name of the requested report.", 
          "in" : "path", 
          "name" : "name", 
          "required" : true, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returns newly created report execution.", 
            "schema" : {
              "$ref" : "#/definitions/Report Execution History"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Requested report name is invalid.</li></ul>"
          }
        }, 
        "summary" : "Runs a report.", 
        "tags" : [ "Publish and Run Reports" ]
      }
    }, 
    "/v1/platform/scheduled_reports" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns all scheduled report requests. If <code>my_schedule_report</code> is false, this operation returns all report request. If <code>my_schedule_report</code> is true, this operation returns all scheduled report request for the current user.", 
        "operationId" : "Retrieve Scheduled Report Requests", 
        "parameters" : [ {
          "description" : "A Boolean indicator of whether or not to return only the scheduled reports for the current user. Defaults to false. When false, the operation returns all report requests in the system.", 
          "in" : "query", 
          "name" : "my_schedule_report", 
          "required" : false, 
          "type" : "boolean"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returns all report requests.", 
            "schema" : {
              "$ref" : "#/definitions/ReportRequest"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Incorrect query parameter.</li></ul>"
          }
        }, 
        "summary" : "Returns all scheduled report requests.", 
        "tags" : [ "Report Requests" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation creates and saves a new report request.", 
        "operationId" : "Create Report Request", 
        "parameters" : [ {
          "description" : "Report Request DTO", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/ReportRequest"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully created and saved the new report request.", 
            "schema" : {
              "$ref" : "#/definitions/ReportRequest"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Incorrect report request.</li></ul>"
          }
        }, 
        "summary" : "Creates and saves a new report request.", 
        "tags" : [ "Report Requests" ]
      }
    }, 
    "/v1/platform/scheduled_reports/apply_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a paginated list of all scheduled report requests in the system or for the current user.</p><p>If the <code>myScheduleReport</code> Boolean is passed as false in the request payload, this operation returns all report requests in the system. If the <code>myScheduleReport</code> Boolean is passed as true in the request payload, this operation returns all scheduled report requests for the current user.</p><br /><p>The associated Access Control Point is REPORT_SCHEDULING with action Allowed.</p>", 
        "operationId" : "Retrieve Paginated List of Scheduled Report Requests", 
        "parameters" : [ {
          "description" : "Report Request Input", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Report Request Input"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returned a paginated list of all report requests.", 
            "schema" : {
              "$ref" : "#/definitions/Report Request Response"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>Incorrect query parameter or read input request.</li><li>[WFP-114518] - \"{passedValue} is not a valid input for field {fieldName}</li></ul>"
          }
        }, 
        "summary" : "Returns a paginated list of scheduled report requests.", 
        "tags" : [ "Report Requests" ]
      }
    }, 
    "/v1/platform/scheduled_reports/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation deletes a report request by ID.", 
        "operationId" : "Delete Report Request by ID", 
        "parameters" : [ {
          "description" : "The ID of a report request.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "Successfully deleted the specified report request."
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Requested report request ID is invalid.</li></ul>"
          }
        }, 
        "summary" : "Deletes a report request.", 
        "tags" : [ "Report Requests" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation updates a report request by ID and returns the updated report request.", 
        "operationId" : "Update Report Request by ID", 
        "parameters" : [ {
          "description" : "The ID of a report request.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "Report Request DTO", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/ReportRequest"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully returned updated report request.", 
            "schema" : {
              "$ref" : "#/definitions/ReportRequest"
            }
          }, 
          "400" : {
            "description" : "Bad Request: <ul><li>Requested report request ID is invalid.</li><li>Incorrect report request.</li></ul>"
          }
        }, 
        "summary" : "Updates a report request.", 
        "tags" : [ "Report Requests" ]
      }
    }, 
    "/v1/platform/target_thresholds" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns target thresholds by name, type, and starting and ending index values.", 
        "operationId" : "Retrieve Target Thresholds by Criteria", 
        "parameters" : [ {
          "description" : "The name of a target threshold.", 
          "in" : "query", 
          "name" : "name", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The target type of a target threshold.", 
          "in" : "query", 
          "name" : "type", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The starting index value.", 
          "format" : "int32", 
          "in" : "query", 
          "name" : "recordstartindex", 
          "required" : false, 
          "type" : "integer"
        }, {
          "description" : "The ending index value.", 
          "format" : "int32", 
          "in" : "query", 
          "name" : "recordendindex", 
          "required" : false, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved.", 
            "schema" : {
              "$ref" : "#/definitions/Target Threshold Record"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }, 
          "500" : {
            "description" : "Internal server error."
          }
        }, 
        "summary" : "Returns target thresholds.", 
        "tags" : [ "Target Thresholds" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation creates a target threshold.", 
        "operationId" : "Create Target Threshold", 
        "parameters" : [ {
          "description" : "The Create Target Threshold request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Target Threshold"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully created.", 
            "schema" : {
              "$ref" : "#/definitions/Target Threshold"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }, 
          "500" : {
            "description" : "Internal server error."
          }
        }, 
        "summary" : "Creates a target threshold.", 
        "tags" : [ "Target Thresholds" ]
      }
    }, 
    "/v1/platform/target_thresholds/eval_period" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns the target threshold evaluation period.", 
        "operationId" : "Retrieve Target Threshold Evaluation Period", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved.", 
            "schema" : {
              "$ref" : "#/definitions/Target Threshold Evaluation Period"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }, 
          "500" : {
            "description" : "Internal server error."
          }
        }, 
        "summary" : "Returns the target threshold evaluation period.", 
        "tags" : [ "Target Threshold Evaluation Period" ]
      }
    }, 
    "/v1/platform/target_thresholds/export" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation exports target threshold data.", 
        "operationId" : "Export Target Threshold Data", 
        "parameters" : [ {
          "description" : "The target type of a target threshold.", 
          "in" : "query", 
          "name" : "targetType", 
          "required" : true, 
          "type" : "string"
        }, {
          "description" : "The pagination index number for the requested data. This index number allows a caller to retrieve partial data. The index is 0-based.", 
          "format" : "int32", 
          "in" : "query", 
          "name" : "index", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "The pagination count for the target threshold data request. This query parameter has no upper limit.", 
          "format" : "int32", 
          "in" : "query", 
          "name" : "count", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully export.", 
            "schema" : {
              "$ref" : "#/definitions/Target Threshold Export Response"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }, 
          "500" : {
            "description" : "Internal server error."
          }
        }, 
        "summary" : "Exports target threshold data.", 
        "tags" : [ "Target Thresholds" ]
      }
    }, 
    "/v1/platform/target_thresholds/indicator_texts" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns all target threshold indicator texts.", 
        "operationId" : "Retrieve All Target Threshold Indicator Texts", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved.", 
            "schema" : {
              "$ref" : "#/definitions/Target Threshold Indicator Text"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }, 
          "500" : {
            "description" : "Internal server error."
          }
        }, 
        "summary" : "Returns all target threshold indicator texts.", 
        "tags" : [ "Target Threshold Indicator Texts" ]
      }
    }, 
    "/v1/platform/target_thresholds/metric_sets" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns all target threshold metric sets.", 
        "operationId" : "Retrieve All Target Threshold Metric Sets", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved.", 
            "schema" : {
              "$ref" : "#/definitions/Target Metric Set"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }, 
          "500" : {
            "description" : "Internal server error."
          }
        }, 
        "summary" : "Returns all target threshold metric sets.", 
        "tags" : [ "Target Threshold Metric Sets" ]
      }
    }, 
    "/v1/platform/target_thresholds/multi_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns one or more target thresholds by object references.", 
        "operationId" : "Retrieve Target Thresholds", 
        "parameters" : [ {
          "description" : "The Retrieve Target Thresholds request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Target Multi-read Request"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved.", 
            "schema" : {
              "$ref" : "#/definitions/Target Multi-Read Response"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }, 
          "500" : {
            "description" : "Internal server error."
          }
        }, 
        "summary" : "Returns one or more target thresholds.", 
        "tags" : [ "Target Thresholds" ]
      }
    }, 
    "/v1/platform/target_thresholds/multi_upsert" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation creates or updates one or more target thresholds.", 
        "operationId" : "Create or Update Target Thresholds", 
        "parameters" : [ {
          "description" : "The Create Target Thresholds request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "items" : {
              "$ref" : "#/definitions/Target Threshold"
            }, 
            "type" : "array"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully created or updated one or more target thresholds.", 
            "schema" : {
              "$ref" : "#/definitions/Target Threshold"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }, 
          "404" : {
            "description" : "Internal server error."
          }
        }, 
        "summary" : "Creates or updates one or more target thresholds.", 
        "tags" : [ "Target Thresholds" ]
      }
    }, 
    "/v1/platform/target_thresholds/operators" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns all target threshold operators.", 
        "operationId" : "Retrieve All Target Threshold Operators", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved.", 
            "schema" : {
              "$ref" : "#/definitions/Target Threshold Operator"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }, 
          "500" : {
            "description" : "Internal server error."
          }
        }, 
        "summary" : "Returns all target threshold operators.", 
        "tags" : [ "Target Threshold Operators" ]
      }
    }, 
    "/v1/platform/target_thresholds/short_names" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns target short names based on the target type specified in the query parameter.", 
        "operationId" : "Retrieve Target Short Names", 
        "parameters" : [ {
          "description" : "The target type of a target threshold.", 
          "in" : "query", 
          "name" : "targetType", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved.", 
            "schema" : {
              "$ref" : "#/definitions/Target Multi-Read Response"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }, 
          "500" : {
            "description" : "Internal server error."
          }
        }, 
        "summary" : "Returns target short names by target type.", 
        "tags" : [ "Target Thresholds" ]
      }
    }, 
    "/v1/platform/target_thresholds/{id}" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a target threshold by ID.", 
        "operationId" : "Retrieve Target Threshold by ID", 
        "parameters" : [ {
          "description" : "The ID of a target threshold.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved.", 
            "schema" : {
              "$ref" : "#/definitions/Target Threshold"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }, 
          "500" : {
            "description" : "Internal server error."
          }
        }, 
        "summary" : "Returns a target threshold by ID.", 
        "tags" : [ "Target Thresholds" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation updates a target threshold by ID.", 
        "operationId" : "Update a Target Threshold by ID", 
        "parameters" : [ {
          "description" : "The Update Target Threshold by ID request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/Target Threshold"
          }
        }, {
          "description" : "The ID of a target threshold.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully updated.", 
            "schema" : {
              "$ref" : "#/definitions/Target Threshold"
            }
          }, 
          "400" : {
            "description" : "Bad request."
          }, 
          "500" : {
            "description" : "Internal server error."
          }
        }, 
        "summary" : "Updates a target threshold by ID.", 
        "tags" : [ "Target Thresholds" ]
      }
    }, 
    "/v1/platform/user_interface/links" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns a list of all Menu Items available to the current user. When enabled, this operation also returns Human Capital Management (HCM) menu links.</p><br><h2>Context Parameters for Menu Links</h2><p>When developing an app that links to various Dimensions menu pages, the approach differs depending on whether the user is an employee or manager.</p><br><ul><li><a href=\"#Employees\">Employees</a></li> <li><a href=\"#Managers\">Managers</a></li> </ul> <p>When an employee or a manager is logged in to the Dimensions UI, the variable <code>ngStorage-currentContext</code> stores values that define the user context.</p> <h3 id=\"Employees\">Employees</h3> <br> <p>To execute on a link to a menu page with an employee, all context parameters are set to <code>null</code> and only the target page is required.</p> <br> <p>The value of <code>ngStorage-currentContext</code> resembles the following example:</p> <br> <pre><code class=\"json\">{<br />  \"timeframeId\": null,<br />  \"hyperfind\": {<br />    \"id\": null,<br />    \"type\": null<br />  },<br />   \"peopleIdList\": null,<br />  \"dateSpan\": {<br />    \"startDate\": null,<br />    \"endDate\": null<br />  },<br />  \"otherContext\"{}<br />}</code></pre> <p>For employees, your app must:</p> <br> <ul> <li>set the target URL to the menu link</li> <li>set the default <code>null</code> values for <code>ngStorage-currentContext</code></li> </ul> <p>After the values for the <code>ngStorage-currentContext</code> variable are set, <code>pageContextService</code> functions accordingly.</p> <h4>App Sequence for Employee Menu Links</h4> <ol> <li>Employee successfully logs in to the app</li> <li>Employee selects an option that launches a Dimensions menu link</li> <li>The menu link is launched with the appropriate context parameters</li> <li>The Dimensions menu link successfully opens in the app</li> </ol> <h3 id=\"Managers\">Managers</h3> <br> <p>This example concerns a manager who has logged in to the app to view the timecards of direct reports. The manager navigates to the Timecard module in the app, sees a list of all direct reports, and selects a few of them. This is the point where the menu link to Dimensions occurs.</p> <br> <p>The value of <code>ngStorage-currentContext</code> resembles the following example:</p> <br> <pre><code class=\"json\">{<br />  \"timeframeId\": 0,<br />  \"hyperfind\": {<br />    \"id\": null,<br />    \"type\": null<br />  },<br />  \"peopleIdList\": [<br />    234,<br />    235,<br />    236<br />  ],<br />  \"dateSpan\": {<br />    \"startDate\": \"2020-03-05T05:00:00\",<br />    \"endDate\": \"2020-03-08T09:00:00\"<br />  },<br />  \"otherContext\": {},<br />  \"timestamp\": \"2020-03-05T05:45:14\"<br />}</code></pre> <p>For managers, your app must:</p> <br> <ul> <li>set the target URL to the menu link</li> <li>set the values for <code>ngStorage-currentContext</code> based on the selections the manager made in the app</li> </ul> <p>After the values for the <code>ngStorage-currentContext</code> variable are set, <code>pageContextService</code> functions accordingly.</p> <h4>App Sequence for Manager Menu Links</h4> <ol> <li>Manager successfully logs in to the app</li> <li>Manager views a list of direct reports and selects multiple employees and a date range and executes a task that launches a Dimensions menu link</li> <li>The menu link is launched and includes the parameters selected by the manager</li> <li>The Dimensions menu link successfully opens in the app and displays all of the selected data</li> </ol> <h3>Implementation Details</h3> <br> <p>For an external app to set context parameters for a Dimensions module, that app must set the proper values in <code>defaultContextService</code> through <code>PageContextService</code>. In Dimensions, the user's context is always read from <code>PageContextService</code> before a module is loaded.</p> <br> <p>The code for <code>defaultContextService.js</code> is listed below. When a user login in to Dimensions an object of <code>defaultContextService</code> is associated with that login event and is injected into <code>PageContextService</code>.</p> <p>When a user navigates from one module to another in Dimensions, such as from Employee Timecard to Scheduling, the context necessary to transfer the user to the Scheduling module is saved in an object of <code>defaultContextService</code> via <code>PageContextService</code>.</p> <br> <p>This object can save <code>timeframeId</code>, <code>hyperfind</code>, <code>peopleIdList</code> and <code>dateSpan</code> in <code>PageContextService</code>.</p> <p>Before switching from the current module, all of the user's current selections are set in <code>PageContextService</code>. Before launching the new module, the contents of <code>PageContextService</code> are read and set in the page to be launched. This allows users to continue to view selections from one module to another.</p> <br> <p>The code for <code>defaultContextService.js</code> is as follows:</p> <br> <pre><code class=\"js\">define(['angular', 'lodash', '../pageContext'], function (angular, _) {<br />  'use strict'<br /><br />  angular.module('common.pageContext').factory('defaultContext', function () {<br />    var defaultContext = {<br />      timeframeId: null,<br />      hyperfind: {<br />        id: null,<br />        type: null, //can be 'hyperfind' or 'location'<br />      },<br />      peopleIdList: null,<br />      dateSpan: {<br />        startDate: null,<br />        endDate: null,<br />      },<br />      otherContext: {},<br />    }<br />    return {<br />      getDefaultContext: function getDefaultContext() {<br />        return _.cloneDeep(defaultContext)<br />      },<br />    }<br />  })<br />})</code></pre> <h3>Context Parameter Values</h3> <h4>timeframeId</h4> <p>The ID of the timeframe expressed as an integer ID. For example, if the user selected the Current Schedule Period in the Dimensions UI, that corresponds to an ID value of 4 that is captured in <code>timeframeId</code>.</p> <h4>peopleIdList</h4> <p>An array of person keys representing the employees selected by a manager. For example, if a manager selects three employees in an app, the person keys of those three employees is passed in <code>peopleIdList</code>.</p> <h4>dateSpan</h4> <p>The <code>dateSpan</code> object defines a start date and an end date of a date range selected by a user. For example, suppose a user selected the 5th of March 2020 as the start date and the 8th of March 2020 as the end date. Those dates (and times, if selected) are captured in <code>dateSpan</code> under <code>startDate</code> and <code>endDate</code>.</p> <h4>hyperfind</h4> <p>The <code>hyperfind</code> object defines a reference to a Hyperfind using <code>id</code> and <code>type</code>.</p> <p>The <code>type</code> parameter defines whether the filtering is based on a location or a Hyperfind query. Valid values include 1 for location and 4 for a Hyperfind query.</p> <p>The <code>id</code> parameter contains the ID of the selected Hyperfind or location.</p>", 
        "operationId" : "Retrieve All Menu Items", 
        "parameters" : [ {
          "description" : "The type of Menu Items to retrieve. Valid values include GENERAL and SETUP. Defaults to GENERAL.", 
          "in" : "query", 
          "name" : "app", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "A Boolean indicator of whether or not to pass only mobile-friendly administration pages and dynamic links for the app category GENERAL. Defaults to true.", 
          "in" : "query", 
          "name" : "mobile_accessible_only", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved a list of Menu Items.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/MenuItemUIDTO"
              }, 
              "type" : "array"
            }
          }, 
          "400" : {
            "description" : "[WFP-116001] - You supplied an invalid app name of '{appName}'. Resubmit your request with a valid app name. Valid values include GENERAL and SETUP."
          }
        }, 
        "summary" : "Returns all Menu Items for the current user.", 
        "tags" : [ "Menu Items" ]
      }
    }, 
    "/v1/platform/workflow/business_processes" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation retrieves a workflow business process by category or name.</p><br /><p>The associated Access Control Point is WBAP_INITIATE_BUSINESS_PROCESS.</p>", 
        "operationId" : "Retrieve Business Process", 
        "parameters" : [ {
          "default" : "All", 
          "description" : "The category name as parameter to retrieve a business process.", 
          "in" : "query", 
          "name" : "category", 
          "required" : false, 
          "type" : "string"
        }, {
          "description" : "The business process name, which is used to retrieve a business process.", 
          "in" : "query", 
          "name" : "name", 
          "required" : false, 
          "type" : "string"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Workflow business process was retrieved successfully.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/Business Process Response Details"
              }, 
              "type" : "array"
            }
          }, 
          "400" : {
            "description" : "The request parameter or body is invalid.", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }, 
          "403" : {
            "description" : "Access is restricted. You do not have sufficient permissions to retrieve business processes.", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }, 
          "500" : {
            "description" : "Internal Server Error.", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }
        }, 
        "summary" : "Retrieves a business process.", 
        "tags" : [ "Workflow Business Processes" ]
      }
    }, 
    "/v1/platform/workflow/business_processes/execute" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation executes a workflow business process by ID or qualifier.</p><br /><p>The associated Access Control Point is WBAP_INITIATE_BUSINESS_PROCESS.</p>", 
        "operationId" : "Execute Business Process", 
        "parameters" : [ {
          "description" : "The Execute Business Process request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/Workflow Business Process Execute Request Payload Details"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Workflow business process executed successfully.", 
            "schema" : {
              "$ref" : "#/definitions/Workflow Template Form Details"
            }
          }, 
          "400" : {
            "description" : "The request parameter or body is invalid.", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }, 
          "403" : {
            "description" : "Access is restricted. You do not have sufficient permissions to execute a business process.", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }, 
          "500" : {
            "description" : "Internal Server Error.", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }
        }, 
        "summary" : "Executes a business process.", 
        "tags" : [ "Workflow Business Processes" ]
      }
    }, 
    "/v1/platform/workflow/business_processes/tasks/forms" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation submits form data and completes the current task.</p><br /><p>The associated Access Control Point is WBAP_INITIATE_BUSINESS_PROCESS.</p>", 
        "operationId" : "Submit Business Process Form Data", 
        "parameters" : [ {
          "description" : "The Submit Business Process Form Data request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : false, 
          "schema" : {
            "$ref" : "#/definitions/User Activity Form Details"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Either success or next form data will be returned.", 
            "schema" : {
              "$ref" : "#/definitions/Workflow Template Form Details"
            }
          }, 
          "400" : {
            "description" : "<p>Bad Request:</p><ul><li>[WFP-101110] - You submitted invalid or empty form data. Resubmit your request with valid form data.</li><li>[WFP-101111] - An invalid or empty action was submitted. Resubmit your request with a valid action.</li><li>[WFP-101112] - An invalid or empty business process ID was submitted. Resubmit your request with a valid process ID.</li><li>[WFP-101113] - An invalid or empty task ID was submitted. Resubmit your request with a valid task ID.</li><li>[WFP-101114] - The fields array cannot be empty. Resubmit your request with valid entries in the fields array.</li><li>[WFP-101115] - A field does not exist with the specified IDs: {id}.</li><li>[WFP-101116] - An exception occurred while fetching user task form with the specified processInstanceId: {processInstanceId}.</li><li>[WFP-101117] - An exception occurred while retrieving form data with the specified taskId: {task_Id}.</li><li>[WFP-101118] - An empty field value was submitted which is required field with the specified ID: {id}.</li><li>[WFP-101119] - An invalid attesationProcess ID was submitted. Resubmit your request with a valid attesationProcess ID.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }, 
          "403" : {
            "description" : "<ul><li>[WFP-101306] - You do not have access to initiate business processes.</li></ul>", 
            "schema" : {
              "$ref" : "#/definitions/APIOutputError"
            }
          }
        }, 
        "summary" : "Submits form data and completes a task.", 
        "tags" : [ "Workflow Business Processes" ]
      }
    }, 
    "/v1/timekeeping/kiosk_instance_logins/apply_read" : {
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "<p>This operation returns kiosk login transactions for a list of employees within a date range.</p><br /><p>The associated Access Control Points are SA_COPY_KIOSK and SA_START_KIOSK.</p>", 
        "operationId" : "Retrieve Kiosk Login Transactions", 
        "parameters" : [ {
          "description" : "The Retrieve Kiosk Login Transactions request payload, which contains a list of employees, a start date, and an end date.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/KioskLoginRequestContext"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/KioskLoginDTO"
              }, 
              "type" : "array"
            }
          }, 
          "207" : {
            "description" : "Retrieved kiosk login transactions with partial success.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/APIExceptionDetailResult"
              }, 
              "type" : "array"
            }
          }, 
          "400" : {
            "description" : "<ul><li>[WCO-133102] - Please provide only one of these parameters :ids, qualifiers, refs.</li></ul>"
          }
        }, 
        "summary" : "Returns kiosk login transactions.", 
        "tags" : [ "Kiosk" ]
      }
    }, 
    "/v1/timekeeping/setup/kiosk_instances" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns all kiosk instances.", 
        "operationId" : "Retrieve All Kiosk Instances", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/KioskInstanceEntity_PublicAPI"
              }, 
              "type" : "array"
            }
          }, 
          "400" : {
            "description" : "[WTK-220200] - Invalid JSON."
          }, 
          "403" : {
            "description" : "[WTK-220209] You do not have permission to access this resource."
          }
        }, 
        "summary" : "Returns kiosk all instances.", 
        "tags" : [ "Kiosk" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation creates a kiosk instance.", 
        "operationId" : "Create Kiosk Instance", 
        "parameters" : [ {
          "description" : "The Create Kiosk Instance request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/KioskInstanceEntity"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success.", 
            "schema" : {
              "$ref" : "#/definitions/KioskInstanceEntity_PublicAPI"
            }
          }, 
          "400" : {
            "description" : "[WTK-220200] - Invalid JSON."
          }, 
          "403" : {
            "description" : "[WTK-220209] You do not have permission to access this resource."
          }
        }, 
        "summary" : "Creates a kiosk instance.", 
        "tags" : [ "Kiosk" ]
      }
    }, 
    "/v1/timekeeping/setup/kiosk_instances/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation deletes a kiosk instance by ID.", 
        "operationId" : "Delete Kiosk Instance by ID", 
        "parameters" : [ {
          "description" : "The unique ID of a kiosk instance.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "successful operation", 
            "schema" : {
              "$ref" : "#/definitions/KioskInstanceEntity_PublicAPI"
            }
          }, 
          "204" : {
            "description" : "OK."
          }, 
          "400" : {
            "description" : "[WTK-220200] - Invalid JSON."
          }, 
          "403" : {
            "description" : "[WTK-220209] You do not have permission to access this resource."
          }, 
          "404" : {
            "description" : "[WTK-220305] Bad Request."
          }
        }, 
        "summary" : "Deletes a kiosk instance.", 
        "tags" : [ "Kiosk" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a kiosk instance by ID.", 
        "operationId" : "Retrieve Kiosk Instance by ID", 
        "parameters" : [ {
          "description" : "The unique ID of a kiosk instance.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success.", 
            "schema" : {
              "$ref" : "#/definitions/KioskInstanceEntity_PublicAPI"
            }
          }, 
          "400" : {
            "description" : "[WTK-220200] - Invalid JSON."
          }, 
          "403" : {
            "description" : "[WTK-220209] You do not have permission to access this resource."
          }, 
          "404" : {
            "description" : "=[WTK-220203] - Kiosk instance not found with this ID: {id}."
          }
        }, 
        "summary" : "Returns a kiosk instance.", 
        "tags" : [ "Kiosk" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation updates a kiosk instance by ID.", 
        "operationId" : "Update Kiosk Instance by ID", 
        "parameters" : [ {
          "description" : "The unique ID of a kiosk instance.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "The Update Kiosk Instance by ID request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/KioskInstanceEntity"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success.", 
            "schema" : {
              "$ref" : "#/definitions/KioskInstanceEntity_PublicAPI"
            }
          }, 
          "400" : {
            "description" : "[WTK-220200] - Invalid JSON."
          }, 
          "403" : {
            "description" : "[WTK-220209] You do not have permission to access this resource."
          }, 
          "404" : {
            "description" : "=[WTK-220202] - Kiosk instance not found with this ID: {id}."
          }
        }, 
        "summary" : "Updates a kiosk instance.", 
        "tags" : [ "Kiosk" ]
      }
    }, 
    "/v1/timekeeping/setup/kiosks" : {
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a list of all kiosk configurations.", 
        "operationId" : "Retrieve All Kiosk Configurations", 
        "parameters" : [  ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/KioskConfigEntity_PublicAPI"
              }, 
              "type" : "array"
            }
          }, 
          "403" : {
            "description" : "[WTK-220209] You do not have permission to access this resource."
          }
        }, 
        "summary" : "Returns all kiosk configurations.", 
        "tags" : [ "Kiosk" ]
      }, 
      "post" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation creates a kiosk configuration.", 
        "operationId" : "Create Kiosk Configuration", 
        "parameters" : [ {
          "description" : "v1.0.kiosk_instances.post.pathparam.entity.value", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/KioskConfigEntity"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success.", 
            "schema" : {
              "items" : {
                "$ref" : "#/definitions/KioskConfigEntity_PublicAPI"
              }, 
              "type" : "array"
            }
          }, 
          "400" : {
            "description" : "[WTK-220200] - Invalid JSON."
          }, 
          "403" : {
            "description" : "[WTK-220209] You do not have permission to access this resource."
          }, 
          "404" : {
            "description" : "[WTK-220305] Bad Request."
          }
        }, 
        "summary" : "Creates a kiosk configuration.", 
        "tags" : [ "Kiosk" ]
      }
    }, 
    "/v1/timekeeping/setup/kiosks/{id}" : {
      "delete" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation deletes a kiosk configuration by ID.", 
        "operationId" : "Delete Kiosk Configuration by ID", 
        "parameters" : [ {
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "204" : {
            "description" : "OK."
          }, 
          "400" : {
            "description" : "[WTK-220200] - Invalid JSON."
          }, 
          "403" : {
            "description" : "[WTK-220209] You do not have permission to access this resource."
          }, 
          "404" : {
            "description" : "[WTK-220305] Bad Request."
          }
        }, 
        "summary" : "Deletes a kiosk configuration.", 
        "tags" : [ "Kiosk" ]
      }, 
      "get" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation returns a kiosk configuration by ID.", 
        "operationId" : "Retrieve Kiosk Configuration by ID", 
        "parameters" : [ {
          "description" : "The unique ID of a kiosk configuration.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success.", 
            "schema" : {
              "$ref" : "#/definitions/KioskConfigEntity_PublicAPI"
            }
          }, 
          "400" : {
            "description" : "=[WTK-220200] - Invalid JSON."
          }, 
          "403" : {
            "description" : "[WTK-220209] You do not have permission to access this resource."
          }, 
          "404" : {
            "description" : "=[WTK-220202] - Kiosk configuration not found with this ID: {id}."
          }
        }, 
        "summary" : "Returns a kiosk configuration.", 
        "tags" : [ "Kiosk" ]
      }, 
      "put" : {
        "consumes" : [ "application/json" ], 
        "description" : "This operation updates a kiosk configuration by ID.", 
        "operationId" : "Update Kiosk Configuration by ID", 
        "parameters" : [ {
          "description" : "The unique ID of a kiosk configuration.", 
          "format" : "int64", 
          "in" : "path", 
          "name" : "id", 
          "required" : true, 
          "type" : "integer"
        }, {
          "description" : "The Update Kiosk Configuration by ID request payload.", 
          "in" : "body", 
          "name" : "body", 
          "required" : true, 
          "schema" : {
            "$ref" : "#/definitions/KioskConfigEntity"
          }
        } ], 
        "produces" : [ "application/json" ], 
        "responses" : {
          "200" : {
            "description" : "Success.", 
            "schema" : {
              "$ref" : "#/definitions/KioskConfigEntity_PublicAPI"
            }
          }, 
          "400" : {
            "description" : "[WTK-220200] - Invalid JSON."
          }, 
          "403" : {
            "description" : "[WTK-220209] You do not have permission to access this resource."
          }, 
          "404" : {
            "description" : "[WTK-220305] Bad Request."
          }
        }, 
        "summary" : "Updates a kiosk configuration.", 
        "tags" : [ "Kiosk" ]
      }
    }
  }, 
  "schemes" : null, 
  "definitions" : {
    "MappingCategoryDefinitionBean" : {
      "description" : "The Mapping Category object model.", 
      "properties" : {
        "configType" : {
          "$ref" : "#/definitions/Config Type", 
          "description" : "The configuration type of a mapping category."
        }, 
        "description" : {
          "description" : "The description of a mapping category.", 
          "example" : "Actual Hours Description", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The unique ID of a mapping category.", 
          "example" : 1, 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "mappingCategoryAttributes" : {
          "description" : "The attributes of a mapping category.", 
          "items" : {
            "$ref" : "#/definitions/Category Type Attribute"
          }, 
          "type" : "array"
        }, 
        "mappingCategoryType" : {
          "$ref" : "#/definitions/Mapping Category Type", 
          "description" : "The type of a mapping category."
        }, 
        "name" : {
          "description" : "The name of a mapping category.", 
          "example" : "Actual Hours", 
          "type" : "string"
        }
      }, 
      "required" : [ "configType", "description", "id", "mappingCategoryAttributes", "mappingCategoryType", "name" ], 
      "type" : "object"
    }, 
    "Mapping Category Type" : {
      "description" : "Mapping category type.", 
      "properties" : {
        "description" : {
          "description" : "The description of the mapping category type.", 
          "example" : "Paycode mapping category type", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The unique ID of the mapping category type.", 
          "example" : 1, 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "mappingCategoryTypeAttributes" : {
          "description" : "A list of available category type attributes that are associated with this mapping category.", 
          "example" : "4-Week Actual Tracking", 
          "items" : {
            "$ref" : "#/definitions/Category Type Attribute"
          }, 
          "type" : "array"
        }, 
        "name" : {
          "description" : "The name of the mapping category type.", 
          "example" : "Paycode", 
          "type" : "string"
        }
      }, 
      "required" : [ "description", "id", "mappingCategoryTypeAttributes", "name" ], 
      "type" : "object"
    }, 
    "ActionTemplate" : {
      "description" : "Model for Action Template.", 
      "properties" : {
        "actionType" : {
          "$ref" : "#/definitions/ActionType", 
          "description" : "The announcement action type."
        }, 
        "id" : {
          "description" : "The ID of an Action Template.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of an Action Template.", 
          "type" : "string"
        }, 
        "workflowNotification" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "A reference to a generic workflow notification."
        }
      }, 
      "type" : "object"
    }, 
    "Announcement Response Update Request" : {
      "description" : "Object containing information regarding an Announcement Response Update.", 
      "properties" : {
        "actionId" : {
          "description" : "The ID of an announcement template action.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "messageId" : {
          "description" : "The ID of an announcement message.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "required" : [ "actionId", "messageId" ], 
      "type" : "object"
    }, 
    "Announcement Message" : {
      "description" : "Object containing information regarding an Announcement Message.", 
      "properties" : {
        "actionTemplate" : {
          "$ref" : "#/definitions/ActionTemplate", 
          "description" : "The Action Template used for an announcement."
        }, 
        "allEmployees" : {
          "description" : "A Boolean indicator of whether or not to send an announcement to all employees.", 
          "type" : "boolean"
        }, 
        "body" : {
          "description" : "The body of an announcement message.", 
          "type" : "string"
        }, 
        "createdDatetime" : {
          "description" : "The date and time an announcement is created in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "readOnly" : true, 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID of an announcement message.", 
          "format" : "int64", 
          "readOnly" : true, 
          "type" : "integer"
        }, 
        "recipients" : {
          "description" : "The recipients of an announcement if not for all employees.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef"
          }, 
          "type" : "array"
        }, 
        "responses" : {
          "description" : "The responses related to this particular announcement.", 
          "items" : {
            "$ref" : "#/definitions/Announcement Response"
          }, 
          "type" : "array"
        }, 
        "sender" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "The ID and qualifier of an announcement sender.", 
          "readOnly" : true
        }, 
        "subject" : {
          "description" : "The subject of an announcement message.", 
          "type" : "string"
        }
      }, 
      "required" : [ "actionTemplate", "body", "subject" ], 
      "type" : "object"
    }, 
    "Announcement Message For Creation" : {
      "description" : "Object containing information regarding creating an Announcement Message.", 
      "properties" : {
        "actionTemplate" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "The ID and qualifier of Action Template used for an announcement."
        }, 
        "allEmployees" : {
          "description" : "A Boolean indicator of whether or not to send an announcement to all employees.", 
          "type" : "boolean"
        }, 
        "body" : {
          "description" : "The body of an announcement message.", 
          "type" : "string"
        }, 
        "createdDatetime" : {
          "description" : "The date and time an announcement is created in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "readOnly" : true, 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID of an announcement message.", 
          "format" : "int64", 
          "readOnly" : true, 
          "type" : "integer"
        }, 
        "recipients" : {
          "description" : "The recipients of an announcement if not for all employees.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef"
          }, 
          "type" : "array"
        }, 
        "sender" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "The ID and qualifier of an announcement sender.", 
          "readOnly" : true
        }, 
        "subject" : {
          "description" : "The subject of an announcement message.", 
          "type" : "string"
        }
      }, 
      "required" : [ "actionTemplate", "body", "subject" ], 
      "type" : "object"
    }, 
    "Apply Read Request" : {
      "description" : "Model containing query information regarding an announcement's apply-read request.", 
      "properties" : {
        "where" : {
          "$ref" : "#/definitions/Announcement Where Request", 
          "description" : "The where clause of the request defining a date range and list of recipients."
        }
      }, 
      "required" : [ "where" ], 
      "type" : "object"
    }, 
    "APIExceptionDetailResult" : {
      "properties" : {
        "error" : {
          "$ref" : "#/definitions/APIException"
        }, 
        "success" : {
          "type" : "object"
        }
      }, 
      "type" : "object"
    }, 
    "API Integration" : {
      "description" : "Details of API integration", 
      "properties" : {
        "apiIntegrationKey" : {
          "description" : "The API integration key is generated when you install an API integration, and is needed only for API integration REST API calls. In contrast, the API key calls all external REST APIs from the HTTP request header.", 
          "type" : "string"
        }, 
        "description" : {
          "description" : "Detailed description about the API integration.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "(Required) Unique name of the API integration.", 
          "type" : "string"
        }, 
        "parameters" : {
          "description" : "(Required) List of the integration parameters that have custom values.", 
          "items" : {
            "$ref" : "#/definitions/API Integration Parameters"
          }, 
          "type" : "array"
        }
      }, 
      "required" : [ "apiIntegrationKey", "name", "parameters" ], 
      "type" : "object"
    }, 
    "API Integration Request" : {
      "description" : "Details of parameters and data required for executing API integration", 
      "properties" : {
        "data" : {
          "description" : "The payload to exchange with the external system. The payload structure is predefined for each integration for the source and destination systems.", 
          "items" : {
            "type" : "object"
          }, 
          "type" : "array"
        }, 
        "parameters" : {
          "description" : "A list of the integration parameters that have custom values.", 
          "items" : {
            "$ref" : "#/definitions/Integration parameters"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "API Integration Response" : {
      "description" : "The API integration execution response model.", 
      "properties" : {
        "errorMessage" : {
          "description" : "An error message if the integration run fails.", 
          "type" : "string"
        }, 
        "executionId" : {
          "description" : "(Required) The unique ID for the API integration run.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "executionReferenceId" : {
          "description" : "The unique execution reference ID of an API Integration run.", 
          "type" : "string"
        }, 
        "payload" : {
          "description" : "The payload in the request to exchange with the external system. The payload structure is predefined for each integration for the source and destination systems.", 
          "items" : {
            "type" : "object"
          }, 
          "type" : "array"
        }, 
        "runSummary" : {
          "description" : "The Run Summary of an API Integration run.", 
          "type" : "string"
        }, 
        "status" : {
          "description" : "(Required) The current state of an API integration run. Status currently supported :- In Progress, Failed, Completed, Completed with errors.", 
          "type" : "string"
        }
      }, 
      "required" : [ "executionId", "status" ], 
      "type" : "object"
    }, 
    "WFPBatchEvent" : {
      "description" : "Model for a Batch Event.", 
      "properties" : {
        "active" : {
          "description" : "A Boolean indicator of whether or not a Batch Event is active.", 
          "type" : "boolean"
        }, 
        "batchEventTasks" : {
          "description" : "An array of Batch Tasks references to Batch Event.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef"
          }, 
          "type" : "array"
        }, 
        "context" : {
          "description" : "The context of a Batch Event.", 
          "type" : "string"
        }, 
        "description" : {
          "description" : "The description of a Batch Event.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID of a Batch Event.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of a Batch Event.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "WFPBatchEventsTasksUpdate" : {
      "description" : "Model for a Batch Event.", 
      "properties" : {
        "addBatchEventTasks" : {
          "description" : "The list of Batch Tasks which will be added.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef"
          }, 
          "type" : "array"
        }, 
        "batchEvent" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "A reference to a Batch Event object."
        }, 
        "removeBatchEventTasks" : {
          "description" : "The list of Batch Tasks which will be removed.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Combination Event Request" : {
      "description" : "The Combination Event Request Object.", 
      "properties" : {
        "where" : {
          "$ref" : "#/definitions/BatchEventWhereRequest", 
          "description" : "The where criteria of a batch event in which the actual criteria for retrieving batch events is specified."
        }
      }, 
      "type" : "object"
    }, 
    "BatchEventSchedule" : {
      "description" : "Model for a Batch Event Schedule.", 
      "properties" : {
        "batchEvent" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "The ID and name of a Batch Event."
        }, 
        "eventDetails" : {
          "$ref" : "#/definitions/EventDetailsDTO", 
          "description" : "The name of a Job, description, manager and role."
        }, 
        "eventOutput" : {
          "$ref" : "#/definitions/EventOutputDTO", 
          "description" : "The List of emails a Batch Job."
        }, 
        "schedule" : {
          "$ref" : "#/definitions/ScheduleDTO", 
          "description" : "A Batch Event Schedule information."
        }
      }, 
      "type" : "object"
    }, 
    "WFPBatchGroup" : {
      "description" : "Model for a Batch Group Event Update.", 
      "properties" : {
        "active" : {
          "description" : "A Boolean indicator of whether or not a Batch Group is active.", 
          "type" : "boolean"
        }, 
        "batchEvents" : {
          "description" : "An array of Batch Events references to Batch Group.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef"
          }, 
          "type" : "array"
        }, 
        "description" : {
          "description" : "The description of a Batch Group.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID of a Batch Group.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of a Batch Group.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "WFPBatchGroupEventsUpdate" : {
      "description" : "Model for a Batch Group Event Update.", 
      "properties" : {
        "addBatchGroupEvents" : {
          "description" : "The list of Batch Events which will be added.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef"
          }, 
          "type" : "array"
        }, 
        "batchGroup" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "The model batch group"
        }, 
        "removeBatchGroupEvents" : {
          "description" : "The list of Batch Events which will be removed.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Combination Group Request" : {
      "description" : "The Combination Group Request Object.", 
      "properties" : {
        "where" : {
          "$ref" : "#/definitions/BatchGroupWhere", 
          "description" : "The where criteria of a batch group in which the actual criteria for retrieving batch groups is specified."
        }
      }, 
      "type" : "object"
    }, 
    "ObjectRef" : {
      "description" : "The HCA object reference object model.", 
      "properties" : {
        "id" : {
          "description" : "The ID associated with an object reference.", 
          "format" : "int64", 
          "readOnly" : true, 
          "type" : "integer"
        }, 
        "qualifier" : {
          "description" : "The qualifier associated with an object reference.", 
          "readOnly" : true, 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "WFPBatchJob" : {
      "description" : "The Batch Job Status model.", 
      "properties" : {
        "where" : {
          "$ref" : "#/definitions/WFPWhere", 
          "description" : "The where criteria of a batch job status in which the actual criteria for retrieving batch job statuses is specified."
        }
      }, 
      "type" : "object"
    }, 
    "BatchJobResponseDTO" : {
      "properties" : {
        "batchGroup" : {
          "type" : "string"
        }, 
        "context" : {
          "type" : "string"
        }, 
        "endDateTime" : {
          "type" : "string"
        }, 
        "failedTasks" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "items" : {
          "items" : {
            "$ref" : "#/definitions/BatchJobItemResponseDTO"
          }, 
          "type" : "array"
        }, 
        "launchDateTime" : {
          "type" : "string"
        }, 
        "name" : {
          "type" : "string"
        }, 
        "priority" : {
          "type" : "string"
        }, 
        "startDateTime" : {
          "type" : "string"
        }, 
        "status" : {
          "type" : "string"
        }, 
        "successFulTasks" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "totalTasks" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "userAccountName" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "WFPBatchTask" : {
      "description" : "Model for a Batch Task.", 
      "properties" : {
        "active" : {
          "description" : "A Boolean indicator of whether or not a Batch Task is active.", 
          "type" : "boolean"
        }, 
        "batchTaskItems" : {
          "description" : "An array of Batch Task Items references to Batch Task.", 
          "items" : {
            "$ref" : "#/definitions/WFPBatchTaskItem"
          }, 
          "type" : "array"
        }, 
        "context" : {
          "description" : "The context of a Batch Task.", 
          "type" : "string"
        }, 
        "description" : {
          "description" : "The description of a Batch Task.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID of a Batch Task.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of a Batch Task.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "WFPAddBatchItems" : {
      "description" : "Model for a Batch Task.", 
      "properties" : {
        "addBatchTaskItems" : {
          "description" : "The list of Batch Tasks Item which will be added.", 
          "items" : {
            "$ref" : "#/definitions/WFPBatchTaskItem"
          }, 
          "type" : "array"
        }, 
        "batchTask" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "The model batch task of a Batch Task Item."
        }, 
        "removeBatchTaskItems" : {
          "description" : "The list of Batch Tasks Item which will be removed.", 
          "items" : {
            "$ref" : "#/definitions/WFPBatchTaskItem"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Combination Task Request" : {
      "description" : "The Combination Task Request Object.", 
      "properties" : {
        "where" : {
          "$ref" : "#/definitions/BatchTaskWhereRequest", 
          "description" : "The where criteria of a batch task in which the actual criteria for retrieving batch tasks is specified."
        }
      }, 
      "type" : "object"
    }, 
    "MarkerTypeList" : {
      "items" : {
        "$ref" : "#/definitions/MarkerType"
      }, 
      "type" : "array"
    }, 
    "EventReadRequestFirst" : {
      "description" : "The apply_read query model.", 
      "properties" : {
        "endTime" : {
          "description" : "The end date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss). The specified date range must be equivalent to or a multiple of a change marker's cadence.", 
          "example" : "2021-01-15T10.15.00.000Z", 
          "type" : "string"
        }, 
        "markers" : {
          "description" : "A list of marker types to filter the returned events.", 
          "properties" : {
            "ids" : {
              "description" : "A list of IDs of marker types.", 
              "items" : {
                "example" : 1, 
                "type" : "string"
              }, 
              "type" : "array"
            }, 
            "qualifiers" : {
              "description" : "A list of qualifiers of marker types.", 
              "items" : {
                "example" : "timekeeping_timecard_punch", 
                "type" : "string"
              }, 
              "type" : "array"
            }
          }, 
          "type" : "object"
        }, 
        "options" : {
          "description" : "The available options for retrieving marker types by criteria.", 
          "properties" : {
            "cadence" : {
              "description" : "The cadence for the events generated for a marker type. If not specified, the latest subscription cadence is applied. For example: 15m.", 
              "example" : "15h", 
              "type" : "string"
            }, 
            "pageSize" : {
              "description" : "The page size of the query results.", 
              "example" : 10000, 
              "type" : "string"
            }
          }, 
          "type" : "object"
        }, 
        "startTime" : {
          "description" : "The start date and time of a date range in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss). The specified date range must be equivalent to or a multiple of a change marker's cadence.", 
          "example" : "2021-01-15T10.00.00.000Z", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "EventReadResponse" : {
      "description" : "The event read response model.", 
      "properties" : {
        "events" : {
          "description" : "An array of marker events.", 
          "items" : {
            "$ref" : "#/definitions/MarkerEvent"
          }, 
          "type" : "array"
        }, 
        "pageIndex" : {
          "description" : "The encoded page index received from the previous response.", 
          "example" : "jkjkjhkhkaajkjkaann16786ajhjgjhg", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "MarkerSubscription" : {
      "description" : "The marker subscription model.", 
      "properties" : {
        "active" : {
          "description" : "A Boolean indicator expressed as a string of whether or not a marker type is active.", 
          "example" : "true", 
          "type" : "string"
        }, 
        "category" : {
          "description" : "The name of the category associated with a marker type.", 
          "example" : "timecard", 
          "type" : "string"
        }, 
        "markerName" : {
          "description" : "The name of a marker type.", 
          "example" : "timekeeping_timecard_punch", 
          "type" : "string"
        }, 
        "markerTypeId" : {
          "description" : "The ID of a marker type.", 
          "example" : 1, 
          "type" : "number"
        }, 
        "objectType" : {
          "description" : "The name of the object type associated with a marker type.", 
          "example" : "emp", 
          "type" : "string"
        }, 
        "product" : {
          "description" : "The name of the product associated with a marker type.", 
          "example" : "timekeeping", 
          "type" : "string"
        }, 
        "resourceUrl" : {
          "description" : "The resource URL associated with a marker type.", 
          "example" : "/timekeeping/api", 
          "type" : "string"
        }, 
        "subcategory" : {
          "description" : "The name of the subcategory associated with a marker type.", 
          "example" : "punch", 
          "type" : "string"
        }, 
        "subscribed" : {
          "description" : "A Boolean indicator expressed as a string of whether or not you are subscribed to a marker type.", 
          "example" : "true", 
          "type" : "string"
        }, 
        "subscriptions" : {
          "description" : "An array of subscriptions to change markers.", 
          "items" : {
            "$ref" : "#/definitions/SubscriptionItem"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "SubscriptionRequest" : {
      "description" : "The subscription request model.", 
      "items" : {
        "properties" : {
          "cadence" : {
            "description" : "The default cadence for the events generated for a marker type. For example: 15m.", 
            "example" : "15m", 
            "type" : "string"
          }, 
          "markerName" : {
            "description" : "The name of a marker type.", 
            "example" : "timekeeping_timecard_punch", 
            "type" : "string"
          }, 
          "markerTypeId" : {
            "description" : "The ID of a marker type.", 
            "example" : 1, 
            "type" : "number"
          }, 
          "retention" : {
            "description" : "The default retention period of the events generated for a marker type. For example: 7d.", 
            "example" : "30d", 
            "type" : "string"
          }
        }, 
        "type" : "object"
      }, 
      "type" : "array"
    }, 
    "CommonFailureResponse" : {
      "description" : "The common failure response.", 
      "properties" : {
        "details" : {
          "properties" : {
            "errors" : {
              "items" : {
                "$ref" : "#/definitions/ErrorRef"
              }, 
              "type" : "array"
            }
          }, 
          "type" : "object"
        }, 
        "errorCode" : {
          "description" : "Failure error code.", 
          "example" : "CIS-2020", 
          "type" : "string"
        }, 
        "message" : {
          "description" : "The error description.", 
          "example" : "API {operation} failed", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Integration Execution Details" : {
      "description" : "The detailed information, such as the status, of an integration that has been executed. It aids monitoring of that integration.", 
      "properties" : {
        "endDate" : {
          "description" : "The date when the integration run finished.", 
          "type" : "string"
        }, 
        "executionReferenceId" : {
          "description" : "Unique reference ID for an integration run", 
          "type" : "string"
        }, 
        "extendedStatus" : {
          "description" : "Additional information about the current state of an integration run after the run started.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "Unique ID for the integration run.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "integrationId" : {
          "description" : "The ID of the installed integration that is the basis of this integration run", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "integrationName" : {
          "description" : "Name of the installed integration that is the basis of this integration run", 
          "type" : "string"
        }, 
        "integrationParameters" : {
          "description" : "A list of the integration parameters that have custom values.", 
          "items" : {
            "$ref" : "#/definitions/Integration parameters"
          }, 
          "type" : "array"
        }, 
        "message" : {
          "description" : "Message from the external system when the integration run finished.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "A unique integration run name to make it easier to identify the run of that integration", 
          "type" : "string"
        }, 
        "requestType" : {
          "description" : "Type of request that triggered the integration run: scheduled or manual.", 
          "type" : "string"
        }, 
        "runSummary" : {
          "description" : "Detailed information about the integration run such as records processed, records failed, output files, error logs.", 
          "type" : "string"
        }, 
        "startDate" : {
          "description" : "The date when the integration run started.", 
          "type" : "string"
        }, 
        "status" : {
          "description" : "The current state of an integration run after the run started.", 
          "type" : "string"
        }, 
        "user" : {
          "description" : "Person who created the integration run.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Integration Details Request" : {
      "description" : "Request to fetch details for an integration execution.", 
      "properties" : {
        "where" : {
          "$ref" : "#/definitions/Integration Details Request", 
          "description" : "Request object used to provide input details."
        }
      }, 
      "type" : "object"
    }, 
    "Executed Integration Details Model" : {
      "description" : "The detailed information model, including status, of an integration that has been executed, which aids in the monitoring of that integration.", 
      "properties" : {
        "associatedToSet" : {
          "description" : "A Boolean indicator of whether or not an integration run is associated with a set.", 
          "type" : "boolean"
        }, 
        "endDateTime" : {
          "description" : "The date when an integration run finished in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddTHH:MM:SS).", 
          "type" : "string"
        }, 
        "extendedStatus" : {
          "description" : "A set of additional information about the current state of an integration run after the run started.", 
          "type" : "string"
        }, 
        "integrationExecutionId" : {
          "description" : "A unique reference ID for an integration run.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "integrationName" : {
          "description" : "The name of the installed integration that is the basis of an integration run.", 
          "type" : "string"
        }, 
        "integrationParameters" : {
          "description" : "A list of the integration parameters that have custom values.", 
          "type" : "string"
        }, 
        "integrationRefId" : {
          "description" : "The ID of the installed integration that is the basis of an integration run.", 
          "type" : "string"
        }, 
        "integrationRunName" : {
          "description" : "A unique integration run name to make it easier to identify the run of that integration.", 
          "type" : "string"
        }, 
        "integrationSetName" : {
          "description" : "A unique integration set name to make it easier to identify the set of an integration run.", 
          "type" : "string"
        }, 
        "integrationStatus" : {
          "description" : "The current state of an integration run after the run started.", 
          "type" : "string"
        }, 
        "integrationType" : {
          "description" : "The type of an integration run.", 
          "type" : "string"
        }, 
        "message" : {
          "description" : "A message from an external system when the integration run finished.", 
          "type" : "string"
        }, 
        "processName" : {
          "description" : "The name of the process associated with an integration run.", 
          "type" : "string"
        }, 
        "requestType" : {
          "description" : "The type of request that triggered the integration run, which can be scheduled or manual.", 
          "type" : "string"
        }, 
        "runSummaryJSON" : {
          "description" : "A set of detailed information about the integration run, including records processed, records failed, output files, and error logs.", 
          "type" : "string"
        }, 
        "startDateTime" : {
          "description" : "The date when an integration run started in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddTHH:MM:SS).", 
          "type" : "string"
        }, 
        "user" : {
          "description" : "The person who created an integration run.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "APIOutputError" : {
      "properties" : {
        "details" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "errorCode" : {
          "type" : "string"
        }, 
        "infoLink" : {
          "type" : "string"
        }, 
        "message" : {
          "type" : "string"
        }, 
        "metadata" : {
          "type" : "object"
        }, 
        "reportingAttribute" : {
          "type" : "string"
        }, 
        "reportingValue" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Integration Errors Request" : {
      "description" : "Request for custom errors for an integration execution", 
      "properties" : {
        "apiIntegration" : {
          "description" : "Custom errors generated by an API integration", 
          "items" : {
            "$ref" : "#/definitions/Additional Details Request"
          }, 
          "type" : "array"
        }, 
        "batchIntegration" : {
          "description" : "Custom errors generated by a batch integration", 
          "items" : {
            "$ref" : "#/definitions/Additional Details Request"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Additional Details Response" : {
      "description" : "The Custom Error response model.", 
      "properties" : {
        "externalId" : {
          "description" : "The unique ID of a custom error.", 
          "type" : "string"
        }, 
        "key" : {
          "description" : "The key that represents the domain entity for the custom error.", 
          "type" : "string"
        }, 
        "message" : {
          "description" : "A message representing the batch that was processed or the action that was taken.", 
          "type" : "string"
        }, 
        "value" : {
          "description" : "The actual error that resulted in a failure or business disqualification.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Integration Instance" : {
      "description" : "The integration instance model.", 
      "properties" : {
        "createdDtm" : {
          "description" : "(Required) The date and time the integration run was created in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "eventId" : {
          "description" : "The event ID of an integration instance.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "id" : {
          "description" : "The unique ID for the integration instance.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "integrationDeleted" : {
          "description" : "A Boolean indicator of whether or not the integration for this integration run has been deleted.", 
          "type" : "boolean"
        }, 
        "integrationId" : {
          "description" : "(Required) The unique ID for the integration.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "integrationName" : {
          "description" : "The unique name of the integration.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "(Required) The unique name of the integration run.", 
          "type" : "string"
        }, 
        "requestType" : {
          "description" : "(Required) The type of request that triggered the integration run: scheduled or manual.", 
          "type" : "string"
        }, 
        "scheduledInfo" : {
          "description" : "Information about the scheduled integration run.", 
          "type" : "string"
        }, 
        "user" : {
          "description" : "(Required) The user who created the integration run.", 
          "type" : "string"
        }, 
        "userParameters" : {
          "description" : "(Required) A list of the integration parameters that have custom values.", 
          "type" : "string"
        }
      }, 
      "required" : [ "createdDtm", "eventId", "integrationId", "name", "requestType", "user", "userParameters" ], 
      "type" : "object"
    }, 
    "IhubScheduleProcessInstanceBean" : {
      "description" : "The detailed information related to an integration and its scheduling parameters", 
      "properties" : {
        "integrationDetails" : {
          "$ref" : "#/definitions/IhubFalconProcesScheduleResBean", 
          "description" : "The basic information related to the integration schedule"
        }, 
        "nextRunDetails" : {
          "$ref" : "#/definitions/RunDetails", 
          "description" : "The run details of the integration schedule."
        }, 
        "schedule" : {
          "$ref" : "#/definitions/SchedulingDetails", 
          "description" : "The details about scheduling parameters defined while creating the schedule."
        }
      }, 
      "required" : [ "integrationDetails", "nextRunDetails", "schedule" ], 
      "type" : "object"
    }, 
    "IhubIntegrationResponseBean" : {
      "description" : "The details of an integration process installed in the system and available to be scheduled or executed as needed. It also includes the configuration parameter details whose values can be overriden by user before submitting this integration for execution or scheduling.", 
      "properties" : {
        "description" : {
          "description" : "The details related to an integration's purpose and use.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The unique Id of the integration", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "integrationParameters" : {
          "description" : "List of the integration parameters whosevalues can be customized by user.", 
          "items" : {
            "$ref" : "#/definitions/User Parameter Details"
          }, 
          "type" : "array"
        }, 
        "name" : {
          "description" : "The unique name given to an installed integration.", 
          "type" : "string"
        }
      }, 
      "required" : [ "id", "integrationParameters", "name" ], 
      "type" : "object"
    }, 
    "IhubIntegration Process Response Bean" : {
      "description" : "The integration process model.", 
      "properties" : {
        "description" : {
          "description" : "<em>[Optional]</em> The description of an integration process.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The unique ID of an integration process.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "integrationParameters" : {
          "description" : "A list of integration parameter objects.", 
          "items" : {
            "$ref" : "#/definitions/Ihub Process Parameter Bean"
          }, 
          "type" : "array"
        }, 
        "integrationTemplate" : {
          "description" : "The name of an integration template associated with an integration process.", 
          "type" : "string"
        }, 
        "integrationType" : {
          "description" : "<p>The type of integration. Valid values include:</p><ul><li>IMPORT</li><li>EXPORT</li><li>NONE</li></ul>", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "The name of an integration process.", 
          "type" : "string"
        }, 
        "runAsSystemUser" : {
          "description" : "<em>[Optional]</em> A Boolean indicator of whether the integration is executed as a system user.", 
          "type" : "boolean"
        }, 
        "sftpConnection" : {
          "$ref" : "#/definitions/Ihub Connection Bean", 
          "description" : "The SFTP Connection object."
        }, 
        "source" : {
          "description" : "The name of the source platform.", 
          "type" : "string"
        }
      }, 
      "required" : [ "integrationTemplate", "name" ], 
      "type" : "object"
    }, 
    "Integration Connection Definition" : {
      "description" : "Connection definition details.", 
      "properties" : {
        "connectionType" : {
          "$ref" : "#/definitions/Integration Connection Type", 
          "description" : "connection type"
        }, 
        "dbConnection" : {
          "$ref" : "#/definitions/DB Connnection", 
          "description" : "db connection"
        }, 
        "description" : {
          "description" : "connection definition description", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "connection definition identifier", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "connection definition name", 
          "type" : "string"
        }, 
        "sftpConnection" : {
          "$ref" : "#/definitions/SFTP Connnection", 
          "description" : "sftp connection"
        }
      }, 
      "required" : [ "id", "name" ], 
      "type" : "object"
    }, 
    "SFTP Connection Update Request" : {
      "description" : "The Update SFTP Connections for Integrations request model.", 
      "properties" : {
        "connectionId" : {
          "description" : "The ID of an SFTP connection.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "processName" : {
          "description" : "The name of an integration process.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Integration Update Response" : {
      "description" : "The Update SFTP Connections for Integrations response model.", 
      "properties" : {
        "connectionId" : {
          "description" : "The ID of an SFTP connection.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "processName" : {
          "description" : "The name of an integration process.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Process Callback Details" : {
      "description" : "Process Callback Details.", 
      "properties" : {
        "apiIntegration" : {
          "$ref" : "#/definitions/API Process Callback Details", 
          "description" : "The callback details of an API integration. The Update Integration Execution Details operation requires one, but not both, of the following properties: <code>batchIntegration</code> or <code>apiIntegration</code>.", 
          "position" : 2
        }, 
        "batchIntegration" : {
          "$ref" : "#/definitions/Batch Process Callback Details", 
          "description" : "The callback details of a batch integration. The Update Integration Execution Details operation requires one, but not both, of the following properties: <code>batchIntegration</code> or <code>apiIntegration</code>.", 
          "position" : 1
        }
      }, 
      "required" : [ "apiIntegration", "batchIntegration" ], 
      "type" : "object"
    }, 
    "Execute Integration Request" : {
      "description" : "The detailed information, such as the status, of an integration that has been executed. It aids monitoring of that integration.", 
      "properties" : {
        "integrationParameters" : {
          "description" : "List of the integration parameters that have custom values.", 
          "items" : {
            "$ref" : "#/definitions/Integration parameters"
          }, 
          "type" : "array"
        }, 
        "name" : {
          "description" : "A unique integration run name to make it easier to identify the run of that integration", 
          "type" : "string"
        }
      }, 
      "required" : [ "name" ], 
      "type" : "object"
    }, 
    "Execute Integration Response" : {
      "description" : "The immediate response returned when an integration is sumbitted for execution", 
      "properties" : {
        "errorMessage" : {
          "description" : "Error message if the integration run fails.", 
          "type" : "string"
        }, 
        "executionDate" : {
          "description" : "The date when the integration run started.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "Unique ID for the integration run.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "status" : {
          "description" : "The current state of an integration run after the run started.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "IhubScheduleInstanceBean" : {
      "description" : "The configuration data for scheduling an integration", 
      "properties" : {
        "integrationDetails" : {
          "$ref" : "#/definitions/IhubFalconProcesScheduleReqBean", 
          "description" : "Basic information related to an integration schedule like its name and parameter values to be configured."
        }, 
        "schedule" : {
          "$ref" : "#/definitions/SchedulingDetails", 
          "description" : "Schedule related information"
        }
      }, 
      "required" : [ "integrationDetails", "schedule" ], 
      "type" : "object"
    }, 
    "Response Status" : {
      "description" : "The immediate response returned when an integration is sumbitted for execution or scheduling", 
      "properties" : {
        "description" : {
          "description" : "(Required) The detailed description about an integration.", 
          "type" : "string"
        }, 
        "errorMessage" : {
          "description" : "Error message if the integration run fails.", 
          "type" : "string"
        }, 
        "executionDate" : {
          "description" : "The date when the integration run started.", 
          "type" : "string"
        }, 
        "executionResponseId" : {
          "description" : "Unique ID for the integration run.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "status" : {
          "description" : "(Required) The current state of an integration run after the run started or was scheduled.", 
          "type" : "string"
        }
      }, 
      "required" : [ "description", "status" ], 
      "type" : "object"
    }, 
    "Generic Workflow Notification" : {
      "description" : "Generic Workflow Notification details", 
      "properties" : {
        "description" : {
          "description" : "The description of a generic notification.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID of a generic notification.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "messageTemplate" : {
          "description" : "The message template associated with a generic notification.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "The name of a generic notification.", 
          "type" : "string"
        }, 
        "recipientListWillBeSuppliedAtRuntime" : {
          "description" : "A Boolean indicator of whether or not the recipient is supplied at runtime.", 
          "type" : "boolean"
        }, 
        "sendToEmployee" : {
          "description" : "A Boolean indicator of whether or not a notification is sent to the employee.", 
          "type" : "boolean"
        }, 
        "sendToEmployeesAttendanceAdministrator" : {
          "description" : "A Boolean indicator of whether or not a notification is sent to an employee's Attendance administrator.", 
          "type" : "boolean"
        }, 
        "sendToEmployeesLeaveAdministrator" : {
          "description" : "A Boolean indicator of whether or not a notification is sent to an employee's Leave administrator.", 
          "type" : "boolean"
        }, 
        "sendToEmployeesManager" : {
          "description" : "A Boolean indicator of whether or not a notification is sent to an employee's manager.", 
          "type" : "boolean"
        }, 
        "smsMessageTemplate" : {
          "description" : "The SMS message template associated with a generic notification.", 
          "type" : "string"
        }, 
        "subjectTemplate" : {
          "description" : "The subject template associated with a generic notification.", 
          "type" : "string"
        }
      }, 
      "type" : "object", 
      "xml" : {
        "name" : "Generic Workflow Notification"
      }
    }, 
    "Event Message" : {
      "description" : "Event data for sending notifications", 
      "properties" : {
        "additionalRecipients" : {
          "description" : "Any additional recipients of a notification.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "domain" : {
          "description" : "The domain associated with an event notification.", 
          "type" : "string"
        }, 
        "event" : {
          "description" : "The event associated with an event notification.", 
          "type" : "string"
        }, 
        "eventData" : {
          "additionalProperties" : {
            "type" : "string"
          }, 
          "description" : "The event data associated with an event notification.", 
          "type" : "object"
        }, 
        "notifyData" : {
          "additionalProperties" : {
            "type" : "string"
          }, 
          "description" : "A data map used to populate the configured notification message. It contains the optional notification properties which controls the behavior of notifications along with event-specific properties which are used to replace tags in the generic notification subject and message body templates at runtime.", 
          "type" : "object"
        }, 
        "recipientPersonNums" : {
          "description" : "The list of person IDs of the recipients of a notification irrespective of whether or not the \"Send To Employee\" flag is passed in the generic notification configuration.", 
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array"
        }, 
        "recipients" : {
          "description" : "The recipients of a notification.", 
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array"
        }, 
        "recipientsByPersonNumber" : {
          "description" : "The list of person numbers of the recipients of a notification when the \"Send To Employee\" flag is passed as true in the generic notification configuration.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "urlParams" : {
          "additionalProperties" : {
            "type" : "string"
          }, 
          "description" : "The URL parameters associated with an event notification.", 
          "type" : "object"
        }
      }, 
      "required" : [ "domain", "event" ], 
      "type" : "object", 
      "xml" : {
        "name" : "Event Message"
      }
    }, 
    "Notification Message" : {
      "description" : "Notification data for sending notifications", 
      "properties" : {
        "additionalRecipients" : {
          "description" : "Any additional recipients of a notification.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "notifyData" : {
          "additionalProperties" : {
            "type" : "string"
          }, 
          "description" : "A data map used to populate the configured notification message. It contains the optional notification properties which controls the behavior of notifications along with event-specific properties which are used to replace tags in the generic notification subject and message body templates at runtime.", 
          "type" : "object"
        }, 
        "recipientPersonNums" : {
          "description" : "The list of person IDs of the recipients of a notification irrespective of whether or not the \"Send To Employee\" flag is passed in the generic notification configuration.", 
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array"
        }, 
        "recipients" : {
          "description" : "The recipients of a notification.", 
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array"
        }, 
        "recipientsByPersonNumber" : {
          "description" : "The list of person numbers of the recipients of a notification when the \"Send To Employee\" flag is passed as true in the generic notification configuration.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "urlParams" : {
          "additionalProperties" : {
            "type" : "string"
          }, 
          "description" : "A map of URL parameter names and their corresponding values used to build the one-click navigation URL sent in email notifications.", 
          "type" : "object"
        }
      }, 
      "type" : "object", 
      "xml" : {
        "name" : "notificationMessage"
      }
    }, 
    "Report Category" : {
      "description" : "The report category describes the available report categories, the report-category meta data, and the associated reports.", 
      "properties" : {
        "description" : {
          "description" : "The description of the report category.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The unique ID of the report category.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "label" : {
          "description" : "The label of the report category.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "The unique name of the report category.", 
          "type" : "string"
        }
      }, 
      "required" : [ "name" ], 
      "type" : "object"
    }, 
    "Model for Report Data Object API" : {
      "description" : "Model providing details of report dataobject, including data object metadata.", 
      "properties" : {
        "dataView" : {
          "$ref" : "#/definitions/DataView", 
          "description" : "The details of the associated reporting Dataview."
        }, 
        "definitionType" : {
          "$ref" : "#/definitions/ReportObjectRef1", 
          "description" : "The type of report data object: Standard, Custom, Custom Read-Only, or Standard Read-Only."
        }, 
        "description" : {
          "description" : "The description of the report data object.", 
          "type" : "string"
        }, 
        "forceUpdate" : {
          "description" : "A Boolean indicator of whether or not the data object is associated with any report. If false, update the data object or trigger a validation error. If true, forcefully update the data object.", 
          "type" : "boolean"
        }, 
        "id" : {
          "description" : "The unique ID of the report data object.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "label" : {
          "description" : "The title of the report data object.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "The name of the report data object. The name of the data object and the Dataview must be the same.", 
          "type" : "string"
        }, 
        "timeFrameType" : {
          "description" : "The type of timeframe associated with a report data object. Valid values include SELECTED, SPECIFIC, and RELATIVE.", 
          "enum" : [ "SELECTED", "SPECIFIC", "RELATIVE" ], 
          "type" : "string"
        }
      }, 
      "required" : [ "dataView", "name" ], 
      "type" : "object"
    }, 
    "Reporting Data Element Definition" : {
      "description" : "Model providing the details for data element.", 
      "properties" : {
        "key" : {
          "description" : "The key for the reporting data element.", 
          "type" : "string"
        }, 
        "label" : {
          "description" : "The label of the reporting data element.", 
          "type" : "string"
        }, 
        "properties" : {
          "description" : "A list of properties for the reporting data element.", 
          "items" : {
            "$ref" : "#/definitions/Reporting Data Element property"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Reporting Data Request" : {
      "description" : "The reporting data request object is required to process data for the report dataobject. If a request passes data elements, this object provides data only for the requested data elements. Otherwise, this object provides data for all of the data elements that are in the configuration of the requested dataobject.", 
      "properties" : {
        "count" : {
          "description" : "The pagination count for the reporting data request that defines the number of entities returned per page. This property has no upper limit.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "dataElementParams" : {
          "description" : "A list of data element parameters in the reporting data request.", 
          "items" : {
            "$ref" : "#/definitions/Data Element Param Property"
          }, 
          "type" : "array"
        }, 
        "from" : {
          "$ref" : "#/definitions/Reporting From", 
          "description" : "The type of Dataview: people (EMP) or ORGANIZATION. Also includes the time frame, Hyperfind query, people IDs, and location IDs."
        }, 
        "groupBy" : {
          "description" : "A list of data element IDs that require groupBy.", 
          "items" : {
            "$ref" : "#/definitions/Reporting Data Element Id"
          }, 
          "type" : "array"
        }, 
        "index" : {
          "description" : "The pagination index number for the requested data. This index number allows a caller to retrieve paginated data and is 0-based.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "options" : {
          "$ref" : "#/definitions/Reporting Request Options", 
          "description" : "The options for the reporting data request, such as: type of response, sub-request, or cached response."
        }, 
        "select" : {
          "description" : "A list of reporting data elements. If blank, all of the data elements in the dataobject are considered.", 
          "items" : {
            "$ref" : "#/definitions/Reporting Data Element"
          }, 
          "type" : "array"
        }, 
        "sortBy" : {
          "description" : "A list of data elements that are sorted.", 
          "items" : {
            "$ref" : "#/definitions/Reporting Sort"
          }, 
          "type" : "array"
        }, 
        "where" : {
          "description" : "A list of filters of the report data.", 
          "items" : {
            "$ref" : "#/definitions/Reporting Filter"
          }, 
          "type" : "array"
        }
      }, 
      "required" : [ "from", "select" ], 
      "type" : "object"
    }, 
    "Reporting Data Response" : {
      "description" : "Model context for reporting response data for requested data object.", 
      "properties" : {
        "errorMessage" : {
          "description" : "An error message string associated with a reporting response.", 
          "type" : "string"
        }, 
        "legacyResponse" : {
          "type" : "boolean"
        }, 
        "reducedReportingDataContent" : {
          "description" : "A reduced list of reporting data for the requested data elements.", 
          "items" : {
            "items" : {
              "type" : "string"
            }, 
            "type" : "array"
          }, 
          "type" : "array"
        }, 
        "reportingDataContent" : {
          "description" : "A list of reporting data for the requested data elements.", 
          "items" : {
            "$ref" : "#/definitions/Reporting Data Content"
          }, 
          "type" : "array"
        }, 
        "reportingMetadata" : {
          "$ref" : "#/definitions/ReportingMetadata", 
          "description" : "The reporting metadata associated with the requested data elements."
        }
      }, 
      "type" : "object"
    }, 
    "Reporting Chunk Response" : {
      "description" : "Model context for reporting chunk response data for requested data object.", 
      "properties" : {
        "requestBatches" : {
          "description" : "A reduced list of reporting data request batch for the requested data elements.", 
          "items" : {
            "$ref" : "#/definitions/Reporting Data Request"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Internal Report Design" : {
      "description" : "The report design describes the published or unpublished report design on the reporting server for UI presentation.", 
      "properties" : {
        "definitionType" : {
          "$ref" : "#/definitions/Definition Type"
        }, 
        "designFileRef" : {
          "description" : "The location of the report design file on the reporting server.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The unique ID for the report design.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "The unique name of the report design.", 
          "type" : "string"
        }, 
        "owner" : {
          "description" : "The user name of the person who most recently edited the report design.", 
          "type" : "string"
        }, 
        "updatedDateTime" : {
          "description" : "The timestamp of when the report design was most recently edited.", 
          "type" : "string"
        }
      }, 
      "required" : [ "designFileRef", "name" ], 
      "type" : "object"
    }, 
    "Report Design Parameter" : {
      "description" : "The report design parameter describes the report parameter.", 
      "properties" : {
        "designParamName" : {
          "description" : "The unique design name of the report design parameter.", 
          "type" : "string"
        }, 
        "label" : {
          "description" : "The label of the report design parameter.", 
          "type" : "string"
        }, 
        "mandatory" : {
          "description" : "A Boolean indicator of whether or not the report design parameter is mandatory.", 
          "type" : "boolean"
        }, 
        "name" : {
          "description" : "The unique name of the report design parameter.", 
          "type" : "string"
        }, 
        "promptable" : {
          "description" : "A Boolean indicator of whether or not the report design parameter is visible.", 
          "type" : "boolean"
        }
      }, 
      "required" : [ "name" ], 
      "type" : "object"
    }, 
    "Internal Report Execution History" : {
      "description" : "The report execution history for UI presentation records the details of previous report runs for the current user.", 
      "properties" : {
        "apiOutputError" : {
          "$ref" : "#/definitions/Report APIOutput Error", 
          "description" : "The error message associated with failed runs in the report execution history."
        }, 
        "connectionHandle" : {
          "description" : "The reference ID for the current report run.", 
          "type" : "string"
        }, 
        "delegatorId" : {
          "description" : "The Delegator ID of the person who is delegated report.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "description" : {
          "description" : "The description of the report execution history.", 
          "type" : "string"
        }, 
        "expiryDateTime" : {
          "type" : "string"
        }, 
        "id" : {
          "description" : "The property gives the page index.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "label" : {
          "description" : "The displayed label of the report.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "The unique name of the report execution history.", 
          "type" : "string"
        }, 
        "objectId" : {
          "description" : "The unique ID for a report run. This ID can be used to cancel a run report request.", 
          "type" : "string"
        }, 
        "outputFormat" : {
          "description" : "The name of the output format of a report run.", 
          "type" : "string"
        }, 
        "outputFormatLabel" : {
          "description" : "The label of the output format of a report run.", 
          "type" : "string"
        }, 
        "reportCategoryLabel" : {
          "description" : "The category label of a report run.", 
          "type" : "string"
        }, 
        "reportCategoryName" : {
          "description" : "The name of the report category.", 
          "type" : "string"
        }, 
        "reportOutputUrl" : {
          "description" : "The end-point address (URL) that is a reference for the report run file. Useful only for interactive report types.", 
          "type" : "string"
        }, 
        "roleAssignment" : {
          "$ref" : "#/definitions/ReportObjectRef1", 
          "description" : "The Role Assignment of the person on whose behalf a report is run."
        }, 
        "roleId" : {
          "description" : "The Role ID of the person who is associated with a report.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "runAs" : {
          "$ref" : "#/definitions/PersonDetail", 
          "description" : "A reference to the person on whose behalf a report is run."
        }, 
        "runEndDateTime" : {
          "description" : "The end date and time of the report run in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "runStartDateTime" : {
          "description" : "The start date and time of the report run in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "status" : {
          "description" : "The status of the report run.", 
          "type" : "string"
        }, 
        "statusLabel" : {
          "description" : "The label of the status of the report run.", 
          "type" : "string"
        }
      }, 
      "required" : [ "name", "outputFormat", "outputFormatLabel", "reportCategoryName" ], 
      "type" : "object"
    }, 
    "Report Execution History Request" : {
      "description" : "This is a model class for Report Execution History Request.", 
      "properties" : {
        "executionStatus" : {
          "description" : "The property is to specify the execution status of the report.", 
          "type" : "string"
        }, 
        "pageIndex" : {
          "description" : "The property is to give the page index for the report.", 
          "type" : "string"
        }, 
        "pageSize" : {
          "description" : "The property is to decide the page size.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "required" : [ "pageSize" ], 
      "type" : "object"
    }, 
    "Report Execution History Response" : {
      "description" : "This is a model class for Report Execution History Response.", 
      "properties" : {
        "pageIndex" : {
          "description" : "The property gives the page index.", 
          "type" : "string"
        }, 
        "reportExecutionHistoryList" : {
          "description" : "The property gives the list of report execution history.", 
          "items" : {
            "$ref" : "#/definitions/Report Execution History"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Response" : {
      "properties" : {
        "allowedMethods" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "cookies" : {
          "additionalProperties" : {
            "$ref" : "#/definitions/NewCookie"
          }, 
          "type" : "object"
        }, 
        "date" : {
          "format" : "date-time", 
          "type" : "string"
        }, 
        "entity" : {
          "type" : "object"
        }, 
        "entityTag" : {
          "$ref" : "#/definitions/EntityTag"
        }, 
        "headers" : {
          "additionalProperties" : {
            "items" : {
              "type" : "object"
            }, 
            "type" : "array"
          }, 
          "type" : "object"
        }, 
        "language" : {
          "$ref" : "#/definitions/Locale"
        }, 
        "lastModified" : {
          "format" : "date-time", 
          "type" : "string"
        }, 
        "length" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "links" : {
          "items" : {
            "$ref" : "#/definitions/Link"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "location" : {
          "format" : "uri", 
          "type" : "string"
        }, 
        "mediaType" : {
          "$ref" : "#/definitions/MediaType"
        }, 
        "metadata" : {
          "additionalProperties" : {
            "items" : {
              "type" : "object"
            }, 
            "type" : "array"
          }, 
          "type" : "object"
        }, 
        "status" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "statusInfo" : {
          "$ref" : "#/definitions/StatusType"
        }, 
        "stringHeaders" : {
          "additionalProperties" : {
            "items" : {
              "type" : "string"
            }, 
            "type" : "array"
          }, 
          "type" : "object"
        }
      }, 
      "type" : "object"
    }, 
    "Report Base Profile" : {
      "description" : "The report profile describes the available report profiles, the report-profile metadata, and the associated reports for UI presentation.", 
      "properties" : {
        "description" : {
          "description" : "The description of the report profile.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The unique ID of the report profile.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "label" : {
          "description" : "The label of the report profile to display in the person record.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "The unique name of the report profile.", 
          "type" : "string"
        }, 
        "reports" : {
          "description" : "A list of reports that are associated with the report profile.", 
          "items" : {
            "$ref" : "#/definitions/ReportObjectRef1"
          }, 
          "type" : "array"
        }
      }, 
      "required" : [ "id", "name", "reports" ], 
      "type" : "object"
    }, 
    "Published Report" : {
      "description" : "The model of a published report.", 
      "properties" : {
        "currencyType" : {
          "$ref" : "#/definitions/Object Ref", 
          "description" : "The currency type for a published report."
        }, 
        "definitionType" : {
          "$ref" : "#/definitions/ReportObjectRef1", 
          "description" : "The type of report: STANDARD, CUSTOM, or STANDARD READ-ONLY."
        }, 
        "description" : {
          "description" : "The description of a published report.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID of a published report.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "label" : {
          "description" : "The label of a published report.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "The unique name of a published report.", 
          "type" : "string"
        }, 
        "parameters" : {
          "description" : "The design parameters of a published report.", 
          "items" : {
            "$ref" : "#/definitions/Report Design Parameter"
          }, 
          "type" : "array"
        }, 
        "reportCategories" : {
          "description" : "A list of report categories for a published report.", 
          "items" : {
            "$ref" : "#/definitions/ReportObjectRef1"
          }, 
          "type" : "array"
        }, 
        "reportDesign" : {
          "$ref" : "#/definitions/ReportObjectRef1", 
          "description" : "The location of the report design."
        }, 
        "reportOutputFormat" : {
          "$ref" : "#/definitions/ReportObjectRef1", 
          "description" : "The default output format of a published report."
        }, 
        "supportedOutputFormats" : {
          "description" : "The supported output formats of a published report.", 
          "items" : {
            "$ref" : "#/definitions/ReportObjectRef1"
          }, 
          "type" : "array"
        }
      }, 
      "required" : [ "name", "reportCategories" ], 
      "type" : "object"
    }, 
    "Report Parameter" : {
      "description" : "The report parameter provides details about the required report parameters.", 
      "properties" : {
        "parameters" : {
          "description" : "A list of report parameters that are required to run or schedule a report.", 
          "items" : {
            "$ref" : "#/definitions/DynamicParameterModel"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Report Execution History" : {
      "description" : "The report execution history records the details of previous report runs for the current user.", 
      "properties" : {
        "actualEngine" : {
          "description" : "The engine actually used during a report run.", 
          "type" : "string"
        }, 
        "apiOutputError" : {
          "$ref" : "#/definitions/Report APIOutput Error", 
          "description" : "The error message associated with failed runs in the report execution history."
        }, 
        "expectedEngine" : {
          "description" : "The engine expected to be used during a report run.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The unique ID of the report execution history.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "outputFormat" : {
          "$ref" : "#/definitions/ReportObjectRef1", 
          "description" : "The name of the output format of a report run."
        }, 
        "report" : {
          "$ref" : "#/definitions/ReportObjectRef1", 
          "description" : "A reference to the report associated with a report execution history."
        }, 
        "runEndDateTime" : {
          "description" : "The start date and time of the report run in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "runStartDateTime" : {
          "description" : "The start date and time of the report run in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "type" : "string"
        }, 
        "status" : {
          "$ref" : "#/definitions/ReportObjectRef1", 
          "description" : "<p>The status of the report run. Possible statuses include:<p><ul><li>Submitted -- The report is in the Submitted state. This applies to Large Adhoc reports.</li><li>Inprogress -- The report is in the In Progress state.</li><li>Completed -- The report is in the completed state.</li><li>Failed -- The report is in the Failed state.</li></ul>"
        }
      }, 
      "required" : [ "outputFormat", "report" ], 
      "type" : "object"
    }, 
    "ReportRequest" : {
      "description" : "The report request describes each request to run reports including scheduling information and report parameters.", 
      "properties" : {
        "description" : {
          "description" : "The description of the report run request.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The unique ID of the report run request.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "label" : {
          "description" : "The label of the report run request.", 
          "type" : "string"
        }, 
        "recipients" : {
          "description" : "A list of all recipients of the report.", 
          "items" : {
            "$ref" : "#/definitions/ReportObjectRef1"
          }, 
          "type" : "array"
        }, 
        "reportName" : {
          "description" : "The unique name of the report.", 
          "type" : "string"
        }, 
        "reportParameter" : {
          "$ref" : "#/definitions/Report Parameter", 
          "description" : "A list of parameters for the report run request."
        }, 
        "reportRequestName" : {
          "description" : "The name of the report request.", 
          "type" : "string"
        }, 
        "roleAssignment" : {
          "$ref" : "#/definitions/ReportObjectRef1", 
          "description" : "The Role Assignment of the person on whose behalf a report is run."
        }, 
        "runAs" : {
          "$ref" : "#/definitions/ReportObjectRef1", 
          "description" : "The person on whose behalf a report is run."
        }, 
        "scheduledBy" : {
          "$ref" : "#/definitions/ReportObjectRef1", 
          "description" : "The person who scheduled the report run."
        }, 
        "schedulingInfo" : {
          "$ref" : "#/definitions/SchedulingEventDetails", 
          "description" : "The description of the request to schedule a report run."
        }, 
        "sendAttachment" : {
          "description" : "A Boolean indicator of whether or not to send the report as an email attachment.", 
          "type" : "boolean"
        }, 
        "title" : {
          "description" : "The title of the report.", 
          "type" : "string"
        }
      }, 
      "required" : [ "label", "schedulingInfo", "title" ], 
      "type" : "object"
    }, 
    "Report Request Input" : {
      "description" : "This is a model class for Report Request Input", 
      "properties" : {
        "myScheduleReport" : {
          "description" : "The property is a boolean indicator of whether or not to return only the scheduled reports for the current user. Defaults to false. When false, the operation returns all report requests in the system.", 
          "type" : "boolean"
        }, 
        "pageIndex" : {
          "description" : "The property is to give the page index for the report.", 
          "type" : "string"
        }, 
        "pageSize" : {
          "description" : "The property is to decide the page size.", 
          "format" : "int32", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "Report Request Response" : {
      "description" : "This is a model class for Report Request Response.", 
      "properties" : {
        "pageIndex" : {
          "description" : "The property gives the page index.", 
          "type" : "string"
        }, 
        "reportRequests" : {
          "description" : "The property gives the list of report requests.", 
          "items" : {
            "$ref" : "#/definitions/ReportRequest"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Target Threshold Record" : {
      "description" : "A model describing the target and threshold object.", 
      "properties" : {
        "description" : {
          "description" : "The description of a target and threshold.", 
          "example" : "Productivity Target Threshold", 
          "type" : "string"
        }, 
        "expirationDate" : {
          "description" : "The end date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID of a target and threshold.", 
          "example" : 1, 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of a target and threshold.", 
          "example" : "Productivity Target Threshold", 
          "type" : "string"
        }, 
        "targetFunctionType" : {
          "description" : "The function type of a target.", 
          "example" : "metric", 
          "type" : "string"
        }, 
        "targetLocationId" : {
          "description" : "Id of the location where target is applicable.", 
          "example" : 100, 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "targetLocationName" : {
          "description" : "Names of the location where target is applicable.", 
          "example" : "workUnitName", 
          "type" : "string"
        }, 
        "targetLocationType" : {
          "description" : "Defines at what location type target is applicable.", 
          "example" : "workunit", 
          "type" : "string"
        }, 
        "targetType" : {
          "description" : "Defines the type of target.", 
          "enum" : [ "STANDARD", "HCA" ], 
          "example" : "HCA", 
          "type" : "string"
        }, 
        "targetTypeDisplayText" : {
          "description" : "The type of a target.", 
          "example" : "Healthcare Productivity", 
          "type" : "string"
        }
      }, 
      "required" : [ "description", "expirationDate", "name", "targetFunctionType", "targetLocationId", "targetLocationName", "targetLocationType", "targetType", "targetTypeDisplayText" ], 
      "type" : "object"
    }, 
    "Target Threshold" : {
      "description" : "A model describing the target and threshold object.", 
      "properties" : {
        "coreFixedTargets" : {
          "description" : "A list of core fixed targets.", 
          "items" : {
            "$ref" : "#/definitions/Generic Target"
          }, 
          "type" : "array"
        }, 
        "coreRatioTargets" : {
          "description" : "A list of core ratio targets.", 
          "items" : {
            "$ref" : "#/definitions/Ratio Target"
          }, 
          "type" : "array"
        }, 
        "currencyRef" : {
          "$ref" : "#/definitions/ReferenceParam", 
          "description" : "The currency parameter associated with a target."
        }, 
        "description" : {
          "description" : "The description of a target and threshold.", 
          "example" : "Productivity Target Threshold", 
          "type" : "string"
        }, 
        "evaluationPeriod" : {
          "description" : "The evaluation period of a target.", 
          "example" : "Standard", 
          "type" : "string"
        }, 
        "expirationDate" : {
          "description" : "The end date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "hcaFixedTargets" : {
          "description" : "A list of Healthcare Analytics (HCA) fixed targets.", 
          "items" : {
            "$ref" : "#/definitions/Fixed Target"
          }, 
          "type" : "array"
        }, 
        "hcaVariableTargets" : {
          "description" : "A list of Healthcare Analytics (HCA) variable targets.", 
          "items" : {
            "$ref" : "#/definitions/Variable Target"
          }, 
          "type" : "array"
        }, 
        "id" : {
          "description" : "The ID of a target and threshold.", 
          "example" : 1, 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of a target and threshold.", 
          "example" : "Productivity Target Threshold", 
          "type" : "string"
        }, 
        "shortName" : {
          "description" : "The unique short name of a target and threshold.", 
          "example" : "TR_PORD_HRS", 
          "type" : "string"
        }, 
        "targetConfigBatchId" : {
          "description" : "The configuration ID of a batch associated with a target.", 
          "example" : "Batch Id", 
          "type" : "string"
        }, 
        "targetFunction" : {
          "$ref" : "#/definitions/Target Function", 
          "description" : "The name of a target function."
        }, 
        "targetLocation" : {
          "$ref" : "#/definitions/Target Location", 
          "description" : "The location where a target and threshold are applicable."
        }, 
        "targetType" : {
          "description" : "The type of a target.", 
          "example" : "Standard", 
          "type" : "string"
        }, 
        "thresholds" : {
          "description" : "The threshold that is applied to targets.", 
          "items" : {
            "$ref" : "#/definitions/KpifBuilderThreshold"
          }, 
          "type" : "array"
        }
      }, 
      "required" : [ "currencyRef", "description", "evaluationPeriod", "expirationDate", "name", "targetFunction", "targetLocation", "targetType", "thresholds" ], 
      "type" : "object"
    }, 
    "Target Threshold Evaluation Period" : {
      "description" : "Target Threshold Evaluation Period.", 
      "properties" : {
        "id" : {
          "description" : "Target Threshold Evaluation Period Id.", 
          "example" : "DAILY", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "Target Threshold Evaluation period Name.", 
          "example" : "Daily", 
          "type" : "string"
        }, 
        "shortName" : {
          "description" : "Target Threshold Evaluation period Short Name.", 
          "example" : "DAILY", 
          "type" : "string"
        }
      }, 
      "required" : [ "name" ], 
      "type" : "object"
    }, 
    "Target Threshold Export Response" : {
      "description" : "Target export response.", 
      "properties" : {
        "records" : {
          "description" : "Target export records.", 
          "items" : {
            "$ref" : "#/definitions/Target Threshold Export"
          }, 
          "type" : "array"
        }, 
        "totalRecords" : {
          "description" : "Target Export total records.", 
          "format" : "int32", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "Target Threshold Indicator Text" : {
      "description" : "Target Threshold Operator.", 
      "properties" : {
        "description" : {
          "description" : "v1.0.indicator_texts.apimodelproperty.description.description", 
          "example" : "is equal to", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "Target Threshold Operator Id.", 
          "example" : 1, 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "thresholdIndicatorText" : {
          "description" : "v1.0.indicator_texts.apimodelproperty.thresholdIndicatorText.description", 
          "example" : "=", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Target Metric Set" : {
      "description" : "Target metric set.", 
      "properties" : {
        "adjustmentSwitchRequired" : {
          "description" : "Adjustment switch.", 
          "example" : "Y", 
          "type" : "string"
        }, 
        "dataColumns" : {
          "description" : "Name of the data column.", 
          "example" : "KPI_TGT_FIX_METRIC", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "Id of Metric set.", 
          "example" : 1, 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "metricsShortNames" : {
          "type" : "string"
        }, 
        "name" : {
          "description" : "Metric set name.", 
          "example" : "Productive_Hours", 
          "type" : "string"
        }, 
        "shortName" : {
          "description" : "Metric set Shortname.", 
          "example" : "TRG_PROD_HRS", 
          "type" : "string"
        }, 
        "type" : {
          "description" : "Metric set Type.", 
          "example" : "METRIC", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Target Multi-read Request" : {
      "description" : "Target Multi-read Request", 
      "properties" : {
        "where" : {
          "description" : "Where request for mutli read.", 
          "type" : "object"
        }
      }, 
      "required" : [ "where" ], 
      "type" : "object"
    }, 
    "Target Multi-Read Response" : {
      "description" : "Target Multi-Read Response.", 
      "properties" : {
        "requestPayload" : {
          "$ref" : "#/definitions/Target Multi-Read Request Param", 
          "description" : "Target multi read request payload."
        }, 
        "targetResponse" : {
          "description" : "Target multi response payload.", 
          "items" : {
            "$ref" : "#/definitions/TargetEntitySet"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Target Threshold Operator" : {
      "description" : "The model of a Target Threshold operator.", 
      "properties" : {
        "description" : {
          "description" : "v1.0.operators.apimodelproperty.description.description", 
          "example" : "is equal to", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID of a target threshold operator.", 
          "example" : 1, 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "thresholdOperator" : {
          "description" : "v1.0.operators.apimodelproperty.thresholdOperator.description", 
          "example" : "=", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "MenuItemUIDTO" : {
      "description" : "Menu Items", 
      "properties" : {
        "icon" : {
          "description" : "The icon of a menu item.", 
          "position" : 7, 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The id of a menu item.", 
          "format" : "int64", 
          "position" : 1, 
          "type" : "integer"
        }, 
        "label" : {
          "description" : "The label of a menu item.", 
          "position" : 3, 
          "type" : "string"
        }, 
        "mobileAccessible" : {
          "description" : "A Boolean indicator of whether or not a link is accessible on mobile browsers. For Dimensions links, this property is always true and can be ignored. For HCM links, this property may return true or false.", 
          "position" : 8, 
          "type" : "boolean"
        }, 
        "order" : {
          "description" : "The order of a menu item.", 
          "format" : "int32", 
          "position" : 6, 
          "type" : "integer"
        }, 
        "parentId" : {
          "description" : "The ID of a parent menu item.", 
          "format" : "int64", 
          "position" : 5, 
          "type" : "integer"
        }, 
        "text" : {
          "description" : "The name of a menu item.", 
          "position" : 2, 
          "type" : "string"
        }, 
        "tooltip" : {
          "description" : "The tool tip detail associated with a menu item.", 
          "position" : 4, 
          "type" : "string"
        }, 
        "uri" : {
          "description" : "The URI for a menu item. This property returns four types of response. For static URLs, this property returns only the latter portion of a complete URL--you must prepend the vanity URL to form a fully addressable link. For dynamically generated links, this property returns a fully addressable link. When this property returns a value of <code>0</code>, the addressable URL is shown under the parent node. When this property returns a value of <code>#</code>, the link directs back to Home.", 
          "position" : 9, 
          "type" : "string"
        }
      }, 
      "required" : [ "icon", "id", "label", "mobileAccessible", "order", "parentId", "text", "tooltip", "uri" ], 
      "type" : "object"
    }, 
    "Business Process Response Details" : {
      "description" : "Response of the retrieved Business Process.", 
      "properties" : {
        "actionListSwitch" : {
          "description" : "The action list switch of the busines process.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "categories" : {
          "description" : "The list of categories to which a business process belongs.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef"
          }, 
          "type" : "array"
        }, 
        "commentText" : {
          "description" : "The description of the business process.", 
          "type" : "string"
        }, 
        "effectiveDate" : {
          "description" : "The date from which the business process is effective.", 
          "type" : "string"
        }, 
        "expirationDate" : {
          "description" : "The expiration date of the business process.", 
          "type" : "string"
        }, 
        "gotoListSwitch" : {
          "description" : "The goto list switch of the business process.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "id" : {
          "description" : "The ID of a process model.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "lastDeployed" : {
          "description" : "The date of deployment of the business process.", 
          "type" : "string"
        }, 
        "maxPoolSize" : {
          "description" : "The maximum number of instances that can exist at any given time.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "model" : {
          "$ref" : "#/definitions/Business Process Model Details", 
          "description" : "The ID and version of a process model."
        }, 
        "modelLocaleKey" : {
          "description" : "The locale key of the model.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "The name of a process model.", 
          "type" : "string"
        }, 
        "processDefinitionKey" : {
          "description" : "The process definition key of the business process.", 
          "type" : "string"
        }, 
        "status" : {
          "description" : "The status of a process model.", 
          "type" : "string"
        }, 
        "tileListSwitch" : {
          "description" : "The tile list switch of the business process.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "usedByProcessProfile" : {
          "description" : "The list of process profiles that use the business process.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Workflow Business Process Execute Request Payload Details" : {
      "description" : "Request payload to initiate business process.", 
      "properties" : {
        "businessProcess" : {
          "additionalProperties" : {
            "type" : "string"
          }, 
          "description" : "The ID or qualifier of the business process to execute. Use the Retrieve Business Process operation to return valid business processes. This property is required. If both ID and qualifier are provided then ID will be considered and qualifier will be ignored.", 
          "type" : "object"
        }, 
        "processVariables" : {
          "additionalProperties" : {
            "type" : "string"
          }, 
          "description" : "A list of key-value pairs that represent the process variables associated with the business process to execute. If a key matches a defined process variable, the value is passed and accepted by the process variable. If a key does not match a defined process variable, a new process variable is created using the passed key-value pair. This property is optional.", 
          "type" : "object"
        }
      }, 
      "required" : [ "businessProcess" ], 
      "type" : "object"
    }, 
    "Workflow Template Form Details" : {
      "description" : "Details of Workflow Template Form.", 
      "properties" : {
        "formStructureData" : {
          "description" : "The field details (metadata) of the form.", 
          "type" : "string"
        }, 
        "formValueData" : {
          "description" : "The user-defined variables created at initialization of the business process.", 
          "type" : "string"
        }, 
        "message" : {
          "description" : "The status message of the request.", 
          "type" : "string"
        }, 
        "processInstanceId" : {
          "description" : "The instance ID of the business process.", 
          "type" : "string"
        }, 
        "taskId" : {
          "description" : "The task ID of the user task in the business process.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "User Activity Form Details" : {
      "description" : "User Activity Form model.", 
      "properties" : {
        "action" : {
          "description" : "The action of a given instance.", 
          "type" : "string"
        }, 
        "attestationProcessId" : {
          "description" : "The attestation process ID of a given instance. This property is optional. If an attestation process ID does not exist in the system, the ID does not appear in attestation daily reports.", 
          "type" : "string"
        }, 
        "fields" : {
          "description" : "The list of id-value pairs of a given instance. This property is optional.", 
          "items" : {
            "$ref" : "#/definitions/FieldObjectRef"
          }, 
          "type" : "array"
        }, 
        "processInstanceId" : {
          "description" : "The ID of the process instance.", 
          "type" : "string"
        }, 
        "returnProcessVariables" : {
          "description" : "A Boolean indicator of whether or not to return form value data. This property is optional.", 
          "type" : "boolean"
        }, 
        "taskId" : {
          "description" : "The task ID of a given instance.", 
          "type" : "string"
        }
      }, 
      "required" : [ "action", "processInstanceId", "taskId" ], 
      "type" : "object"
    }, 
    "KioskLoginRequestContext" : {
      "description" : "The Attendance Request parent model.", 
      "properties" : {
        "where" : {
          "$ref" : "#/definitions/kioskWhere"
        }
      }, 
      "type" : "object"
    }, 
    "KioskLoginDTO" : {
      "properties" : {
        "authenticationType" : {
          "type" : "string"
        }, 
        "createdDateTime" : {
          "type" : "string"
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef"
        }, 
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "kioskInstance" : {
          "$ref" : "#/definitions/ObjectRef"
        }, 
        "knownPlace" : {
          "$ref" : "#/definitions/ObjectRef"
        }, 
        "loginType" : {
          "$ref" : "#/definitions/ObjectRef"
        }, 
        "result" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "KioskInstanceEntity_PublicAPI" : {
      "properties" : {
        "createdDateTime" : {
          "type" : "string"
        }, 
        "creator" : {
          "$ref" : "#/definitions/KioskObjectRef_PublicAPI"
        }, 
        "description" : {
          "type" : "string"
        }, 
        "hyperfind" : {
          "$ref" : "#/definitions/KioskObjectRef_PublicAPI"
        }, 
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "kiosk" : {
          "$ref" : "#/definitions/KioskObjectRef_PublicAPI"
        }, 
        "knownPlace" : {
          "$ref" : "#/definitions/KioskObjectRef_PublicAPI"
        }, 
        "name" : {
          "type" : "string"
        }, 
        "orgLocations" : {
          "items" : {
            "$ref" : "#/definitions/KioskObjectRef_PublicAPI"
          }, 
          "type" : "array"
        }, 
        "runHyperfindAs" : {
          "$ref" : "#/definitions/KioskObjectRef_PublicAPI"
        }, 
        "started" : {
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "KioskInstanceEntity" : {
      "properties" : {
        "createdDateTime" : {
          "type" : "string"
        }, 
        "creator" : {
          "$ref" : "#/definitions/KioskObjectRef"
        }, 
        "description" : {
          "type" : "string"
        }, 
        "hyperfind" : {
          "$ref" : "#/definitions/KioskObjectRef"
        }, 
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "kiosk" : {
          "$ref" : "#/definitions/KioskObjectRef"
        }, 
        "knownPlace" : {
          "$ref" : "#/definitions/KioskObjectRef"
        }, 
        "name" : {
          "type" : "string"
        }, 
        "orgLocations" : {
          "items" : {
            "$ref" : "#/definitions/KioskObjectRef"
          }, 
          "type" : "array"
        }, 
        "runHyperfindAs" : {
          "$ref" : "#/definitions/KioskObjectRef"
        }, 
        "sdmKey" : {
          "format" : "uuid", 
          "type" : "string"
        }, 
        "started" : {
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "KioskConfigEntity_PublicAPI" : {
      "properties" : {
        "activityWebForm" : {
          "type" : "boolean"
        }, 
        "advancedPunch" : {
          "type" : "boolean"
        }, 
        "autoPunch" : {
          "type" : "boolean"
        }, 
        "autoPunchWithCancelDeduct" : {
          "type" : "boolean"
        }, 
        "badgeLogin" : {
          "type" : "boolean"
        }, 
        "badgeLoginMask" : {
          "type" : "boolean"
        }, 
        "createdDateTime" : {
          "type" : "string"
        }, 
        "defaultForm" : {
          "$ref" : "#/definitions/KioskObjectRef_PublicAPI"
        }, 
        "description" : {
          "type" : "string"
        }, 
        "federated" : {
          "type" : "boolean"
        }, 
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "kioskTimeOutInSecs" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "name" : {
          "type" : "string"
        }, 
        "tileTimeoutInSecs" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "updatedDateTime" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "KioskConfigEntity" : {
      "properties" : {
        "activityWebForm" : {
          "type" : "boolean"
        }, 
        "advancedPunch" : {
          "type" : "boolean"
        }, 
        "autoPunch" : {
          "type" : "boolean"
        }, 
        "autoPunchWithCancelDeduct" : {
          "type" : "boolean"
        }, 
        "badgeLogin" : {
          "type" : "boolean"
        }, 
        "badgeLoginMask" : {
          "type" : "boolean"
        }, 
        "createdDateTime" : {
          "type" : "string"
        }, 
        "defaultForm" : {
          "$ref" : "#/definitions/KioskObjectRef"
        }, 
        "description" : {
          "type" : "string"
        }, 
        "federated" : {
          "type" : "boolean"
        }, 
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "kioskTimeOutInSecs" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "name" : {
          "type" : "string"
        }, 
        "sdmKey" : {
          "format" : "uuid", 
          "type" : "string"
        }, 
        "tileTimeoutInSecs" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "updatedDateTime" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Config Type" : {
      "description" : "Configuration type.", 
      "properties" : {
        "id" : {
          "description" : "The unique ID of the owner switch that defines the type of KPI or metric: 1 = standard (system-defined), 2 = custom (user-defined).", 
          "enum" : [ 0, 1 ], 
          "example" : 1, 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of the owner switch that defines the type of KPI or metric: 1 = standard (system-defined), 2 = custom (user-defined).", 
          "enum" : [ "Custom", "Standard" ], 
          "example" : "Standard", 
          "type" : "string"
        }
      }, 
      "required" : [ "id" ], 
      "type" : "object"
    }, 
    "Category Type Attribute" : {
      "description" : "Category type attribute.", 
      "properties" : {
        "attributes" : {
          "description" : "An array of attributes.", 
          "items" : {
            "$ref" : "#/definitions/Attribute"
          }, 
          "type" : "array"
        }, 
        "customAttributes" : {
          "description" : "An array of custom attributes.", 
          "items" : {
            "$ref" : "#/definitions/Custom Attribute"
          }, 
          "type" : "array"
        }, 
        "id" : {
          "description" : "The ID for the category type attribute.", 
          "example" : 180, 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of the category type attribute.", 
          "example" : "Miles Traveled", 
          "type" : "string"
        }
      }, 
      "required" : [ "attributes", "customAttributes", "id", "name" ], 
      "type" : "object"
    }, 
    "ActionType" : {
      "description" : "Model for Action Type.", 
      "properties" : {
        "actions" : {
          "description" : "A list of action template actions.", 
          "items" : {
            "$ref" : "#/definitions/actionTemplateActionTypeAction"
          }, 
          "type" : "array"
        }, 
        "id" : {
          "description" : "The ID of an action type.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of an action type.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Announcement Response" : {
      "description" : "Object containing information regarding an Announcement Response.", 
      "properties" : {
        "action" : {
          "$ref" : "#/definitions/actionTemplateActionTypeAction", 
          "description" : "The ID and name of the response action chosen by the employee.", 
          "readOnly" : true
        }, 
        "employee" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "The ID and qualifier of the employee who received and/or responded to the announcement message.", 
          "readOnly" : true
        }, 
        "id" : {
          "description" : "The ID of an announcement response.", 
          "format" : "int64", 
          "readOnly" : true, 
          "type" : "integer"
        }, 
        "sentDateTime" : {
          "description" : "The date and time an announcement response is sent in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "readOnly" : true, 
          "type" : "string"
        }, 
        "updatedDateTime" : {
          "description" : "The date and time an announcement response is updated in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "readOnly" : true, 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Announcement Where Request" : {
      "description" : "Model containing information regarding the where clause used for the retrieval of announcements.", 
      "properties" : {
        "dateRange" : {
          "$ref" : "#/definitions/CommonDateRange", 
          "description" : "An object representing date range criteria."
        }, 
        "recipients" : {
          "$ref" : "#/definitions/ObjectRefList", 
          "description" : "An object containing a collection of recipient employees."
        }
      }, 
      "required" : [ "dateRange", "recipients" ], 
      "type" : "object"
    }, 
    "APIException" : {
      "properties" : {
        "argsDetail" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "cause" : {
          "$ref" : "#/definitions/Throwable"
        }, 
        "errorCode" : {
          "type" : "string"
        }, 
        "errorsDetails" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "extraDetails" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "inputDetail" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "limitsDetail" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "locale" : {
          "$ref" : "#/definitions/Locale"
        }, 
        "localizedMessage" : {
          "type" : "string"
        }, 
        "message" : {
          "type" : "string"
        }, 
        "metadata" : {
          "type" : "object"
        }, 
        "multiOpsResults" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "overridable" : {
          "type" : "boolean"
        }, 
        "overrideHTTPStatusCode" : {
          "enum" : [ "OK", "CREATED", "ACCEPTED", "NO_CONTENT", "RESET_CONTENT", "PARTIAL_CONTENT", "MOVED_PERMANENTLY", "FOUND", "SEE_OTHER", "NOT_MODIFIED", "USE_PROXY", "TEMPORARY_REDIRECT", "BAD_REQUEST", "UNAUTHORIZED", "PAYMENT_REQUIRED", "FORBIDDEN", "NOT_FOUND", "METHOD_NOT_ALLOWED", "NOT_ACCEPTABLE", "PROXY_AUTHENTICATION_REQUIRED", "REQUEST_TIMEOUT", "CONFLICT", "GONE", "LENGTH_REQUIRED", "PRECONDITION_FAILED", "REQUEST_ENTITY_TOO_LARGE", "REQUEST_URI_TOO_LONG", "UNSUPPORTED_MEDIA_TYPE", "REQUESTED_RANGE_NOT_SATISFIABLE", "EXPECTATION_FAILED", "INTERNAL_SERVER_ERROR", "NOT_IMPLEMENTED", "BAD_GATEWAY", "SERVICE_UNAVAILABLE", "GATEWAY_TIMEOUT", "HTTP_VERSION_NOT_SUPPORTED" ], 
          "type" : "string"
        }, 
        "overrideMessage" : {
          "type" : "string"
        }, 
        "reportingAttribute" : {
          "type" : "string"
        }, 
        "reportingValue" : {
          "type" : "string"
        }, 
        "results" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "stackTrace" : {
          "items" : {
            "$ref" : "#/definitions/StackTraceElement"
          }, 
          "type" : "array"
        }, 
        "suppressed" : {
          "items" : {
            "$ref" : "#/definitions/Throwable"
          }, 
          "type" : "array"
        }, 
        "userParameters" : {
          "additionalProperties" : {
            "type" : "string"
          }, 
          "type" : "object"
        }
      }, 
      "type" : "object"
    }, 
    "API Integration Parameters" : {
      "description" : "The details like name and value of and API integration parameter. These are the configurable properties for an integration and the values provided are used during actual execution", 
      "properties" : {
        "description" : {
          "description" : "Detailed description about an API integration parameter.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "(Required) Name of the API integration parameter.", 
          "type" : "string"
        }
      }, 
      "required" : [ "name" ], 
      "type" : "object"
    }, 
    "Integration parameters" : {
      "description" : "Integration parameters whose values can be overridden by user", 
      "properties" : {
        "name" : {
          "description" : "Name of the parameter", 
          "type" : "string"
        }, 
        "value" : {
          "description" : "Value of the parameter. The value must correspond to the type of parameter. The following table contains the list of accepted values for each parameter type.<table border=\"1\" cellspacing=\"1\" cellpadding=\"1\" align=\"left\"> <tbody> <tr> <td> <p><strong>Parameter type</strong></p> </td> <td> <p><strong>Subtype</strong></p> </td> <td> <p><strong>Accepted values</strong></p> </td> </tr> <tr> <td> <p>Boolean</p> </td> <td>&nbsp;</td> <td> <p>true/false</p> </td> </tr> <tr> <td> <p>String</p> </td> <td>&nbsp;</td> <td> <p>Any non-blank string</p> </td> </tr> <tr> <td> <p>Number</p> </td> <td>&nbsp;</td> <td> <p>Any valid number</p> </td> </tr> <tr> <td> <p>Date</p> </td> <td>&nbsp;</td> <td> <p>ISO date format (yyyy-MM-dd)</p> </td> </tr> <tr> <td rowspan=\"2\"> <p>Time period</p> </td> <td> <p>Pay period</p> </td> <td> <p>{</p> <p>\"symbolicPeriod\": {</p> <p>\"id\": \"&lt;payperiod id&gt;\"</p> <p>}</p> <p>}</p> </td> </tr> <tr> <td> <p>Date range</p> </td> <td> <p>{</p> <p>\"startDate\": \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\",</p> <p>\"endDate\":\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\"</p> <p>}</p> </td> </tr> <tr> <td rowspan=\"3\"> <p>Hyperfind and Locations</p> </td> <td> <p>Hyperfind</p> </td> <td> <p>{</p> <p>\"hyperfind\": {</p> <p>\"id\": &ldquo;&lt;hyperfind id&gt;&rdquo;</p> <p>}</p> <p>}</p> </td> </tr> <tr> <td> <p>Saved locations</p> </td> <td> <p>{</p> <p>\"savedLocations\": {</p> <p>\"id\": &ldquo;&lt;saved locations id&gt;&rdquo;</p> <p>}</p> <p>}</p> </td> </tr> <tr> <td> <p>Selected locations</p> </td> <td> <p>{</p> <p>\"locations\": {</p> <p>\"ids\": [</p> <p>\"&lt;location id1&gt;\",</p> <p>\"&lt;location id2&gt;\"</p> <p>]</p> <p>}</p> <p>}</p> </td> </tr> <tr> <td><p>Date selector</p></td> <td>&nbsp;</td> <td> <p>{</p> <p>\"date\": &ldquo;&lt;Time Period End Date&gt;&rdquo;,</p> <p>\"offset\": &ldquo;&lt;Positive or negative number. Used for date calculation&gt;&rdquo;</p> <p>}</p> </td> </tr> </tbody> </table>", 
          "type" : "object"
        }
      }, 
      "required" : [ "name", "value" ], 
      "type" : "object"
    }, 
    "BatchEventWhereRequest" : {
      "description" : "Model for a Batch Job Where DTO.", 
      "properties" : {
        "batchEvents" : {
          "$ref" : "#/definitions/BatchEventWhereObject", 
          "description" : "The where criteria of a batch event in which the actual criteria for retrieving batch events is specified."
        }
      }, 
      "type" : "object"
    }, 
    "EventDetailsDTO" : {
      "description" : "Model for a Event Details.", 
      "properties" : {
        "description" : {
          "description" : "The description of a Batch Event.", 
          "type" : "string"
        }, 
        "manager" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "The id and name of a manager."
        }, 
        "name" : {
          "description" : "The name of a Batch Event.", 
          "type" : "string"
        }, 
        "roleAssignment" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "The id and name of a role."
        }
      }, 
      "type" : "object"
    }, 
    "EventOutputDTO" : {
      "description" : "Model for a Event Output.", 
      "properties" : {
        "emailList" : {
          "description" : "List of the email", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "ScheduleDTO" : {
      "description" : "Model for a Schedule.", 
      "properties" : {
        "betweenRuns" : {
          "description" : "Schedule betweenRuns day", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "dayOfMonth" : {
          "description" : "Selected day of months", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "endDate" : {
          "description" : "Schedule end date.", 
          "type" : "string"
        }, 
        "scheduleType" : {
          "description" : "The type of schedule", 
          "type" : "string"
        }, 
        "select" : {
          "description" : "The selected months name or days name.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "startDate" : {
          "description" : "Schedule start date.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "BatchGroupWhere" : {
      "description" : "Model for a Batch Job Where DTO.", 
      "properties" : {
        "batchGroups" : {
          "$ref" : "#/definitions/BatchGroupWhereObject", 
          "description" : "The where criteria of a batch group in which the actual criteria for retrieving batch groups is specified."
        }
      }, 
      "type" : "object"
    }, 
    "WFPWhere" : {
      "description" : "Model for a Batch Job Where DTO.", 
      "properties" : {
        "createdBy" : {
          "description" : "The created by of a Batch Job.", 
          "type" : "string"
        }, 
        "group" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "The group  of a Batch Job"
        }, 
        "includeBatchDetails" : {
          "description" : "A Boolean indicator of whether or not a include batch details.", 
          "type" : "boolean"
        }, 
        "launchDate" : {
          "description" : "The launch date of a  Batch Job.", 
          "type" : "string"
        }, 
        "status" : {
          "description" : "The status of a Batch Job.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "BatchJobItemResponseDTO" : {
      "properties" : {
        "actionType" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "context" : {
          "type" : "string"
        }, 
        "endDateTime" : {
          "type" : "string"
        }, 
        "errorText" : {
          "type" : "string"
        }, 
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "type" : "string"
        }, 
        "orderNumber" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "resourceRating" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "retryCount" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "startDateTime" : {
          "type" : "string"
        }, 
        "status" : {
          "format" : "int32", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "WFPBatchTaskItem" : {
      "description" : "Model for a Batch Task Item.", 
      "properties" : {
        "actionName" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "The action name of a Batch Task Item."
        }, 
        "actionType" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "The action type of a Batch Task Item."
        }, 
        "parameterString" : {
          "description" : "The parameter String of a Batch Task Item.", 
          "type" : "string"
        }, 
        "sequenceNumber" : {
          "description" : "The sequence number of a Batch Task Item.", 
          "format" : "int32", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "BatchTaskWhereRequest" : {
      "description" : "Model for a Batch Job Where DTO.", 
      "properties" : {
        "batchTasks" : {
          "$ref" : "#/definitions/BatchTaskWhereObject", 
          "description" : "The group  of a Batch Tasks"
        }
      }, 
      "type" : "object"
    }, 
    "MarkerType" : {
      "description" : "The marker type model, which contains change marker types. Each marker type contains all its attributes.", 
      "properties" : {
        "active" : {
          "description" : "A Boolean indicator expressed as a string of whether or not a marker type is active.", 
          "example" : "true", 
          "type" : "string"
        }, 
        "cadence" : {
          "description" : "An object containing the default cadence and a list of all possible cadences for the events generated for a marker type. For example, 15m represents fifteen minutes.", 
          "properties" : {
            "default" : {
              "description" : "The default cadence.", 
              "example" : "15m", 
              "type" : "string"
            }, 
            "options" : {
              "description" : "A list of available cadences for the events generated for a marker type. For example: 1d represents one day.", 
              "items" : {
                "example" : "1d", 
                "type" : "string"
              }, 
              "type" : "array"
            }
          }, 
          "type" : "object"
        }, 
        "category" : {
          "description" : "The name of the category associated with a marker type.", 
          "example" : "timecard", 
          "type" : "string"
        }, 
        "markerName" : {
          "description" : "The name of a marker type.", 
          "example" : "timekeeping_timecard_punch", 
          "type" : "string"
        }, 
        "markerTypeId" : {
          "description" : "The ID of a marker type.", 
          "example" : 1, 
          "type" : "number"
        }, 
        "objectType" : {
          "description" : "The name of the object type associated with a marker type.", 
          "example" : "emp", 
          "type" : "string"
        }, 
        "product" : {
          "description" : "The name of the product associated with a marker type.", 
          "example" : "timekeeping", 
          "type" : "string"
        }, 
        "resourceUrl" : {
          "description" : "The resource URL associated with a marker type.", 
          "example" : "/timekeeping/api", 
          "type" : "string"
        }, 
        "retention" : {
          "description" : "An object containing the default retention period and a list of all possible retention periods for the events generated for a marker type. For example, 7d represents seven days.", 
          "properties" : {
            "default" : {
              "description" : "The default retention period.", 
              "example" : "30d", 
              "type" : "string"
            }, 
            "options" : {
              "description" : "A list of available retention periods for the events generated for a marker type. For example: 7d.", 
              "items" : {
                "example" : "7d", 
                "type" : "string"
              }, 
              "type" : "array"
            }
          }, 
          "type" : "object"
        }, 
        "subcategory" : {
          "description" : "The name of the subcategory associated with a marker type.", 
          "example" : "punch", 
          "type" : "string"
        }
      }, 
      "required" : [ "markerTypeId", "product", "category", "subcategory", "markerName", "objectType", "active", "retention", "cadence", "resourceUrl" ], 
      "type" : "object"
    }, 
    "MarkerEvent" : {
      "description" : "The marker event model.", 
      "properties" : {
        "applyDate" : {
          "description" : "The effective date of a marker event in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "example" : "2021-01-15", 
          "type" : "string"
        }, 
        "markerTypeId" : {
          "description" : "The ID of a marker type.", 
          "example" : 1, 
          "type" : "string"
        }, 
        "objectId" : {
          "description" : "The ID of an object associated with a marker type.", 
          "example" : 100, 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "SubscriptionItem" : {
      "properties" : {
        "cadence" : {
          "description" : "The default cadence for the events generated for a marker type. For example: 15m.", 
          "example" : "15m", 
          "type" : "string"
        }, 
        "endTime" : {
          "description" : "The end date and time of a subscription in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "example" : "3000-00-00T00.00.00.000Z", 
          "type" : "string"
        }, 
        "retention" : {
          "description" : "The default retention period for the events generated for a marker type. For example: 7d.", 
          "example" : "7d", 
          "type" : "string"
        }, 
        "startTime" : {
          "description" : "The start date and time of a subscription in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "example" : "2021-01-15T10.30.50.000Z", 
          "type" : "string"
        }, 
        "updateTime" : {
          "description" : "The update date and time of a subscription in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).", 
          "example" : "2021-01-15T10.30.50.000Z", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "ErrorRef" : {
      "properties" : {
        "errorCode" : {
          "example" : "CIS-2020", 
          "type" : "string"
        }, 
        "message" : {
          "example" : "Bad Request.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Additional Details Request" : {
      "description" : "The Custom Errors Details request object model.", 
      "properties" : {
        "description" : {
          "description" : "The description of the custom error that includes details of the error to help troubleshoot, or the steps to resolve.", 
          "type" : "string"
        }, 
        "key" : {
          "description" : "The key of a custom error details object representing the domain entity.", 
          "type" : "string"
        }, 
        "message" : {
          "description" : "A message representing the batch that was processed or the action that was taken.", 
          "type" : "string"
        }, 
        "value" : {
          "description" : "The actual error that resulted in a failure or business disqualification.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "IhubFalconProcesScheduleResBean" : {
      "description" : "The result returned when an integration is sumbitted for schedule", 
      "properties" : {
        "id" : {
          "description" : "Unique Id for the integration schedule", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "integrationId" : {
          "description" : "The ID of the installed integration that is the basis of this integration schedule", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "integrationName" : {
          "description" : "Name of the installed integration that is the basis of this integration schedule", 
          "type" : "string"
        }, 
        "integrationParameters" : {
          "description" : "A list of the integration parameters that have custom values.", 
          "items" : {
            "$ref" : "#/definitions/Integration parameters"
          }, 
          "type" : "array"
        }, 
        "name" : {
          "description" : "A unique integration schedule name to make it easier to identify the schedule of an integration", 
          "type" : "string"
        }, 
        "scheduledInfo" : {
          "description" : "Information about the integration schedule.", 
          "type" : "string"
        }
      }, 
      "required" : [ "id", "integrationName", "integrationParameters", "name", "scheduledInfo" ], 
      "type" : "object"
    }, 
    "RunDetails" : {
      "description" : "Detailed information about the event run.", 
      "properties" : {
        "errorText" : {
          "description" : "Error message", 
          "type" : "string"
        }, 
        "jobId" : {
          "description" : "Unique ID for the job.", 
          "type" : "string"
        }, 
        "lastManualRun" : {
          "description" : "Date of the most recent, manually triggered event run.", 
          "type" : "string"
        }, 
        "lastRun" : {
          "description" : "Date of the most recent scheduled event run.", 
          "type" : "string"
        }, 
        "modifiedBy" : {
          "description" : "Person who modified the event run.", 
          "type" : "string"
        }, 
        "modifiedDate" : {
          "description" : "Date of the modification.", 
          "type" : "string"
        }, 
        "nextRun" : {
          "description" : "Next date for the scheduled event run.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "SchedulingDetails" : {
      "description" : "The event scheduling configuration parameters. The following table contains the list of accepted values for frequency type, frequency and interval.", 
      "properties" : {
        "endDate" : {
          "description" : "The date when schedule should execute for the last time.", 
          "type" : "string"
        }, 
        "endTime" : {
          "description" : "The time when schedule should execute for the last time.", 
          "type" : "string"
        }, 
        "forever" : {
          "description" : "If no end date and time is specified, then the scheule runs forever.", 
          "type" : "boolean"
        }, 
        "frequency" : {
          "description" : "Frequency defines the specific days when a schedule should run based on whether it is scheduled Monthly or Weekly.", 
          "type" : "string"
        }, 
        "frequencyType" : {
          "description" : "It determines how often should a schedule is to be run i.e. Once, Monthly, Weekly, Daily or Hourly", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "interval" : {
          "description" : "The time to skip between two successive runs. Its definition varies depending on the frequency type selected.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "startDate" : {
          "description" : "The date when the scheduled integration executes for the first time.", 
          "type" : "string"
        }, 
        "startTime" : {
          "description" : "The time when the scheduled integration executes for the first time.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "User Parameter Details" : {
      "description" : "Integration parameters whose values can be overridden by user", 
      "properties" : {
        "name" : {
          "description" : "Name of the parameter", 
          "type" : "string"
        }, 
        "type" : {
          "description" : "The type of value supported by this parameter.", 
          "type" : "string"
        }, 
        "value" : {
          "description" : "Value of the parameter. The value must correspond to the type of parameter.", 
          "type" : "object"
        }
      }, 
      "type" : "object"
    }, 
    "Ihub Process Parameter Bean" : {
      "description" : "The integration process parameter model.", 
      "properties" : {
        "defaultValue" : {
          "description" : "<p>The default values for various types of parameters.</p><p>For the Boolean type:</p><ul><li>true</li><li>false</li></ul><p>For the HyperFind type, the Hyperfind ID is passed. Valid Hyperfind IDs include:</p><ul><li>203</li><li>1</li><li>-3</li><li>-10</li><li>-9</li><li>253</li><li>103</li><li>2</li><li>205</li><li>206</li><li>3</li><li>204</li><li>207</li><li>303</li><li>53</li><li>54</li><li>55</li><li>353</li><li>-5001</li></ul><p>For the time period end date type parameter, default values include:</p><ul><li>Any Day</li><li>Yesterday</li><li>2 Days ago</li><li>3 Days Ago</li><li>4 Days Ago</li></ul><p>For the date type parameter, default values include:</p><ul>Any Valid Date in YYYY-MM-DD Format</ul><p>For the list type parameter, default values include:</p><ul>A listname for a list created in Dimension.</ul>", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "The name of a process parameter.", 
          "type" : "string"
        }, 
        "parameterType" : {
          "description" : "<p>The type of process parameter. Valid values include:</p><ul><li>Boolean</li><li>Date</li><li>Dropdown</li><li>HyperFind</li><li>List</li><li>Number</li><li>Text</li><li>Time</li><li>Time period</li><li>Time Period End date selector</li></ul>", 
          "type" : "string"
        }, 
        "templateParameter" : {
          "description" : "The template parameter, which takes any template parameter name from the list of template parameters. Template parameters vary depending on the integration template used.", 
          "type" : "string"
        }, 
        "userPrompted" : {
          "description" : "An Boolean indicator of whether or not a process parameter is user-prompted when an integration is executed.", 
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "Ihub Connection Bean" : {
      "description" : "The SSH File Transfer Protocol (SFTP) Connection model.", 
      "properties" : {
        "id" : {
          "description" : "The ID of an SFTP Connection.", 
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "Integration Connection Type" : {
      "description" : "Connection type details.", 
      "properties" : {
        "id" : {
          "description" : "connection type id", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "connection type name", 
          "type" : "string"
        }, 
        "typeName" : {
          "description" : "type name", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "DB Connnection" : {
      "description" : "Database connection details.", 
      "properties" : {
        "dbName" : {
          "description" : "database name", 
          "type" : "string"
        }, 
        "hostName" : {
          "description" : "database host name", 
          "type" : "string"
        }, 
        "hostPort" : {
          "description" : "database host port", 
          "type" : "string"
        }, 
        "password" : {
          "description" : "password to connect to database", 
          "type" : "string"
        }, 
        "userName" : {
          "description" : "user name to connect to database", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "SFTP Connnection" : {
      "description" : "SFTP connection details.", 
      "properties" : {
        "destinationDir" : {
          "description" : "sftp destination directory", 
          "type" : "string"
        }, 
        "hostName" : {
          "description" : "sftp host name", 
          "type" : "string"
        }, 
        "hostPort" : {
          "description" : "sftp host port", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "password" : {
          "description" : "password to connect to sftp host", 
          "type" : "string"
        }, 
        "userName" : {
          "description" : "user name to connect to sftp host", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "API Process Callback Details" : {
      "description" : "API Process Callback Details.", 
      "properties" : {
        "callbackmessages" : {
          "description" : "callback messages", 
          "type" : "string"
        }, 
        "executionid" : {
          "description" : "execution identifier", 
          "type" : "string"
        }, 
        "extendedstatus" : {
          "description" : "Additional information about the current state of an integration run after the run started.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "callback identifier", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "runsummary" : {
          "description" : "run summary", 
          "type" : "string"
        }, 
        "status" : {
          "description" : "callback status", 
          "type" : "string"
        }
      }, 
      "required" : [ "executionid", "id", "status" ], 
      "type" : "object"
    }, 
    "Batch Process Callback Details" : {
      "description" : "Batch Process Callback Details.", 
      "properties" : {
        "callbackmessages" : {
          "description" : "callback messages", 
          "type" : "string"
        }, 
        "executionid" : {
          "description" : "execution identifier", 
          "type" : "string"
        }, 
        "extendedstatus" : {
          "description" : "Additional information about the current state of an integration run after the run started.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "callback identifier", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "runsummary" : {
          "description" : "run summary", 
          "type" : "string"
        }, 
        "status" : {
          "description" : "callback status", 
          "type" : "string"
        }
      }, 
      "required" : [ "executionid", "id", "status" ], 
      "type" : "object"
    }, 
    "IhubFalconProcesScheduleReqBean" : {
      "description" : "Data required for scheduling of an integration", 
      "properties" : {
        "integrationParameters" : {
          "description" : "A list of the integration parameters that have custom values.", 
          "items" : {
            "$ref" : "#/definitions/Integration parameters"
          }, 
          "type" : "array"
        }, 
        "name" : {
          "description" : "A unique integration schedule name to make it easier to identify the schedule of that integration", 
          "type" : "string"
        }, 
        "scheduledInfo" : {
          "description" : "The information related to a scheduled integration run.", 
          "type" : "string"
        }
      }, 
      "required" : [ "integrationParameters", "name", "scheduledInfo" ], 
      "type" : "object"
    }, 
    "DataView" : {
      "properties" : {
        "columns" : {
          "items" : {
            "$ref" : "#/definitions/DataViewColumn"
          }, 
          "type" : "array"
        }, 
        "currencyType" : {
          "enum" : [ "PREFERRED_CURRENCY", "ASSIGNED_CURRENCY" ], 
          "type" : "string"
        }, 
        "description" : {
          "type" : "string"
        }, 
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "label" : {
          "type" : "string"
        }, 
        "name" : {
          "type" : "string"
        }, 
        "type" : {
          "enum" : [ "LOCATION", "EMPLOYEE", "EMP_TIME_SERIES", "ORGANIZATION_TIME_SERIES" ], 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "ReportObjectRef1" : {
      "description" : "The object reference contains the id and qualifier.", 
      "properties" : {
        "id" : {
          "description" : "The unique ID of a report object.", 
          "type" : "string"
        }, 
        "qualifier" : {
          "description" : "The qualifier of a report object.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Reporting Data Element property" : {
      "description" : "Model providing a key and value for each parameterized data element property.", 
      "properties" : {
        "key" : {
          "description" : "The key of a property for the reporting data element.", 
          "readOnly" : true, 
          "type" : "string"
        }, 
        "value" : {
          "description" : "The value of a property for the reporting data element.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Data Element Param Property" : {
      "description" : "Model providing the details for selected values for parameterized data elements report parameters.", 
      "properties" : {
        "paramName" : {
          "description" : "The name of the data element parameter.", 
          "type" : "string"
        }, 
        "propertyValues" : {
          "description" : "A list of property values for the data element parameter.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Reporting From" : {
      "description" : "It provides details on type of data view, timeframe, hyperfind or employee context.", 
      "properties" : {
        "dataSource" : {
          "$ref" : "#/definitions/Reporting Data Source"
        }, 
        "employeeSet" : {
          "$ref" : "#/definitions/Reporting Data Source"
        }, 
        "locationSet" : {
          "$ref" : "#/definitions/ReportingOrgDataSource"
        }, 
        "view" : {
          "description" : "The type of report view. For example, people (EMP) or ORGANIZATION.", 
          "enum" : [ "0", "1", "2", "3", "4", "5" ], 
          "type" : "string"
        }, 
        "workUnits" : {
          "$ref" : "#/definitions/ReportingWorkUnitDataSource", 
          "description" : "The reporting work unit data source."
        }
      }, 
      "type" : "object"
    }, 
    "Reporting Data Element Id" : {
      "description" : "It provides the details of requested data element id.", 
      "properties" : {
        "alias" : {
          "description" : "The unique alias that identifies the reporting data element.", 
          "type" : "string"
        }, 
        "key" : {
          "description" : "The unique ID of the reporting data element.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Reporting Request Options" : {
      "description" : "Model including the request information such as type of response, sub request, and cached response.", 
      "properties" : {
        "currencyType" : {
          "description" : "The currency type associated with a report.", 
          "type" : "string"
        }, 
        "extended" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "description" : "A map of parameter key-value filters to apply at the domain-service layer instead of the data-elements layer.", 
          "type" : "object"
        }, 
        "includeColumnTotals" : {
          "description" : "A Boolean indicator of whether or not to include column totals.", 
          "type" : "boolean"
        }, 
        "refresh" : {
          "description" : "A Boolean indicator of whether or not to refresh values from the cache.", 
          "type" : "boolean"
        }, 
        "requestTag" : {
          "description" : "The unique ID of a request for multiple, partial-data requests.", 
          "type" : "string"
        }, 
        "responseType" : {
          "description" : "The response type of the response: TREE or GRID.", 
          "enum" : [ "TREE", "GRID" ], 
          "type" : "string"
        }, 
        "secondaryRequestTag" : {
          "description" : "The unique ID for a partial request.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Reporting Data Element" : {
      "description" : "It provides the details of requested data element.", 
      "properties" : {
        "alias" : {
          "description" : "The unique alias that identifies the reporting data element.", 
          "type" : "string"
        }, 
        "key" : {
          "description" : "The unique ID of the reporting data element.", 
          "type" : "string"
        }, 
        "properties" : {
          "description" : "A list of properties for the reporting data element.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Reporting Sort" : {
      "description" : "It provides the details to sort the data response based on data element and sort direction.", 
      "properties" : {
        "alias" : {
          "description" : "The unique alias that identifies the reporting data element.", 
          "type" : "string"
        }, 
        "key" : {
          "description" : "The unique ID of the reporting data element.", 
          "type" : "string"
        }, 
        "sortDirection" : {
          "description" : "The sort direction of the reporting data elements. For example, ascending (ASC) or descending (DESC).", 
          "enum" : [ "ASC", "DESC" ], 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Reporting Filter" : {
      "description" : "Model providing the details of filter requested for data element.", 
      "properties" : {
        "alias" : {
          "description" : "The unique alias that identifies the reporting data element.", 
          "type" : "string"
        }, 
        "key" : {
          "description" : "The unique ID of the reporting data element.", 
          "type" : "string"
        }, 
        "operator" : {
          "description" : "The operator for the report filter. For example, greater than (GT), less than (LT), and equals (EQ).", 
          "enum" : [ "EQUAL_TO", "NOT_EQUAL_TO", "STARTS_WITH", "NOT_STARTS", "LIKE", "NOT_LIKE", "IN", "NOT_IN", "IS_NULL", "IS_NOT_NULL", "BETWEEN", "NOT_BETWEEN", "GREATER_THAN", "LESS_THAN", "GREATER_THAN_OR_EQUAL_TO", "LESS_THAN_OR_EQUAL_TO", "ALL", "YES", "NO" ], 
          "type" : "string"
        }, 
        "properties" : {
          "description" : "A list of properties for the reporting data element.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "values" : {
          "description" : "The values to filter in reports.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Reporting Data Content" : {
      "description" : "Model including the list of data elements row data.", 
      "properties" : {
        "dataServiceElementList" : {
          "description" : "A list of individual data elements with data.", 
          "items" : {
            "$ref" : "#/definitions/Data Service Element"
          }, 
          "type" : "array"
        }, 
        "entityType" : {
          "description" : "The type of entity, such as EMP or ORGANIZATION.", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "An ID for a row of data. When used with an EMP-type Dataview, this ID is the Person ID of an employee. The Person ID is an ID that uniquely identifies an employee. Person ID is the same as <code>employeeId</code> and is not a person number.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "ReportingMetadata" : {
      "properties" : {
        "columns" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "currencyCode" : {
          "type" : "string"
        }, 
        "currentAsOfDate" : {
          "type" : "string"
        }, 
        "currentAsOfDateStatus" : {
          "type" : "string"
        }, 
        "errorMessage" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Definition Type" : {
      "description" : "Model providing details on definition type for report and dataobject supported in system, such as STANDARD, CUSTOM, and STANDARD READ ONLY.", 
      "properties" : {
        "description" : {
          "description" : "The detailed description of corresponding definition type.", 
          "example" : "Description", 
          "position" : 3, 
          "type" : "string"
        }, 
        "label" : {
          "description" : "The label of the report definition type.", 
          "example" : "caption", 
          "position" : 1, 
          "type" : "string"
        }, 
        "name" : {
          "description" : "The unique name of the report definition type.", 
          "example" : "xname", 
          "position" : 2, 
          "type" : "string"
        }
      }, 
      "required" : [ "name" ], 
      "type" : "object"
    }, 
    "Report APIOutput Error" : {
      "description" : "The Report output error describes the details of failed report runs.", 
      "properties" : {
        "detail" : {
          "description" : "The description associated with failed report runs.", 
          "type" : "string"
        }, 
        "errorCode" : {
          "description" : "The error code associated with failed report runs.", 
          "type" : "string"
        }, 
        "message" : {
          "description" : "The error message associated with failed report runs.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "PersonDetail" : {
      "description" : "Model providing the details of an employee including fullname and person number.", 
      "properties" : {
        "id" : {
          "description" : "An ID that uniquely identifies an employee in a report. This ID is the same as <code>employeeId</code> and is not a person number.", 
          "type" : "string"
        }, 
        "name" : {
          "description" : "The Full name of an employee in a report.", 
          "type" : "string"
        }
      }, 
      "required" : [ "id", "name" ], 
      "type" : "object"
    }, 
    "NewCookie" : {
      "properties" : {
        "comment" : {
          "type" : "string"
        }, 
        "domain" : {
          "type" : "string"
        }, 
        "expiry" : {
          "format" : "date-time", 
          "type" : "string"
        }, 
        "httpOnly" : {
          "type" : "boolean"
        }, 
        "maxAge" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "name" : {
          "type" : "string"
        }, 
        "path" : {
          "type" : "string"
        }, 
        "secure" : {
          "type" : "boolean"
        }, 
        "value" : {
          "type" : "string"
        }, 
        "version" : {
          "format" : "int32", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "EntityTag" : {
      "properties" : {
        "value" : {
          "type" : "string"
        }, 
        "weak" : {
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "Locale" : {
      "properties" : {
        "country" : {
          "type" : "string"
        }, 
        "displayCountry" : {
          "type" : "string"
        }, 
        "displayLanguage" : {
          "type" : "string"
        }, 
        "displayName" : {
          "type" : "string"
        }, 
        "displayScript" : {
          "type" : "string"
        }, 
        "displayVariant" : {
          "type" : "string"
        }, 
        "extensionKeys" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "iso3Country" : {
          "type" : "string"
        }, 
        "iso3Language" : {
          "type" : "string"
        }, 
        "language" : {
          "type" : "string"
        }, 
        "script" : {
          "type" : "string"
        }, 
        "unicodeLocaleAttributes" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "unicodeLocaleKeys" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "variant" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Link" : {
      "properties" : {
        "params" : {
          "additionalProperties" : {
            "type" : "string"
          }, 
          "type" : "object"
        }, 
        "rel" : {
          "type" : "string"
        }, 
        "rels" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "title" : {
          "type" : "string"
        }, 
        "type" : {
          "type" : "string"
        }, 
        "uri" : {
          "format" : "uri", 
          "type" : "string"
        }, 
        "uriBuilder" : {
          "$ref" : "#/definitions/UriBuilder"
        }
      }, 
      "type" : "object"
    }, 
    "MediaType" : {
      "properties" : {
        "parameters" : {
          "additionalProperties" : {
            "type" : "string"
          }, 
          "type" : "object"
        }, 
        "subtype" : {
          "type" : "string"
        }, 
        "type" : {
          "type" : "string"
        }, 
        "wildcardSubtype" : {
          "type" : "boolean"
        }, 
        "wildcardType" : {
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "StatusType" : {
      "properties" : {
        "family" : {
          "enum" : [ "INFORMATIONAL", "SUCCESSFUL", "REDIRECTION", "CLIENT_ERROR", "SERVER_ERROR", "OTHER" ], 
          "type" : "string"
        }, 
        "reasonPhrase" : {
          "type" : "string"
        }, 
        "statusCode" : {
          "format" : "int32", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "Object Ref" : {
      "description" : "The HCA object reference object model.", 
      "properties" : {
        "id" : {
          "description" : "The ID associated with an object reference.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name (qualifier) of a report object.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "DynamicParameterModel" : {
      "description" : "Parameter framework model description.", 
      "properties" : {
        "name" : {
          "description" : "The name of a parameter.", 
          "type" : "string"
        }, 
        "value" : {
          "description" : "The value of a parameter.", 
          "type" : "object"
        }
      }, 
      "required" : [ "name" ], 
      "type" : "object"
    }, 
    "SchedulingEventDetails" : {
      "description" : "Detailed information about the schedule", 
      "properties" : {
        "endDateTime" : {
          "description" : "The end date and time", 
          "type" : "string"
        }, 
        "endTime" : {
          "description" : "End time", 
          "type" : "string"
        }, 
        "forever" : {
          "description" : "If the end time of the schedule is not specified, the end time is forever.", 
          "type" : "boolean"
        }, 
        "frequency" : {
          "description" : "Frequency of the event.", 
          "type" : "string"
        }, 
        "frequencyType" : {
          "description" : "Type of frequency. Examples: monthly, weekly, daily.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "interval" : {
          "description" : "Time interval between event runs.", 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "startDateTime" : {
          "description" : "The start date and time", 
          "type" : "string"
        }, 
        "startTime" : {
          "description" : "Start time", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Generic Target" : {
      "description" : "Core Fixed Target.", 
      "properties" : {
        "effectiveDate" : {
          "description" : "Target Effective Date.", 
          "example" : "2018-01-01", 
          "format" : "date", 
          "type" : "string"
        }, 
        "expirationDate" : {
          "description" : "Target Expiry Date.", 
          "example" : "3000-01-01", 
          "format" : "date", 
          "type" : "string"
        }, 
        "fridayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Core Fixed target pay Friday target."
        }, 
        "id" : {
          "description" : "Target ID", 
          "example" : 1, 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "mondayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Core Fixed target pay Monday target."
        }, 
        "name" : {
          "description" : "Target Name.", 
          "type" : "string"
        }, 
        "payperiodTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Core Fixed target pay period target."
        }, 
        "refSourceSymbolicNameForCompute" : {
          "description" : "Target source function name.", 
          "example" : "VOLUME", 
          "type" : "string"
        }, 
        "saturdayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Core Fixed target pay Saturday target."
        }, 
        "sundayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Core Fixed target pay Sunday target."
        }, 
        "targetSubType" : {
          "description" : "Target Sub Type.", 
          "example" : "abstractTarget", 
          "type" : "string"
        }, 
        "thursdayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Core Fixed target pay Thursday target."
        }, 
        "tuesdayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Core Fixed target pay Tuesday target."
        }, 
        "wednesdayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Core Fixed target pay Wednesday target."
        }
      }, 
      "required" : [ "effectiveDate", "expirationDate", "fridayTarget", "mondayTarget", "payperiodTarget", "refSourceSymbolicNameForCompute", "saturdayTarget", "sundayTarget", "targetSubType", "thursdayTarget", "tuesdayTarget", "wednesdayTarget" ], 
      "type" : "object"
    }, 
    "Ratio Target" : {
      "description" : "Core Ratio  Target", 
      "properties" : {
        "effectiveDate" : {
          "description" : "Target Effective Date.", 
          "example" : "2018-01-01", 
          "format" : "date", 
          "type" : "string"
        }, 
        "expirationDate" : {
          "description" : "Target Expiry Date.", 
          "example" : "3000-01-01", 
          "format" : "date", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "Target ID", 
          "example" : 1, 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "Target Name.", 
          "type" : "string"
        }, 
        "refSourceSymbolicNameForCompute" : {
          "description" : "Target source function name.", 
          "example" : "VOLUME", 
          "type" : "string"
        }, 
        "targetSubType" : {
          "description" : "Target Sub Type.", 
          "example" : "abstractTarget", 
          "type" : "string"
        }, 
        "value" : {
          "description" : "Core Ratio  Target value", 
          "example" : 8, 
          "type" : "number"
        }
      }, 
      "required" : [ "effectiveDate", "expirationDate", "refSourceSymbolicNameForCompute", "targetSubType", "value" ], 
      "type" : "object"
    }, 
    "ReferenceParam" : {
      "properties" : {
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "qualifier" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Fixed Target" : {
      "description" : "HCA fixed target.", 
      "properties" : {
        "adjustmentFlag" : {
          "description" : "HCA fixed target Adjustment flag.", 
          "example" : false, 
          "type" : "boolean"
        }, 
        "effectiveDate" : {
          "description" : "Target Effective Date.", 
          "example" : "2018-01-01", 
          "format" : "date", 
          "type" : "string"
        }, 
        "expirationDate" : {
          "description" : "Target Expiry Date.", 
          "example" : "3000-01-01", 
          "format" : "date", 
          "type" : "string"
        }, 
        "fridayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "HCA fixed Friday target."
        }, 
        "id" : {
          "description" : "Target ID", 
          "example" : 1, 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "mondayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "HCA fixed Monday target."
        }, 
        "name" : {
          "description" : "Target Name.", 
          "type" : "string"
        }, 
        "refSourceSymbolicNameForCompute" : {
          "description" : "Target source function name.", 
          "example" : "VOLUME", 
          "type" : "string"
        }, 
        "saturdayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "HCA fixed Saturday target."
        }, 
        "sundayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "HCA fixed Sunday target."
        }, 
        "targetSubType" : {
          "description" : "Target Sub Type.", 
          "example" : "abstractTarget", 
          "type" : "string"
        }, 
        "thursdayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "HCA fixed Thursday target."
        }, 
        "tuesdayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "HCA fixed Tuesday target."
        }, 
        "wednesdayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "HCA fixed Wednesday target."
        }
      }, 
      "required" : [ "adjustmentFlag", "effectiveDate", "expirationDate", "fridayTarget", "mondayTarget", "refSourceSymbolicNameForCompute", "saturdayTarget", "sundayTarget", "targetSubType", "thursdayTarget", "tuesdayTarget", "wednesdayTarget" ], 
      "type" : "object"
    }, 
    "Variable Target" : {
      "description" : "HCA variable target.", 
      "properties" : {
        "effectiveDate" : {
          "description" : "Target Effective Date.", 
          "example" : "2018-01-01", 
          "format" : "date", 
          "type" : "string"
        }, 
        "expirationDate" : {
          "description" : "Target Expiry Date.", 
          "example" : "3000-01-01", 
          "format" : "date", 
          "type" : "string"
        }, 
        "fridayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "HCA variable Friday target."
        }, 
        "id" : {
          "description" : "Target ID", 
          "example" : 1, 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "mondayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "HCA variable Monday target."
        }, 
        "name" : {
          "description" : "Target Name.", 
          "type" : "string"
        }, 
        "payperiodTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "HCA variable pay-period target."
        }, 
        "refSourceSymbolicNameForCompute" : {
          "description" : "Target source function name.", 
          "example" : "VOLUME", 
          "type" : "string"
        }, 
        "saturdayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "HCA variable Saturday target."
        }, 
        "sundayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "HCA variable Sunday target."
        }, 
        "targetSubType" : {
          "description" : "Target Sub Type.", 
          "example" : "abstractTarget", 
          "type" : "string"
        }, 
        "thursdayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "HCA variable Thursday target."
        }, 
        "tuesdayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "HCA variable Tuesday target."
        }, 
        "wednesdayTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "HCA variable Wednesday target."
        }
      }, 
      "required" : [ "effectiveDate", "expirationDate", "fridayTarget", "mondayTarget", "payperiodTarget", "refSourceSymbolicNameForCompute", "saturdayTarget", "sundayTarget", "targetSubType", "thursdayTarget", "tuesdayTarget", "wednesdayTarget" ], 
      "type" : "object"
    }, 
    "Target Function" : {
      "description" : "Target Function.", 
      "properties" : {
        "kpis" : {
          "$ref" : "#/definitions/Target Function params", 
          "description" : "Target KPI parameters."
        }, 
        "metrics" : {
          "$ref" : "#/definitions/Target Function params", 
          "description" : "Target Metric parameters."
        }, 
        "metricsets" : {
          "$ref" : "#/definitions/Target Function params", 
          "description" : "Target Metric set parameters."
        }
      }, 
      "type" : "object"
    }, 
    "Target Location" : {
      "description" : "Target Location.", 
      "properties" : {
        "orgs" : {
          "$ref" : "#/definitions/Target Location Param", 
          "description" : "Target assigned organization", 
          "example" : "orgs"
        }, 
        "workunits" : {
          "$ref" : "#/definitions/Target Location Param", 
          "description" : "Target assigned workunits.", 
          "example" : "workunit"
        }
      }, 
      "type" : "object"
    }, 
    "KpifBuilderThreshold" : {
      "description" : "Threshold for Targets.", 
      "properties" : {
        "id" : {
          "description" : "Threshold id.", 
          "example" : 1, 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "indicatorText" : {
          "description" : "Threshold Text indicator.", 
          "example" : "1", 
          "type" : "string"
        }, 
        "maxValue" : {
          "description" : "Threshold maximun value, if applicable.", 
          "example" : 8, 
          "type" : "number"
        }, 
        "name" : {
          "description" : "Threshold Name.", 
          "type" : "string"
        }, 
        "operatorId" : {
          "description" : "Threshold operator.", 
          "example" : 1, 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "value" : {
          "description" : "Threshold value.", 
          "example" : 8, 
          "type" : "number"
        }
      }, 
      "required" : [ "id", "indicatorText", "maxValue", "operatorId", "value" ], 
      "type" : "object"
    }, 
    "Target Threshold Export" : {
      "description" : "Target Threshold Export.", 
      "properties" : {
        "adjustmentFlag" : {
          "description" : "Target adjustment flag.", 
          "example" : false, 
          "type" : "boolean"
        }, 
        "effectiveDate" : {
          "description" : "Target effective date.", 
          "example" : "2018-01-01", 
          "format" : "date", 
          "type" : "string"
        }, 
        "fridayFixTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Friday fixed target value."
        }, 
        "fridayVarTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Friday variable target value."
        }, 
        "mondayFixTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Monday fixed target value."
        }, 
        "mondayVarTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Monday variable target value."
        }, 
        "payPeriodVarTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Payperiod vaariable target value."
        }, 
        "saturdayFixTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Saturday fixed target value."
        }, 
        "saturdayVarTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Saturday  variable target value."
        }, 
        "sundayFixTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Sunday fixed target value."
        }, 
        "sundayVarTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Sunday variable target value."
        }, 
        "targetFunctionName" : {
          "description" : "Target function name.", 
          "example" : "WU-1", 
          "type" : "string"
        }, 
        "targetFunctionType" : {
          "description" : "Target function Type.", 
          "example" : "METRICSET", 
          "type" : "string"
        }, 
        "targetLocationName" : {
          "description" : "Target location Name.", 
          "example" : "WU-1", 
          "type" : "string"
        }, 
        "targetLocationType" : {
          "description" : "Target Location type.", 
          "example" : "WORKUNIT", 
          "type" : "string"
        }, 
        "targetType" : {
          "description" : "Target type.", 
          "example" : "HCA", 
          "type" : "string"
        }, 
        "thursdayFixTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Thursday fixed target value."
        }, 
        "thursdayVarTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Thursday variable target value."
        }, 
        "tuesdayFixTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Tuesday fixed target value."
        }, 
        "tuesdayVarTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Tuesday variable target value."
        }, 
        "wednesdayFixTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Wednesday fixed target value."
        }, 
        "wednesdayVarTarget" : {
          "$ref" : "#/definitions/Day Target", 
          "description" : "Wednesday variable target value."
        }
      }, 
      "required" : [ "adjustmentFlag", "effectiveDate", "fridayFixTarget", "fridayVarTarget", "mondayFixTarget", "mondayVarTarget", "payPeriodVarTarget", "saturdayFixTarget", "saturdayVarTarget", "sundayFixTarget", "sundayVarTarget", "targetFunctionName", "targetFunctionType", "targetLocationName", "targetLocationType", "targetType", "thursdayFixTarget", "thursdayVarTarget", "tuesdayFixTarget", "tuesdayVarTarget", "wednesdayFixTarget", "wednesdayVarTarget" ], 
      "type" : "object"
    }, 
    "Target Multi-Read Request Param" : {
      "description" : "Target Multi-Read Request Param", 
      "properties" : {
        "refDates" : {
          "description" : "Target reference dates.", 
          "items" : {
            "format" : "date", 
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "referenceSourceFunction" : {
          "$ref" : "#/definitions/Target Multi-Read RefSource", 
          "description" : "Target refrence source."
        }, 
        "targetFunction" : {
          "$ref" : "#/definitions/Target Function", 
          "description" : "Defines the function using which target is created."
        }, 
        "targetLocation" : {
          "$ref" : "#/definitions/Target Location", 
          "description" : "Target Location."
        }, 
        "targetSubTypes" : {
          "description" : "Target subtype description.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "targetType" : {
          "description" : "Target type.", 
          "example" : "HCA", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "TargetEntitySet" : {
      "properties" : {
        "currenncyRefId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "evaluationPeriod" : {
          "type" : "string"
        }, 
        "refSourceSymbolicNameForCompute" : {
          "type" : "string"
        }, 
        "targetDefintion" : {
          "additionalProperties" : {
            "$ref" : "#/definitions/TargetEntity"
          }, 
          "type" : "object"
        }, 
        "targetFunctionId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "targetFunctionType" : {
          "type" : "string"
        }, 
        "targetLocationRefId" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "targetLocationRefType" : {
          "type" : "string"
        }, 
        "targetSubType" : {
          "type" : "string"
        }, 
        "targetType" : {
          "type" : "string"
        }, 
        "thresholdResponse" : {
          "items" : {
            "$ref" : "#/definitions/Threshold"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Business Process Model Details" : {
      "description" : "Details of Process model.", 
      "properties" : {
        "id" : {
          "description" : "The ID of process model.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "version" : {
          "description" : "The version of process model.", 
          "format" : "int32", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "FieldObjectRef" : {
      "properties" : {
        "id" : {
          "type" : "string"
        }, 
        "value" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "kioskWhere" : {
      "description" : "The Attendance Request parent model.", 
      "properties" : {
        "dateRange" : {
          "$ref" : "#/definitions/CommonDateRange", 
          "description" : "The date range, which contains a start date, an end date, and a symbolic period. The symbolic period reference is mutually exclusive with start date and end date."
        }, 
        "employees" : {
          "$ref" : "#/definitions/ObjectRefList", 
          "description" : "A list of references to employee objects."
        }
      }, 
      "required" : [ "dateRange", "employees" ], 
      "type" : "object"
    }, 
    "KioskObjectRef_PublicAPI" : {
      "properties" : {
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "qualifier" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "KioskObjectRef" : {
      "properties" : {
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "qualifier" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Attribute" : {
      "description" : "Attribute.", 
      "properties" : {
        "id" : {
          "description" : "The ID for the attribute.", 
          "example" : 0, 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of the attribute.", 
          "example" : "PayCodeId", 
          "type" : "string"
        }, 
        "value" : {
          "description" : "The value of the attribute.", 
          "example" : "180", 
          "type" : "string"
        }
      }, 
      "required" : [ "id", "name", "value" ], 
      "type" : "object"
    }, 
    "Custom Attribute" : {
      "description" : "Custom attribute.", 
      "properties" : {
        "customAttributeCtx" : {
          "$ref" : "#/definitions/Mapping Category Type Attribute", 
          "description" : "The mapping category type attribute of the custom attribute entity."
        }, 
        "customAttributeValue" : {
          "description" : "The value of the custom attribute.", 
          "example" : "true", 
          "type" : "string"
        }
      }, 
      "required" : [ "customAttributeCtx", "customAttributeValue" ], 
      "type" : "object"
    }, 
    "actionTemplateActionTypeAction" : {
      "description" : "Model for Action.", 
      "properties" : {
        "id" : {
          "description" : "The ID of an action.", 
          "format" : "int64", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of an action.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "CommonDateRange" : {
      "description" : "Model for date range.", 
      "properties" : {
        "endDate" : {
          "description" : "The end date associated with date range.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "startDate" : {
          "description" : "The start date associated with date range.", 
          "format" : "date", 
          "type" : "string"
        }, 
        "symbolicPeriod" : {
          "$ref" : "#/definitions/ObjectRef", 
          "description" : "A reference to the symbolic Period object."
        }
      }, 
      "type" : "object"
    }, 
    "ObjectRefList" : {
      "description" : "Model describing a collection of object references.", 
      "properties" : {
        "ids" : {
          "description" : "The list of references by ID.", 
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "qualifiers" : {
          "description" : "The qualifier of the object reference, such as name.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "refs" : {
          "description" : "The object references.", 
          "items" : {
            "$ref" : "#/definitions/ObjectRef"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Throwable" : {
      "properties" : {
        "cause" : {
          "$ref" : "#/definitions/Throwable"
        }, 
        "localizedMessage" : {
          "type" : "string"
        }, 
        "message" : {
          "type" : "string"
        }, 
        "stackTrace" : {
          "items" : {
            "$ref" : "#/definitions/StackTraceElement"
          }, 
          "type" : "array"
        }, 
        "suppressed" : {
          "items" : {
            "$ref" : "#/definitions/Throwable"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "StackTraceElement" : {
      "properties" : {
        "className" : {
          "type" : "string"
        }, 
        "fileName" : {
          "type" : "string"
        }, 
        "lineNumber" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "methodName" : {
          "type" : "string"
        }, 
        "nativeMethod" : {
          "type" : "boolean"
        }
      }, 
      "type" : "object"
    }, 
    "BatchEventWhereObject" : {
      "properties" : {
        "ids" : {
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array"
        }, 
        "qualifiers" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "refs" : {
          "items" : {
            "$ref" : "#/definitions/ObjectRef"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "BatchGroupWhereObject" : {
      "properties" : {
        "ids" : {
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array"
        }, 
        "qualifiers" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "refs" : {
          "items" : {
            "$ref" : "#/definitions/ObjectRef"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "BatchTaskWhereObject" : {
      "properties" : {
        "ids" : {
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array"
        }, 
        "qualifiers" : {
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "refs" : {
          "items" : {
            "$ref" : "#/definitions/ObjectRef"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "DataViewColumn" : {
      "properties" : {
        "alias" : {
          "type" : "string"
        }, 
        "columnOrder" : {
          "format" : "int32", 
          "type" : "integer"
        }, 
        "dataType" : {
          "enum" : [ "STRING", "DATE", "TIME", "BOOLEAN", "NUMBER", "ENUM", "DATETIME", "DURATION" ], 
          "type" : "string"
        }, 
        "description" : {
          "type" : "string"
        }, 
        "entityName" : {
          "type" : "string"
        }, 
        "key" : {
          "type" : "string"
        }, 
        "label" : {
          "type" : "string"
        }, 
        "operation" : {
          "enum" : [ "SUM", "AVG", "MIN", "MAX", "COUNT" ], 
          "type" : "string"
        }, 
        "properties" : {
          "items" : {
            "$ref" : "#/definitions/DataViewColumnProperty"
          }, 
          "type" : "array"
        }, 
        "selected" : {
          "type" : "boolean"
        }, 
        "sortDirection" : {
          "type" : "string"
        }, 
        "width" : {
          "format" : "int32", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "Reporting Data Source" : {
      "description" : "It provides the source of context which needs to be passed for requesting any data from get data API.", 
      "properties" : {
        "dateRange" : {
          "$ref" : "#/definitions/Reporting Time Frame", 
          "description" : "The date range of the data source."
        }, 
        "employees" : {
          "$ref" : "#/definitions/Reporting Selector", 
          "description" : "The selector used by the data source."
        }, 
        "hyperfind" : {
          "$ref" : "#/definitions/ReportObjectRef2", 
          "description" : "The Hyperfind data source."
        }
      }, 
      "type" : "object"
    }, 
    "ReportingOrgDataSource" : {
      "description" : "Model for Business Structure (org map) service.", 
      "properties" : {
        "dateRange" : {
          "$ref" : "#/definitions/Reporting Time Frame", 
          "description" : "The date range of the data source."
        }, 
        "hyperfind" : {
          "$ref" : "#/definitions/ReportObjectRef2", 
          "description" : "The Hyperfind data source."
        }, 
        "locations" : {
          "$ref" : "#/definitions/Reporting Selector", 
          "description" : "The selector used by the data source."
        }, 
        "rollupBy" : {
          "description" : "The business structure roll up level.", 
          "items" : {
            "$ref" : "#/definitions/Reporting Data Element property"
          }, 
          "type" : "array"
        }, 
        "savedLocations" : {
          "$ref" : "#/definitions/ReportObjectRef2", 
          "description" : "A list of saved business structure locations."
        }
      }, 
      "type" : "object"
    }, 
    "ReportingWorkUnitDataSource" : {
      "description" : "The reporting work unit data source model.", 
      "properties" : {
        "dateRange" : {
          "$ref" : "#/definitions/Reporting Time Frame", 
          "description" : "The date range of the data source."
        }, 
        "hyperfind" : {
          "$ref" : "#/definitions/ReportObjectRef2", 
          "description" : "The Hyperfind data source."
        }, 
        "rollupBy" : {
          "description" : "A list of roll up by criteria for the resolved location jobs. For example: WORKGROUP.", 
          "items" : {
            "$ref" : "#/definitions/Reporting Data Element property"
          }, 
          "type" : "array"
        }, 
        "workUnits" : {
          "$ref" : "#/definitions/Reporting Selector", 
          "description" : "The selector used by the data source."
        }
      }, 
      "type" : "object"
    }, 
    "Data Service Element" : {
      "description" : "Model providing the details of data elements along with display and raw data.", 
      "properties" : {
        "dataKey" : {
          "description" : "The data element key which is a unique identifer for each data element in the data dictionary.", 
          "type" : "string"
        }, 
        "dataName" : {
          "description" : "The name of the data element, used when the same data element is requested multiple times for different properties.", 
          "type" : "string"
        }, 
        "dataType" : {
          "description" : "The data element data type, such as String and Number.", 
          "type" : "string"
        }, 
        "dataValue" : {
          "description" : "The data display value for data element. This value is formatted according to the formatting policy configured for the corresponding data element.", 
          "type" : "string"
        }, 
        "rawValue" : {
          "description" : "The raw value of a data element, which is an unformatted value each consumer can format as needed.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "UriBuilder" : {
      "type" : "object"
    }, 
    "Day Target" : {
      "description" : "Day target.", 
      "properties" : {
        "alternateTarget" : {
          "description" : "Day alternate Target.", 
          "example" : 8.5, 
          "type" : "number"
        }, 
        "defaultTarget" : {
          "description" : "Day default target.", 
          "example" : 8, 
          "type" : "number"
        }
      }, 
      "required" : [ "defaultTarget" ], 
      "type" : "object"
    }, 
    "Target Function params" : {
      "description" : "Target Function parameters.", 
      "properties" : {
        "functionDefs" : {
          "items" : {
            "$ref" : "#/definitions/IFunctionDefinition"
          }, 
          "type" : "array"
        }, 
        "ids" : {
          "description" : "Target Function Ids.", 
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array"
        }, 
        "qualifiers" : {
          "description" : "Target function qualifiers.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "refs" : {
          "description" : "Target reference parameters.", 
          "items" : {
            "$ref" : "#/definitions/ReferenceParam"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Target Location Param" : {
      "description" : "Target Location Param", 
      "properties" : {
        "ids" : {
          "description" : "Target Location Param Id.", 
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array"
        }, 
        "qualifiers" : {
          "description" : "Target Location Param qulifiers.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "refs" : {
          "description" : "Target Location reference.", 
          "items" : {
            "$ref" : "#/definitions/ReferenceParam"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Target Multi-Read RefSource" : {
      "description" : "Target Multi-Read RefSource.", 
      "properties" : {
        "domain_functions" : {
          "$ref" : "#/definitions/Target Multi-Read RefSource Param", 
          "description" : "Target multiread Reference parameters."
        }
      }, 
      "required" : [ "domain_functions" ], 
      "type" : "object"
    }, 
    "TargetEntity" : {
      "properties" : {
        "effectiveDate" : {
          "format" : "date", 
          "type" : "string"
        }, 
        "expirationDate" : {
          "format" : "date", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Threshold" : {
      "properties" : {
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "indicatorText" : {
          "type" : "string"
        }, 
        "maxValue" : {
          "type" : "number"
        }, 
        "name" : {
          "type" : "string"
        }, 
        "operator" : {
          "type" : "string"
        }, 
        "value" : {
          "type" : "number"
        }
      }, 
      "type" : "object"
    }, 
    "Mapping Category Type Attribute" : {
      "description" : "Mapping category type attribute.", 
      "properties" : {
        "attributeType" : {
          "$ref" : "#/definitions/Attribute Type", 
          "description" : "The attribute type object."
        }, 
        "dataType" : {
          "$ref" : "#/definitions/Data Type of Attribute", 
          "description" : "The data type object."
        }, 
        "description" : {
          "description" : "A description of the mapping category type attribute.", 
          "example" : "For cost", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The unique ID of the mapping category type attribute.", 
          "example" : 1, 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of the mapping category type attribute.", 
          "example" : "Cost Only", 
          "type" : "string"
        }
      }, 
      "required" : [ "attributeType", "dataType", "description", "id", "name" ], 
      "type" : "object"
    }, 
    "DataViewColumnProperty" : {
      "properties" : {
        "key" : {
          "type" : "string"
        }, 
        "value" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Reporting Time Frame" : {
      "description" : "TimeFrame request Object where you can specify the requested timeframe ID or start or end date.", 
      "properties" : {
        "endDate" : {
          "type" : "string"
        }, 
        "options" : {
          "$ref" : "#/definitions/Reporting Time Frame Options", 
          "description" : "The options associated with a reporting timeframe, including time increments."
        }, 
        "startDate" : {
          "type" : "string"
        }, 
        "symbolicPeriod" : {
          "$ref" : "#/definitions/ReportObjectRef2", 
          "description" : "A symbolic identifier that represents a timeframe or a span of time."
        }
      }, 
      "type" : "object"
    }, 
    "Reporting Selector" : {
      "description" : "Reporting selector request object context.", 
      "properties" : {
        "ids" : {
          "description" : "A list of references by ID.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "qualifiers" : {
          "description" : "A list of qualifiers.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "refs" : {
          "description" : "A list of object references.", 
          "items" : {
            "$ref" : "#/definitions/ReportObjectRef2"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "ReportObjectRef2" : {
      "description" : "The object reference contains the id and qualifier.", 
      "properties" : {
        "id" : {
          "description" : "The unique ID of a report object.", 
          "type" : "string"
        }, 
        "qualifier" : {
          "description" : "The qualifier of a report object.", 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "IFunctionDefinition" : {
      "properties" : {
        "additionalProperties" : {
          "additionalProperties" : {
            "type" : "object"
          }, 
          "type" : "object"
        }, 
        "applicableViews" : {
          "items" : {
            "enum" : [ "EMPLOYEE", "ORG", "WORKUNIT" ], 
            "type" : "string"
          }, 
          "type" : "array", 
          "uniqueItems" : true
        }, 
        "defType" : {
          "enum" : [ "MAPPING_CATEGORY", "METRIC", "KPI", "TGT" ], 
          "type" : "string"
        }, 
        "description" : {
          "type" : "string"
        }, 
        "displayFormatType" : {
          "$ref" : "#/definitions/DisplayFormatTypeDTO"
        }, 
        "displayPrecision" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "funcType" : {
          "enum" : [ "DOMAIN_FUNCTION", "METRIC", "KPI", "FRESHNESS", "ORG_EMP_METRIC_SLICE", "TGT", "TIMESERIES" ], 
          "type" : "string"
        }, 
        "functionComputeCtx" : {
          "$ref" : "#/definitions/FunctionComputeCtx"
        }, 
        "groupable" : {
          "type" : "boolean"
        }, 
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "kpidomain" : {
          "enum" : [ "TIMEKEEPING", "FORECASTING", "HCA" ], 
          "type" : "string"
        }, 
        "name" : {
          "type" : "string"
        }, 
        "ownerSW" : {
          "type" : "boolean"
        }, 
        "shortName" : {
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "Target Multi-Read RefSource Param" : {
      "description" : "Target Location Param", 
      "properties" : {
        "ids" : {
          "description" : "Target Location Param Id.", 
          "items" : {
            "format" : "int64", 
            "type" : "integer"
          }, 
          "type" : "array"
        }, 
        "qualifiers" : {
          "description" : "Target Location Param qulifiers.", 
          "items" : {
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "refs" : {
          "description" : "Target Location reference.", 
          "items" : {
            "$ref" : "#/definitions/ReferenceParam"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "Attribute Type" : {
      "description" : "Attribute type.", 
      "properties" : {
        "description" : {
          "description" : "The description of the attribute type.", 
          "example" : "Hours attribute type", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID for the attribute type.", 
          "example" : 1, 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of the attribute type.", 
          "example" : "HOURS", 
          "type" : "string"
        }
      }, 
      "required" : [ "id" ], 
      "type" : "object"
    }, 
    "Data Type of Attribute" : {
      "description" : "Data type.", 
      "properties" : {
        "description" : {
          "description" : "The description of the data type.", 
          "example" : "Boolean Data Type", 
          "type" : "string"
        }, 
        "id" : {
          "description" : "The ID of the data type.", 
          "example" : 4, 
          "format" : "int32", 
          "type" : "integer"
        }, 
        "name" : {
          "description" : "The name of the data type.", 
          "example" : "Boolean", 
          "type" : "string"
        }
      }, 
      "required" : [ "description", "id", "name" ], 
      "type" : "object"
    }, 
    "Reporting Time Frame Options" : {
      "description" : "The TimeFrameOptions request object model where you can specify the requested timeIncrements.", 
      "properties" : {
        "referenceDate" : {
          "description" : "The reference date associated with a report in ISO_LOCAL_DATE format (YYYY-MM-DD).", 
          "format" : "date", 
          "type" : "string"
        }, 
        "relativePeriod" : {
          "$ref" : "#/definitions/ReportingRelativePeriod"
        }, 
        "timeIncrement" : {
          "description" : "The time increment. Valid time increment values are DAY, WEEK, MONTH and QUARTER.", 
          "enum" : [ "DAY", "WEEK", "MONTH", "QUARTER", "PAYPERIOD" ], 
          "type" : "string"
        }
      }, 
      "type" : "object"
    }, 
    "DisplayFormatTypeDTO" : {
      "properties" : {
        "displayFormatDescription" : {
          "type" : "string"
        }, 
        "displayFormatName" : {
          "type" : "string"
        }, 
        "displayFormatTypeId" : {
          "format" : "int64", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }, 
    "FunctionComputeCtx" : {
      "properties" : {
        "baseGrain" : {
          "enum" : [ "EMPLOYEE", "JOB", "DEPARTMENT", "WORKUNIT", "CATEGORY" ], 
          "type" : "string"
        }, 
        "dayTimeGrainSupported" : {
          "type" : "boolean"
        }, 
        "orgNodeResolver" : {
          "enum" : [ "DEFAULT", "FC_CATEGORY", "FC_DEPARTMENT" ], 
          "type" : "string"
        }, 
        "payPeriodDateTimeGrainSupported" : {
          "type" : "boolean"
        }, 
        "resolvedRollupGrain" : {
          "enum" : [ "JOB", "DEPARTMENT" ], 
          "type" : "string"
        }, 
        "rollupGrains" : {
          "items" : {
            "enum" : [ "JOB", "DEPARTMENT" ], 
            "type" : "string"
          }, 
          "type" : "array"
        }, 
        "timeGrains" : {
          "items" : {
            "enum" : [ "DAY", "PAYPERIOD", "PAYPERIOD_DATE" ], 
            "type" : "string"
          }, 
          "type" : "array"
        }
      }, 
      "type" : "object"
    }, 
    "ReportingRelativePeriod" : {
      "properties" : {
        "relativeToEndDate" : {
          "$ref" : "#/definitions/ReportingRelativePeriodReference"
        }, 
        "relativeToStartDate" : {
          "$ref" : "#/definitions/ReportingRelativePeriodReference"
        }
      }, 
      "type" : "object"
    }, 
    "ReportingRelativePeriodReference" : {
      "properties" : {
        "id" : {
          "format" : "int64", 
          "type" : "integer"
        }, 
        "qualifier" : {
          "type" : "string"
        }, 
        "value" : {
          "format" : "int32", 
          "type" : "integer"
        }
      }, 
      "type" : "object"
    }
  }
}
