{
    "openapi": "3.0.0",
    "info": {
        "description": "Work",
        "title": "Work",
        "version": "1.0"
    },
    "tags": [
        {
            "description": "<p markdown=\"1\">From here you may browse our library of API resources, organized hierarchically by domain, or major functional area, logical subgroup, API resource, and all available operations against that resource. For more information about the concepts and technology behind our API, refer to the [Getting started](C:636f581c-50a8-41a7-af43-e5057f9c20bd) documentation.</p><p>Our platform provides a powerful application programming interface and documentation to help you develop secure, scalable, and high-performance applications that leverage the full breadth of capabilities offered by our backend services.</p><p markdown=\"1\">The Workforce Management suite's API is founded on a pragmatic implementation of the [representational state transfer](http://en.wikipedia.org/wiki/Representational_State_Transfer) architectural style and allows access to your organization's workforce management data using common HTTP methods and the [JSON](http://www.json.org) interchange format.</p>",
            "name": "API"
        },
        {
            "description": "<p>This resource allows you to retrieve Active Team Members. Activity Team Members are team-assigned employees, who have effective team membership.</p>",
            "name": "Active Team Members",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to create, retrieve, update, and delete activities. Use activities to monitor and react to progress on production, grant, or project work by tracking your employees, capital assets, and materials. Activities provide real-time information to improve decision-making about how to best use your workforce and resources.</p><p>Activites are the central component of the Work domain. Each activity can consist of one or more levels. The top level of an activity is called “Level 1.” After Level 1, the term “levels” is synonymous with “sub-level activities.”</p><p markdown=\"1\">Refer to the [Activities](C:4157c89e-3921-4916-8f73-0d29f48f23c2) topic for example calls and a tutorial.</p>",
            "name": "Activities",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve the activities directly assigned to employees.</p>",
            "name": "Activity Assignments",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve and manipulate Activity Customers, which contain customer information related to activities.</p><p>When you define an activity or project you can assign it to a customer and include contact names, addresses and contact phone numbers. Customer assignments are for reporting only. They do not affect any other Work-related data.</p><p markdown=\"1\">Refer to the [Activity Customers](C:d16f6f16-3794-40c2-8164-1f676b6dacb0) topic for example calls and a tutorial.</p>",
            "name": "Activity Customers",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve activity efficiencies.</p><p>Efficiency is a computed metric that helps determine how an organization performs. Efficiency is based on labor standards for a particular activity.</p>",
            "name": "Activity Efficiencies",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve and manipulate Activity form profiles.</p><p>Form profiles are a way to organize the forms that you want a group of employees to be able to access. You specify a form profile when you define the activity profile, and then you assign the activity profile to an employee.</p><p>The system provides the following pre-defined form profiles:</p><ul><li>All Forms</li><li>Empty Profile</li></ul><p>All employees are assigned an \"Empty Profile\" by default.</p><p markdown=\"1\">Refer to the [Activity Form Profiles](C:54388b84-c130-4278-9255-cca3984b0601) topic for example calls and a tutorial.</p>",
            "name": "Activity Form Profiles",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve data related to Activity forms.</p>",
            "name": "Activity Form Resources",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve Activity forms. Activity forms are the mechanism through which most employees submit activity data to the system.</p><p>Activity forms contain field definitions that define the prompts for the form. Each form is associated with a form type that tells the system how to process the information in the form.</p> <p>Some form types have a pre-defined form with a standard set of field definitions. You can use pre-defined forms or create a copy of a form to collect information specific to your business.</p> <p><em><strong>Note:</strong> This API resource allows you to indicate which fields you want to be required, optional, read-only, or hidden. When you create new forms, take note of the fields specified as &ldquo;Required&rdquo; in the pre-defined forms as guidance for creating useful forms.</em></p><p markdown=\"1\">Refer to the [Activity Forms](C:d6cde4db-a8a6-4683-be59-23cf940fe522) topic for example calls and a tutorial.</p>",
            "name": "Activity Forms",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve Activity Shifts data in states before the specified dates (lastRunDateTime and endDateTime).</p><p>You can adjust what is included in the response by providing select options, such as filtering for activity segments with activity processed segments and with or without activity result segments. Extracted data can be filtered by employees and activities.</p><h3>Qualifiers</h3><p>The following qualifiers apply:</p><ul><li>The Employee qualifier is the person number.</li><li>The Hyperfind qualifier is the Hyperfind name.</li><li>The Activity qualifier is the activity name.</li><li>The Activity query qualifier is the Activity query name.</li></ul>",
            "name": "Activity Net Changes",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve data related to Activity Profiles.</p>",
            "name": "Activity Profile Resources",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve and manipulate Activity Profiles.</p><p>Activity profiles help to limit the amount of data that employees can select, such as forms and result codes.</p><ul><li>If you create an activity profile to assign to individual people, all settings in the profile are applicable.</li><li>Variances are applied to the adjusted start and stop times of employee activity events only.</li></ul><p markdown=\"1\">Refer to the [Activity Profiles](C:c1e875b3-5129-482a-b7f8-ad984335361a) topic for example calls and a tutorial.</p>",
            "name": "Activity Profiles",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve and manipulate Activity queries.</p><p>Activity queries allow employees and managers to search for activities that are relevant to them. Queries are helpful if there are many activities that need to be available to employees. Activity queries can be configured to filter out activities based on:</p> <ul> <li>Query user’s home labor account</li> <li>Query user’s labor transfer set</li> <li>Labor accounts in account sets</li> <li>Activity completion and held status</li> <li>Activity type (direct or indirect)</li> <li>Time period within which activity start or end dates fall</li> <li>Activity name</li> </ul><p markdown=\"1\">Refer to the [Activity Queries](C:b0a02fe8-0932-43af-b5cc-4baf9bbbc567) topic for example calls and a tutorial.</p>",
            "name": "Activity Queries",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve and manipulate Activity query profiles.</p><p>Activity query profiles allow activity queries to be grouped for asssignment to relevant employees and managers.</p> <p>Activity queries allow employees and managers to search for activities that are relevant to them. Queries are helpful if there are many activities that need to be available to employees. Activity queries can be configured to filter out activities based on:</p> <ul> <li>Query user’s home labor account</li> <li>Query user’s labor transfer set</li> <li>Labor accounts in account sets</li> <li>Activity completion and held status</li> <li>Activity type (direct or indirect)</li> <li>Time period within which activity start or end dates fall</li> <li>Activity name</li> </ul><p markdown=\"1\">Refer to the [Activity Query Profiles](C:96fef6ec-3fc1-4343-832c-977fddae5ad2) topic for example calls and a tutorial.</p>",
            "name": "Activity Query Profiles",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve data related to Activity queries.</p>",
            "name": "Activity Query Resources",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve data related to activity resources. An activity resource is the non-employee component of an activity. For example, an activity resource in a manufacturing environment could be a machine or assembly line equipment. In health care, an activity resource could be an operating room or an MRI machine.</p>",
            "name": "Activity Resources",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve data related to activity results templates.</p>",
            "name": "Activity Results Template Resources",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve and manipulate Activity results templates.</p><p>Activity Results Templates provide templates for collecting the results of activities performed by employees. When stopping an activity, employees will be prompted for results when an activity results template has been associated with that activity.</p><p><strong>Note:</strong> Activity Results Templates can be configured to have up to two levels. When an employee stops an activity configured with a two level activity results template, they will be prompted to enter results for the activity at the first level and will then be prompted to enter additional results at the second level based on the results that were entered at the first level.</p><p markdown=\"1\">Refer to the [Activity Results Templates](C:5392e1b3-b6ac-4192-9957-2e983d054425) topic for example calls and a tutorial.</p>",
            "name": "Activity Results Templates",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve and manipulate Activity settings.</p><p>Activity settings control the behavior of various aspects of the Work system. Activity settings can be updated but cannot be created or deleted.</p><p>You can change an activity setting by updating either \"integerValue\" or \"booleanValue\" as appropriate.</p><p markdown=\"1\">Refer to the [Activity Settings](C:90b5abaf-d581-4ae5-8031-ebc4116f8e5e) topic for example calls, a tutorial, and activity setting descriptions that are listed according to their <code>\"name\"</code> property.</p>",
            "name": "Activity Settings",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to manipulate Activity Shifts.</p><p>Activity Shifts are entries on a timecard used as an input for the Activity Calculator.</p>",
            "name": "Activity Shifts",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve data related to activity teams.</p>",
            "name": "Activity Team Resources",
            "x-parent": "Work"
        },
        {
            "description": "This resource allows you to retrieve audits for activity team segments or activity team segment results.",
            "name": "Activity Team Segment Audits",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve and manipulate Activity Team Segments.</p>",
            "name": "Activity Team Segments",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve and manipulate Activity teams. Activity teams allow a group of people to work on the same Activity at the same time. Employees can independently join and leave a team and have assigned team membership spans.</p>",
            "name": "Activity Teams",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to access activity totals, which are the cumulative value of an employee's time-related activity or accruals, such as hours worked, pay, or earned accrued vacation time.</p><p>When information that affects employees' totals is stored in the system, such as new punch data, the employees' totals must be updated within a reasonable period of time. For example, when a manager approves and igns off an employee's hours for the week, the new hours are stored in the system. The hours worked could affect several other time-related values, such as accrued vacation time, accrued sick time, overtime, time spent on a specific task, job, or at a location, and available time for the next schedule. The Background Processor is a service that runs continuously and updates activity totals at specified intervals from the data in the system. To ensure that employees' activity totals are kept up-to-date, the Background Processor constantly reviews the status of employee records. If any totals are out-of-date, the Background Processor re-calculates them.</p>",
            "name": "Activity Totals",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve activity transactions.</p><p>Each activity transaction contains an Activity Processed Segment, Results, Efficiencies, Sub Efficiencies, and Totals.</p>",
            "name": "Activity Transactions",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve and manipulate field definitions for activities.</p><p>Field definitions consist of four elements: name, type, length, number of places to the left or right of the decimal point for numeric values.</p><p>There are two types of field definitions: pre-defined and user-defined. Pre-defined field definitions begin with an underscore character (_) and are provided with the system. An example is \"_Clock IN Time.\"</p><p markdown=\"1\">Refer to the [Field Definitions](C:f83b024c-32a2-4a05-88a3-f1f072e2cc97) topic for example calls and a tutorial.</p>",
            "name": "Field Definitions",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve and manipulate paycode actions.</p><p>Pay code actions serve either one of two purposes:</p> <ol> <li><strong>Associate pay codes with activities</strong> - Eliminates the need to enter events for specific activities. For example, if you associate the “Vacation” pay code with the “Vacation” activity, when you enter the &ldquo;Vacation&rdquo; pay code as an edit, the timecard creates an event for &ldquo;Vacation.&rdquo;</li> <li><strong>Allocate hours in a pay code to multiple projects</strong> - As an example, you can distribute employees’ paid time off according to the percentage of hours worked on each project during a pay period. This is called dynamic allocation because the allocation changes whenever entered hours change for the projects in the pay period.</li> </ol> <p>You can associate only hours-based pay codes with pay code actions.</p><p markdown=\"1\">Refer to the [Pay Code Actions](C:19131cf0-2a41-467d-9fe2-e598b23838dd) topic for example calls and a tutorial.</p>",
            "name": "Paycode Actions",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve and manipulate result code profiles.</p><p>Result codes define the data that employees can enter into certain pre-defined or custom field definitions. After you create result codes, you group them into result code profiles and assign them to activity profiles.</p><p markdown=\"1\">Refer to the [Result Code Profiles](C:0316b627-926e-4dc8-8de4-0f56a50063c5) topic for example calls and a tutorial.</p>",
            "name": "Result Code Profiles",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve and manipulate Activity result codes.</p><p>Result codes define the data that employees can enter into certain pre-defined or custom field definitions.</p><p markdown=\"1\">Refer to the [Result Codes](C:221323bc-c9a3-4e56-9832-479084bedcd6) topic for example calls and a tutorial.</p>",
            "name": "Result Codes",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve Activity Team Segments in states before the specified dates (lastRunDateTime and endDateTime). Team segments display an activity a team works on over a period of time.</p><h3>Qualifiers</h3><p>The following qualifiers apply:</p><ul><li>The Team qualifier is the Team Definition name.</li><li>The Activity qualifier is the activity name.</li></ul>",
            "name": "Team Segments Net Changes",
            "x-parent": "Work"
        },
        {
            "description": "<p>This resource allows you to retrieve and manipulate units of measure.</p><p>The system uses units of measure to count output from activities. Examples include feet, inches, meters, gallons.</p><p markdown=\"1\">Refer to the [Units of Measure](C:3371248f-dbef-4947-9a0c-ac30ae6dd0e8) topic for example calls and a tutorial.</p>",
            "name": "Units of Measure",
            "x-parent": "Work"
        },
        {
            "description": "<p>Work integrates the tracking of your employees, capital assets, and materials into a single solution that provides real-time visibility to productivity and tools to analyze data over time to make strategic improvements.</p><p>You can track information for the following types of work:</p><ul><li><strong>Continuous daily operations</strong> (for example, production line work)</li><li><strong>Projects that must be tracked against a planned budget and schedule.</strong> You use Work to manage the following stages of project work:<ul><li>Execution and tracking</li><li>Monitoring</li><li>Project closure</li></ul></li><li><strong>Funded projects</strong> (for example, grant initiatives). You use Work to manage the following stages of grant work:<ul><li>Management and tracking of schedules and use of funds</li><li>Reporting and auditing</li></ul></li></ul>",
            "name": "Work",
            "x-parent": "API"
        }
    ],
    "paths": {
        "/v1/work/activities": {
            "get": {
                "description": "This operation returns an activity by combined name.",
                "operationId": "Retrieve Activity by Name",
                "parameters": [
                    {
                        "description": "The combined name of an activity (wildcards are supported).",
                        "in": "query",
                        "name": "combinedName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The name of a query.",
                        "in": "query",
                        "name": "queryName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The combined activity name. The string supplied in this property supports wildcards.",
                        "in": "query",
                        "name": "activityName",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The ID of a query.",
                        "in": "query",
                        "name": "queryId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "description": "A Boolean indicator of whether or not to extend the All Activities query. The extended query does not filter activities by data access when executed by the Full Work Setup Manager.",
                        "in": "query",
                        "name": "extend_all_activities_query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "An ID that uniquely identifies an employee. This is not a Person Number.",
                        "in": "query",
                        "name": "employeeId",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "description": "A Boolean indicator of whether or not to use the business structure from a manager role. When false, the business structure from an employee role is used.",
                        "in": "query",
                        "name": "use_manager_role",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "The date of an activity in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "in": "query",
                        "name": "date",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "A Boolean indicator of whether or not the activity search returns navigation data.",
                        "in": "query",
                        "name": "hierarchicalSearch",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "A Boolean indicator of whether or not to apply access level to the activity search.",
                        "in": "query",
                        "name": "applyAccessLevel",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Defines ordering for result (combined_name, sequence).",
                        "in": "query",
                        "name": "orderBy",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "COMBINED_NAME",
                                "SEQUENCE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-212000] - The search string contains too many activity level delimiters. Enter a valid activity name search.</li><li>[WFA-212019] - The following parameter is not applicable with list type queries: {paramName}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Activity. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns an activity by combined name.",
                "tags": [
                    "Activities"
                ]
            },
            "post": {
                "description": "This operation creates and returns an activity.",
                "operationId": "Create Activity",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity"
                            }
                        }
                    },
                    "description": "The Create Activity request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity_PublicAPI"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-000003] - You must specify the following parameter: name.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000018] - The following parameter cannot be a negative number: level.</li><li>[WFA-000018] - The following parameter cannot be a negative number: sequence.</li><li>[WFA-000004] - The following parameter must be null: header.id.</li><li>[WFA-212009] - You cannot add a level 2 - 4 activity under a pre-defined activity.</li><li>[WFA-212011] - Activity cannot contain labor category entry lists with the same labor category. Labor Category: {paramName}, Labor Category Entry List: {paramName}.</li><li>[WFA-117001] - Activity Standard effective date range is overlapped. Should be into following range: [{StartDate}, {EndDate}].</li><li>[WFA-000024] - standards.laborStandardQuantity does not match the required format: up to 12 digits before the decimal point; up to 3 digits after the decimal point.</li><li>[WFA-000025] - The standards.laborStandardQuantity must be in the range: {minValue} - {maxValue}.</li><li>[WFA-000025] - The standards.laborStandardSeconds must be in the range: {minValue} - {maxValue}.</li><li>[WFA-212014] - Number of employees exceeds the limit that equals {limit}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates and returns an activity.",
                "tags": [
                    "Activities"
                ]
            }
        },
        "/v1/work/activities/exports/apply_read": {
            "post": {
                "description": "<p>This operation returns a list of activity export definitions for the specified query.</p><br /><p>The associated Access Control Point is WFA_WORK_INTEGRATION_API.</p>",
                "operationId": "Retrieve Activity Export Definitions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityExportRequest"
                            }
                        }
                    },
                    "description": "v1.0.activities_setup-activity.post.apply_read.request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityExportResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-212021] - The next read token is invalid.</li><li>[WFA-212022] - The next read token is not consistent with other request parameters.</li><li>[WFA-212023] - List Query is not supported for Export Activities.</li><li>[WFA-212024] - Query with Activity Name field is not supported for Export Activities.</li><li>[WFA-212025] - Query with Business Structure is not supported for Export Activities.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Activity Query. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns activity export definitions.",
                "tags": [
                    "Activities"
                ]
            }
        },
        "/v1/work/activities/multi_create": {
            "post": {
                "description": "<p>This operation creates and returns one or more activities.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of activities that can be processed in a single request.</p><ul><li>The <strong>Number of Activities</strong> cannot exceed 30.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>",
                "operationId": "Create Activities",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/Activity"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Create Activities request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li><li>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-000003] - You must specify the following parameter: name.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000018] - The following parameter cannot be a negative number: level.</li><li>[WFA-000018] - The following parameter cannot be a negative number: sequence.</li><li>[WFA-000004] - The following parameter must be null: header.id.</li><li>[WFA-212009] - You cannot add a level 2 - 4 activity under a pre-defined activity.</li><li>[WFA-212011] - Activity cannot contain labor category entry lists with the same labor category. Labor Category: {paramName}, Labor Category Entry List: {paramName}.</li><li>[WFA-117001] - Activity Standard effective date range is overlapped. Should be into following range: [{StartDate}, {EndDate}].</li><li>[WFA-000024] - standards.laborStandardQuantity does not match the required format: up to 12 digits before the decimal point; up to 3 digits after the decimal point.</li><li>[WFA-000025] - The standards.laborStandardQuantity must be in the range: {minValue} - {maxValue}.</li><li>[WFA-000025] - The standards.laborStandardSeconds must be in the range: {minValue} - {maxValue}.</li><li>[WFA-212014] - Number of employees exceeds the limit that equals {limit}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates and returns one or more\t activities.",
                "tags": [
                    "Activities"
                ]
            }
        },
        "/v1/work/activities/multi_delete": {
            "post": {
                "description": "<p>This operation deletes one or more activities by object references.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of activities that can be processed in a single request.</p><ul><li>The <strong>Number of Activities</strong> cannot exceed 30.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>",
                "operationId": "Delete Activities",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityRefs"
                            }
                        }
                    },
                    "description": "The Delete Activities request payload.",
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ResultCode"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000038] - Some of the entities were not deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000039] - None of the entities were deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Deletes one or more activities.",
                "tags": [
                    "Activities"
                ]
            }
        },
        "/v1/work/activities/multi_read": {
            "post": {
                "description": "<p>This operation returns one or more activities by object references.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of activities that can be processed in a single request.</p><ul><li>The <strong>Number of Activities</strong> cannot exceed 30.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>",
                "operationId": "Retrieve Activities",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityExportRefs"
                            }
                        }
                    },
                    "description": "The Retrieve Activities request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000036] - Some of the entities were not exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000037] - None of the entities were exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Activities. Name or names or ID or IDs: [{refs}].</li></ul>"
                    }
                },
                "summary": "Returns one or more activities.",
                "tags": [
                    "Activities"
                ]
            }
        },
        "/v1/work/activities/multi_update": {
            "post": {
                "description": "<p>This operation updates and returns a list of activities.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of activities that can be processed in a single request.</p><ul><li>The <strong>Number of Activities</strong> cannot exceed 30.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>",
                "operationId": "Update Activities",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/Activity"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Update Activities request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li><li>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-000003] - You must specify the following parameter: name.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000018] - The following parameter cannot be a negative number: level.</li><li>[WFA-000018] - The following parameter cannot be a negative number: sequence.</li><li>[WFA-000004] - The following parameter must be null: header.id.</li><li>[WFA-000007] - Entity or entities not found. Type: Activity. Name or names or ID or IDs: {id}.</li><li>[WFA-212011] - Activity cannot contain labor category entry lists with the same labor category. Labor Category: {paramName}, Labor Category Entry List: {paramName}.</li><li>[WFA-117001] - Activity Standard effective date range is overlapped. Should be into following range: [{StartDate}, {EndDate}].</li><li>[WFA-000024] - standards.laborStandardQuantity does not match the required format: up to 12 digits before the decimal point; up to 3 digits after the decimal point.</li><li>[WFA-000025] - The standards.laborStandardQuantity must be in the range: {minValue} - {maxValue}.</li><li>[WFA-000025] - The standards.laborStandardSeconds must be in the range: {minValue} - {maxValue}.</li><li>[WFA-212014] - Number of employees exceeds the limit that equals {limit}.</li><li>[WFA-212015] - You cannot import more than one standard without enabling the 'replaceAllStandards' flag.</li><li>[WFA-212016] - You cannot import a new standard with an effective start date before the start date of the existing standard.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Updates and returns a list of activities.",
                "tags": [
                    "Activities"
                ]
            }
        },
        "/v1/work/activities/multi_upsert": {
            "post": {
                "description": "<p>This operation creates or updates one or more activities.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of activities that can be processed in a single request.</p><ul><li>The <strong>Number of Activities</strong> cannot exceed 30.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>",
                "operationId": "Create or Update Activities",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/Activity"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Create or Update Activities request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li><li>",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-000003] - You must specify the following parameter: name.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000018] - The following parameter cannot be a negative number: level.</li><li>[WFA-000018] - The following parameter cannot be a negative number: sequence.</li><li>[WFA-000004] - The following parameter must be null: header.id.</li><li>[WFA-000007] - Entity or entities not found. Type: Activity. Name or names or ID or IDs: {id}.</li><li>[WFA-212011] - Activity cannot contain labor category entry lists with the same labor category. Labor Category: {paramName}, Labor Category Entry List: {paramName}.</li><li>[WFA-117001] - Activity Standard effective date range is overlapped. Should be into following range: [{StartDate}, {EndDate}].</li><li>[WFA-000024] - standards.laborStandardQuantity does not match the required format: up to 12 digits before the decimal point; up to 3 digits after the decimal point.</li><li>[WFA-000025] - The standards.laborStandardQuantity must be in the range: {minValue} - {maxValue}.</li><li>[WFA-000025] - The standards.laborStandardSeconds must be in the range: {minValue} - {maxValue}.</li><li>[WFA-212014] - Number of employees exceeds the limit that equals {limit}.</li><li>[WFA-212015] - You cannot import more than one standard without enabling the 'replaceAllStandards' flag.</li><li>[WFA-212016] - You cannot import a new standard with an effective start date before the start date of the existing standard.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates or updates one or more activities.",
                "tags": [
                    "Activities"
                ]
            }
        },
        "/v1/work/activities/setup/activity_types": {
            "get": {
                "description": "This operation returns all activity types.",
                "operationId": "Retrieve All Activity Types",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all activity types.",
                "tags": [
                    "Activity Resources"
                ]
            }
        },
        "/v1/work/activities/setup/complete_statuses": {
            "get": {
                "description": "This operation returns all activity complete statuses.",
                "operationId": "Retrieve All Activity Complete Statuses",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all activity complete statuses.",
                "tags": [
                    "Activity Resources"
                ]
            }
        },
        "/v1/work/activities/setup/data_access_types": {
            "get": {
                "description": "This operation returns all data access types.",
                "operationId": "Retrieve All Data Access Types",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all data access types.",
                "tags": [
                    "Activity Resources"
                ]
            }
        },
        "/v1/work/activities/setup/eligible_default_activities": {
            "get": {
                "description": "This operation returns all eligible default activities.",
                "operationId": "Retrieve All Eligible Default Activities",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all eligible default activities.",
                "tags": [
                    "Activity Resources"
                ]
            }
        },
        "/v1/work/activities/setup/event_types": {
            "get": {
                "description": "This operation returns all event types.",
                "operationId": "Retrieve All Event Types",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all event types.",
                "tags": [
                    "Activity Resources"
                ]
            }
        },
        "/v1/work/activities/setup/held_histories": {
            "get": {
                "description": "This operation returns all activity held history.",
                "operationId": "Retrieve All Activity Held History",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all activity held history.",
                "tags": [
                    "Activity Resources"
                ]
            }
        },
        "/v1/work/activities/setup/hours_allocation_types": {
            "get": {
                "description": "This operation returns all hours allocation types.",
                "operationId": "Retrieve All Hours Allocation Types",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all hours allocation types.",
                "tags": [
                    "Activity Resources"
                ]
            }
        },
        "/v1/work/activities/setup/priority_types": {
            "get": {
                "description": "This operation returns all activity priority types.",
                "operationId": "Retrieve All Activity Priority Types",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all activity priority types.",
                "tags": [
                    "Activity Resources"
                ]
            }
        },
        "/v1/work/activities/setup/process_types": {
            "get": {
                "description": "This operation returns all activity process types.",
                "operationId": "Retrieve All Activity Process Types",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all activity process types.",
                "tags": [
                    "Activity Resources"
                ]
            }
        },
        "/v1/work/activities/setup/quantity_allocation_types": {
            "get": {
                "description": "This operation returns all quantity allocation types.",
                "operationId": "Retrieve All Quantity Allocation Types",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all quantity allocation types.",
                "tags": [
                    "Activity Resources"
                ]
            }
        },
        "/v1/work/activities/setup/sequence_validation_types": {
            "get": {
                "description": "This operation returns all sequence validation types.",
                "operationId": "Retrieve All Sequence Validation Types",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all sequence validation types.",
                "tags": [
                    "Activity Resources"
                ]
            }
        },
        "/v1/work/activities/{id}": {
            "delete": {
                "description": "This operation deletes an activity by ID.",
                "operationId": "Delete Activity by ID",
                "parameters": [
                    {
                        "description": "The unique ID of an activity.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "<ul><li>[WFA-105007] - The Activity is currently used by an Activity Event - Activity name: {combinedname}</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Activity. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Deletes an activity.",
                "tags": [
                    "Activities"
                ]
            },
            "get": {
                "description": "This operation returns an activity by ID.",
                "operationId": "Retrieve Activity by ID",
                "parameters": [
                    {
                        "description": "The unique ID of an activity.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity_PublicAPI"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Activity. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns an activity.",
                "tags": [
                    "Activities"
                ]
            },
            "put": {
                "description": "This operation updates and returns an activity by ID.",
                "operationId": "Update Activity by ID",
                "parameters": [
                    {
                        "description": "The unique ID of an activity.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity"
                            }
                        }
                    },
                    "description": "The Update Activity by ID request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity_PublicAPI"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-000003] - You must specify the following parameter: name.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000018] - The following parameter cannot be a negative number: level.</li><li>[WFA-000018] - The following parameter cannot be a negative number: sequence.</li><li>[WFA-000004] - The following parameter must be null: header.id.</li><li>[WFA-212011] - Activity cannot contain labor category entry lists with the same labor category. Labor Category: {paramName}, Labor Category Entry List: {paramName}.</li><li>[WFA-117001] - Activity Standard effective date range is overlapped. Should be into following range: [{StartDate}, {EndDate}].</li><li>[WFA-000024] - standards.laborStandardQuantity does not match the required format: up to 12 digits before the decimal point; up to 3 digits after the decimal point.</li><li>[WFA-000025] - The standards.laborStandardQuantity must be in the range: {minValue} - {maxValue}.</li><li>[WFA-000025] - The standards.laborStandardSeconds must be in the range: {minValue} - {maxValue}.</li><li>[WFA-212014] - Number of employees exceeds the limit that equals {limit}.</li><li>[WFA-212015] - You cannot import more than one standard without enabling the 'replaceAllStandards' flag.</li><li>[WFA-212016] - You cannot import a new standard with an effective start date before the start date of the existing standard.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Activities. Name or names or ID or IDs: [{refs}].</li></ul>"
                    }
                },
                "summary": "Updates and returns an activity.",
                "tags": [
                    "Activities"
                ]
            }
        },
        "/v1/work/activity_efficiencies/multi_read": {
            "post": {
                "description": "<p>This operation returns a list of activity efficiencies for specified employees and activities over a specified date range.</p><br /><p>The associated Access Control Point is WFA_WORK_INTEGRATION_API.</p>",
                "operationId": "Retrieve Activity Efficiencies",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity_Efficiency_Multi_Read_Criteria"
                            }
                        }
                    },
                    "description": "The Retrieve Activity Efficiencies request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity_Efficiency_Multi_Read_Result"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<p>Bad request:</p><ul><li>[WFA-000003] - You must specify the following parameter: dateRange.startDate.</li><li>[WFA-000003] - You must specify the following parameter: dateRange.endDate.</li><li>[WFA-000044] - The date range is invalid. The start date must be on or before the end date.</li><li>[WFA-000002] - The following collection cannot be empty: employees.</li><li>[WTK-170001] - Invalid employee ID: {id}</li><li>[WTK-170000] - Invalid person number: {personNumber}</li><li>[WFA-000009] - Your request includes two or more of the following parameters: ids, qualifiers, refs. These parameters are mutually exclusive.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Activity. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns activity efficiencies.",
                "tags": [
                    "Activity Efficiencies"
                ]
            }
        },
        "/v1/work/activity_profiles": {
            "get": {
                "description": "This operation returns all Activity Profiles if no parameter is specified or a particular Profile if a name is provided.",
                "operationId": "Retrieve All Activity Profiles or by Name",
                "parameters": [
                    {
                        "description": "The name of an Activity Profile.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Profile"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Profile. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns all Activity Profiles or a particular Activity Profile by name.",
                "tags": [
                    "Activity Profiles"
                ]
            },
            "post": {
                "description": "This operation creates an Activity Profile.",
                "operationId": "Create Activity Profile",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Profile"
                            }
                        }
                    },
                    "description": "The Create Activity Profile request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profile"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000004] - The following parameter must be null: id.</li><li>[WFA-000003] - You must specify the following parameter: name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-000015] - Name length exceeds 50 characters. Shorten the name.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-180001] - The name you specified {profileName} already exists. Enter a unique name.</li><li>[WFA-000015] - Description length exceeds 255 characters. Shorten the description.</li><li>[WFA-000016] - The field wfaDefault1TXT cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000015] - WfaDefault1TXT length exceeds N characters. Shorten the wfaDefault1TXT.</li><li>[WFA-000016] - The field wfaDefault2TXT cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000015] - WfaDefault2TXT length exceeds N characters. Shorten the wfaDefault1TXT.</li><li>[WFA-000016] - The field wfaDefault3TXT cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000015] - WfaDefault3TXT length exceeds N characters. Shorten the wfaDefault3TXT.</li><li>[WFA-000016] - The field wfaDefault4TXT cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000015] - WfaDefault4TXT length exceeds N characters. Shorten the wfaDefault3TXT.</li><li>[WFA-000018] - The following parameter cannot be a negative number: limitDirect.</li><li>[WFA-000019] - The limitDirect cannot be greater than 999.</li><li>[WFA-000018] - The following parameter cannot be a negative number: limitInDirect.</li><li>[WFA-000019] - The limitInDirect cannot be greater than 999.</li><li>[WFA-000018] - The following parameter cannot be a negative number: maxDurationAmount.</li><li>[WFA-000019] - The maxDurationAmount cannot be greater than 86400.</li><li>[WFA-000018] - The following parameter cannot be a negative number: minDurationAmount.</li><li>[WFA-000019] - The minDurationAmount cannot be greater than 86400.</li><li>[WFA-000003] - You must specify the following parameter: varBtwnActyMn.</li><li>[WFA-000018] - The following parameter cannot be a negative number: varBtwnActyMn.</li><li>[WFA-000019] - The varBtwnActyMn cannot be greater than 999.</li><li>[WFA-000003] - You must specify the following parameter: varFirstActyMn.</li><li>[WFA-000018] - The following parameter cannot be a negative number: varFirstActyMn.</li><li>[WFA-000019] - The varFirstActyMn cannot be greater than 999.</li><li>[WFA-000003] - You must specify the following parameter: varLastActyMn.</li><li>[WFA-000018] - The following parameter cannot be a negative number: varLastActyMn.</li><li>[WFA-000019] - The varLastActyMn cannot be greater than 999.</li><li>[WFA-000003] - You must specify the following parameter: multiStopVar.</li><li>[WFA-000018] - The following parameter cannot be a negative number: multiStopVar.</li><li>[WFA-000019] - The multiStopVar cannot be greater than 999.</li><li>[WFA-000018] - The following parameter cannot be a negative number: userUnderAllocationMaximumVarianceAllowed.</li><li>[WFA-000019] - The userUnderAllocationMaximumVarianceAllowed cannot be greater than 86400.</li><li>[WFA-000003] - You must specify the following parameter: doNotSetSpanOrphaned.</li><li>[WFA-000003] - You must specify the following parameter: userCheckUnderAllocation.</li><li>[WFA-000003] - You must specify the following parameter: userCheckOverAllocation.</li><li>[WFA-000003] - You must specify the following parameter: userCheckFutureActivities.</li><li>[WFA-000003] - You must specify the following parameter: userAllocationCheckNoActivityAllowed.</li><li>[WFA-000003] - You must specify the following parameter: formProfile.</li><li>[WFA-000006] - The following object reference is invalid: formProfile.</li><li>[WFA-000007] - Entity or entities not found. Type: formProfile. Name or names or ID or IDs: {qualifier/id}.</li><li>[WFA-000003] - You must specify the following parameter: codeProfile.</li><li>[WFA-000006] - The following object reference is invalid: codeProfile.</li><li>[WFA-000007] - Entity or entities not found. Type: codeProfile. Name or names or ID or IDs: {qualifier/id}.</li><li>[WFA-000003] - You must specify the following parameter: queryProfile.</li><li>[WFA-000006] - The following object reference is invalid: queryProfile.</li><li>[WFA-000007] - Entity or entities not found. Type: queryProfile. Name or names or ID or IDs: {qualifier/id}.</li><li>[WFA-000006] - The following object reference is invalid: defaultActivity.</li><li>[WFA-000007] - Entity or entities not found. Type: defaultActivity. Name or names or ID or IDs: {qualifier/id}.</li><li>[WFA-214000] - You cannot assign non default activity to be default for defaultActivity.</li><li>[WFA-000006] - The following object reference is invalid: idleActivity.</li><li>[WFA-000007] - Entity or entities not found. Type: idleActivity. Name or names or ID or IDs: {qualifier/id}.</li><li>[WFA-214000] - You cannot assign non default activity to be default for idleActivity.</li><li>[WFA-000006] - The following object reference is invalid: unpaidMealActivity.</li><li>[WFA-000007] - Entity or entities not found. Type: unpaidMealActivity. Name or names or ID or IDs: {qualifier/id}.</li><li>[WFA-214000] - You cannot assign non default activity to be default for unpaidMealActivity.</li><li>[WFA-000006] - The following object reference is invalid: paidMealActivity.</li><li>[WFA-000007] - Entity or entities not found. Type: paidMealActivity. Name or names or ID or IDs: {qualifier/id}.</li><li>[WFA-214000] - You cannot assign non default activity to be default for paidMealActivity.</li><li>[WFA-116006] - The maximum duration of: {MaximumDuration} HRS is below the minimum duration of: {MinimumDuration} HRS for Activity Profile name: {Name}.</li><li>[WFA-160005] - Duration {Duration} of less than 1 minute not allowed.</li><li>[WFA-160001] - Duration {Duration} more than 24 hours not allowed.</li><li>[WFA-000003] - You must specify the following parameter: varianceCheck.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates an Activity Profile.",
                "tags": [
                    "Activity Profiles"
                ]
            }
        },
        "/v1/work/activity_profiles/multi_create": {
            "post": {
                "description": "This operation creates one or more Activity Profiles.",
                "operationId": "Create Activity Profiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/Profile"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Create Activity Profiles request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Profile_PartialPublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li><li>[WFA-000003] - You must specify the following parameter: varianceCheck.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates one or more Activity Profiles.",
                "tags": [
                    "Activity Profiles"
                ]
            }
        },
        "/v1/work/activity_profiles/multi_delete": {
            "post": {
                "description": "This operation deletes one or more Activity Profiles by object references.",
                "operationId": "Delete Activity Profiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProfileRefs"
                            }
                        }
                    },
                    "description": "The Delete Activity Profiles request payload.",
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000038] - Some of the entities were not deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000039] - None of the entities were deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Deletes one or more Activity Profiles.",
                "tags": [
                    "Activity Profiles"
                ]
            }
        },
        "/v1/work/activity_profiles/multi_read": {
            "post": {
                "description": "This operation returns one or more Activity Profiles by object references.",
                "operationId": "Retrieve Activity Profiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProfileRefs"
                            }
                        }
                    },
                    "description": "The Retrieve Activity Profiles request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Profile"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000036] - Some of the entities were not exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000037] - None of the entities were exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Returns one or more Activity Profiles.",
                "tags": [
                    "Activity Profiles"
                ]
            }
        },
        "/v1/work/activity_profiles/multi_update": {
            "post": {
                "description": "This operation updates one or more Activity Profiles.",
                "operationId": "Update Activity Profiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/Profile"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Update Activity Profiles request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Profile_PartialPublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li><li>[WFA-000003] - You must specify the following parameter: varianceCheck.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Updates one or more Activity Profiles.",
                "tags": [
                    "Activity Profiles"
                ]
            }
        },
        "/v1/work/activity_profiles/setup/future_validation_types": {
            "get": {
                "description": "This operation returns all Future Validation Types.",
                "operationId": "Retrieve Future Validation Types",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all Future Validation Types.",
                "tags": [
                    "Activity Profile Resources"
                ]
            }
        },
        "/v1/work/activity_profiles/setup/tracking_status_types": {
            "get": {
                "description": "This operation returns Tracking Status Types.",
                "operationId": "Retrieve Tracking Status Types",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all Tracking Status Types.",
                "tags": [
                    "Activity Profile Resources"
                ]
            }
        },
        "/v1/work/activity_profiles/setup/variance_check_types": {
            "get": {
                "description": "This operation returns all Variance Check Types.",
                "operationId": "Retrieve Variance Check Types",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all Variance Check Types.",
                "tags": [
                    "Activity Profile Resources"
                ]
            }
        },
        "/v1/work/activity_profiles/setup/work_rules": {
            "get": {
                "description": "This operation returns all Work Rules.",
                "operationId": "Retrieve Work Rules for Activities",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all Work Rules.",
                "tags": [
                    "Activity Profile Resources"
                ]
            }
        },
        "/v1/work/activity_profiles/{id}": {
            "delete": {
                "description": "This operation deletes an Activity Profile by ID.",
                "operationId": "Delete Activity Profile by ID",
                "parameters": [
                    {
                        "description": "The unique ID of an Activity Profile.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "<ul><li>[WFA-116002] - The system-defined activity profile cannot be deleted - Activity Profile name: {Name}.</li><li>[WFA-116003] - The Activity Profile is currently used by an Employee - Activity Profile name: {Name}.</li><li>[WFA-116004] - The Activity Profile is currently used by a Cell and/or Resource - Activity Profile name: {Name}.</li><li>[WFA-116005] - The Activity Profile is currently used by an Activity Event - Activity Profile name: {Name}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Profile. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Deletes an Activity Profile.",
                "tags": [
                    "Activity Profiles"
                ]
            },
            "get": {
                "description": "This operation returns an Activity Profile by ID.",
                "operationId": "Retrieve Activity Profile by ID",
                "parameters": [
                    {
                        "description": "The unique ID of an Activity Profile.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profile"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Profile. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns an Activity Profile.",
                "tags": [
                    "Activity Profiles"
                ]
            },
            "put": {
                "description": "This operation updates an Activity Profile by ID.",
                "operationId": "Update Activity Profile by ID",
                "parameters": [
                    {
                        "description": "The Update Activity Profile by ID request payload.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Profile"
                            }
                        }
                    },
                    "description": "The Update Activity Profile by ID request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profile"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000008] - The following parameter cannot be empty: id.</li><li>[WFA-000005] - ID from path does not match ID from request payload.</li><li>[WFA-000003] - You must specify the following parameter: name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-000015] - Name length exceeds 50 characters. Shorten the name.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-180001] - The name you specified {profileName} already exists. Enter a unique name.</li><li>[WFA-000015] - Description length exceeds 255 characters. Shorten the description.</li><li>[WFA-000016] - The field wfaDefault1TXT cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000015] - WfaDefault1TXT length exceeds N characters. Shorten the wfaDefault1TXT.</li><li>[WFA-000016] - The field wfaDefault2TXT cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000015] - WfaDefault2TXT length exceeds N characters. Shorten the wfaDefault1TXT.</li><li>[WFA-000016] - The field wfaDefault3TXT cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000015] - WfaDefault3TXT length exceeds N characters. Shorten the wfaDefault3TXT.</li><li>[WFA-000016] - The field wfaDefault4TXT cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000015] - WfaDefault4TXT length exceeds N characters. Shorten the wfaDefault3TXT.</li><li>[WFA-000018] - The following parameter cannot be a negative number: limitDirect.</li><li>[WFA-000019] - The limitDirect cannot be greater than 999.</li><li>[WFA-000018] - The following parameter cannot be a negative number: limitInDirect.</li><li>[WFA-000019] - The limitInDirect cannot be greater than 999.</li><li>[WFA-000018] - The following parameter cannot be a negative number: maxDurationAmount.</li><li>[WFA-000019] - The maxDurationAmount cannot be greater than 86400.</li><li>[WFA-000018] - The following parameter cannot be a negative number: minDurationAmount.</li><li>[WFA-000019] - The minDurationAmount cannot be greater than 86400.</li><li>[WFA-000003] - You must specify the following parameter: varBtwnActyMn.</li><li>[WFA-000018] - The following parameter cannot be a negative number: varBtwnActyMn.</li><li>[WFA-000019] - The varBtwnActyMn cannot be greater than 999.</li><li>[WFA-000003] - You must specify the following parameter: varFirstActyMn.</li><li>[WFA-000018] - The following parameter cannot be a negative number: varFirstActyMn.</li><li>[WFA-000019] - The varFirstActyMn cannot be greater than 999.</li><li>[WFA-000003] - You must specify the following parameter: varLastActyMn.</li><li>[WFA-000018] - The following parameter cannot be a negative number: varLastActyMn.</li><li>[WFA-000019] - The varLastActyMn cannot be greater than 999.</li><li>[WFA-000003] - You must specify the following parameter: multiStopVar.</li><li>[WFA-000018] - The following parameter cannot be a negative number: multiStopVar.</li><li>[WFA-000019] - The multiStopVar cannot be greater than 999.</li><li>[WFA-000018] - The following parameter cannot be a negative number: userUnderAllocationMaximumVarianceAllowed.</li><li>[WFA-000019] - The userUnderAllocationMaximumVarianceAllowed cannot be greater than 86400.</li><li>[WFA-000003] - You must specify the following parameter: doNotSetSpanOrphaned.</li><li>[WFA-000003] - You must specify the following parameter: userCheckUnderAllocation.</li><li>[WFA-000003] - You must specify the following parameter: userCheckOverAllocation.</li><li>[WFA-000003] - You must specify the following parameter: userCheckFutureActivities.</li><li>[WFA-000003] - You must specify the following parameter: userAllocationCheckNoActivityAllowed.</li><li>[WFA-000003] - You must specify the following parameter: formProfile.</li><li>[WFA-000006] - The following object reference is invalid: formProfile.</li><li>[WFA-000007] - Entity or entities not found. Type: formProfile. Name or names or ID or IDs: {qualifier/id}.</li><li>[WFA-000003] - You must specify the following parameter: codeProfile.</li><li>[WFA-000006] - The following object reference is invalid: codeProfile.</li><li>[WFA-000007] - Entity or entities not found. Type: codeProfile. Name or names or ID or IDs: {qualifier/id}.</li><li>[WFA-000003] - You must specify the following parameter: queryProfile.</li><li>[WFA-000006] - The following object reference is invalid: queryProfile.</li><li>[WFA-000007] - Entity or entities not found. Type: queryProfile. Name or names or ID or IDs: {qualifier/id}.</li><li>[WFA-000006] - The following object reference is invalid: defaultActivity.</li><li>[WFA-000007] - Entity or entities not found. Type: defaultActivity. Name or names or ID or IDs: {qualifier/id}.</li><li>[WFA-214000] - You cannot assign non default activity to be default for defaultActivity.</li><li>[WFA-000006] - The following object reference is invalid: idleActivity.</li><li>[WFA-000007] - Entity or entities not found. Type: idleActivity. Name or names or ID or IDs: {qualifier/id}.</li><li>[WFA-214000] - You cannot assign non default activity to be default for idleActivity.</li><li>[WFA-000006] - The following object reference is invalid: unpaidMealActivity.</li><li>[WFA-000007] - Entity or entities not found. Type: unpaidMealActivity. Name or names or ID or IDs: {qualifier/id}.</li><li>[WFA-214000] - You cannot assign non default activity to be default for unpaidMealActivity.</li><li>[WFA-000006] - The following object reference is invalid: paidMealActivity.</li><li>[WFA-000007] - Entity or entities not found. Type: paidMealActivity. Name or names or ID or IDs: {qualifier/id}.</li><li>[WFA-214000] - You cannot assign non default activity to be default for paidMealActivity.</li><li>[WFA-116006] - The maximum duration of: {MaximumDuration} HRS is below the minimum duration of: {MinimumDuration} HRS for Activity Profile name: {Name}.</li><li>[WFA-160005] - Duration {Duration} of less than 1 minute not allowed.</li><li>[WFA-160001] - Duration {Duration} more than 24 hours not allowed.</li><li>[WFA-000003] - The following parameter cannot be empty: version.</li><li>[WFA-000022] - The data was modified by another user while you were working on this page. Your edits can not be saved. Please refresh your data and try again.</li><li>[WFA-116010] - The system-defined activity profile cannot be modified - Activity Profile name: {Name}.</li><li>[WFA-000003] - You must specify the following parameter: varianceCheck.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Profile. Name or names or ID or IDs: [{refs}].</ul></li>"
                    }
                },
                "summary": "Updates an Activity Profile.",
                "tags": [
                    "Activity Profiles"
                ]
            }
        },
        "/v1/work/activity_shifts/multi_delete": {
            "post": {
                "description": "<p>This operation deletes one or more activity shifts.</p><br /><p>The associated Access Control Point is WFA_WORK_INTEGRATION_API.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of employees and the number of activity segments that can be processed in a single request.</p><ul><li>The <strong>Number of Employees</strong> cannot exceed 30.</li><li>The <strong>Number of Activity Segments</strong> cannot exceed 30.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>",
                "operationId": "Delete Activity Shifts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity_Shift_Delete_Find_Criteria"
                            }
                        }
                    },
                    "description": "The Delete Activity Shifts request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully deleted activity shifts for multiple employees.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/BulkActivitySegmentForRest"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WTK-201005] - Some of the activity segments were not deleted because of errors in the source data. Correct those errors and try again.</li><li>[WTK-201007] - You must specify an activity segment identifier for delete operations.</li><li>[WTK-200101] - The specified identifier is not associated with any activity segment. Include valid parameters and try again.</li><li>[WTK-200102] - The activity segment identifier must contain an activity segment ID or an activity with date and time parameters.</li><li>[WTK-200103] - The following parameters are required for activitySegmentIdentifier: startDateTime or endDateTime or durationDate with durationInSeconds.</li><ul>",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/BulkActivitySegmentForRest"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WTK-201006] - None of the activity segments were deleted because of errors in the source data. Correct those errors and try again.</li><li>[WTK-201007] - You must specify an activity segment identifier for delete operations.</li><li>[WTK-200101] - The specified identifier is not associated with any activity segment. Include valid parameters and try again.</li><li>[WTK-200102] - The activity segment identifier must contain an activity segment ID or an activity with date and time parameters.</li><li>[WTK-200103] - The following parameters are required for activitySegmentIdentifier: startDateTime or endDateTime or durationDate with durationInSeconds.</li><ul>"
                    }
                },
                "summary": "Deletes one or more activity shifts.",
                "tags": [
                    "Activity Shifts"
                ]
            }
        },
        "/v1/work/activity_shifts/multi_read": {
            "post": {
                "description": "<p>This operation returns activity shifts by object references.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of days multiplied by the number of employees that can be processed in a single request.</p><ul><li>The <strong>Number of Days</strong> multiplied by the <strong>Number of Employees</strong> cannot exceed 700.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>",
                "operationId": "Retrieve Activity Shifts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity_Shift_find_criteria"
                            }
                        }
                    },
                    "description": "The Retrieve Activity Shifts request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ActivityShiftExportResult"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000002] - The following collection cannot be empty: select.</li><li>[WTK-201800] - Invalid select option: selectOption.<li>[WTK-200005] - Employee is required.</li></li><li>[WTK-170000] - Invalid person number: personNumber.</li><li>[WTK-170001] - Invalid employee ID: id</li><li>[WTK-201816] - Number of employees multiplied by number of days exceeds the limit that equals {limit}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: activity. Name or names or ID or IDs: {id}.</li><li>[WFA-000007] - Entity or entities not found. Type: Activity Query. Name or names or ID or IDs: {id}.</li><li>[WFA-000007] - Entity or entities not found. Type: Symbolic Period. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns activity shifts by object references.",
                "tags": [
                    "Activity Shifts"
                ]
            }
        },
        "/v1/work/activity_shifts/multi_upsert": {
            "post": {
                "description": "<p>This operation creates or updates activity shifts from a third party source for multiple employees.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of employees, the number of activity segments, and the number of activity segments plus the number of result segments that can be processed in a single request.</p><ul><li>The <strong>Number of Employees</strong> cannot exceed 10.</li><li>The <strong>Number of Activity Segments</strong> cannot exceed 30.</li><li>The <strong>Number of Activity Segments</strong> plus the <strong>Number of Result Segments</strong> cannot exceed 120.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>",
                "operationId": "Create or Update Activity Shifts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/Bulk_Activity_Segment_Context"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Create or Update Activity Shifts request payload."
                },
                "responses": {
                    "200": {
                        "description": "Successfully created or updated activity shifts for multiple employees.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/BulkActivitySegmentForRest"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WTK-201002] - Some of the activity segments were not imported because of errors in the source data. Correct those errors and try again.</li><li>[WTK-200100] - You must specify an activity segment identifier for update operations.</li><li>[WTK-200101] - The specified identifier is not associated with any activity segment. Include valid parameters and try again.</li><li>[WTK-200102] - The activity segment identifier must contain an activity segment ID or an activity with date and time parameters.</li><li>[WTK-200103] - he following parameters are required for activitySegmentIdentifier: startDateTime or endDateTime or durationDate with durationInSeconds.</li><ul>",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/BulkActivitySegmentForRest"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WTK-201003] - None of the activity segments were imported because of errors in the source data. Correct those errors and try again.</li><li>[WTK-200100] - You must specify an activity segment identifier for update operations.</li><li>[WTK-200101] - The specified identifier is not associated with any activity segment. Include valid parameters and try again.</li><li>[WTK-200102] - The activity segment identifier must contain an activity segment ID or an activity with date and time parameters.</li><li>[WTK-200103] - he following parameters are required for activitySegmentIdentifier: startDateTime or endDateTime or durationDate with durationInSeconds.</li><ul>"
                    }
                },
                "summary": "Creates or updates one or more activity shifts.",
                "tags": [
                    "Activity Shifts"
                ]
            }
        },
        "/v1/work/activity_shifts/net_changes/multi_read": {
            "post": {
                "description": "<p>This operation returns Activity Shifts data. Required parameters include <code>select</code>, <code>lastRunDateTime</code>, and <code>endDateTime</code>.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of employees and the duration in seconds that can be processed in a single request.</p><ul><li>The <strong>Number of Employees</strong> cannot exceed 100.</li><li>The <strong>Duration in Seconds</strong> cannot exceed 86,400.</li></ul><p><em><strong>Note:</strong> The <strong>Duration in Seconds</strong> limit is defined as the number of seconds between <code>lastRunDateTime</code> and <code>endDateTime</code>.</em></p><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>",
                "operationId": "Retrieve Net Changes for Activity Shifts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NetChange_find_criteria"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully retrieved Activity Shifts data by specified parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/NetChangeResult"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request: <ul><li>[WTK-201800] - Invalid select option: selectOption.</li><li>[WTK-201801] - The lastRunDateTime is required.</li><li>[WTK-201802] - The endDateTime is required.</li><li>[WTK-201803] - The lastRunDateTime should be in the past.</li><li>[WTK-201804] - The endDateTime should be in the past.</li><li>[WTK-201805] - The lastRunDateTime should be before the endDateTime.</li><li>[WTK-201806] - Either employees OR hyperFind can be specified.</li><li>[WTK-201807] - Invalid hyperfind id or qualifier: id/name.</li><li>[WTK-201808] - Either activities OR activityQuery can be specified.</li><li>[WTK-170000] - Invalid person number: personNumber.</li><li>[WTK-170001] - Invalid employee ID: id</li><li>[WFC-111206] - Please provide at least 1 of id/qualifier in ref.</li><li>[WFA-000007] - Entity or entities not found. Type: activity. Name or names or ID or IDs: id.</li><li>[WFA-000007] - Entity or entities not found. Type: Activity Query. Name or names or ID or IDs: id.</li></ul>"
                    }
                },
                "summary": "Returns Activity Shifts data for multiple employees based on the request parameters.",
                "tags": [
                    "Activity Net Changes"
                ]
            }
        },
        "/v1/work/activity_totals": {
            "get": {
                "description": "This operation returns a list of activity totals for an employee over a specified timeframe.",
                "operationId": "Retrieve Activity Totals",
                "parameters": [
                    {
                        "description": "A unique identifier for a person. This is not an employee ID.",
                        "in": "query",
                        "name": "person_num",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The start date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "in": "query",
                        "name": "from",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The end date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "in": "query",
                        "name": "to",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "A symbolic identifier that represents a timeframe or a span of time.",
                        "in": "query",
                        "name": "timeframe_id",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Previous_Payperiod",
                                "Current_Payperiod",
                                "Next_Payperiod",
                                "Range_Of_Dates"
                            ],
                            "default": "Range_Of_Dates"
                        }
                    },
                    {
                        "description": "The filtering criteria for activity totals.",
                        "in": "query",
                        "name": "total_rollup_type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL, SHIFT, TIMEITEM, DAILY, PERIOD_TO_DATE, RAW, ACTIVITY_EVENT"
                            ],
                            "default": "ALL"
                        }
                    },
                    {
                        "description": "An enumeration of types available for grouping the activity totals records.",
                        "in": "query",
                        "name": "total_groupby_type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL, LOCATION_AND_JOB, COST_CENTER, LABOR_CATEGORY, PAYCODE, TIMEITEM_DETAIL, SEGMENT_DETAIL, ACTIVITY_SUMMARY"
                            ],
                            "default": "ALL"
                        }
                    },
                    {
                        "description": "The ID of a time item.",
                        "in": "query",
                        "name": "time_item_id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The apply date used to filter activity totals when total_rollup_type = DAILY in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "in": "query",
                        "name": "context_date",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The ID of an activity processed segment.",
                        "in": "query",
                        "name": "processed_segment_id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a list of activity totals.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Employee_Activity_Total_response"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request: <ul><li>A list of employees with at least one employee in the list is required.</li><li>The start date must be in ISO_LOCAL_DATE format (YYYY-MM-DD).</li><li>The end date must be in ISO_LOCAL_DATE format (YYYY-MM-DD).</li></ul>"
                    }
                },
                "summary": "Returns activity totals.",
                "tags": [
                    "Activity Totals"
                ]
            }
        },
        "/v1/work/activity_totals/multi_read": {
            "post": {
                "description": "<p>This operation returns a list of activity totals for specified employees and activities over a specified timeframe.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of activity totals and the number of activity totals grouped by time item details that can be processed in a single request.</p><ul><li>The <strong>Number of Activity Totals</strong> cannot exceed 150.</li><li>The <strong>Number of Activity Totals Grouped By Time Item Details</strong> cannot exceed 100.</li></ul><p><em><strong>Note:</strong> This service limit is enforced based on the <code>groupBy</code> request property. The <strong>Number of Activity Totals</strong> limit is enforced unless the <code>groupBy</code> property is set to <code>TIMEITEM_DETAIL</code>, in which case the <strong>Number of Activity Totals Grouped By Time Item Details</strong> limit is enforced.</em></p><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>",
                "operationId": "Retrieve Activity Totals for Multiple Employees",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity_Total_find_criteria"
                            }
                        }
                    },
                    "description": "An object representing search criteria filter for Activity Totals.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Employee_Activity_Total_response"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WTK-201806] - Either employees OR hyperFind can be specified</li><li>[WTK-201807] - Invalid hyperfind id or qualifier: {id}.</li><li>[WTK-201808] - Either activities OR activityQuery can be specified.</li><li>[WFA-000009] - Your request includes two or more of the following parameters: ids, qualifiers, refs. These parameters are mutually exclusive.</li><li>A list of employees with at least one employee in the list is required.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Activity Query. Name or names or ID or IDs: {id}.</li><li>[WFA-000007] - Entity or entities not found. Type: Activity. Name or names or ID or IDs: {id}.</li><li>[WFA-000007] - Entity or entities not found. Type: Symbolic Period. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns activity totals.",
                "tags": [
                    "Activity Totals"
                ]
            }
        },
        "/v1/work/activity_transactions/multi_read": {
            "post": {
                "description": "<p>This operation returns a list of activity transactions for the specified activity and its child activities..</p><br /><p>The associated Access Control Point is WFA_WORK_INTEGRATION_API.</p>",
                "operationId": "Retrieve Activity Transactions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity_Transactions_Export_criteria"
                            }
                        }
                    },
                    "description": "v1.0.work-activity_transactions.post.multi_read.request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity_Transactions_Export_Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<p>Bad Request:</p><ul><li>[WFA-000003] - You must specify the following parameter: activity.</li><li>[WFA-231101] - The startDate cannot be after the endDate.</li><li>[WFA-231102] - Invalid nextReadToken parameter.</li><li>[WFA-231100] - Invalid select option: option name.</li></ul>"
                    }
                },
                "summary": "Returns activity transactions.",
                "tags": [
                    "Activity Transactions"
                ]
            }
        },
        "/v1/work/customers": {
            "get": {
                "description": "This operation returns all Customers if no parameter is specified, all matching Customers if a name with wildcards is specified, or a particular Customer if a strict name is specified.",
                "operationId": "Retrieve All Customers or by Name",
                "parameters": [
                    {
                        "description": "The name of a Customer or a search phrase including a wildcard, which may return one or more Customers.",
                        "in": "query",
                        "name": "name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Customer"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Customer. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns all Customers, a list of Customers, or a particular Customer.",
                "tags": [
                    "Activity Customers"
                ]
            },
            "post": {
                "description": "This operation creates a Customer.",
                "operationId": "Create Customer",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    },
                    "description": "The Create Customer request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000016] - The field fullName cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000015] - FullName length exceeds N characters. Shorten the fullName.</li><li>[WFA-000015] - ContactName1 length exceeds N characters. Shorten the contactName1.</li><li>[WFA-000015] - ContactName2 length exceeds N characters. Shorten the contactName2.</li><li>[WFA-000015] - ContactName3 length exceeds N characters. Shorten the contactName3.</li><li>[WFA-000015] - Address1 length exceeds N characters. Shorten the address1.</li><li>[WFA-000015] - Address2 length exceeds N characters. Shorten the address2.</li><li>[WFA-000015] - Address3 length exceeds N characters. Shorten the address3.</li><li>[WFA-000015] - Phone1 length exceeds N characters. Shorten the phone1.</li><li>[WFA-000015] - Phone2 length exceeds N characters. Shorten the phone2.</li><li>[WFA-000015] - Phone3 length exceeds N characters. Shorten the phone3.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-000008] - The following parameter cannot be empty: fullName.</li><li>[WFA-119000] - The name is a duplicate of a name used previously - Customer name: {Name}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates a Customer.",
                "tags": [
                    "Activity Customers"
                ]
            }
        },
        "/v1/work/customers/multi_create": {
            "post": {
                "description": "This operation creates one or more Customers.",
                "operationId": "Create Customers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/Customer"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Create Customers request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Customer"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates one or more Customers.",
                "tags": [
                    "Activity Customers"
                ]
            }
        },
        "/v1/work/customers/multi_delete": {
            "post": {
                "description": "This operation deletes one or more Customers by object references.",
                "operationId": "Delete Customers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerRefs"
                            }
                        }
                    },
                    "description": "The Delete Customers request payload.",
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000038] - Some of the entities were not deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000039] - None of the entities were deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Deletes one or more Customers.",
                "tags": [
                    "Activity Customers"
                ]
            }
        },
        "/v1/work/customers/multi_read": {
            "post": {
                "description": "This operation returns one or more Customers by object references.",
                "operationId": "Retrieve Customers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerRefs"
                            }
                        }
                    },
                    "description": "The Retrieve Customers request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Customer"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000036] - Some of the entities were not exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Customer. Name or names or ID or IDs: [{ids}].</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Returns one or more Customers.",
                "tags": [
                    "Activity Customers"
                ]
            }
        },
        "/v1/work/customers/multi_update": {
            "post": {
                "description": "This operation updates one or more Customers.",
                "operationId": "Update Customers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/Customer"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Update Customers request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Customer"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Updates one or more Customers.",
                "tags": [
                    "Activity Customers"
                ]
            }
        },
        "/v1/work/customers/{id}": {
            "delete": {
                "description": "This operation deletes a Customer by ID.",
                "operationId": "Delete Customer by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a Customer.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "<ul><li>[WFA-119004] - The customer is currently used by an Activity - Customer name: {Name}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Customer. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Deletes a Customer.",
                "tags": [
                    "Activity Customers"
                ]
            },
            "get": {
                "description": "This operation returns a Customer by ID.",
                "operationId": "Retrieve Customer by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a Customer.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Customer. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns a Customer.",
                "tags": [
                    "Activity Customers"
                ]
            },
            "put": {
                "description": "This operation updates a Customer by ID.",
                "operationId": "Update Customer by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a Customer.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    },
                    "description": "The Update Customer by ID request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000016] - The field fullName cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000015] - FullName length exceeds N characters. Shorten the fullName.</li><li>[WFA-000015] - ContactName1 length exceeds N characters. Shorten the contactName1.</li><li>[WFA-000015] - ContactName2 length exceeds N characters. Shorten the contactName2.</li><li>[WFA-000015] - ContactName3 length exceeds N characters. Shorten the contactName3.</li><li>[WFA-000015] - Address1 length exceeds N characters. Shorten the address1.</li><li>[WFA-000015] - Address2 length exceeds N characters. Shorten the address2.</li><li>[WFA-000015] - Address3 length exceeds N characters. Shorten the address3.</li><li>[WFA-000015] - Phone1 length exceeds N characters. Shorten the phone1.</li><li>[WFA-000015] - Phone2 length exceeds N characters. Shorten the phone2.</li><li>[WFA-000015] - Phone3 length exceeds N characters. Shorten the phone3.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-000008] - The following parameter cannot be empty: fullName.</li><li>[WFA-119000] - The name is a duplicate of a name used previously - Customer name: {Name}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Customer. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Updates a Customer.",
                "tags": [
                    "Activity Customers"
                ]
            }
        },
        "/v1/work/employee_activities/multi_read": {
            "post": {
                "description": "<p>This operation returns the activities assigned to employees.</p><br /><p>The associated Access Control Point is WFA_WORK_INTEGRATION_API.</p>",
                "operationId": "Retrieve Activities for Multiple Employees",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityEmployeeRefs"
                            }
                        }
                    },
                    "description": "The Retrieve Activities for Multiple Employees request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/EmployeeActivityAssignments"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000036] - Some of the entities were not exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000037] - None of the entities were exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Returns activities assigned to employees.",
                "tags": [
                    "Activity Assignments"
                ]
            }
        },
        "/v1/work/field_definitions": {
            "get": {
                "description": "This operation returns all Field Definitions (active and inactive) if no parameter is specified or a particular Field Definition if a name is provided.",
                "operationId": "Retrieve All Field Definitions by Name",
                "parameters": [
                    {
                        "description": "The name of a Field Definition.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ActivitiesFieldDefinition_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Form Profile. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>"
                    }
                },
                "summary": "Returns all Field Definitions or a particular Field Definitions by name.",
                "tags": [
                    "Field Definitions"
                ]
            },
            "post": {
                "description": "This operation creates a Field Definition.",
                "operationId": "Create Field Definition",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivitiesFieldDefinition"
                            }
                        }
                    },
                    "description": "The Create Field Definition request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivitiesFieldDefinition_PublicAPI"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-000003] - You must specify the following parameter: name.</li><li>[WFA-000003] - You must specify the following parameter: fieldType.</li><li>[WFA-000003] - You must specify the following parameter: active.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000018] - The following parameter cannot be a negative number: fieldLength.</li><li>[WFA-000018] - The following parameter cannot be a negative number: scale.</li><li>[WFA-000018] - The following parameter cannot be a negative number: precision.</li><li>[WFA-000019] - The fieldLength cannot be greater than {limit}.</li><li>[WFA-000019] - The scale cannot be greater than {limit}.</li><li>[WFA-000019] - The precision cannot be greater than {limit}.</li><li>[WFA-122250] - The name is a duplicate of a name used previously - Field Definition name: {Name}.</li><li>[WFA-122252] - The system defined field definition cannot be updated or deleted - Field Definition name: {Name}.</li><li>[WFA-122253] - The field definition is currently used by an activity form - Field Definition name: {Name}</li><li>[WFA-122254] - The field definition is currently used by a result code - Field Definition name: {Name}.</li><li>[WFA-122255] - The field definition is currently used as an activity result - Field Definition name: {Name}.</li><li>[WFA-122256] - The field definition is currently used as an activity punch - Field Definition name: {Name}.</li><li>[WFA-122257] - The field definition cannot contain a value for the Field Length when the Data Type Id is Floating decimal or Numeric - Field Definition name: {Name}</li><li>[WFA-122258] - The field definition cannot contain a value for the Digits Left of Decimal when the Data Type Id is not Floating decimal - Field Definition name: {Name}</li><li>[WFA-122259] - The field definition cannot contain a value for the Digits Right of Decimal when the Data Type Id is not Floating decimal - Field Definition name: {Name}</li><li>[WFA-122266] - The field definition cannot be set as multi-select when Data Type ID is not Alpha numeric or Alpha numeric with slash with slash - Field Definition name: {Name}</li><li>[WFA-122267] - The field definition cannot have result codes assigned when Data Type ID is not Alpha numeric or Alpha numeric with slash with slash - Field Definition name: {Name}</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates a Field Definition.",
                "tags": [
                    "Field Definitions"
                ]
            }
        },
        "/v1/work/field_definitions/multi_create": {
            "post": {
                "description": "This operation creates one or more Field Definitions.",
                "operationId": "Create Field Definitions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/ActivitiesFieldDefinition"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Create Field Definitions request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ActivitiesFieldDefinition_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates one or more Field Definitions.",
                "tags": [
                    "Field Definitions"
                ]
            }
        },
        "/v1/work/field_definitions/multi_delete": {
            "post": {
                "description": "This operation deletes one or more Field Definitions.",
                "operationId": "Delete Field Definitions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FieldDefinitionRefs"
                            }
                        }
                    },
                    "description": "The Delete Field Definitions request payload.",
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000038] - Some of the entities were not deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000039] - None of the entities were deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Deletes one or more Field Definitions.",
                "tags": [
                    "Field Definitions"
                ]
            }
        },
        "/v1/work/field_definitions/multi_read": {
            "post": {
                "description": "This operation returns one or more Field Definitions by object references.",
                "operationId": "Retrieve Field Definitions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FieldDefinitionRefs"
                            }
                        }
                    },
                    "description": "The Retrieve Field Definitions request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ActivitiesFieldDefinition_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000036] - Some of the entities were not exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000037] - None of the entities were exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Returns one or more Field Definitions.",
                "tags": [
                    "Field Definitions"
                ]
            }
        },
        "/v1/work/field_definitions/multi_update": {
            "post": {
                "description": "This operation updates one or more Field Definitions.",
                "operationId": "Update Field Definitions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/ActivitiesFieldDefinition"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Update Field Definitions request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ActivitiesFieldDefinition_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Updates one or more Field Definitions.",
                "tags": [
                    "Field Definitions"
                ]
            }
        },
        "/v1/work/field_definitions/{id}": {
            "delete": {
                "description": "This operation deletes a Field Definition by ID.",
                "operationId": "Delete Field Definition by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a Field Definition.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "<ul><li>[WFA-122252] - The system-defined field definition cannot be updated or deleted - Field Definition name: {Name}.</li><li>[WFA-122253] - The field definition is currently used by an activity form or an activity results template - Field Definition name: {Name}.</li><li>[WFA-122255] - The field definition is currently used as an activity result - Field Definition name: {Name}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Field Definition. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Deletes a Field Definition.",
                "tags": [
                    "Field Definitions"
                ]
            },
            "get": {
                "description": "This operation returns a Field Definition by ID.",
                "operationId": "Retrieve Field Definition by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a Field Definition.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivitiesFieldDefinition_PublicAPI"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Field Definition. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns a Field Definition.",
                "tags": [
                    "Field Definitions"
                ]
            },
            "put": {
                "description": "This operation updates a Field Definition by ID.",
                "operationId": "Update Field Definition by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a Field Definition.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivitiesFieldDefinition"
                            }
                        }
                    },
                    "description": "The Update Field Definition request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivitiesFieldDefinition_PublicAPI"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-000003] - You must specify the following parameter: name.</li><li>[WFA-000003] - You must specify the following parameter: fieldType.</li><li>[WFA-000003] - You must specify the following parameter: active.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000018] - The following parameter cannot be a negative number: fieldLength.</li><li>[WFA-000018] - The following parameter cannot be a negative number: scale.</li><li>[WFA-000018] - The following parameter cannot be a negative number: precision.</li><li>[WFA-000019] - The fieldLength cannot be greater than {limit}.</li><li>[WFA-000019] - The scale cannot be greater than {limit}.</li><li>[WFA-000019] - The precision cannot be greater than {limit}.</li><li>[WFA-122250] - The name is a duplicate of a name used previously - Field Definition name: {Name}.</li><li>[WFA-122252] - The system defined field definition cannot be updated or deleted - Field Definition name: {Name}.</li><li>[WFA-122253] - The field definition is currently used by an activity form - Field Definition name: {Name}</li><li>[WFA-122254] - The field definition is currently used by a result code - Field Definition name: {Name}.</li><li>[WFA-122255] - The field definition is currently used as an activity result - Field Definition name: {Name}.</li><li>[WFA-122256] - The field definition is currently used as an activity punch - Field Definition name: {Name}.</li><li>[WFA-122257] - The field definition cannot contain a value for the Field Length when the Data Type Id is Floating decimal or Numeric - Field Definition name: {Name}</li><li>[WFA-122258] - The field definition cannot contain a value for the Digits Left of Decimal when the Data Type Id is not Floating decimal - Field Definition name: {Name}</li><li>[WFA-122259] - The field definition cannot contain a value for the Digits Right of Decimal when the Data Type Id is not Floating decimal - Field Definition name: {Name}</li><li>WFA-122263 - The system-defined field definition cannot be set as multi-select - Field Definition name: {Name}.</li><li>[WFA-122264] - The field type cannot be changed for the field definition that is currently being used as an activity result - Field Definition name: {Name}.</li><li>[WFA-122265] - The field type cannot be changed for the field definition that is currently being used by an activity form or an activity results template - Field Definition name: {Name}.</li><li>[WFA-122266] - The field definition cannot be set as multi-select when Data Type ID is not Alpha numeric or Alpha numeric with slash with slash - Field Definition name: {Name}</li><li>[WFA-122267] - The field definition cannot have result codes assigned when Data Type ID is not Alpha numeric or Alpha numeric with slash with slash - Field Definition name: {Name}</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Field Definition. Name or names or ID or IDs: [{ids}].</li></ul>"
                    }
                },
                "summary": "Updates a Field Definition.",
                "tags": [
                    "Field Definitions"
                ]
            }
        },
        "/v1/work/form_profiles": {
            "get": {
                "description": "This operation returns all form profiles without associated forms if no parameter is specified or a particular form profile if a name is provided.",
                "operationId": "Retrieve All Form Profiles or by Name",
                "parameters": [
                    {
                        "description": "The name of a form profile.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/FormProfile"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Form Profile. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>"
                    }
                },
                "summary": "Returns all form profiles or a particular form profile by name.",
                "tags": [
                    "Activity Form Profiles"
                ]
            },
            "post": {
                "description": "This operation creates a form profile.",
                "operationId": "Create Form Profile",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FormProfile"
                            }
                        }
                    },
                    "description": "The Create Form Profile request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormProfile"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-123000] - The name is a duplicate of a name used previously - Form Profile name: {Name}.</li>[WFA-000015] - Description length exceeds N characters. Shorten the description.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>_()/';#.,$%=!.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates a form profile.",
                "tags": [
                    "Activity Form Profiles"
                ]
            }
        },
        "/v1/work/form_profiles/multi_create": {
            "post": {
                "description": "This operation creates one or more form profiles.",
                "operationId": "Create Form Profiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/FormProfile"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Create Form Profiles request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/FormProfile"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates one or more form profiles.",
                "tags": [
                    "Activity Form Profiles"
                ]
            }
        },
        "/v1/work/form_profiles/multi_delete": {
            "post": {
                "description": "This operation deletes one or more form profiles.",
                "operationId": "Delete Form Profiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FormProfileRefs"
                            }
                        }
                    },
                    "description": "The Delete Form Profiles request payload.",
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000038] - Some of the entities were not deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000039] - None of the entities were deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Deletes one or more form profiles.",
                "tags": [
                    "Activity Form Profiles"
                ]
            }
        },
        "/v1/work/form_profiles/multi_read": {
            "post": {
                "description": "This operation returns form profiles according to the specified object references.",
                "operationId": "Retrieve Form Profiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FormProfileRefs"
                            }
                        }
                    },
                    "description": "The Retrieve Form Profiles request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/FormProfile"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000036] - Some of the entities were not exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000037] - None of the entities were exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Returns form profiles by object references.",
                "tags": [
                    "Activity Form Profiles"
                ]
            }
        },
        "/v1/work/form_profiles/multi_update": {
            "post": {
                "description": "This operation updates one or more form profiles.",
                "operationId": "Update Form Profiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/FormProfile"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Update Form Profiles request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/FormProfile"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Updates one or more form profiles.",
                "tags": [
                    "Activity Form Profiles"
                ]
            }
        },
        "/v1/work/form_profiles/{id}": {
            "delete": {
                "description": "This operation deletes a form profile by ID.",
                "operationId": "Delete Form Profile by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a form profile.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "<ul><li>[WFA-122001] - The system-defined form profile cannot be deleted - Form Profile name: {Name}.</li><li>[WFA-122002] - The form profile is currently used by an activity profile - Form Profile name: {Name}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Form Profile. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>"
                    }
                },
                "summary": "Deletes a form profile.",
                "tags": [
                    "Activity Form Profiles"
                ]
            },
            "get": {
                "description": "This operation returns a form profile by ID.",
                "operationId": "Retrieve Form Profile by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a form profile.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormProfile"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Form Profile. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>"
                    }
                },
                "summary": "Returns a form profile.",
                "tags": [
                    "Activity Form Profiles"
                ]
            },
            "put": {
                "description": "This operation updates a form profile by ID.",
                "operationId": "Update Form Profile by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a form profile.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FormProfile"
                            }
                        }
                    },
                    "description": "The Update Form Profile by ID request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormProfile"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000005] - ID from path does not match ID from request payload.</li><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-123000] - The name is a duplicate of a name used previously - Form Profile name: {Name}.</li><li>[WFA-000015] - Description length exceeds N characters. Shorten the description.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>_()/';#.,$%=!.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Form Profile. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>"
                    }
                },
                "summary": "Updates a form profile.",
                "tags": [
                    "Activity Form Profiles"
                ]
            }
        },
        "/v1/work/forms": {
            "get": {
                "description": "This operation returns all Activity forms if no parameter is specified or a particular form if a name is provided.",
                "operationId": "Retrieve All Activity Forms or by Name",
                "parameters": [
                    {
                        "description": "The name of an Activity form.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Form_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Activity Form. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns all Activity form or a particular form by name.",
                "tags": [
                    "Activity Forms"
                ]
            },
            "post": {
                "description": "This operation creates and returns an Activity form.",
                "operationId": "Create Activity Form",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Form"
                            }
                        }
                    },
                    "description": "The Create Activity Form request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Form_PublicAPI"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000003] - You must specify the following parameter: formCode.</li><li>[WFA-000008] - The following parameter cannot be empty: formCode.</li><li>[WFA-000016] - The field formCode cannot contain any of the following characters:&_*%?:;=()/[]&bsol;|#@<>.</li><li>[WFA-122519] - The form code is invalid: {formCode}. A valid form code cannot contain more than {MaxLength} characters.</li><li>[WFA-122500] - The form code is a duplicate of a form code used previously - Form Code: {formCode}.</li><li>[WFA-122502] - The form code is invalid: {formCode}. The range between 90000 and 99999 is reserved for system-defined forms.</li><li>[WFA-000003] - You must specify the following parameter: description.</li><li>[WFA-000008] - The following parameter cannot be empty: description.</li><li>[WFA-122507] - The form description is invalid. A valid form description cannot contain more than 255 characters.</li><li>[WFA-000003] - You must specify the following parameter: formType.</li><li>[WFA-000003] - You must specify the following parameter: verifyBiometric.</li><li>[WFA-122516] - The form time-out is required.</li><li>[WFA-122508] - The form time-out is invalid: {timeOut}. A valid form time-out value must be an integer between {MinValue} and {MaxValue}.</li><li>[WFA-000003] - You must specify the following parameter: fieldDefinition.</li><li>[WFA-122514] - The field definition is a duplicate for this form - Field Definition name: {name}.</li><li>[WFA-000003] - You must specify the following parameter: validationType.</li><li>[WFA-000003] - You must specify the following parameter: entryType.</li><li>[WFA-000003] - You must specify the following parameter: fieldType.</li><li>[WFA-000003] - You must specify the following parameter: inputSourceType.</li><li>[WFA-000003] - You must specify the following parameter: offline.</li><li>[WFA-000006] - The following object reference is invalid: localePolicy.</li><li>[WFA-122506] - The form description is required.</li><li>[WFA-122509] - The form type is unknown.</li><li>[WFA-122513] - The form biometric verification value is invalid.</li><li>[WFA-122750] - The step prompt is required.</li><li>[WFA-122751] - The step prompt is invalid: {StepPrompt}. A valid step prompt cannot contain more than {MaxChars} characters.</li><li>[WFA-122760] - The step prompt is invalid: {StepPrompt}. A valid step prompt cannot contain any of the following characters:{ForbiddenCharacters}</li><li>[WFA-122759] - {StepPrompt} - Step Length is required for the Field Definition.</li><li>[WFA-122755] - {StepPrompt} - Step Length is invalid: {StepLength}. A valid length is a number between 1 and {MaxLength}.</li><li>[WFA-122756] - {StepPrompt} - Step Length is not allowed for the Field Definition.</li><li>[WFA-122757] - {StepPrompt} - Step Digits left of the decimal separator is not allowed for this Field Definition.</li><li>[WFA-122758] - {StepPrompt} - Step Digits right of the decimal separator is not allowed for this Field Definition.</li><li>[WFA-122752] - {StepPrompt} - Step Default Value is invalid: {StepDefault}. A valid default value cannot contain more than {StepLength} characters.</li><li>[WFA-122761] - {StepPrompt} - Step Default Value is invalid: {StepDefault}. A valid default value cannot contain any of the following characters:{ForbiddenCharacters}</li><li>[WFA-122753] - {StepPrompt} - {Value} is invalid. The value cannot contain more than {MaxCount} digits.</li><li>[WFA-122754] - {StepPrompt} - {Value} is invalid. Digits Right of Decimal value cannot contain more than {MaxCount} digits.</li><li>[WFA-216006] - {stepPrompt} - Property {paramName} is not supported for a field definition. You can omit or set default value.</li><li>[WFA-122764] - {StepPrompt} - The Digits left of the decimal separator must be in the range between {MinValue} and {MaxValue}.</li><li>[WFA-122765] - {StepPrompt} - The Digits right of the decimal separator must be in the range between {MinValue} and {MaxValue}.</li><li>[WFA-216010] - {stepPrompt} - Maximum Value must be greater or equal to Minimum Value.</li><li>[WFA-216011] - {stepPrompt} - Property {paramName} is not supported for a field definition.</li><li>[WFA-122501] - The form code is required.</li><li>[WFA-216013] - Non-result type field definition {fieldDefinition} cannot be assigned to a step.</li><li>[WFA-216014] - Result type field definition {fieldDefinition} cannot be assigned to a step.</li><li>[WFA-216015] - Field definition {fieldDefinition} is not compatible with form type {formType}.</li><li>[WFA-216016] - {stepPrompt} - Property {paramName} is not supported for a control step.</li><li>[WFA-216017] - {stepPrompt} - Property {paramName} is not supported for a control step. You can omit or set default value.</li><li>[WFA-216017] - {stepPrompt} - Property {paramName} is not supported for a control step. You can omit or set default value.</li><li>[WFA-216018] - Offline form cannot contain control step: {stepPrompt}.</li><li>[WFA-216022] - Control type {controlType} is not compatible with form type {formType}.</li><li>[WFA-216023] - The following field definitions/controls are mutually exclusive: {entities}.</li><li>[WFA-216023] - The following field definitions/controls are mutually exclusive: {entities}.</li><li>[WFA-216024] - {dependentEntity} cannot be added without {entities}.</li><li>[WFA-216025] - The following control types cannot be added to Form several times: {controlType}.</li><li>[WFA-216026] - One of the following items is required to be added for this form type: {entities}.</li><li>[WFA-216028] - At least one of the following items is required: {entities} or any other result-type Field Definitions.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Form. Name or names or ID or IDs: [{id}].</li></ul>"
                    }
                },
                "summary": "Creates an Activity form.",
                "tags": [
                    "Activity Forms"
                ]
            }
        },
        "/v1/work/forms/multi_create": {
            "post": {
                "description": "This operation creates and returns Activity forms.",
                "operationId": "Create Activity Forms",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/Form"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Create Activity Forms request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Form_PartialPublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates and returns Activity forms.",
                "tags": [
                    "Activity Forms"
                ]
            }
        },
        "/v1/work/forms/multi_delete": {
            "post": {
                "description": "This operation deletes Activity forms.",
                "operationId": "Delete Activity Forms",
                "requestBody": {
                    "$ref": "#/components/requestBodies/FormRefs"
                },
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000038] - Some of the entities were not deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000039] - None of the entities were deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Deletes Activity forms.",
                "tags": [
                    "Activity Forms"
                ]
            }
        },
        "/v1/work/forms/multi_read": {
            "post": {
                "description": "This operation returns a list of Activity forms by object references.",
                "operationId": "Retrieve Activity Forms",
                "requestBody": {
                    "$ref": "#/components/requestBodies/FormRefs"
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Form_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000036] - Some of the entities were not exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000037] - None of the entities were exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Returns Activity forms.",
                "tags": [
                    "Activity Forms"
                ]
            }
        },
        "/v1/work/forms/multi_update": {
            "post": {
                "description": "This operation updates and returns Activity forms.",
                "operationId": "Update Activity Forms",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/Form"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Update Activity Forms request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Form_PartialPublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Updates and returns Activity forms.",
                "tags": [
                    "Activity Forms"
                ]
            }
        },
        "/v1/work/forms/setup/control_types": {
            "get": {
                "description": "This operation returns all control types or a single applicable control type by ID.",
                "operationId": "Retrieve All Control Types or Only Applicable Type",
                "parameters": [
                    {
                        "description": "The ID of a form type.",
                        "in": "query",
                        "name": "formtypeid",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all control types.",
                "tags": [
                    "Activity Form Resources"
                ]
            }
        },
        "/v1/work/forms/setup/entry_types": {
            "get": {
                "description": "This operation returns all entry types.",
                "operationId": "Retrieve All Entry Types",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all entry types.",
                "tags": [
                    "Activity Form Resources"
                ]
            }
        },
        "/v1/work/forms/setup/form_types": {
            "get": {
                "description": "This operation returns all form types complete statuses.",
                "operationId": "Retrieve All Form Types",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all form types complete statuses.",
                "tags": [
                    "Activity Form Resources"
                ]
            }
        },
        "/v1/work/forms/setup/input_source_types": {
            "get": {
                "description": "This operation returns all input source types.",
                "operationId": "Retrieve All Input Source Types",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all input source types.",
                "tags": [
                    "Activity Form Resources"
                ]
            }
        },
        "/v1/work/forms/setup/offline_forms": {
            "get": {
                "description": "This operation returns all offline forms.",
                "operationId": "Retrieve Offline Forms",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Form"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all offline forms.",
                "tags": [
                    "Activity Form Resources"
                ]
            }
        },
        "/v1/work/forms/setup/validation_types": {
            "get": {
                "description": "This operation returns all validation types.",
                "operationId": "Retrieve All Validation Types",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all validation types.",
                "tags": [
                    "Activity Form Resources"
                ]
            }
        },
        "/v1/work/forms/{id}": {
            "delete": {
                "description": "This operation deletes an Activity form by ID.",
                "operationId": "Delete Activity Form by ID",
                "parameters": [
                    {
                        "description": "The unique ID of an Activity form.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "<ul><li>[WFA-122504] - The form is currently used as an activity punch - Form Code: {formCode}.</li><li>[WFA-122505] - The form is currently used by a form profile - Form Code: {formCode}.</li><li>[WFA-122503] - The system-defined form cannot be modified - Form Code: {formCode}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Form. Name or names or ID or IDs: [{id}/{qualifier}].</li><li>[WFA-122504] - The form is currently used as an activity punch - Form Code: {formCode}.</li><li>[WFA-122505] - The form is currently used by a form profile - Form Code: {formCode}.</li><li>[WFA-122503] - The system-defined form cannot be modified - Form Code: {formCode}.</li></ul>"
                    }
                },
                "summary": "Deletes an Activity form.",
                "tags": [
                    "Activity Forms"
                ]
            },
            "get": {
                "description": "This operation returns an Activity form by ID.",
                "operationId": "Retrieve Activity Form by ID",
                "parameters": [
                    {
                        "description": "The unique ID of an Activity form.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Form_PublicAPI"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Activity Form. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns an Activity form.",
                "tags": [
                    "Activity Forms"
                ]
            },
            "put": {
                "description": "This operation updates and returns an Activity form by ID.",
                "operationId": "Update Activity Form by ID",
                "parameters": [
                    {
                        "description": "The unique ID of an Activity form.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Form"
                            }
                        }
                    },
                    "description": "The Update Activity Form by ID request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Form_PublicAPI"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000003] - You must specify the following parameter: id.</li><li>[WFA-000003] - You must specify the following parameter: version.</li><li>[WFA-000005] - ID from path does not match ID from request payload.</li><li>[WFA-000003] - You must specify the following parameter: formCode.</li><li>[WFA-000008] - The following parameter cannot be empty: formCode.</li><li>[WFA-000016] - The field formCode cannot contain any of the following characters:&_*%?:;=()/[]&bsol;|#@<>.</li><li>[WFA-122519] - The form code is invalid: {formCode}. A valid form code cannot contain more than {MaxLength} characters.</li><li>[WFA-122500] - The form code is a duplicate of a form code used previously - Form Code: {formCode}.</li><li>[WFA-122502] - The form code is invalid: {formCode}. The range between 90000 and 99999 is reserved for system-defined forms.</li><li>[WFA-000003] - You must specify the following parameter: description.</li><li>[WFA-000008] - The following parameter cannot be empty: description.</li><li>[WFA-122507] - The form description is invalid. A valid form description cannot contain more than 255 characters.</li><li>[WFA-000003] - You must specify the following parameter: formType.</li><li>[WFA-000003] - You must specify the following parameter: verifyBiometric.</li><li>[WFA-122516] - The form time-out is required.</li><li>[WFA-122508] - The form time-out is invalid: {timeOut}. A valid form time-out value must be an integer between {MinValue} and {MaxValue}.</li><li>[WFA-000003] - You must specify the following parameter: fieldDefinition.</li><li>[WFA-122514] - The field definition is a duplicate for this form - Field Definition name: {name}.</li><li>[WFA-000003] - You must specify the following parameter: validationType.</li><li>[WFA-000003] - You must specify the following parameter: entryType.</li><li>[WFA-000003] - You must specify the following parameter: fieldType.</li><li>[WFA-000003] - You must specify the following parameter: inputSourceType.</li><li>[WFA-122503] - The system-defined form cannot be modified - Form Code: {TransactionCode}.</li><li>[WFA-122511] - The form code cannot be updated.</li><li>[WFA-000003] - You must specify the following parameter: offline.</li><li>[WFA-000006] - The following object reference is invalid: localePolicy.</li><li>[WFA-122506] - The form description is required.</li><li>[WFA-122509] - The form type is unknown.</li><li>[WFA-122513] - The form biometric verification value is invalid.</li><li>[WFA-122518] - The form biometric verification value is required.</li><li>[WFA-122750] - The step prompt is required.</li><li>[WFA-122751] - The step prompt is invalid: {StepPrompt}. A valid step prompt cannot contain more than {MaxChars} characters.</li><li>[WFA-122760] - The step prompt is invalid: {StepPrompt}. A valid step prompt cannot contain any of the following characters:{ForbiddenCharacters}</li><li>[WFA-122759] - {StepPrompt} - Step Length is required for the Field Definition.</li><li>[WFA-122755] - {StepPrompt} - Step Length is invalid: {StepLength}. A valid length is a number between 1 and {MaxLength}.</li><li>[WFA-122756] - {StepPrompt} - Step Length is not allowed for the Field Definition.</li><li>[WFA-122757] - {StepPrompt} - Step Digits left of the decimal separator is not allowed for this Field Definition.</li><li>[WFA-122758] - {StepPrompt} - Step Digits right of the decimal separator is not allowed for this Field Definition.</li><li>[WFA-122752] - {StepPrompt} - Step Default Value is invalid: {StepDefault}. A valid default value cannot contain more than {StepLength} characters.</li><li>[WFA-122761] - {StepPrompt} - Step Default Value is invalid: {StepDefault}. A valid default value cannot contain any of the following characters:{ForbiddenCharacters}</li><li>[WFA-122753] - {StepPrompt} - {Value} is invalid. The value cannot contain more than {MaxCount} digits.</li><li>[WFA-122754] - {StepPrompt} - {Value} is invalid. Digits Right of Decimal value cannot contain more than {MaxCount} digits.</li><li>[WFA-216006] - {stepPrompt} - Property {paramName} is not supported for a field definition. You can omit or set default value.</li><li>[WFA-122764] - {StepPrompt} - The Digits left of the decimal separator must be in the range between {MinValue} and {MaxValue}.</li><li>[WFA-122765] - {StepPrompt} - The Digits right of the decimal separator must be in the range between {MinValue} and {MaxValue}.</li><li>[WFA-216010] - {stepPrompt} - Maximum Value must be greater or equal to Minimum Value.</li><li>[WFA-216011] - {stepPrompt} - Property {paramName} is not supported for a field definition.</li><li>[WFA-122501] - The form code is required.</li><li>[WFA-216005] - Form offline property cannot be changed.</li><li>[WFA-216013] - Non-result type field definition {fieldDefinition} cannot be assigned to a step.</li><li>[WFA-216014] - Result type field definition {fieldDefinition} cannot be assigned to a step.</li><li>[WFA-216015] - Field definition {fieldDefinition} is not compatible with form type {formType}.</li><li>[WFA-216016] - {stepPrompt} - Property {paramName} is not supported for a control step.</li><li>[WFA-216017] - {stepPrompt} - Property {paramName} is not supported for a control step. You can omit or set default value.</li><li>[WFA-216017] - {stepPrompt} - Property {paramName} is not supported for a control step. You can omit or set default value.</li><li>[WFA-216018] - Offline form cannot contain control step: {stepPrompt}.</li><li>[WFA-216019] - Form type cannot be changed after form creation. Form: {formName}, form Type : {formType}.</li><li>[WFA-216022] - Control type {controlType} is not compatible with form type {formType}.</li><li>[WFA-216023] - The following field definitions/controls are mutually exclusive: {entities}.</li><li>[WFA-216024] - {dependentEntity} cannot be added without {entities}.</li><li>[WFA-216025] - The following control types cannot be added to Form several times: {controlType}.</li><li>[WFA-216026] - One of the following items is required to be added for this form type: {entities}.</li><li>[WFA-216028] - At least one of the following items is required: {entities} or any other result-type Field Definitions.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Form. Name or names or ID or IDs: [{id}].</li></ul>"
                    },
                    "409": {
                        "description": "<ul><li>[WFA-000022] - The data was modified by another user while you were working on this page. Your edits can not be saved. Please refresh your data and try again.</li></ul>"
                    }
                },
                "summary": "Updates an Activity form.",
                "tags": [
                    "Activity Forms"
                ]
            }
        },
        "/v1/work/pay_code_actions": {
            "get": {
                "description": "This operation returns a list of all paycode actions or returns a single paycode action by name.",
                "operationId": "Retrieve All Paycode Actions or by Name",
                "parameters": [
                    {
                        "description": "The name of a paycode action.",
                        "in": "query",
                        "name": "name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/PayCodeAction"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: PayCodeAction. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns all paycode actions or one by name.",
                "tags": [
                    "Paycode Actions"
                ]
            },
            "post": {
                "description": "This operation creates a paycode action.",
                "operationId": "Create Paycode Action",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayCodeAction"
                            }
                        }
                    },
                    "description": "The Create Paycode Action request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PayCodeAction"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000003] - You must specify the following parameter: {paramName}.</li><li>[WFA-000008] - The following parameter cannot be empty: {paramName}.</li><li>[WFA-000027] - The two instances of the following parameter must have the same value: {paramName}.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>WFA-000003 - You must specify the following parameter: name.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>WFA-000018 - The following parameter cannot be a negative number: level.</li><li>WFA-000018 - The following parameter cannot be a negative number: sequence.</li><li>WFA-000004 - The following parameter must be null: header.id.</li><li>WFA-212009 - You cannot add a level 2 - 4 activity under a pre-defined activity.</li><li>WFA-212011 - Activity cannot contain labor category entry lists with the same labor category. Labor Category: {paramName}, Labor Category Entry List: {paramName}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates a paycode action.",
                "tags": [
                    "Paycode Actions"
                ]
            }
        },
        "/v1/work/pay_code_actions/multi_create": {
            "post": {
                "description": "This operation creates one or more Paycode Actions.",
                "operationId": "Create Paycode Actions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/PayCodeAction"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Create Paycode Actions request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/PayCodeAction"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates one or more Paycode Actions.",
                "tags": [
                    "Paycode Actions"
                ]
            }
        },
        "/v1/work/pay_code_actions/multi_delete": {
            "post": {
                "description": "This operation deletes one or more Paycode Actions by object references.",
                "operationId": "Delete Paycode Actions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayCodeActionRefs"
                            }
                        }
                    },
                    "description": "The Delete Paycode Actions request payload.",
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000038] - Some of the entities were not deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000039] - None of the entities were deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>."
                    }
                },
                "summary": "Deletes one or more Paycode Actions.",
                "tags": [
                    "Paycode Actions"
                ]
            }
        },
        "/v1/work/pay_code_actions/multi_read": {
            "post": {
                "description": "This operation returns paycode actions by object references.",
                "operationId": "Retrieve Paycode Actions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayCodeActionRefs"
                            }
                        }
                    },
                    "description": "The Retrieve Paycode Actions request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/PayCodeAction"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000036] - Some of the entities were not exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000037] - None of the entities were exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Returns paycode actions.",
                "tags": [
                    "Paycode Actions"
                ]
            }
        },
        "/v1/work/pay_code_actions/multi_update": {
            "post": {
                "description": "This operation updates one or more Paycode Actions.",
                "operationId": "Update Paycode Actions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/PayCodeAction"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Update Paycode Actions request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/PayCodeAction"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Updates one or more Paycode Actions.",
                "tags": [
                    "Paycode Actions"
                ]
            }
        },
        "/v1/work/pay_code_actions/{id}": {
            "delete": {
                "description": "This operation deletes a Paycode Action by ID.",
                "operationId": "Delete Paycode Action by ID",
                "parameters": [
                    {
                        "description": "The ID of a Paycode Action.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000003] - You must specify the following parameter: {paramName}.</li><li>[WFA-000008] - The following parameter cannot be empty: {paramName}.</li><li>[WFA-000027] - The two instances of the following parameter must have the same value: {paramName}.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>WFA-000003 - You must specify the following parameter: name.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>WFA-000018 - The following parameter cannot be a negative number: level.</li><li>WFA-000018 - The following parameter cannot be a negative number: sequence.</li><li>WFA-000004 - The following parameter must be null: header.id.</li><li>WFA-212009 - You cannot add a level 2 - 4 activity under a pre-defined activity.</li><li>WFA-212011 - Activity cannot contain labor category entry lists with the same labor category. Labor Category: {paramName}, Labor Category Entry List: {paramName}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: PayCodeAction. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Deletes a Paycode Action.",
                "tags": [
                    "Paycode Actions"
                ]
            },
            "get": {
                "description": "This operation returns a paycode action by ID.",
                "operationId": "Retrieve Paycode Action by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a paycode action.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PayCodeAction"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: PayCodeAction. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns a paycode action.",
                "tags": [
                    "Paycode Actions"
                ]
            },
            "put": {
                "description": "This operation updates a Paycode Action by ID.",
                "operationId": "Update Paycode Action by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a PayCodeAction.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayCodeAction"
                            }
                        }
                    },
                    "description": "The Update Paycode Action by ID request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PayCodeAction"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000003] - You must specify the following parameter: {paramName}.</li><li>[WFA-000008] - The following parameter cannot be empty: {paramName}.</li><li>[WFA-000027] - The two instances of the following parameter must have the same value: {paramName}.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>WFA-000003 - You must specify the following parameter: name.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>WFA-000018 - The following parameter cannot be a negative number: level.</li><li>WFA-000018 - The following parameter cannot be a negative number: sequence.</li><li>WFA-000004 - The following parameter must be null: header.id.</li><li>WFA-212009 - You cannot add a level 2 - 4 activity under a pre-defined activity.</li><li>WFA-212011 - Activity cannot contain labor category entry lists with the same labor category. Labor Category: {paramName}, Labor Category Entry List: {paramName}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: PayCodeAction. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Updates a Paycode Action.",
                "tags": [
                    "Paycode Actions"
                ]
            }
        },
        "/v1/work/queries": {
            "get": {
                "description": "This operation returns all Activity queries if no parameter is specified or a particular query if a name is provided.",
                "operationId": "Retrieve All Activity Queries or by Name",
                "parameters": [
                    {
                        "description": "The name of an Activity query.",
                        "in": "query",
                        "name": "name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Query_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Query. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns all Activity queries or a particular query by name.",
                "tags": [
                    "Activity Queries"
                ]
            },
            "post": {
                "description": "This operation creates an Activity query.",
                "operationId": "Create Activity Query",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Query"
                            }
                        }
                    },
                    "description": "The Create Activity Query request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Query_PublicAPI"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-180001] - The name you specified {queryName} already exists. Enter a unique name.</li><li>[WFA-213000] - Your query cannot use more than two time periods. Enter a valid number of time periods.</li><li>[WFA-213001] - Your query cannot have more than one time period for {dateRangeType}. Select a different activity date for each time period.</li><li>[WFA-213002] - The time period for {dateRangeType} has invalid start or end day values. Modify the time period so day values are numeric and start day is before or the same as end day.</li><li>[WFA-213003] - The activity name {nameSearch} cannot contain more than 3 activity level delimiters (/).  Enter a valid activity name.</li><li>[WFA-213004] - You cannot assign an Organization Set of the type Manager Organizational Groups to an activity query. Organizational Set name or ID: {name/id}.</li><li>[WFA-213006] - The time period for {dateRangeType} has invalid start or end day values. Modify the time period so day values are not allowed to be more then 999999.</li><li>[WFA-213007] - {paramName} cannot be selected if one of the following fields is specified: {paramNames}</li><li>[WFA-213009] - The field {paramName} is not applicable for queries with the following type: {queryType}.</li><li>[WFA-213010] - The number of activities exceeds the following service limit: {limit}.</li><li>[WFA-213011] - The system-defined activity cannot be assigned to a query. Activity: {combinedName}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates an Activity query.",
                "tags": [
                    "Activity Queries"
                ]
            }
        },
        "/v1/work/queries/multi_create": {
            "post": {
                "description": "This operation creates one or more Activity queries.",
                "operationId": "Create Activity Queries",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/Query"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Create Activity Queries request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Query_PartialPublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates one or more Activity queries.",
                "tags": [
                    "Activity Queries"
                ]
            }
        },
        "/v1/work/queries/multi_delete": {
            "post": {
                "description": "This operation deletes one or more Activity queries.",
                "operationId": "Delete Activity Queries",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QueryRefs"
                            }
                        }
                    },
                    "description": "The Delete Activity Queries request payload.",
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000038] - Some of the entities were not deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000039] - None of the entities were deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Deletes one or more Activity queries.",
                "tags": [
                    "Activity Queries"
                ]
            }
        },
        "/v1/work/queries/multi_read": {
            "post": {
                "description": "This operation returns one or more Activity queries by object references.",
                "operationId": "Retrieve Activity Queries",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QueryRefs"
                            }
                        }
                    },
                    "description": "The Retrieve Activity Queries request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Query_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000036] - Some of the entities were not exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000037] - None of the entities were exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Returns one or more Activity queries by object references.",
                "tags": [
                    "Activity Queries"
                ]
            }
        },
        "/v1/work/queries/multi_update": {
            "post": {
                "description": "This operation updates one or more Activity queries.",
                "operationId": "Update Activity Queries",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/Query"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Update Activity Queries request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Query_PartialPublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Updates one or more Activity queries.",
                "tags": [
                    "Activity Queries"
                ]
            }
        },
        "/v1/work/queries/setup/date_types": {
            "get": {
                "description": "This operation returns all Activity query date range date types.",
                "operationId": "Retrieve All Activity Query Date Range Date Types",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all Activity query date range date types.",
                "tags": [
                    "Activity Query Resources"
                ]
            }
        },
        "/v1/work/queries/setup/query_types": {
            "get": {
                "description": "This operation returns all query types.",
                "operationId": "Retrieve All Query Types",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all query types.",
                "tags": [
                    "Activity Query Resources"
                ]
            }
        },
        "/v1/work/queries/{id}": {
            "delete": {
                "description": "This operation deletes an Activity query by ID.",
                "operationId": "Delete Activity Query by ID",
                "parameters": [
                    {
                        "description": "The unique ID of an Activity query.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "<ul><li>[WFA-180016] - The query {queryName} is a system-defined query and cannot be deleted.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Query. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Deletes an Activity query.",
                "tags": [
                    "Activity Queries"
                ]
            },
            "get": {
                "description": "This operation returns an Activity query by ID.",
                "operationId": "Retrieve Activity Query by ID",
                "parameters": [
                    {
                        "description": "The unique ID of an Activity query.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Query_PublicAPI"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Query. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns an Activity query.",
                "tags": [
                    "Activity Queries"
                ]
            },
            "put": {
                "description": "This operation updates an Activity query by ID.",
                "operationId": "Update Activity Query by ID",
                "parameters": [
                    {
                        "description": "The unique ID of an Activity query.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Query"
                            }
                        }
                    },
                    "description": "The Update Activity Query by ID request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Query_PublicAPI"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-180001] - The name you specified {queryName} already exists. Enter a unique name.</li><li>[WFA-213000] - Your query cannot use more than two time periods. Enter a valid number of time periods.</li><li>[WFA-213001] - Your query cannot have more than one time period for {dateRangeType}. Select a different activity date for each time period.</li><li>[WFA-213002] - The time period for {dateRangeType} has invalid start or end day values. Modify the time period so day values are numeric and start day is before or the same as end day.</li><li>[WFA-213003] - The activity name {nameSearch} cannot contain more than 3 activity level delimiters (/).  Enter a valid activity name.</li><li>[WFA-213004] - You cannot assign an Organization Set of the type Manager Organizational Groups to an activity query. Organizational Set name or ID: {name/id}.</li><li>[WFA-213006] - The time period for {dateRangeType} has invalid start or end day values. Modify the time period so day values are not allowed to be more then 999999.</li><li>[WFA-213007] - {paramName} cannot be selected if one of the following fields is specified: {paramNames}</li><li>[WFA-213008] - The query type cannot be changed after a query is created using that type. Query: {queryName}; query type: {queryType}.</li><li>[WFA-213009] - The field {paramName} is not applicable for queries with the following type: {queryType}.</li><li>[WFA-213010] - The number of activities exceeds the following service limit: {limit}.</li><li>[WFA-213011] - The system-defined activity cannot be assigned to a query. Activity: {combinedName}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Query. Name or names or ID or IDs: [{refs}].</li></ul>"
                    }
                },
                "summary": "Updates an Activity query.",
                "tags": [
                    "Activity Queries"
                ]
            }
        },
        "/v1/work/query_profiles": {
            "get": {
                "description": "This operation returns all Activity query profiles if no parameter is specified or a particular Activity query profile if a name is provided.",
                "operationId": "Retrieve All Activity Query Profiles by Name",
                "parameters": [
                    {
                        "description": "The unique name of an Activity query profile.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/QueryProfile"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Query Profile. Name or names or ID or IDs: {name}.</li></ul>"
                    }
                },
                "summary": "Returns all Activity query profiles or a particular Activity query profile by name.",
                "tags": [
                    "Activity Query Profiles"
                ]
            },
            "post": {
                "description": "This operation creates an Activity query profile.",
                "operationId": "Create Activity Query Profile",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QueryProfile"
                            }
                        }
                    },
                    "description": "The Create Activity Query Profile request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryProfile"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000015] - Description length exceeds N characters. Shorten the description.</li><li>[WFA-000006] - The following object reference is invalid: query.</li><li>[WFA-000007] - Entity or entities not found. Type: Activity Query. Name or names or ID or IDs: [query id or name].</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates an Activity query profile.",
                "tags": [
                    "Activity Query Profiles"
                ]
            }
        },
        "/v1/work/query_profiles/multi_create": {
            "post": {
                "description": "This operation creates one or more Activity query profiles.",
                "operationId": "Create Activity Query Profiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/QueryProfile"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Create Activity Query Profiles request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/QueryProfile"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000036] - Some of the entities were not exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates one or more Activity query profiles.",
                "tags": [
                    "Activity Query Profiles"
                ]
            }
        },
        "/v1/work/query_profiles/multi_delete": {
            "post": {
                "description": "This operation deletes one or more Activity query profiles by object references.",
                "operationId": "Delete Activity Query Profiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QueryProfileRefs"
                            }
                        }
                    },
                    "description": "The Delete Activity Query Profiles request payload.",
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000036] - Some of the entities were not exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000039] - None of the entities were deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Deletes one or more Activity query profiles.",
                "tags": [
                    "Activity Query Profiles"
                ]
            }
        },
        "/v1/work/query_profiles/multi_read": {
            "post": {
                "description": "This operation returns one or more Activity query profiles by object references.",
                "operationId": "Retrieve Activity Query Profiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QueryProfileRefs"
                            }
                        }
                    },
                    "description": "The Retrieve Activity Query Profiles request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/QueryProfile"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000036] - Some of the entities were not exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000037] - None of the entities were exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Returns one or more Activity query profiles.",
                "tags": [
                    "Activity Query Profiles"
                ]
            }
        },
        "/v1/work/query_profiles/multi_update": {
            "post": {
                "description": "This operation updates one or more Activity query profiles.",
                "operationId": "Update Activity Query Profiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/QueryProfile"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Update Activity Query Profiles request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/QueryProfile"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000036] - Some of the entities were not exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Updates one or more Activity query profiles.",
                "tags": [
                    "Activity Query Profiles"
                ]
            }
        },
        "/v1/work/query_profiles/{id}": {
            "delete": {
                "description": "This operation deletes an Activity query profile by ID.",
                "operationId": "Delete Activity Query Profile by ID",
                "parameters": [
                    {
                        "description": "The unique ID of an Activity query profile.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "<ul><li>[WFA-170006] - The query profile [profile name] is a system-defined query profile and cannot be deleted.</li><li>[WFA-170006] - The query profile [profile name] is a system-defined query profile and cannot be deleted.</li><li>[WFA-170001] - You cannot delete the query profile [profile name] because it is assigned to at least one activity profile. First, unassign the query profile from all activity profiles.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Query Profile. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Deletes an Activity query profile.",
                "tags": [
                    "Activity Query Profiles"
                ]
            },
            "get": {
                "description": "This operation returns an Activity query profile by ID.",
                "operationId": "Retrieve Activity Query Profile by ID",
                "parameters": [
                    {
                        "description": "The unique ID of an Activity query profile.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryProfile"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Query Profile. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns an Activity query profile.",
                "tags": [
                    "Activity Query Profiles"
                ]
            },
            "put": {
                "description": "This operation updates an Activity query profile by ID.",
                "operationId": "Update Activity Query Profile by ID",
                "parameters": [
                    {
                        "description": "The unique ID of an Activity query profile.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QueryProfile"
                            }
                        }
                    },
                    "description": "The Update Activity Query Profile by ID request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryProfile"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000015] - Description length exceeds N characters. Shorten the description.</li><li>[WFA-000006] - The following object reference is invalid: query.</li><li>[WFA-000007] - Entity or entities not found. Type: Activity Query. Name or names or ID or IDs: [query id or name].</li><li>[WFA-000007] - Entity or entities not found. Type: Query Profile. Name or names or ID or IDs: {id}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Query Profile. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Updates an Activity query profile.",
                "tags": [
                    "Activity Query Profiles"
                ]
            }
        },
        "/v1/work/result_code_profiles": {
            "get": {
                "description": "This operation returns all result code profiles without associated assignments if no parameter is specified or a particular result code profile with assignments if a name is provided, including both active and inactive profiles.",
                "operationId": "Retrieve All Result Code Profiles by Name",
                "parameters": [
                    {
                        "description": "The name of a result code profile.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ResultCodeProfile"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Result Code Profile. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>"
                    }
                },
                "summary": "Returns all result code profiles or a particular result code profile by name.",
                "tags": [
                    "Result Code Profiles"
                ]
            },
            "post": {
                "description": "This operation creates a result code profile.",
                "operationId": "Create Result Code Profile",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultCodeProfile"
                            }
                        }
                    },
                    "description": "The Create Result Code Profile request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultCodeProfile"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-121503] - The name is a duplicate of a name used previously - Result Code Profile: {Name}.</li><li>[WFA-000015] - description length exceeds N characters. Shorten the description.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000016] - The field description cannot contain any of the following characters:<>()/';#.,$%=!.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates a result code profile.",
                "tags": [
                    "Result Code Profiles"
                ]
            }
        },
        "/v1/work/result_code_profiles/multi_create": {
            "post": {
                "description": "This operation creates one or more result code profiles.",
                "operationId": "Create Result Code Profiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/ResultCodeProfile"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Create Result Code Profiles request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ResultCodeProfile_PartialPublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates one or more result code profiles.",
                "tags": [
                    "Result Code Profiles"
                ]
            }
        },
        "/v1/work/result_code_profiles/multi_delete": {
            "post": {
                "description": "This operation deletes one or more result code profiles.",
                "operationId": "Delete Result Code Profiles",
                "requestBody": {
                    "$ref": "#/components/requestBodies/ResultCodeProfileRefs"
                },
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000038] - Some of the entities were not deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000039] - None of the entities were deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Deletes one or more result code profiles.",
                "tags": [
                    "Result Code Profiles"
                ]
            }
        },
        "/v1/work/result_code_profiles/multi_read": {
            "post": {
                "description": "This operation returns one or more result code profiles by object references.",
                "operationId": "Retrieve Result Code Profiles",
                "requestBody": {
                    "$ref": "#/components/requestBodies/ResultCodeProfileRefs"
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ResultCodeProfile"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000037] - None of the entities were exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Returns one or more result code profiles.",
                "tags": [
                    "Result Code Profiles"
                ]
            }
        },
        "/v1/work/result_code_profiles/multi_update": {
            "post": {
                "description": "This operation updates one or more result code profiles.",
                "operationId": "Update Result Code Profiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/ResultCodeProfile"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Update Result Code Profiles request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ResultCodeProfile_PartialPublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Updates one or more result code profiles.",
                "tags": [
                    "Result Code Profiles"
                ]
            }
        },
        "/v1/work/result_code_profiles/{id}": {
            "delete": {
                "description": "This operation deletes a result code profile by ID.",
                "operationId": "Delete Result Code Profile by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a result code profile.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "<ul><li>[WFA-121501] - The system defined result code profile cannot be deleted - Result Code Profile name: {Name}.</li><li>[WFA-121502] - The result code profile is currently used by an activity profile - Result Code Profile name: {Name}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Result Code Profile. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>"
                    }
                },
                "summary": "Deletes a result code profile.",
                "tags": [
                    "Result Code Profiles"
                ]
            },
            "get": {
                "description": "This operation returns a result code profile by ID.",
                "operationId": "Retrieve Result Code Profile by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a result code profile.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultCodeProfile"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Result Code Profile. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>"
                    }
                },
                "summary": "Returns a result code profile.",
                "tags": [
                    "Result Code Profiles"
                ]
            },
            "put": {
                "description": "This operation updates a result code profile by ID.",
                "operationId": "Update Result Code Profile by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a result code profile.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultCodeProfile"
                            }
                        }
                    },
                    "description": "The Update Result Code Profile by ID request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultCodeProfile"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Result Code Profile. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>"
                    }
                },
                "summary": "Updates a result code profile.",
                "tags": [
                    "Result Code Profiles"
                ]
            }
        },
        "/v1/work/result_codes": {
            "get": {
                "description": "This operation returns all result codes, including both active and inactive.",
                "operationId": "Retrieve All Result Codes",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ResultCode_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Returns all result codes.",
                "tags": [
                    "Result Codes"
                ]
            },
            "post": {
                "description": "This operation creates a result code.",
                "operationId": "Create Result Code",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultCode"
                            }
                        }
                    },
                    "description": "The Create Result Code request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultCode_PublicAPI"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-211000] - The Result Code name should be uniqueness for this Field Definition: {paramName}.</li><li>[WFA-000015] - Description length exceeds N characters. Shorten the description.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000016] - The field description cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-211001] - The default Field Definition {paramName} does not support result codes.</li><li>[WFA-121005] - The Result Code cannot be assigned to a Field Definition with a Data Type ID other than Alpha numeric or Alpha numeric with slash - {ResultCode} name: {Name}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates a result code.",
                "tags": [
                    "Result Codes"
                ]
            }
        },
        "/v1/work/result_codes/multi_create": {
            "post": {
                "description": "<p>This operation creates one or more result codes.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of result codes that can be processed in a single request.</p><ul><li>The <strong>Number of Result Codes</strong> cannot exceed 200.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>",
                "operationId": "Create Result Codes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/ResultCode"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Create Result Codes request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ResultCode_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ResultCode_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates one or more result codes.",
                "tags": [
                    "Result Codes"
                ]
            }
        },
        "/v1/work/result_codes/multi_delete": {
            "post": {
                "description": "<p>This operation deletes one or more result codes.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of result codes that can be processed in a single request.</p><ul><li>The <strong>Number of Result Codes</strong> cannot exceed 200.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>",
                "operationId": "Delete Result Codes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultCodeRefs"
                            }
                        }
                    },
                    "description": "The Delete Result Codes request payload.",
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000038] - Some of the entities were not deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000039] - None of the entities were deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Deletes one or more result codes.",
                "tags": [
                    "Result Codes"
                ]
            }
        },
        "/v1/work/result_codes/multi_read": {
            "post": {
                "description": "<p>This operation returns one or more result codes.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of result codes that can be processed in a single request.</p><ul><li>The <strong>Number of Result Codes</strong> cannot exceed 200.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>",
                "operationId": "Retrieve Result Codes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultCodeRefs"
                            }
                        }
                    },
                    "description": "The Retrieve Result Codes request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ResultCode_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body."
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Returns one or more result codes.",
                "tags": [
                    "Result Codes"
                ]
            }
        },
        "/v1/work/result_codes/multi_update": {
            "post": {
                "description": "<p>This operation updates one or more result codes.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of result codes that can be processed in a single request.</p><ul><li>The <strong>Number of Result Codes</strong> cannot exceed 200.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>",
                "operationId": "Update Result Codes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/ResultCode"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Update Result Codes request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ResultCode_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ResultCode_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Updates one or more result codes.",
                "tags": [
                    "Result Codes"
                ]
            }
        },
        "/v1/work/result_codes/multi_upsert": {
            "post": {
                "description": "<p>This operation creates or updates one or more result codes.</p><br /><h2>Service limit</h2><p>A service limit constrains the number of result codes that can be processed in a single request.</p><ul><li>The <strong>Number of Result Codes</strong> cannot exceed 200.</li></ul><p>Refer to the <strong>Docs > Service Limits</strong> topic for more information.</p>",
                "operationId": "Create or Update Result Codes",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/ResultCode"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Create or Update Result Codes request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ResultCode_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ResultCode_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates or updates one or more result codes.",
                "tags": [
                    "Result Codes"
                ]
            }
        },
        "/v1/work/result_codes/{id}": {
            "delete": {
                "description": "This operation deletes a result code by ID.",
                "operationId": "Delete Result Code by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a result code.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "<ul><li>[WFA-121004] - Can't delete result code with id = {id} due to the dependence of decision answer on it.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Result Code. Name or names or ID or IDs: {id}.</li><li>[WFA-121004] - Can't delete result code with id = {id} due to the dependence of decision answer on it.</li></ul>"
                    }
                },
                "summary": "Deletes a result code.",
                "tags": [
                    "Result Codes"
                ]
            },
            "get": {
                "description": "This operation returns a result code by ID.",
                "operationId": "Retrieve Result Code by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a result code.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultCode_PublicAPI"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Result Code. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns a result code.",
                "tags": [
                    "Result Codes"
                ]
            },
            "put": {
                "description": "This operation updates a result code by ID.",
                "operationId": "Update Result Code by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a result code.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultCode"
                            }
                        }
                    },
                    "description": "The Update Result Code by ID request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultCode_PublicAPI"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000005] - ID from path does not match ID from request payload.</li><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-211000] - The Result Code name should be uniqueness for this Field Definition: {paramName}.</li><li>[WFA-000015] - Description length exceeds N characters. Shorten the description.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000016] - The field description cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-211001] - The default Field Definition {paramName} does not support Result Codes.</li><li>[WFA-121005] - The Result Code cannot be assigned to a Field Definition with a Data Type ID other than Alpha numeric or Alpha numeric with slash - {ResultCode} name: {Name}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Result Code. Name or names or ID or IDs: [{resultCodeIds}].</li></ul>"
                    }
                },
                "summary": "Updates a result code.",
                "tags": [
                    "Result Codes"
                ]
            }
        },
        "/v1/work/results_templates": {
            "get": {
                "description": "This operation returns all results templates if no parameter is specified or a particular results template if a name is provided.",
                "operationId": "Retrieve All Results Templates or by Name",
                "parameters": [
                    {
                        "description": "The name of a results template.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ResultsTemplate_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Activity Results Template. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns all results templates or a particular results template by name.",
                "tags": [
                    "Activity Results Templates"
                ]
            },
            "post": {
                "description": "This operation creates a results template.",
                "operationId": "Create Results Template",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultsTemplate"
                            }
                        }
                    },
                    "description": "The Create Results Template request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultsTemplate_PublicAPI"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000004] - The following parameter must be null: id.</li><li>[WFA-000003] - You must specify the following parameter: name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000016] - The field name cannot contain any of the following characters: {forbiddenSymbols}.</li><li>[WFA-000015] - Description length exceeds N characters. Shorten the description</li><li>[WFA-000016] - The field description cannot contain any of the following characters: {forbiddenSymbols}.</li><li>[WFA-000013] - You must specify the following parameter: steps.</li><li>[WFA-000002] - The following collection cannot be empty: steps.</li><li>[WFA-000003] - You must specify the following parameter: fieldDefinition.</li><li>[WFA-216000] - Activity results template contains steps with duplicate field definitions: {duplicateNames}.</li><li>[WFA-216001] - {stepPrompt} - Decision answer for result code {resultCode} cannot contain steps with duplicate field definitions.The following field definitions have duplicate names: {duplicateNames}.</li><li>[WFA-216002] - {stepPrompt} - Property {paramName} is not supported for a decision step.</li><li>[WFA-216003] - {stepPrompt} - Property {paramName} is not supported for a decision step. You can omit or disable this property.</li><li>[WFA-216004] - {stepPrompt} - Decision step answer steps must be of type: field definition.</li><li>[WFA-216006] - {stepPrompt} - Property {paramName} is not supported for a field definition. You can omit or set default value.</li><li>[WFA-216008] - {stepPrompt} - Decision step cannot contain answers with duplicate result codes. The following result codes have duplicate names: {duplicateNames}.</li><li>[WFA-216010] - {stepPrompt} - Maximum Value must be greater or equal to Minimum Value.</li><li>[WFA-216011] - {stepPrompt} - Property {paramName} is not supported for a field definition.</li><li>[WFA-122600] - The name is a duplicate of a name used previously - Name: {TransactionCode}.</li><li>[WFA-000003] - You must specify the following parameter: validationType.</li><li>[WFA-000003] - You must specify the following parameter: entryType.</li><li>[WFA-000003] - You must specify the following parameter: inputSourceType.</li><li>[WFA-122750] - The step prompt is required.</li><li>[WFA-122751] - The step prompt is invalid: {StepPrompt}. A valid step prompt cannot contain more than {MaxChars} characters.</li><li>[WFA-122752] - {StepPrompt} - Step Default Value is invalid: {StepDefault}. A valid default value cannot contain more than{StepLength} characters.</li><li>[WFA-122753] - {StepPrompt} - {Value} is invalid. The value cannot contain more than {MaxCount} digits.</li><li>[WFA-122754] - {StepPrompt} - {Value} is invalid. Digits Right of Decimal value cannot contain more than {MaxCount} digits.</li><li>[WFA-122755] - {StepPrompt} - Step Length is invalid: {StepLength}. A valid length is a number between {MinLength} and{MaxLength}.</li><li>[WFA-122756] - {StepPrompt} - Step Length is not allowed for the Field Definition.</li><li>[WFA-122757] - {StepPrompt} - Step Scale of Decimal is not allowed for this Field Definition.</li><li>[WFA-122758] - {StepPrompt} - Step Precision of Decimal is not allowed for this Field Definition.</li><li>[WFA-122759] - {StepPrompt} - Step Length is required for the Field Definition.</li><li>[WFA-122760] - The step prompt is invalid: {StepPrompt}. A valid step prompt cannot contain any of the following characters:{ForbiddenCharacters}</li><li>[WFA-122761] - {StepPrompt} - Step Default Value is invalid: {StepDefault}. A valid default value cannot contain any of the following characters:{ForbiddenCharacters}</li><li>[WFA-122764] - {StepPrompt} - The Digits Left of Decimal value must be in the range between {MinValue} and {MaxValue}.</li><li>[WFA-122765] - {StepPrompt} - The Digits Right of Decimal value must be in the range between {MinValue} and {MaxValue}.</li><li>[WFA-216020] - Quantity Field Definition is already associated with another Step or Decision Answer Step. Quantity Field Definition name: {duplicateNames}.</li><li>[WFA-216021] - {stepPrompt} - Only the validation type In List can be specified for a decision step.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates a results template.",
                "tags": [
                    "Activity Results Templates"
                ]
            }
        },
        "/v1/work/results_templates/multi_create": {
            "post": {
                "description": "This operation creates one or more results templates.",
                "operationId": "Create Results Templates",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/ResultsTemplate"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Create Results Templates request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ResultsTemplate_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates one or more results templates.",
                "tags": [
                    "Activity Results Templates"
                ]
            }
        },
        "/v1/work/results_templates/multi_delete": {
            "post": {
                "description": "This operation deletes one or more results templates.",
                "operationId": "Delete Results Templates",
                "requestBody": {
                    "$ref": "#/components/requestBodies/ResultsTemplateRefs"
                },
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000038] - Some of the entities were not deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000039] - None of the entities were deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Deletes one or more results templates.",
                "tags": [
                    "Activity Results Templates"
                ]
            }
        },
        "/v1/work/results_templates/multi_read": {
            "post": {
                "description": "This operation returns one or more results templates by object references.",
                "operationId": "Retrieve Results Templates",
                "requestBody": {
                    "$ref": "#/components/requestBodies/ResultsTemplateRefs"
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ResultsTemplate_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000036] - Some of the entities were not exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000037] - None of the entities were exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Returns one or more results templates.",
                "tags": [
                    "Activity Results Templates"
                ]
            }
        },
        "/v1/work/results_templates/multi_update": {
            "post": {
                "description": "This operation updates one or more results templates.",
                "operationId": "Update Results Templates",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/ResultsTemplate"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Update Results Templates request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ResultsTemplate_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Updates one or more results templates.",
                "tags": [
                    "Activity Results Templates"
                ]
            }
        },
        "/v1/work/results_templates/setup/step_types": {
            "get": {
                "description": "This operation returns all step types.",
                "operationId": "Retrieve All Step Types",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all step types.",
                "tags": [
                    "Activity Results Template Resources"
                ]
            }
        },
        "/v1/work/results_templates/{id}": {
            "delete": {
                "description": "This operation deletes a results template by ID.",
                "operationId": "Delete Results Template by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a results template.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "<ul><li>[WFA-122601] - The system-defined activity results template cannot be modified - Name: {TransactionCode}.</li><li>[WFA-122602] - The activity results template is already being used by another Activity - Name: {TransactionCode}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Deletes a results template.",
                "tags": [
                    "Activity Results Templates"
                ]
            },
            "get": {
                "description": "This operation returns a results template by ID.",
                "operationId": "Retrieve Results Template by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a results template.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultsTemplate_PublicAPI"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Returns a results template.",
                "tags": [
                    "Activity Results Templates"
                ]
            },
            "put": {
                "description": "This operation updates a results template by ID.",
                "operationId": "Update Results Template by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a results template.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResultsTemplate"
                            }
                        }
                    },
                    "description": "The Update Results Template by ID request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultsTemplate_PublicAPI"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000003] - You must specify the following parameter: id.</li><li>[WFA-000003] - You must specify the following parameter: version.</li><li>[WFA-000022] - The data was modified by another user while you were working on this page. Your edits can not be saved. Please refresh your data and try again.</li><li>[WFA-000005] - ID from path does not match ID from request payload.</li><li>[WFA-000003] - You must specify the following parameter: name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000016] - The field name cannot contain any of the following characters: {forbiddenSymbols}.</li><li>[WFA-000015] - Description length exceeds N characters. Shorten the description</li><li>[WFA-000016] - The field description cannot contain any of the following characters: {forbiddenSymbols}.</li><li>[WFA-000013] - You must specify the following parameter: steps.</li><li>[WFA-000002] - The following collection cannot be empty: steps.</li><li>[WFA-000003] - You must specify the following parameter: fieldDefinition.</li><li>[WFA-216000] - Activity results template contains steps with duplicate field definitions: {duplicateNames}.</li><li>[WFA-216001] - {stepPrompt} - Decision answer for result code {resultCode} cannot contain steps with duplicate field definitions.The following field definitions have duplicate names: {duplicateNames}.</li><li>[WFA-216002] - {stepPrompt} - Property {paramName} is not supported for a decision step.</li><li>[WFA-216003] - {stepPrompt} - Property {paramName} is not supported for a decision step. You can omit or disable this property.</li><li>[WFA-216004] - {stepPrompt} - Decision step answer steps must be of type: field definition.</li><li>[WFA-216006] - {stepPrompt} - Property {paramName} is not supported for a field definition. You can omit or set default value.</li><li>[WFA-216008] - {stepPrompt} - Decision step cannot contain answers with duplicate result codes. The following result codes have duplicate names: {duplicateNames}.</li><li>[WFA-216010] - {stepPrompt} - Maximum Value must be greater or equal to Minimum Value.</li><li>[WFA-216011] - {stepPrompt} - Property {paramName} is not supported for a field definition.</li><li>[WFA-122600] - The name is a duplicate of a name used previously - Name: {TransactionCode}.</li><li>[WFA-122601] - The system-defined activity results template cannot be modified - Name: {TransactionCode}.</li><li>[WFA-000003] - You must specify the following parameter: validationType.</li><li>[WFA-000003] - You must specify the following parameter: entryType.</li><li>[WFA-000003] - You must specify the following parameter: inputSourceType.</li><li>[WFA-122750] - The step prompt is required.</li><li>[WFA-122751] - The step prompt is invalid: {StepPrompt}. A valid step prompt cannot contain more than {MaxChars} characters.</li><li>[WFA-122752] - {StepPrompt} - Step Default Value is invalid: {StepDefault}. A valid default value cannot contain more than{StepLength} characters.</li><li>[WFA-122753] - {StepPrompt} - {Value} is invalid. The value cannot contain more than {MaxCount} digits.</li><li>[WFA-122754] - {StepPrompt} - {Value} is invalid. Digits Right of Decimal value cannot contain more than {MaxCount} digits.</li><li>[WFA-122755] - {StepPrompt} - Step Length is invalid: {StepLength}. A valid length is a number between {MinLength} and{MaxLength}.</li><li>[WFA-122756] - {StepPrompt} - Step Length is not allowed for the Field Definition.</li><li>[WFA-122757] - {StepPrompt} - Step Scale of Decimal is not allowed for this Field Definition.</li><li>[WFA-122758] - {StepPrompt} - Step Precision of Decimal is not allowed for this Field Definition.</li><li>[WFA-122759] - {StepPrompt} - Step Length is required for the Field Definition.</li><li>[WFA-122760] - The step prompt is invalid: {StepPrompt}. A valid step prompt cannot contain any of the following characters:{ForbiddenCharacters}</li><li>[WFA-122761] - {StepPrompt} - Step Default Value is invalid: {StepDefault}. A valid default value cannot contain any of the following characters:{ForbiddenCharacters}</li><li>[WFA-122764] - {StepPrompt} - The Digits Left of Decimal value must be in the range between {MinValue} and {MaxValue}.</li><li>[WFA-122765] - {StepPrompt} - The Digits Right of Decimal value must be in the range between {MinValue} and {MaxValue}.</li><li>[WFA-216020] - Quantity Field Definition is already associated with another Step or Decision Answer Step. Quantity Field Definition name: {duplicateNames}.</li><li>[WFA-216021] - {stepPrompt} - Only the validation type In List can be specified for a decision step.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Updates a results template.",
                "tags": [
                    "Activity Results Templates"
                ]
            }
        },
        "/v1/work/settings": {
            "get": {
                "description": "This operation returns all Activity settings.",
                "operationId": "Retrieve All Activity Settings",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Setting"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Returns all Activity settings.",
                "tags": [
                    "Activity Settings"
                ]
            }
        },
        "/v1/work/settings/multi_read": {
            "post": {
                "description": "This operation returns one or more Activity settings by object references.",
                "operationId": "Retrieve Activity Settings",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SettingRefs"
                            }
                        }
                    },
                    "description": "The Retrieve Activity Settings request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Setting"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000036] - Some of the entities were not exported because of errors in the source data. Correct those errors and try again.</li></ul>",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Setting"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000037] - None of the entities were exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Returns one or more Activity settings.",
                "tags": [
                    "Activity Settings"
                ]
            }
        },
        "/v1/work/settings/multi_update": {
            "post": {
                "description": "This operation updates one or more Activity settings.",
                "operationId": "Update Activity Settings",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/Setting"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Update Activity Settings request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Setting"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Setting"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Updates one or more Activity settings.",
                "tags": [
                    "Activity Settings"
                ]
            }
        },
        "/v1/work/settings/{id}": {
            "get": {
                "description": "This operation returns an Activity setting by ID.",
                "operationId": "Retrieve Activity Setting by ID",
                "parameters": [
                    {
                        "description": "The unique ID of an Activity setting.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Setting"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Setting. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns an Activity setting.",
                "tags": [
                    "Activity Settings"
                ]
            },
            "put": {
                "description": "This operation updates an Activity setting.",
                "operationId": "Update Activity Setting by ID",
                "parameters": [
                    {
                        "description": "The unique ID of an Activity setting.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Setting"
                            }
                        }
                    },
                    "description": "The Update Activity Setting by ID request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Setting"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000008] - The following parameter cannot be empty: value.</li><li>[WFA-000020] - The value should consists of digits only.</li><li>[WFA-000018] - The following parameter cannot be a negative number: value.</li><li>[WFA-000019] - The value cannot be greater than 999999.</li><li>[WFA-000021] - The value should represents boolean true(1)/false(0).</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Setting. Name or names or ID or IDs: [{refs}].</li></ul>"
                    }
                },
                "summary": "Updates an Activity setting.",
                "tags": [
                    "Activity Settings"
                ]
            }
        },
        "/v1/work/team_segments/active_members/multi_read": {
            "post": {
                "description": "<p>This operation returns active team members by activity team segment identifiers.</p><br /><p>The associated Access Control Points are WFA_WORK_INTEGRATION_API, WFA_VIEW_TEAM_ACTIVITY_EVENT_MEMBERS.</p>",
                "operationId": "Retrieve Active Team Members",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity_Team_Segment_Request"
                            }
                        }
                    },
                    "description": "The Retrieve Activity Team Segments request payload, which contains either a collection of team segments IDs or a collection of activity team segment identifiers.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Active_Team_Members_for_the_team_segment_identifier"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000036] - Some of the entities were not exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000011] - At least one of the following parameters is mandatory: [activitySegmentIds, activitySegmentIdentifiers].</li><li>[WFA-000013] - A conflict occurred. The following parameters are mutually exclusive and cannot be null both: [activitySegmentIds, activitySegmentIdentifiers].</li><li>[WFA-000037] - None of the entities were exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Returns active team members by activity team segment identifiers.",
                "tags": [
                    "Active Team Members"
                ]
            }
        },
        "/v1/work/team_segments/audits/multi_read": {
            "post": {
                "description": "<p>This operation returns audits for activity team segments or activity team segment results according to the specified date range.</p><br /><p>The associated Access Control Point is WFA_WORK_INTEGRATION_API.</p>",
                "operationId": "Retrieve Activity Team Segment Audits",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity_Team_Event_Audits_Request_model"
                            }
                        }
                    },
                    "description": "v1.0.work-activity_team_segments_audits.post.request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity_Team_Event_Audits_Response_model"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>WFA-000002 - The following collection cannot be empty: audit type.</li><li>WFA-000002 - The following collection cannot be empty: teams.</li><li>WFA-000003 - You must specify the following parameter: audit type.</li><li>WFA-000003 - You must specify the following parameter: teams.</li><li>WFA-000003 - You must specify the following parameter: start date time.</li><li>WFA-000003 - You must specify the following parameter: end date time.</li></ul>"
                    },
                    "403": {
                        "description": "WFA-000030 - The current user does not have access to Activities Integration API operations."
                    },
                    "404": {
                        "description": "WFA-000007 - Entity or entities not found. Type: Activity Team Definition. Name or names or ID or IDs: []."
                    }
                },
                "summary": "Returns audits for activity team segments or activity team segment results.",
                "tags": [
                    "Activity Team Segment Audits"
                ]
            }
        },
        "/v1/work/team_segments/multi_delete": {
            "post": {
                "description": "<p>This operation deletes activity team segments from a third party source for multiple teams.</p><br /><p>The associated Access Control Points are WFA_WORK_INTEGRATION_API, WFA_EDIT_TEAM_ACTIVITY_EVENTS.</p>",
                "operationId": "Delete Activity Team Segments",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity_Team_Segment_Request"
                            }
                        }
                    },
                    "description": "v1.0.work-activity_team_segments.multi_delete.request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully deleted activity team segments for multiple teams."
                    },
                    "207": {
                        "description": "@v1.0.work-activity_team_segments.post.multi_delete.response.207.message"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000037] - None of the activity team segments were deleted because of errors in the source data. Correct those errors and try again.</li><ul>"
                    }
                },
                "summary": "Deletes one or more activity team segments.",
                "tags": [
                    "Activity Team Segments"
                ]
            }
        },
        "/v1/work/team_segments/multi_read": {
            "post": {
                "description": "<p>This operation returns activity team segments by teams or by activity team segment identifiers.</p><br /><p>The associated Access Control Points are WFA_WORK_INTEGRATION_API, WFA_VIEW_TEAM_ACTIVITY_EVENTS.</p>",
                "operationId": "Retrieve Activity Team Segments",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activity_Team_Segment_Read_Request"
                            }
                        }
                    },
                    "description": "v1.0.work-activity_team_segments.post.multi_read.request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity_Team_Segments_Read_Response"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000036] - Some of the entities were not exported because of errors in the source data. Correct those errors and try again.</li></ul>",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity_Team_Segments_Read_Response"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000002] - The following collection cannot be empty: teams.</li><li>[WFA-000003] - You must specify the following parameter: startDate.</li><li>[WFA-000003] - You must specify the following parameter: endDate.</li><li>[WFA-000037] - None of the entities were exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    }
                },
                "summary": "Returns activity team segments by teams or by activity team segment identifiers.",
                "tags": [
                    "Activity Team Segments"
                ]
            }
        },
        "/v1/work/team_segments/multi_upsert": {
            "post": {
                "description": "<p>This operation creates or updates activity team segments from a third party source for multiple teams.</p><br /><p>The associated Access Control Points are WFA_WORK_INTEGRATION_API, WFA_EDIT_TEAM_ACTIVITY_EVENTS.</p>",
                "operationId": "Create or Update Activity Team Segments",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/ActivityTeamSegmentWithResultsForRest"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "v1.0.work-activity_team_segments.post.multi_upsert.request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully created or updated activity team segments for multiple teams.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity_Team_Segments_Response"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "@v1.0.work-activity_team_segments.post.multi_upsert.response.207.message"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000037] - None of the activity team segments were imported because of errors in the source data. Correct those errors and try again.</li><ul>"
                    }
                },
                "summary": "Creates or updates one or more activity team segments.",
                "tags": [
                    "Activity Team Segments"
                ]
            }
        },
        "/v1/work/team_segments/net_changes/apply_read": {
            "post": {
                "description": "<p>This operation returns Team Segments. Required parameters include select, lastRunDateTime and endDateTime.</p><br /><p>The associated Access Control Point is WFA_WORK_INTEGRATION_API.</p>",
                "operationId": "Retrieve Net Changes for Team Segments",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Team_segment_net_change_find_criteria"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully retrieved team segments according to the specified parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Team_segment_net_change_find_criteria"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request: <ul><li>[WTK-201800] - Invalid select option: selectOption.</li><li>[WTK-201801] - The lastRunDateTime is required.</li><li>[WTK-201802] - The endDateTime is required.</li><li>[WTK-201803] - The lastRunDateTime should be in the past.</li><li>[WTK-201804] - The endDateTime should be in the past.</li><li>[WTK-201805] - The lastRunDateTime should be before the endDateTime.</li><li>[WFC-111206] - Please provide at least 1 of id/qualifier in ref.</li><li>[WFA-000007] - Entity or entities not found. Type: activity. Name or names or ID or IDs: id.</li></ul>"
                    }
                },
                "summary": "Returns team segments for multiple teams based on the request parameters.",
                "tags": [
                    "Team Segments Net Changes"
                ]
            }
        },
        "/v1/work/teams": {
            "get": {
                "description": "<p>This operation returns all Activity teams if no parameter is specified or a particular team if a name is provided.</p><br /><p>The associated Access Control Point is WFA_FULL_WORK_SETUP.</p>",
                "operationId": "Retrieve All Activity Teams or by Name",
                "parameters": [
                    {
                        "description": "The name of an Activity team.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityTeamDefinition_PublicAPI"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Activity Team Definition. Name or names or ID or IDs: {id}.</li></ul>"
                    }
                },
                "summary": "Returns all Activity teams or a particular team by name.",
                "tags": [
                    "Activity Teams"
                ]
            },
            "post": {
                "description": "<p>This operation creates and returns an Activity team.</p><br /><p>The associated Access Control Point is WFA_FULL_WORK_SETUP.</p>",
                "operationId": "Create Activity Team",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityTeamDefinition"
                            }
                        }
                    },
                    "description": "The Create Activity Team request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityTeamDefinition_PublicAPI"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-218002] - The name is a duplicate of a name used previously - Activity Team name: {name}.</li><li>[WFA-218003] - You cannot assign a non-default activity to be the default for the activity team - Activity name: {name}.</li><li>[WFA-000004] - The following parameter must be null: {paramName}.</li><li>[WFA-000003] - You must specify the following parameter: {paramName}.</li><li>[WFA-000008] - The following parameter cannot be empty: {paramName}.</li><li>[WFA-000016] - The field {paramName} cannot contain any of the following characters: {forbiddenSymbols}.</li><li>[WFA-000015] - {capParamName} length exceeds {length} characters. Shorten the {paramName}.</li><li>[WFA-000006] - The following object reference is invalid: {refName}.</li><li>[WFA-000025] - The {paramName} must be in the range: {minValue} - {maxValue}.</li><li>[WFA-000013] - A conflict occurred. The following parameters are mutually exclusive and cannot be null both: {paramNames}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates an Activity team.",
                "tags": [
                    "Activity Teams"
                ]
            }
        },
        "/v1/work/teams/multi_delete": {
            "post": {
                "description": "<p>This operation deletes Activity teams.</p><br /><p>The associated Access Control Point is WFA_FULL_WORK_SETUP.</p>",
                "operationId": "Delete Activity Teams",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityTeamDefinitionRefs"
                            }
                        }
                    },
                    "description": "The Delete Activity Teams request payload.",
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000038] - Some of the entities were not deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000039] - None of the entities were deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Deletes Activity teams.",
                "tags": [
                    "Activity Teams"
                ]
            }
        },
        "/v1/work/teams/multi_read": {
            "post": {
                "description": "<p>This operation returns a list of Activity teams by object references.</p><br /><p>The associated Access Control Point is WFA_FULL_WORK_SETUP.</p>",
                "operationId": "Retrieve Activity Teams",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityTeamDefinitionRefs"
                            }
                        }
                    },
                    "description": "The Retrieve Activity Teams request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000036] - Some of the entities were not exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000037] - None of the entities were exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Returns Activity teams.",
                "tags": [
                    "Activity Teams"
                ]
            }
        },
        "/v1/work/teams/multi_upsert": {
            "post": {
                "description": "<p>This operation creates or updates one or more Activity teams.</p><br /><p>The associated Access Control Point is WFA_FULL_WORK_SETUP.</p>",
                "operationId": "Create or Update Activity Teams",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/ActivityTeamDefinition"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Create or Update Activity Teams request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li><li>",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Activity_PublicAPI"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates or updates one or more Activity teams.",
                "tags": [
                    "Activity Teams"
                ]
            }
        },
        "/v1/work/teams/setup/days_of_week": {
            "get": {
                "description": "<p>This operation returns all days of a week.</p><br /><p>The associated Access Control Points are WFA_FULL_WORK_SETUP, WFA_MANAGER_EDIT_ACTIVITY_TEAM.</p>",
                "operationId": "Retrieve All Days of a Week",
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LocalizedObjectRef"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all days of a week.",
                "tags": [
                    "Activity Team Resources"
                ]
            }
        },
        "/v1/work/teams/{id}": {
            "delete": {
                "description": "<p>This operation deletes an Activity team by ID.</p><br /><p>The associated Access Control Point is WFA_FULL_WORK_SETUP.</p>",
                "operationId": "Delete Activity Team by ID",
                "parameters": [
                    {
                        "description": "The unique ID of an Activity team.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "<ul><li>[WFA-218000] - The Activity Team is currently used by an Activity Event - Activity Team name: {name}.</li><li>[WFA-218001] - The Activity Team with assigned members cannot be deleted - Activity Team name: {name}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Activity Team Definition. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>"
                    }
                },
                "summary": "Deletes an Activity team.",
                "tags": [
                    "Activity Teams"
                ]
            },
            "get": {
                "description": "<p>This operation returns an Activity team by ID.</p><br /><p>The associated Access Control Point is WFA_FULL_WORK_SETUP.</p>",
                "operationId": "Retrieve Activity Team by ID",
                "parameters": [
                    {
                        "description": "The unique ID of an Activity team.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityTeamDefinition_PublicAPI"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Activity Team Definition. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>"
                    }
                },
                "summary": "Returns an Activity team.",
                "tags": [
                    "Activity Teams"
                ]
            },
            "put": {
                "description": "<p>This operation updates and returns an Activity team by ID.</p><br /><p>The associated Access Control Point is WFA_FULL_WORK_SETUP.</p>",
                "operationId": "Update Activity Team by ID",
                "parameters": [
                    {
                        "description": "The unique ID of an Activity team.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityTeamDefinition"
                            }
                        }
                    },
                    "description": "The Update Activity Team by ID request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityTeamDefinition_PublicAPI"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-218002] - The name is a duplicate of a name used previously - Activity Team name: {name}.</li><li>[WFA-218003] - You cannot assign a non-default activity to be the default for the activity team - Activity name: {name}.</li><li>[WFA-000004] - The following parameter must be null: {paramName}.</li><li>[WFA-000003] - You must specify the following parameter: {paramName}.</li><li>[WFA-000008] - The following parameter cannot be empty: {paramName}.</li><li>[WFA-000016] - The field {paramName} cannot contain any of the following characters: {forbiddenSymbols}.</li><li>[WFA-000015] - {capParamName} length exceeds {length} characters. Shorten the {paramName}.</li><li>[WFA-000006] - The following object reference is invalid: {refName}.</li><li>[WFA-000025] - The {paramName} must be in the range: {minValue} - {maxValue}.</li><li>[WFA-000013] - A conflict occurred. The following parameters are mutually exclusive and cannot be null both: {paramNames}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Activity Team Definition. Name or names or ID or IDs: [{id}].</li></ul>"
                    },
                    "409": {
                        "description": "<ul><li>[WFA-000022] - The data was modified by another user while you were working on this page. Your edits can not be saved. Please refresh your data and try again.</li></ul>"
                    }
                },
                "summary": "Updates an Activity team.",
                "tags": [
                    "Activity Teams"
                ]
            }
        },
        "/v1/work/units_of_measure": {
            "get": {
                "description": "This operation returns all units of measure if no parameter is specified or a particular unit of measure if a name is provided. The response may include both active and inactive units of measure.",
                "operationId": "Retrieve All Units of Measure or by Name",
                "parameters": [
                    {
                        "description": "The name of a unit of measure.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/UnitOfMeasure"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Unit of Measure. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>"
                    }
                },
                "summary": "Returns all units of measure or a particular unit of measure by name.",
                "tags": [
                    "Units of Measure"
                ]
            },
            "post": {
                "description": "This operation creates a unit of measure.",
                "operationId": "Create Unit of Measure",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitOfMeasure"
                            }
                        }
                    },
                    "description": "The Create Unit of Measure request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnitOfMeasure"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-123000] - The name is a duplicate of a name used previously - Unit Of Measure name: {Name}.</li><li>[WFA-123003] - The abbreviated name is a duplicate of a abbreviated name used previously - Unit Of Measure abbreviated name: {Name}.</li><li>[WFA-000015] - abbreviatedName length exceeds N characters. Shorten the abbreviatedName.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000016] - The field abbreviatedName cannot contain any of the following characters:<>()/';#.,$%=!.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates a unit of measure.",
                "tags": [
                    "Units of Measure"
                ]
            }
        },
        "/v1/work/units_of_measure/multi_create": {
            "post": {
                "description": "This operation creates one or more units of measure.",
                "operationId": "Create Units of Measure",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/UnitOfMeasure"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Create Units of Measure request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/UnitOfMeasure"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Creates one or more units of measure.",
                "tags": [
                    "Units of Measure"
                ]
            }
        },
        "/v1/work/units_of_measure/multi_delete": {
            "post": {
                "description": "This operation deletes units of measure.",
                "operationId": "Delete Units of Measure",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitOfMeasureRefs"
                            }
                        }
                    },
                    "description": "The Delete Units of Measure request payload.",
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000038] - Some of the entities were not deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000039] - None of the entities were deleted because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Deletes units of measure.",
                "tags": [
                    "Units of Measure"
                ]
            }
        },
        "/v1/work/units_of_measure/multi_read": {
            "post": {
                "description": "This operation returns one or more units of measure by object references.",
                "operationId": "Retrieve Units of Measure",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitOfMeasureRefs"
                            }
                        }
                    },
                    "description": "The Retrieve Units of Measure request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/UnitOfMeasure"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000036] - Some of the entities were not exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000037] - None of the entities were exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Returns one or more units of measure by object references.",
                "tags": [
                    "Units of Measure"
                ]
            }
        },
        "/v1/work/units_of_measure/multi_update": {
            "post": {
                "description": "This operation updates one or more units of measure.",
                "operationId": "Update Units of Measure",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/UnitOfMeasure"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "The Update Units of Measure request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/UnitOfMeasure"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WFA-000034] - Some of the entities were not imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000035] - None of the entities were imported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    }
                },
                "summary": "Updates one or more units of measure.",
                "tags": [
                    "Units of Measure"
                ]
            }
        },
        "/v1/work/units_of_measure/{id}": {
            "delete": {
                "description": "This operation deletes a unit of measure by ID.",
                "operationId": "Delete Unit of Measure by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a unit of measure.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "<ul><li>[WFA-123004] - The unit of measure is currently used by an Activity - Unit Of Measure abbreviated name: {Name}.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Unit of Measure. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>"
                    }
                },
                "summary": "Deletes a unit of measure.",
                "tags": [
                    "Units of Measure"
                ]
            },
            "get": {
                "description": "This operation returns a unit of measure by ID.",
                "operationId": "Retrieve Unit of Measure by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a unit of measure.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnitOfMeasure"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Unit of Measure. Name or names or ID or IDs: [{id}/{qualifier}].</li></ul>"
                    }
                },
                "summary": "Returns a unit of measure.",
                "tags": [
                    "Units of Measure"
                ]
            },
            "put": {
                "description": "This operation updates a unit of measure by ID.",
                "operationId": "Update Unit of Measure by ID",
                "parameters": [
                    {
                        "description": "The unique ID of a unit of measure.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitOfMeasure"
                            }
                        }
                    },
                    "description": "The Update Unit of Measure by ID request payload.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnitOfMeasure"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WFA-000005] - ID from path does not match ID from request payload.</li><li>[WFA-000007] - Entity or entities not found. Type: Unit of Measure. Name or names or ID or IDs: [{id}].</li><li>[WFA-000015] - Name length exceeds N characters. Shorten the name.</li><li>[WFA-000008] - The following parameter cannot be empty: name.</li><li>[WFA-123000] - The name is a duplicate of a name used previously - Unit Of Measure name: {Name}.</li><li>[WFA-000015] - abbreviatedName length exceeds N characters. Shorten the abbreviatedName.</li><li>[WFA-000016] - The field name cannot contain any of the following characters:<>()/';#.,$%=!.</li><li>[WFA-000016] - The field abbreviatedName cannot contain any of the following characters:<>()/';#.,$%=!.</li></ul>"
                    },
                    "403": {
                        "description": "<ul><li>[WFA-000030] - The current user does not have access to {facpName}.</li></ul>"
                    },
                    "404": {
                        "description": "<ul><li>[WFA-000007] - Entity or entities not found. Type: Unit of Measure. Name or names or ID or IDs: [{id}].</li></ul>"
                    }
                },
                "summary": "Updates a unit of measure.",
                "tags": [
                    "Units of Measure"
                ]
            }
        }
    },
    "servers": [
        {
            "url": "/"
        }
    ],
    "components": {
        "requestBodies": {
            "FormRefs": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/FormRefs"
                        }
                    }
                },
                "description": "The Retrieve Activity Forms request payload.",
                "required": true
            },
            "ResultsTemplateRefs": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ResultsTemplateRefs"
                        }
                    }
                },
                "description": "The Retrieve Results Templates request payload.",
                "required": true
            },
            "ResultCodeProfileRefs": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ResultCodeProfileRefs"
                        }
                    }
                },
                "description": "The Retrieve Result Code Profiles request payload.",
                "required": true
            }
        },
        "schemas": {
            "Activity_PublicAPI": {
                "description": "The Activity model.",
                "properties": {
                    "actualCompleteDate": {
                        "description": "The actual complete date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "actualStartDate": {
                        "description": "The actual start date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "autoMoveMultiQuantity": {
                        "description": "The auto-move multiplier quantity associated with an activity.",
                        "type": "number"
                    },
                    "bottomLevel": {
                        "type": "boolean"
                    },
                    "canBeDefault": {
                        "description": "A Boolean indicator of whether or not an activity can be set as the default.",
                        "type": "boolean"
                    },
                    "combinedName": {
                        "description": "The combined name of an activity.",
                        "type": "string"
                    },
                    "completeStatus": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "completedPercent": {
                        "description": "The percentage completed of an activity.",
                        "format": "double",
                        "type": "number"
                    },
                    "completedQuantity": {
                        "description": "The completed quantity associated with an activity.",
                        "type": "number"
                    },
                    "createdDateTime": {
                        "description": "The date and time an activity was created in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "currentStandard": {
                        "$ref": "#/components/schemas/ActivityStandard_PublicAPI"
                    },
                    "dataAccess": {
                        "$ref": "#/components/schemas/ActivityDataAccess_PublicAPI"
                    },
                    "description": {
                        "description": "The description of an activity.",
                        "type": "string"
                    },
                    "employees": {
                        "description": "A list of employees associated with an activity.",
                        "items": {
                            "$ref": "#/components/schemas/ActivityEmployee_PublicAPI"
                        },
                        "type": "array"
                    },
                    "header": {
                        "$ref": "#/components/schemas/ActivityHeader_PublicAPI"
                    },
                    "heldHistory": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "id": {
                        "description": "The ID of an activity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "isEditableHeldHistory": {
                        "description": "A Boolean indicator of whether or not the held history is editable for an activity.",
                        "type": "boolean"
                    },
                    "isExcludedFromSequenceValidation": {
                        "description": "A Boolean indicator of whether or not an activity is excluded from sequence validation.",
                        "type": "boolean"
                    },
                    "isMilestone": {
                        "description": "A Boolean indicator of whether or not an activity is a milestone.",
                        "type": "boolean"
                    },
                    "laborHoursAllocationType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "laborQuantityAllocationType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "level": {
                        "description": "The level count of an activity.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "maxCompleteHours": {
                        "description": "The maximum hours-to-complete associated with an activity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "maxDurationAmount": {
                        "description": "The maximum allowed duration of an activity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "minCompleteHours": {
                        "description": "The minimum hours-to-complete associated with an activity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "minDurationAmount": {
                        "description": "The minimum allowed duration of an activity..",
                        "format": "int64",
                        "type": "integer"
                    },
                    "movedQuantity": {
                        "description": "The moved quantity associated with an activity.",
                        "type": "number"
                    },
                    "movedToReworkQuantity": {
                        "description": "The moved-to-rework quantity associated with an activity.",
                        "type": "number"
                    },
                    "name": {
                        "description": "The name of an activity.",
                        "type": "string"
                    },
                    "parent": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "priorityType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "processType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "receivedQuantity": {
                        "description": "The received quantity associated with an activity.",
                        "type": "number"
                    },
                    "receivedVarianceOverPct": {
                        "description": "The received variance over percent associated with an activity.",
                        "format": "double",
                        "type": "number"
                    },
                    "relatedResultTemplate": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "replaceAllStandards": {
                        "description": "A Boolean indicator of whether or not updated standards replace the full standards history.",
                        "type": "boolean"
                    },
                    "requiredQuantity": {
                        "description": "The required quantity associated with an activity.",
                        "type": "number"
                    },
                    "requiredVarianceOverPct": {
                        "description": "The required variance over percent associated with an activity.",
                        "format": "double",
                        "type": "number"
                    },
                    "revisedCompleteDate": {
                        "description": "The revised complete date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "revisedStartDate": {
                        "description": "The revised start date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "scheduledCompleteDate": {
                        "description": "The scheduled complete date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "scheduledStartDate": {
                        "description": "The scheduled start date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "scrappedQuantity": {
                        "description": "The scrapped quantity associated with an activity.",
                        "type": "number"
                    },
                    "sdmKey": {
                        "type": "string"
                    },
                    "searchName": {
                        "description": "The search name of an activity.",
                        "type": "string"
                    },
                    "sequence": {
                        "description": "The sequence amongst siblings of an activity.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "standards": {
                        "description": "A list of standards associated with an activity.",
                        "items": {
                            "$ref": "#/components/schemas/ActivityStandard_PublicAPI"
                        },
                        "type": "array"
                    },
                    "transfer": {
                        "$ref": "#/components/schemas/ActivityTransfer_PublicAPI"
                    },
                    "unaccountedQuantity": {
                        "description": "The unaccounted quantity associated with an activity.",
                        "type": "number"
                    },
                    "unitOfMeasure": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "updatedDateTime": {
                        "description": "The date and time of the last update to an activity in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "userField1": {
                        "description": "The user field 1 associated with an activity.",
                        "type": "string"
                    },
                    "userField2": {
                        "description": "The user field 2 associated with an activity.",
                        "type": "string"
                    },
                    "userField3": {
                        "description": "The user field 3 associated with an activity.",
                        "type": "string"
                    },
                    "userField4": {
                        "description": "The user field 4 associated with an activity.",
                        "type": "string"
                    },
                    "validateReceivedQuantity": {
                        "description": "A Boolean indicator of whether or not to validate the received quantity associated with an activity.",
                        "type": "boolean"
                    },
                    "validateRequiredQuantity": {
                        "description": "A Boolean indicator of whether or not an activity must validate a required quantity.",
                        "type": "boolean"
                    },
                    "version": {
                        "description": "The version of an activity.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "weightAmount": {
                        "description": "The weight amount associated with an activity.",
                        "format": "double",
                        "type": "number"
                    }
                },
                "required": [
                    "id",
                    "name"
                ],
                "type": "object"
            },
            "Activity": {
                "description": "The Activity model.",
                "properties": {
                    "actualCompleteDate": {
                        "description": "The actual complete date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "actualStartDate": {
                        "description": "The actual start date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "autoMoveMultiQuantity": {
                        "description": "The auto-move multiplier quantity associated with an activity.",
                        "type": "number"
                    },
                    "bottomLevel": {
                        "type": "boolean"
                    },
                    "canBeDefault": {
                        "description": "A Boolean indicator of whether or not an activity can be set as the default.",
                        "type": "boolean"
                    },
                    "combinedName": {
                        "description": "The combined name of an activity.",
                        "type": "string"
                    },
                    "completeStatus": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "completedPercent": {
                        "description": "The percentage completed of an activity.",
                        "format": "double",
                        "type": "number"
                    },
                    "completedQuantity": {
                        "description": "The completed quantity associated with an activity.",
                        "type": "number"
                    },
                    "createdDateTime": {
                        "description": "The date and time an activity was created in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "currentStandard": {
                        "$ref": "#/components/schemas/ActivityStandard"
                    },
                    "dataAccess": {
                        "$ref": "#/components/schemas/ActivityDataAccess"
                    },
                    "description": {
                        "description": "The description of an activity.",
                        "type": "string"
                    },
                    "employees": {
                        "description": "A list of employees associated with an activity.",
                        "items": {
                            "$ref": "#/components/schemas/ActivityEmployee"
                        },
                        "type": "array"
                    },
                    "header": {
                        "$ref": "#/components/schemas/ActivityHeader"
                    },
                    "heldHistory": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "id": {
                        "description": "The ID of an activity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "isEditableHeldHistory": {
                        "description": "A Boolean indicator of whether or not the held history is editable for an activity.",
                        "type": "boolean"
                    },
                    "isExcludedFromSequenceValidation": {
                        "description": "A Boolean indicator of whether or not an activity is excluded from sequence validation.",
                        "type": "boolean"
                    },
                    "isMilestone": {
                        "description": "A Boolean indicator of whether or not an activity is a milestone.",
                        "type": "boolean"
                    },
                    "laborHoursAllocationType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "laborQuantityAllocationType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "level": {
                        "description": "The level count of an activity.",
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "maxCompleteHours": {
                        "description": "The maximum hours-to-complete associated with an activity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "maxDurationAmount": {
                        "description": "The maximum allowed duration of an activity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "minCompleteHours": {
                        "description": "The minimum hours-to-complete associated with an activity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "minDurationAmount": {
                        "description": "The minimum allowed duration of an activity..",
                        "format": "int64",
                        "type": "integer"
                    },
                    "movedQuantity": {
                        "description": "The moved quantity associated with an activity.",
                        "type": "number"
                    },
                    "movedToReworkQuantity": {
                        "description": "The moved-to-rework quantity associated with an activity.",
                        "type": "number"
                    },
                    "name": {
                        "description": "The name of an activity.",
                        "type": "string"
                    },
                    "parent": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "priorityType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "processType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "receivedQuantity": {
                        "description": "The received quantity associated with an activity.",
                        "type": "number"
                    },
                    "receivedVarianceOverPct": {
                        "description": "The received variance over percent associated with an activity.",
                        "format": "double",
                        "type": "number"
                    },
                    "relatedResultTemplate": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "replaceAllStandards": {
                        "description": "A Boolean indicator of whether or not updated standards replace the full standards history.",
                        "type": "boolean"
                    },
                    "requiredQuantity": {
                        "description": "The required quantity associated with an activity.",
                        "type": "number"
                    },
                    "requiredVarianceOverPct": {
                        "description": "The required variance over percent associated with an activity.",
                        "format": "double",
                        "type": "number"
                    },
                    "revisedCompleteDate": {
                        "description": "The revised complete date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "revisedStartDate": {
                        "description": "The revised start date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "scheduledCompleteDate": {
                        "description": "The scheduled complete date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "scheduledStartDate": {
                        "description": "The scheduled start date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "scrappedQuantity": {
                        "description": "The scrapped quantity associated with an activity.",
                        "type": "number"
                    },
                    "sdmKey": {
                        "type": "string"
                    },
                    "searchName": {
                        "description": "The search name of an activity.",
                        "type": "string"
                    },
                    "sequence": {
                        "description": "The sequence amongst siblings of an activity.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "standards": {
                        "description": "A list of standards associated with an activity.",
                        "items": {
                            "$ref": "#/components/schemas/ActivityStandard"
                        },
                        "type": "array"
                    },
                    "transfer": {
                        "$ref": "#/components/schemas/ActivityTransfer"
                    },
                    "transfers": {
                        "items": {
                            "$ref": "#/components/schemas/ActivityTransfer"
                        },
                        "type": "array"
                    },
                    "unaccountedQuantity": {
                        "description": "The unaccounted quantity associated with an activity.",
                        "type": "number"
                    },
                    "unitOfMeasure": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "updatedDateTime": {
                        "description": "The date and time of the last update to an activity in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "userField1": {
                        "description": "The user field 1 associated with an activity.",
                        "type": "string"
                    },
                    "userField2": {
                        "description": "The user field 2 associated with an activity.",
                        "type": "string"
                    },
                    "userField3": {
                        "description": "The user field 3 associated with an activity.",
                        "type": "string"
                    },
                    "userField4": {
                        "description": "The user field 4 associated with an activity.",
                        "type": "string"
                    },
                    "validateReceivedQuantity": {
                        "description": "A Boolean indicator of whether or not to validate the received quantity associated with an activity.",
                        "type": "boolean"
                    },
                    "validateRequiredQuantity": {
                        "description": "A Boolean indicator of whether or not an activity must validate a required quantity.",
                        "type": "boolean"
                    },
                    "version": {
                        "description": "The version of an activity.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "weightAmount": {
                        "description": "The weight amount associated with an activity.",
                        "format": "double",
                        "type": "number"
                    }
                },
                "required": [
                    "id",
                    "name"
                ],
                "type": "object"
            },
            "ActivityExportRequest": {
                "description": "The Activity Definitions Export criteria.",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/ActivityExportRequestOptions"
                    },
                    "where": {
                        "$ref": "#/components/schemas/ActivityExportRequestWhere"
                    }
                },
                "type": "object"
            },
            "ActivityExportResponse": {
                "description": "The Activity Definitions Export response model.",
                "properties": {
                    "activityExportDefinitions": {
                        "description": "An array of activities.",
                        "items": {
                            "$ref": "#/components/schemas/ActivityExportDefinition"
                        },
                        "type": "array"
                    },
                    "nextReadToken": {
                        "description": "A token which identifies the next section of paginated results to return.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivityRefs": {
                "description": "The Activity References model.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/ActivityRefsWhere"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "ResultCode": {
                "description": "The Result Code object model.",
                "properties": {
                    "active": {
                        "description": "A Boolean indicator of whether or not a result code is active.",
                        "type": "boolean"
                    },
                    "description": {
                        "description": "The description of a result code.",
                        "type": "string"
                    },
                    "fieldDefinition": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "id": {
                        "description": "An ID associated with a result code.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of a result code.",
                        "type": "string"
                    },
                    "sdmKey": {
                        "type": "string"
                    },
                    "version": {
                        "description": "The version of a result code.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "active",
                    "description",
                    "fieldDefinition",
                    "id",
                    "name"
                ],
                "type": "object"
            },
            "ActivityExportRefs": {
                "description": "The Activity References model.",
                "properties": {
                    "partialSuccess": {
                        "description": "A Boolean indicator of whether or not to return a detailed Partial Success response. In a detailed response, the INPUT property contains the entire request payload to facilitate resubmitting a corrected request.",
                        "type": "boolean"
                    },
                    "where": {
                        "$ref": "#/components/schemas/ActivityRefsWhere"
                    }
                },
                "required": [
                    "partialSuccess",
                    "where"
                ],
                "type": "object"
            },
            "LocalizedObjectRef": {
                "description": "Model for a Localized Object Reference.",
                "properties": {
                    "id": {
                        "description": "The ID of a Localized Object Reference.",
                        "example": 1,
                        "format": "int64",
                        "type": "integer"
                    },
                    "localizedName": {
                        "description": "The localized name of a Localized Object Reference.",
                        "example": "name",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of a Localized Object Reference.",
                        "example": "name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ObjectRef": {
                "description": "The HCA object reference object model.",
                "properties": {
                    "id": {
                        "description": "The ID associated with an object reference.",
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier associated with an object reference.",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Profile": {
                "description": "The Profile object model.",
                "properties": {
                    "autoResolveActivity": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "betweenActivityVariance": {
                        "description": "The between activity variance associated with a profile.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "closedOrphanConnectionGap": {
                        "description": "A closed orphan activity segment and the following orphan activity segment will be combined if the interval between is less than or equal to this setting.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "codeProfile": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "defaultActivity": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "description": {
                        "description": "The description of a profile.",
                        "type": "string"
                    },
                    "doNotSetSpanOrphaned": {
                        "description": "A Boolean indicator of whether or not to include activity events entered outside of timecard shifts.",
                        "type": "boolean"
                    },
                    "firstActivityVariance": {
                        "description": "The first activity variance associated with a profile.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "formProfile": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "id": {
                        "description": "The ID of a profile.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "idleActivity": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "lastActivityVariance": {
                        "description": "The last activity variance associated with a profile.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "limitDirect": {
                        "description": "The Profile's maximum number of direct activities that it can be working on simultaneously.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "limitInDirect": {
                        "description": "The Profile's maximum number of indirect activities that it can be working on simultaneously.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "maxDurationAmount": {
                        "description": "The maximum duration transaction entry amount allowed.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "minDurationAmount": {
                        "description": "The minimum duration transaction entry amount allowed.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "multiStopVariance": {
                        "description": "Deprecated. This property no longer has any function.",
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of a profile.",
                        "type": "string"
                    },
                    "openActivityLookbackWindow": {
                        "description": "The search time offset of open activities associated with a profile.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "openOrphanConnectionGap": {
                        "description": "A started orphan activity segment and the following orphan activity segment will be combined if the interval between is less than or equal to this setting.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "paidMealActivity": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "queryProfile": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "timecardValidation": {
                        "$ref": "#/components/schemas/Configuration"
                    },
                    "unpaidMealActivity": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "version": {
                        "description": "The version of a profile.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "workRule": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "required": [
                    "betweenActivityVariance",
                    "codeProfile",
                    "doNotSetSpanOrphaned",
                    "firstActivityVariance",
                    "formProfile",
                    "id",
                    "lastActivityVariance",
                    "name",
                    "openActivityLookbackWindow",
                    "queryProfile",
                    "timecardValidation",
                    "version"
                ],
                "type": "object"
            },
            "Profile_PartialPublicAPI": {
                "description": "The Profile object model.",
                "properties": {
                    "autoResolveActivity": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "betweenActivityVariance": {
                        "description": "The between activity variance associated with a profile.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "closedOrphanConnectionGap": {
                        "description": "A closed orphan activity segment and the following orphan activity segment will be combined if the interval between is less than or equal to this setting.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "codeProfile": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "defaultActivity": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "description": {
                        "description": "The description of a profile.",
                        "type": "string"
                    },
                    "doNotSetSpanOrphaned": {
                        "description": "A Boolean indicator of whether or not to include activity events entered outside of timecard shifts.",
                        "type": "boolean"
                    },
                    "firstActivityVariance": {
                        "description": "The first activity variance associated with a profile.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "formProfile": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "id": {
                        "description": "The ID of a profile.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "idleActivity": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "lastActivityVariance": {
                        "description": "The last activity variance associated with a profile.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "limitDirect": {
                        "description": "The Profile's maximum number of direct activities that it can be working on simultaneously.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "limitInDirect": {
                        "description": "The Profile's maximum number of indirect activities that it can be working on simultaneously.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "maxDurationAmount": {
                        "description": "The maximum duration transaction entry amount allowed.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "minDurationAmount": {
                        "description": "The minimum duration transaction entry amount allowed.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "multiStopVariance": {
                        "description": "Deprecated. This property no longer has any function.",
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of a profile.",
                        "type": "string"
                    },
                    "openActivityLookbackWindow": {
                        "description": "The search time offset of open activities associated with a profile.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "openOrphanConnectionGap": {
                        "description": "A started orphan activity segment and the following orphan activity segment will be combined if the interval between is less than or equal to this setting.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "paidMealActivity": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "queryProfile": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "timecardValidation": {
                        "$ref": "#/components/schemas/Configuration_PartialPublicAPI"
                    },
                    "unpaidMealActivity": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "version": {
                        "description": "The version of a profile.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "workRule": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    }
                },
                "required": [
                    "betweenActivityVariance",
                    "codeProfile",
                    "doNotSetSpanOrphaned",
                    "firstActivityVariance",
                    "formProfile",
                    "id",
                    "lastActivityVariance",
                    "name",
                    "openActivityLookbackWindow",
                    "queryProfile",
                    "timecardValidation",
                    "version"
                ],
                "type": "object"
            },
            "ProfileRefs": {
                "description": "The Profile References model.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/ProfileRefsWhere"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "BulkActivitySegmentForRest": {
                "description": "Entity describing an Activity Result Segment for an Activity Segment.",
                "properties": {
                    "accepted": {
                        "description": "A Boolean indicator of whether or not the segment is accepted.",
                        "type": "boolean"
                    },
                    "activity": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "activitySegmentIdentifier": {
                        "$ref": "#/components/schemas/BulkActivitySegmentIdentifier"
                    },
                    "commentNotes": {
                        "description": "A reference to a list of Comments. This object can have multiple Comments with multiple Notes for each Comment.",
                        "items": {
                            "$ref": "#/components/schemas/Timecard_Comment_Note"
                        },
                        "type": "array"
                    },
                    "concurrentWithPrevious": {
                        "description": "A Boolean indicator of whether or not an activity segment is concurrent with prior segment(s).",
                        "type": "boolean"
                    },
                    "costCenter": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "createdDateTime": {
                        "description": "The date and time this record was created in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "dataSourceId": {
                        "description": "The ID of the data source.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "direct": {
                        "description": "A Boolean indicator of whether or not the activity is direct.",
                        "type": "boolean"
                    },
                    "durationDate": {
                        "description": "The duration date of the activity in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "format": "date",
                        "type": "string"
                    },
                    "durationInSeconds": {
                        "description": "The duration in seconds of the activity.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "durationOrder": {
                        "description": "The order number of an activity duration segment.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "editByTypeId": {
                        "description": "The ID of the edit by type.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "emptyTransfer": {
                        "description": "A Boolean indicator of whether or not the transfer is empty.",
                        "type": "boolean"
                    },
                    "endDateTime": {
                        "description": "The end date and time in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "endTimezone": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "eventTypeId": {
                        "description": "The ID of an event type.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "hoursAllocatedType": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "laborAccountId": {
                        "description": "The ID of the labor account, which combines the cost center and labor categories.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "laborCategories": {
                        "description": "A list of labor category entry lists containing labor categories.",
                        "items": {
                            "$ref": "#/components/schemas/Timecard_Activity_Segment_Bulk_Labor_Category_Transfer"
                        },
                        "type": "array"
                    },
                    "orgJob": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "orgJobId": {
                        "description": "The ID of a job associated with an activity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "reordered": {
                        "description": "A Boolean indicator of whether or not type operation is reordered.",
                        "type": "boolean"
                    },
                    "resultSegments": {
                        "description": "A reference to a list of Activity Result Segments.",
                        "items": {
                            "$ref": "#/components/schemas/BulkActivityResultSegment"
                        },
                        "type": "array"
                    },
                    "startDateTime": {
                        "description": "The date and time of the start of the activity in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "startTimezone": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "transactionType": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "unitId": {
                        "description": "The ID of the unit.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "updatedDateTime": {
                        "description": "The date and time this record was last updated in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "weightValueAmount": {
                        "description": "The amount (as a decimal value representing money) of the activity.",
                        "format": "double",
                        "type": "number"
                    },
                    "wfaTransId": {
                        "description": "A reference to the form.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "workRule": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    }
                },
                "type": "object"
            },
            "ActivityShiftExportResult": {
                "description": "Model for activity shift export results.",
                "properties": {
                    "activityShifts": {
                        "description": "An array of activity shifts.",
                        "items": {
                            "$ref": "#/components/schemas/Activity_Shift"
                        },
                        "type": "array"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "type": "object"
            },
            "NetChangeResult": {
                "description": "The net change response model.",
                "properties": {
                    "employee": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "segments": {
                        "description": "A segment that is a bundle of current and previous states.",
                        "items": {
                            "$ref": "#/components/schemas/NetChangeBundle"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Customer": {
                "description": "The Customer model.",
                "properties": {
                    "address1": {
                        "description": "The first address of a Customer.",
                        "type": "string"
                    },
                    "address2": {
                        "description": "The second address of a Customer.",
                        "type": "string"
                    },
                    "address3": {
                        "description": "The third address of a Customer.",
                        "type": "string"
                    },
                    "contactName1": {
                        "description": "The first contact name for a Customer.",
                        "type": "string"
                    },
                    "contactName2": {
                        "description": "The second contact name for a Customer.",
                        "type": "string"
                    },
                    "contactName3": {
                        "description": "The third contact name for a Customer.",
                        "type": "string"
                    },
                    "fullName": {
                        "description": "The full name of a Customer.",
                        "type": "string"
                    },
                    "id": {
                        "description": "An ID associated with a Customer.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of a Customer.",
                        "type": "string"
                    },
                    "phone1": {
                        "description": "The first phone number of a Customer.",
                        "type": "string"
                    },
                    "phone2": {
                        "description": "The second phone number of a Customer.",
                        "type": "string"
                    },
                    "phone3": {
                        "description": "The third phone number of a Customer.",
                        "type": "string"
                    },
                    "version": {
                        "description": "The version of a Customer.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "fullName",
                    "id",
                    "name",
                    "version"
                ],
                "type": "object"
            },
            "CustomerRefs": {
                "description": "The Customer References model.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/CustomerRefsWhere"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "ActivityEmployeeRefs": {
                "description": "The Employee References model.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/ActivityEmployeeRefsWhere"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "EmployeeActivityAssignments": {
                "description": "The Employee with Assigned Activities model.",
                "properties": {
                    "activities": {
                        "description": "A list of activities directly assigned to an employee.",
                        "items": {
                            "$ref": "#/components/schemas/AssignedActivity"
                        },
                        "type": "array"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "type": "object"
            },
            "ActivitiesFieldDefinition_PublicAPI": {
                "description": "The Field Definition model.",
                "properties": {
                    "active": {
                        "description": "A Boolean indicator of whether or not a field definition is active.",
                        "type": "boolean"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "fieldLength": {
                        "description": "The field length of a field definition.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "fieldType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "id": {
                        "description": "An ID associated with a field definition.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "multiSelect": {
                        "description": "A Boolean indicator of whether or not a field definition allows multi-select.",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "The name of a field definition.",
                        "type": "string"
                    },
                    "precision": {
                        "description": "The precision of a field definition.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "resultCode": {
                        "description": "A Boolean indicator of whether or not a field definition contains a result code.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "resultType": {
                        "description": "A Boolean indicator of whether or not a field definition contains a result type.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "scale": {
                        "description": "The scale of a field definition.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "version": {
                        "description": "The version of a field definition.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "active",
                    "fieldType",
                    "id",
                    "multiSelect",
                    "name"
                ],
                "type": "object"
            },
            "ActivitiesFieldDefinition": {
                "description": "The Field Definition model.",
                "properties": {
                    "active": {
                        "description": "A Boolean indicator of whether or not a field definition is active.",
                        "type": "boolean"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "fieldLength": {
                        "description": "The field length of a field definition.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "fieldType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "id": {
                        "description": "An ID associated with a field definition.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "multiSelect": {
                        "description": "A Boolean indicator of whether or not a field definition allows multi-select.",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "The name of a field definition.",
                        "type": "string"
                    },
                    "precision": {
                        "description": "The precision of a field definition.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "resultCode": {
                        "description": "A Boolean indicator of whether or not a field definition contains a result code.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "resultType": {
                        "description": "A Boolean indicator of whether or not a field definition contains a result type.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "scale": {
                        "description": "The scale of a field definition.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "version": {
                        "description": "The version of a field definition.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "active",
                    "fieldType",
                    "id",
                    "multiSelect",
                    "name"
                ],
                "type": "object"
            },
            "FieldDefinitionRefs": {
                "description": "The Field Definition References model.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/FieldDefinitionRefsWhere"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "FormProfile": {
                "description": "The Form Profile model.",
                "properties": {
                    "default": {
                        "type": "boolean"
                    },
                    "description": {
                        "description": "The description of a form profile.",
                        "type": "string"
                    },
                    "forms": {
                        "description": "A list of forms associated with a form profile.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The ID associated with a form profile.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of a form profile.",
                        "type": "string"
                    },
                    "version": {
                        "description": "The version of a form profile.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "description",
                    "forms",
                    "id",
                    "name",
                    "version"
                ],
                "type": "object"
            },
            "FormProfileRefs": {
                "description": "The Form Profile References model.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/FormProfileRefsWhere"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "Form_PublicAPI": {
                "description": "The Activity Form model.",
                "properties": {
                    "clocksSearchConfiguration": {
                        "$ref": "#/components/schemas/ClocksSearchConfiguration_PublicAPI"
                    },
                    "defaultQuery": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "description": {
                        "description": "The description an activity form or a results template.",
                        "type": "string"
                    },
                    "formCode": {
                        "description": "The code of an activity form.",
                        "type": "string"
                    },
                    "formType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "id": {
                        "description": "The ID of an activity form or a results template.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "offline": {
                        "description": "A Boolean indicator of whether or not the form is offline.",
                        "type": "boolean"
                    },
                    "relatedOfflineForm": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "relatedOfflineFormType": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "steps": {
                        "description": "The steps associated with an activity form or a results template.",
                        "items": {
                            "$ref": "#/components/schemas/FormStep_PublicAPI"
                        },
                        "type": "array"
                    },
                    "timeOut": {
                        "description": "The number of seconds the system waits for the user to submit data.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "version": {
                        "description": "The version of an activity form or a results template.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "formCode",
                    "formType",
                    "id",
                    "localePolicy",
                    "offline",
                    "steps",
                    "timeOut"
                ],
                "type": "object"
            },
            "Form": {
                "description": "The Activity Form model.",
                "properties": {
                    "clocksSearchConfiguration": {
                        "$ref": "#/components/schemas/ClocksSearchConfiguration"
                    },
                    "defaultQuery": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "description": {
                        "description": "The description an activity form or a results template.",
                        "type": "string"
                    },
                    "formCode": {
                        "description": "The code of an activity form.",
                        "type": "string"
                    },
                    "formType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "id": {
                        "description": "The ID of an activity form or a results template.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "offline": {
                        "description": "A Boolean indicator of whether or not the form is offline.",
                        "type": "boolean"
                    },
                    "relatedOfflineForm": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "relatedOfflineFormType": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "steps": {
                        "description": "The steps associated with an activity form or a results template.",
                        "items": {
                            "$ref": "#/components/schemas/FormStep"
                        },
                        "type": "array"
                    },
                    "timeOut": {
                        "description": "The number of seconds the system waits for the user to submit data.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "version": {
                        "description": "The version of an activity form or a results template.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "formCode",
                    "formType",
                    "id",
                    "localePolicy",
                    "offline",
                    "steps",
                    "timeOut"
                ],
                "type": "object"
            },
            "Form_PartialPublicAPI": {
                "description": "The Activity Form model.",
                "properties": {
                    "clocksSearchConfiguration": {
                        "$ref": "#/components/schemas/ClocksSearchConfiguration_PartialPublicAPI"
                    },
                    "defaultQuery": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "description": {
                        "description": "The description an activity form or a results template.",
                        "type": "string"
                    },
                    "formCode": {
                        "description": "The code of an activity form.",
                        "type": "string"
                    },
                    "formType": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "id": {
                        "description": "The ID of an activity form or a results template.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "offline": {
                        "description": "A Boolean indicator of whether or not the form is offline.",
                        "type": "boolean"
                    },
                    "relatedOfflineForm": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "relatedOfflineFormType": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "steps": {
                        "description": "The steps associated with an activity form or a results template.",
                        "items": {
                            "$ref": "#/components/schemas/FormStep_PartialPublicAPI"
                        },
                        "type": "array"
                    },
                    "timeOut": {
                        "description": "The number of seconds the system waits for the user to submit data.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "version": {
                        "description": "The version of an activity form or a results template.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "formCode",
                    "formType",
                    "id",
                    "localePolicy",
                    "offline",
                    "steps",
                    "timeOut"
                ],
                "type": "object"
            },
            "FormRefs": {
                "description": "The Activity Form References model.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/FormRefsWhere"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "PayCodeAction": {
                "description": "The Paycode Action model.",
                "properties": {
                    "activity": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The ID associated with a paycode action.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of a paycode action.",
                        "type": "string"
                    },
                    "payCode": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "version": {
                        "description": "The version of a paycode action.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "activity",
                    "id",
                    "name",
                    "payCode",
                    "version"
                ],
                "type": "object"
            },
            "PayCodeActionRefs": {
                "description": "The Paycode Actions references model.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/PayCodeActionRefsWhere"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "Query_PublicAPI": {
                "description": "The query model.",
                "properties": {
                    "activities": {
                        "description": "A collection of activities assigned to a query.",
                        "items": {
                            "$ref": "#/components/schemas/ListQueryActivity_PublicAPI"
                        },
                        "type": "array"
                    },
                    "activityTypes": {
                        "description": "A collection of activity types assigned to a query.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                        },
                        "type": "array"
                    },
                    "completionStatuses": {
                        "description": "A collection of completion statuses assigned to a query.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                        },
                        "type": "array"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "description": {
                        "description": "The description of a query.",
                        "type": "string"
                    },
                    "directlyAssignedActivities": {
                        "description": "A Boolean indicator of whether or not a query considers only activities directly assigned to an employee.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "excludeDefaultActivity": {
                        "description": "A Boolean indicator of whether or not a query excludes default activity.",
                        "type": "boolean"
                    },
                    "excludeIdleTimeActivity": {
                        "description": "A Boolean indicator of whether or not a query excludes idle activity.",
                        "type": "boolean"
                    },
                    "excludePaidMealActivity": {
                        "description": "A Boolean indicator of whether or not a query excludes paid break activity.",
                        "type": "boolean"
                    },
                    "excludePayCodeActions": {
                        "description": "A Boolean indicator of whether or not a query excludes activities that are added in any pay code as a pay code action.",
                        "type": "boolean"
                    },
                    "excludeUnpaidMealActivity": {
                        "description": "A Boolean indicator of whether or not a query excludes meal break activity.",
                        "type": "boolean"
                    },
                    "heldStatuses": {
                        "description": "A collection of held statuses assigned to a query.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The ID of a query.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "jobTransferSet": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "laborCategoryProfile": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "name": {
                        "description": "The name of a query.",
                        "type": "string"
                    },
                    "notEqualToUserField1": {
                        "description": "A Boolean indicator of whether or not userfield1 values must be matched.",
                        "type": "boolean"
                    },
                    "notEqualToUserField2": {
                        "description": "A Boolean indicator of whether or not userfield2 values must be matched.",
                        "type": "boolean"
                    },
                    "notEqualToUserField3": {
                        "description": "A Boolean indicator of whether or not userfield3 values must be matched.",
                        "type": "boolean"
                    },
                    "notEqualToUserField4": {
                        "description": "A Boolean indicator of whether or not userfield4 values must be matched.",
                        "type": "boolean"
                    },
                    "processTypes": {
                        "description": "A collection of process types assigned to a query.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                        },
                        "type": "array"
                    },
                    "queryDateRanges": {
                        "description": "A collection of time period assigned to a query.",
                        "items": {
                            "$ref": "#/components/schemas/QueryDateRange_PublicAPI"
                        },
                        "type": "array"
                    },
                    "queryType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "searchName": {
                        "description": "The search name of a query.",
                        "type": "string"
                    },
                    "useEmployeeJobTransferSet": {
                        "description": "A Boolean indicator of whether or not a query can use an employee job transfer set.",
                        "type": "boolean"
                    },
                    "useEmployeeLaborCategoryProfileSet": {
                        "description": "A Boolean indicator of whether or not a query can use an employee labor category profile.",
                        "type": "boolean"
                    },
                    "userField1": {
                        "description": "The user field 1 associated with a query.",
                        "type": "string"
                    },
                    "userField2": {
                        "description": "The user field 2 associated with a query.",
                        "type": "string"
                    },
                    "userField3": {
                        "description": "The user field 3 associated with a query.",
                        "type": "string"
                    },
                    "userField4": {
                        "description": "The user field 4 associated with a query.",
                        "type": "string"
                    },
                    "version": {
                        "description": "The version of a query.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "activityTypes",
                    "completionStatuses",
                    "excludeDefaultActivity",
                    "excludeIdleTimeActivity",
                    "excludePaidMealActivity",
                    "excludeUnpaidMealActivity",
                    "heldStatuses",
                    "id",
                    "name",
                    "version"
                ],
                "type": "object"
            },
            "Query": {
                "description": "The query model.",
                "properties": {
                    "activities": {
                        "description": "A collection of activities assigned to a query.",
                        "items": {
                            "$ref": "#/components/schemas/ListQueryActivity"
                        },
                        "type": "array"
                    },
                    "activityTypes": {
                        "description": "A collection of activity types assigned to a query.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    },
                    "completionStatuses": {
                        "description": "A collection of completion statuses assigned to a query.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "description": {
                        "description": "The description of a query.",
                        "type": "string"
                    },
                    "directlyAssignedActivities": {
                        "description": "A Boolean indicator of whether or not a query considers only activities directly assigned to an employee.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "excludeDefaultActivity": {
                        "description": "A Boolean indicator of whether or not a query excludes default activity.",
                        "type": "boolean"
                    },
                    "excludeIdleTimeActivity": {
                        "description": "A Boolean indicator of whether or not a query excludes idle activity.",
                        "type": "boolean"
                    },
                    "excludePaidMealActivity": {
                        "description": "A Boolean indicator of whether or not a query excludes paid break activity.",
                        "type": "boolean"
                    },
                    "excludePayCodeActions": {
                        "description": "A Boolean indicator of whether or not a query excludes activities that are added in any pay code as a pay code action.",
                        "type": "boolean"
                    },
                    "excludeUnpaidMealActivity": {
                        "description": "A Boolean indicator of whether or not a query excludes meal break activity.",
                        "type": "boolean"
                    },
                    "heldStatuses": {
                        "description": "A collection of held statuses assigned to a query.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The ID of a query.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "jobTransferSet": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "laborCategoryProfile": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "name": {
                        "description": "The name of a query.",
                        "type": "string"
                    },
                    "notEqualToUserField1": {
                        "description": "A Boolean indicator of whether or not userfield1 values must be matched.",
                        "type": "boolean"
                    },
                    "notEqualToUserField2": {
                        "description": "A Boolean indicator of whether or not userfield2 values must be matched.",
                        "type": "boolean"
                    },
                    "notEqualToUserField3": {
                        "description": "A Boolean indicator of whether or not userfield3 values must be matched.",
                        "type": "boolean"
                    },
                    "notEqualToUserField4": {
                        "description": "A Boolean indicator of whether or not userfield4 values must be matched.",
                        "type": "boolean"
                    },
                    "processTypes": {
                        "description": "A collection of process types assigned to a query.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    },
                    "queryDateRanges": {
                        "description": "A collection of time period assigned to a query.",
                        "items": {
                            "$ref": "#/components/schemas/QueryDateRange"
                        },
                        "type": "array"
                    },
                    "queryType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "searchName": {
                        "description": "The search name of a query.",
                        "type": "string"
                    },
                    "useEmployeeJobTransferSet": {
                        "description": "A Boolean indicator of whether or not a query can use an employee job transfer set.",
                        "type": "boolean"
                    },
                    "useEmployeeLaborCategoryProfileSet": {
                        "description": "A Boolean indicator of whether or not a query can use an employee labor category profile.",
                        "type": "boolean"
                    },
                    "userField1": {
                        "description": "The user field 1 associated with a query.",
                        "type": "string"
                    },
                    "userField2": {
                        "description": "The user field 2 associated with a query.",
                        "type": "string"
                    },
                    "userField3": {
                        "description": "The user field 3 associated with a query.",
                        "type": "string"
                    },
                    "userField4": {
                        "description": "The user field 4 associated with a query.",
                        "type": "string"
                    },
                    "version": {
                        "description": "The version of a query.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "activityTypes",
                    "completionStatuses",
                    "excludeDefaultActivity",
                    "excludeIdleTimeActivity",
                    "excludePaidMealActivity",
                    "excludeUnpaidMealActivity",
                    "heldStatuses",
                    "id",
                    "name",
                    "version"
                ],
                "type": "object"
            },
            "Query_PartialPublicAPI": {
                "description": "The query model.",
                "properties": {
                    "activities": {
                        "description": "A collection of activities assigned to a query.",
                        "items": {
                            "$ref": "#/components/schemas/ListQueryActivity_PartialPublicAPI"
                        },
                        "type": "array"
                    },
                    "activityTypes": {
                        "description": "A collection of activity types assigned to a query.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                        },
                        "type": "array"
                    },
                    "completionStatuses": {
                        "description": "A collection of completion statuses assigned to a query.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                        },
                        "type": "array"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "description": {
                        "description": "The description of a query.",
                        "type": "string"
                    },
                    "directlyAssignedActivities": {
                        "description": "A Boolean indicator of whether or not a query considers only activities directly assigned to an employee.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "excludeDefaultActivity": {
                        "description": "A Boolean indicator of whether or not a query excludes default activity.",
                        "type": "boolean"
                    },
                    "excludeIdleTimeActivity": {
                        "description": "A Boolean indicator of whether or not a query excludes idle activity.",
                        "type": "boolean"
                    },
                    "excludePaidMealActivity": {
                        "description": "A Boolean indicator of whether or not a query excludes paid break activity.",
                        "type": "boolean"
                    },
                    "excludePayCodeActions": {
                        "description": "A Boolean indicator of whether or not a query excludes activities that are added in any pay code as a pay code action.",
                        "type": "boolean"
                    },
                    "excludeUnpaidMealActivity": {
                        "description": "A Boolean indicator of whether or not a query excludes meal break activity.",
                        "type": "boolean"
                    },
                    "heldStatuses": {
                        "description": "A collection of held statuses assigned to a query.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The ID of a query.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "jobTransferSet": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "laborCategoryProfile": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "name": {
                        "description": "The name of a query.",
                        "type": "string"
                    },
                    "notEqualToUserField1": {
                        "description": "A Boolean indicator of whether or not userfield1 values must be matched.",
                        "type": "boolean"
                    },
                    "notEqualToUserField2": {
                        "description": "A Boolean indicator of whether or not userfield2 values must be matched.",
                        "type": "boolean"
                    },
                    "notEqualToUserField3": {
                        "description": "A Boolean indicator of whether or not userfield3 values must be matched.",
                        "type": "boolean"
                    },
                    "notEqualToUserField4": {
                        "description": "A Boolean indicator of whether or not userfield4 values must be matched.",
                        "type": "boolean"
                    },
                    "processTypes": {
                        "description": "A collection of process types assigned to a query.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                        },
                        "type": "array"
                    },
                    "queryDateRanges": {
                        "description": "A collection of time period assigned to a query.",
                        "items": {
                            "$ref": "#/components/schemas/QueryDateRange_PartialPublicAPI"
                        },
                        "type": "array"
                    },
                    "queryType": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "searchName": {
                        "description": "The search name of a query.",
                        "type": "string"
                    },
                    "useEmployeeJobTransferSet": {
                        "description": "A Boolean indicator of whether or not a query can use an employee job transfer set.",
                        "type": "boolean"
                    },
                    "useEmployeeLaborCategoryProfileSet": {
                        "description": "A Boolean indicator of whether or not a query can use an employee labor category profile.",
                        "type": "boolean"
                    },
                    "userField1": {
                        "description": "The user field 1 associated with a query.",
                        "type": "string"
                    },
                    "userField2": {
                        "description": "The user field 2 associated with a query.",
                        "type": "string"
                    },
                    "userField3": {
                        "description": "The user field 3 associated with a query.",
                        "type": "string"
                    },
                    "userField4": {
                        "description": "The user field 4 associated with a query.",
                        "type": "string"
                    },
                    "version": {
                        "description": "The version of a query.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "activityTypes",
                    "completionStatuses",
                    "excludeDefaultActivity",
                    "excludeIdleTimeActivity",
                    "excludePaidMealActivity",
                    "excludeUnpaidMealActivity",
                    "heldStatuses",
                    "id",
                    "name",
                    "version"
                ],
                "type": "object"
            },
            "QueryRefs": {
                "description": "The Query References model.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/QueryRefsWhere"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "QueryProfile": {
                "description": "The Query Profile model.",
                "properties": {
                    "accessLevelType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "description": {
                        "description": "The description of a query profile.",
                        "type": "string"
                    },
                    "displayActivitySelectInDevices": {
                        "description": "A Boolean indicator of whether or not display activity selection in devices for a query profile.",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The ID of a query profile.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of a query profile.",
                        "type": "string"
                    },
                    "queries": {
                        "description": "The activity queries associated with a query profile.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    },
                    "version": {
                        "description": "The version of a query profile.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "name"
                ],
                "type": "object"
            },
            "QueryProfileRefs": {
                "description": "The Query Profile References model.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/QueryProfileRefsWhere"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "ResultCodeProfile": {
                "description": "The Result Code Profile model.",
                "properties": {
                    "default": {
                        "type": "boolean"
                    },
                    "description": {
                        "description": "The description of a result code profile.",
                        "type": "string"
                    },
                    "fieldDefinitionResultCodeAssignments": {
                        "description": "A collection of objects representing result code assignments to field definitions.",
                        "items": {
                            "$ref": "#/components/schemas/FieldDefinitionResultCodeAssignment"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The ID associated with a result code profile.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of a result code profile.",
                        "type": "string"
                    },
                    "version": {
                        "description": "The version of a result code profile.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "version"
                ],
                "type": "object"
            },
            "ResultCodeProfile_PartialPublicAPI": {
                "description": "The Result Code Profile model.",
                "properties": {
                    "default": {
                        "type": "boolean"
                    },
                    "description": {
                        "description": "The description of a result code profile.",
                        "type": "string"
                    },
                    "fieldDefinitionResultCodeAssignments": {
                        "description": "A collection of objects representing result code assignments to field definitions.",
                        "items": {
                            "$ref": "#/components/schemas/FieldDefinitionResultCodeAssignment_PartialPublicAPI"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The ID associated with a result code profile.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of a result code profile.",
                        "type": "string"
                    },
                    "version": {
                        "description": "The version of a result code profile.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "version"
                ],
                "type": "object"
            },
            "ResultCodeProfileRefs": {
                "description": "The Result Code Profile References model.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/ResultCodeProfileRefsWhere"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "ResultCode_PublicAPI": {
                "description": "The Result Code object model.",
                "properties": {
                    "active": {
                        "description": "A Boolean indicator of whether or not a result code is active.",
                        "type": "boolean"
                    },
                    "description": {
                        "description": "The description of a result code.",
                        "type": "string"
                    },
                    "fieldDefinition": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "id": {
                        "description": "An ID associated with a result code.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of a result code.",
                        "type": "string"
                    },
                    "sdmKey": {
                        "type": "string"
                    },
                    "version": {
                        "description": "The version of a result code.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "active",
                    "description",
                    "fieldDefinition",
                    "id",
                    "name"
                ],
                "type": "object"
            },
            "ResultCodeRefs": {
                "description": "The Result Code reference model.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/ResultCodeRefsWhere"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "ResultsTemplate_PublicAPI": {
                "description": "The Results Template model.",
                "properties": {
                    "description": {
                        "description": "The description an activity form or a results template.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of an activity form or a results template.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of a results template.",
                        "type": "string"
                    },
                    "steps": {
                        "description": "The steps associated with an activity form or a results template.",
                        "items": {
                            "$ref": "#/components/schemas/ResultsTemplateStep_PublicAPI"
                        },
                        "type": "array"
                    },
                    "version": {
                        "description": "The version of an activity form or a results template.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "steps"
                ],
                "type": "object"
            },
            "ResultsTemplate": {
                "description": "The Results Template model.",
                "properties": {
                    "description": {
                        "description": "The description an activity form or a results template.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of an activity form or a results template.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of a results template.",
                        "type": "string"
                    },
                    "steps": {
                        "description": "The steps associated with an activity form or a results template.",
                        "items": {
                            "$ref": "#/components/schemas/ResultsTemplateStep"
                        },
                        "type": "array"
                    },
                    "version": {
                        "description": "The version of an activity form or a results template.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "steps"
                ],
                "type": "object"
            },
            "ResultsTemplateRefs": {
                "description": "The Results Template References model.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/ResultsTemplateRefsWhere"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "Setting": {
                "description": "The Setting model.",
                "properties": {
                    "booleanValue": {
                        "description": "The Boolean value of a setting.",
                        "type": "boolean"
                    },
                    "displayContent": {
                        "description": "The display content of a setting.",
                        "type": "string"
                    },
                    "id": {
                        "description": "An ID associated with a setting.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "integerValue": {
                        "description": "The integer value of a setting.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "internalName": {
                        "description": "The internal name of a setting.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of a setting.",
                        "type": "string"
                    },
                    "value": {
                        "description": "The value of a setting.",
                        "type": "string"
                    },
                    "version": {
                        "description": "The version of a setting.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "internalName",
                    "name",
                    "value",
                    "version"
                ],
                "type": "object"
            },
            "SettingRefs": {
                "description": "The Setting References model.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/SettingRefsWhere"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "ActivityTeamSegmentWithResultsForRest": {
                "properties": {
                    "acceptAction": {
                        "enum": [
                            "ACCEPT",
                            "REMOVE"
                        ],
                        "type": "string"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Activity_Team_Segment_Identifier"
                    },
                    "teamResults": {
                        "items": {
                            "$ref": "#/components/schemas/Activity_Team_Segment_Result"
                        },
                        "type": "array"
                    },
                    "teamSegment": {
                        "$ref": "#/components/schemas/Activity_Team_Segment"
                    }
                },
                "type": "object"
            },
            "ActivityTeamDefinition_PublicAPI": {
                "description": "The Activity Team model.",
                "properties": {
                    "active": {
                        "description": "A Boolean indicator of whether or not an activity team is active.",
                        "type": "boolean"
                    },
                    "createdDateTime": {
                        "description": "The date and time an activity team was created in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "readOnly": true,
                        "type": "string"
                    },
                    "defaultActivity": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "defaultActivityIsIdle": {
                        "description": "A Boolean indicator of whether or not the default activity is idle.",
                        "type": "boolean"
                    },
                    "defaultMembershipDurationInMinutes": {
                        "description": "The default maximum duration in minutes of an activity team membership.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "defaultSegmentDurationInMinutes": {
                        "description": "The default maximum duration in minutes of an activity team segment.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "description": "The description of an activity team.",
                        "type": "string"
                    },
                    "firstDayOfWeek": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "id": {
                        "description": "The ID associated with an activity team.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "locations": {
                        "description": "A list of locations associated with an activity team.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                        },
                        "type": "array"
                    },
                    "maxConcurrentActivities": {
                        "description": "A maximum number of direct/indirect activities that an activity team can be working on simultaneously.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "maxDirectActivities": {
                        "description": "A maximum number of direct activities that an activity team can be working on simultaneously.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "maxIndirectActivities": {
                        "description": "A maximum number of indirect activities that an activity team can be working on simultaneously.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of an activity team.",
                        "type": "string"
                    },
                    "timezone": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "updatedDateTime": {
                        "description": "The date and time of the last update to an activity team in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "readOnly": true,
                        "type": "string"
                    },
                    "userField1": {
                        "description": "The user field 1 associated with an activity team.",
                        "type": "string"
                    },
                    "userField2": {
                        "description": "The user field 2 associated with an activity team.",
                        "type": "string"
                    },
                    "userField3": {
                        "description": "The user field 3 associated with an activity team.",
                        "type": "string"
                    },
                    "userField4": {
                        "description": "The user field 4 associated with an activity team.",
                        "type": "string"
                    },
                    "version": {
                        "description": "The version of an activity team.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "defaultMembershipDurationInMinutes",
                    "defaultSegmentDurationInMinutes",
                    "id",
                    "name"
                ],
                "type": "object"
            },
            "ActivityTeamDefinition": {
                "description": "The Activity Team model.",
                "properties": {
                    "active": {
                        "description": "A Boolean indicator of whether or not an activity team is active.",
                        "type": "boolean"
                    },
                    "createdDateTime": {
                        "description": "The date and time an activity team was created in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "readOnly": true,
                        "type": "string"
                    },
                    "defaultActivity": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "defaultActivityIsIdle": {
                        "description": "A Boolean indicator of whether or not the default activity is idle.",
                        "type": "boolean"
                    },
                    "defaultMembershipDurationInMinutes": {
                        "description": "The default maximum duration in minutes of an activity team membership.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "defaultSegmentDurationInMinutes": {
                        "description": "The default maximum duration in minutes of an activity team segment.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "description": "The description of an activity team.",
                        "type": "string"
                    },
                    "firstDayOfWeek": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "id": {
                        "description": "The ID associated with an activity team.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "locations": {
                        "description": "A list of locations associated with an activity team.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    },
                    "maxConcurrentActivities": {
                        "description": "A maximum number of direct/indirect activities that an activity team can be working on simultaneously.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "maxDirectActivities": {
                        "description": "A maximum number of direct activities that an activity team can be working on simultaneously.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "maxIndirectActivities": {
                        "description": "A maximum number of indirect activities that an activity team can be working on simultaneously.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of an activity team.",
                        "type": "string"
                    },
                    "timezone": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "updatedDateTime": {
                        "description": "The date and time of the last update to an activity team in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "readOnly": true,
                        "type": "string"
                    },
                    "userField1": {
                        "description": "The user field 1 associated with an activity team.",
                        "type": "string"
                    },
                    "userField2": {
                        "description": "The user field 2 associated with an activity team.",
                        "type": "string"
                    },
                    "userField3": {
                        "description": "The user field 3 associated with an activity team.",
                        "type": "string"
                    },
                    "userField4": {
                        "description": "The user field 4 associated with an activity team.",
                        "type": "string"
                    },
                    "version": {
                        "description": "The version of an activity team.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "defaultMembershipDurationInMinutes",
                    "defaultSegmentDurationInMinutes",
                    "id",
                    "name"
                ],
                "type": "object"
            },
            "ActivityTeamDefinitionRefs": {
                "description": "The Activity Team References model.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/ActivityTeamDefinitionRefsWhere"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "UnitOfMeasure": {
                "description": "The Unit of Measure model.",
                "properties": {
                    "abbreviatedName": {
                        "description": "The abbreviated name of a unit of measure.",
                        "type": "string"
                    },
                    "active": {
                        "description": "A Boolean indicator of whether or not a unit of measure is active.",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The ID associated with a unit of measure.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of a unit of measure.",
                        "type": "string"
                    },
                    "version": {
                        "description": "The version of a unit of measure.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "abbreviatedName",
                    "active",
                    "id",
                    "name",
                    "version"
                ],
                "type": "object"
            },
            "UnitOfMeasureRefs": {
                "description": "The Unit of Measure References model.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/UnitOfMeasureRefsWhere"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "ObjectRef_PublicAPI": {
                "description": "The HCA object reference object model.",
                "properties": {
                    "id": {
                        "description": "The ID associated with an object reference.",
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier associated with an object reference.",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivityStandard_PublicAPI": {
                "description": "The Activity Standard model.",
                "properties": {
                    "activityId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "effectiveEndDate": {
                        "description": "The effective end date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "readOnly": true,
                        "type": "string"
                    },
                    "effectiveStartDate": {
                        "description": "The effective start date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of an activity standard.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "laborStandardQuantity": {
                        "description": "The labor standard quantity of an activity standard.",
                        "type": "number"
                    },
                    "laborStandardSeconds": {
                        "description": "The labor standard time in seconds of an activity standard.",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "required": [
                    "effectiveStartDate",
                    "id",
                    "laborStandardQuantity",
                    "laborStandardSeconds"
                ],
                "type": "object"
            },
            "ActivityDataAccess_PublicAPI": {
                "description": "The Activity Data Access model.",
                "properties": {
                    "dataAccessType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "genericJobs": {
                        "description": "A list of generic jobs associated with an activity.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                        },
                        "type": "array"
                    },
                    "laborCategories": {
                        "description": "A list of labor category entry lists containing the labor categories associated with an activity.",
                        "items": {
                            "$ref": "#/components/schemas/LaborCategoryEntryListRef_PublicAPI"
                        },
                        "type": "array"
                    },
                    "orgSet": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    }
                },
                "type": "object"
            },
            "ActivityEmployee_PublicAPI": {
                "description": "The Activity Employee model.",
                "properties": {
                    "fullName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of an employee. This is not a person number.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The person number of an employee. This is not an employee ID.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivityHeader_PublicAPI": {
                "description": "The Activity Header model.",
                "properties": {
                    "activityType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "canBeStartedAfterEndDate": {
                        "description": "A Boolean indicator of whether or not activities can be started after the scheduled end date.",
                        "type": "boolean"
                    },
                    "canBeStartedBeforeStartDate": {
                        "description": "A Boolean indicator of whether or not activities can be started before the scheduled start date.",
                        "type": "boolean"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "id": {
                        "description": "The ID of an activity header.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "isAutoMoves": {
                        "description": "A Boolean indicator of whether or not to enable automatic moves.",
                        "type": "boolean"
                    },
                    "isExtendedCompletionStatus": {
                        "description": "A Boolean indicator of whether or not the completion status is extended.",
                        "type": "boolean"
                    },
                    "isHoldParent": {
                        "description": "A Boolean indicator of whether or not to hold the parent.",
                        "type": "boolean"
                    },
                    "isIncludedCompleteQuantity": {
                        "description": "A Boolean indicator of whether or not to include the complete quantity in efficiencies.",
                        "type": "boolean"
                    },
                    "isIncludedReworkedQuantity": {
                        "description": "A Boolean indicator of whether or not to include the reworked quantity in efficiencies.",
                        "type": "boolean"
                    },
                    "isIncludedScrappedQuantity": {
                        "description": "A Boolean indicator of whether or not to include the scrapped quantity in efficiencies.",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "The name of an activity header.",
                        "type": "string"
                    },
                    "sequenceValidationType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    }
                },
                "required": [
                    "id",
                    "name"
                ],
                "type": "object"
            },
            "ActivityTransfer_PublicAPI": {
                "description": "The Activity Transfer Type model.",
                "properties": {
                    "costCenter": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "expiredLocation": {
                        "description": "A Boolean indicator of whether or not a job's location is expired. This property is only returned if it is true.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "inactiveCostCenter": {
                        "description": "A Boolean indicator of whether or not the cost center is inactive. This property is only returned if it is true.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "inactiveLaborCategory": {
                        "description": "A Boolean indicator of whether or not a labor category in the list of labor categories is inactive. This property is only returned if it is true.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "isEmptyTransfer": {
                        "description": "A Boolean indicator of whether or not an activity transfer is empty.",
                        "type": "boolean"
                    },
                    "laborCategories": {
                        "description": "A list of labor category entry lists containing the labor categories associated with an activity transfer.",
                        "items": {
                            "$ref": "#/components/schemas/TransferLaborCategory_PublicAPI"
                        },
                        "type": "array"
                    },
                    "locationJob": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "nonDefaultTransfers": {
                        "description": "A list of non-default activity transfers associated with an activity transfer.",
                        "items": {
                            "$ref": "#/components/schemas/ActivityTransfer_PublicAPI"
                        },
                        "type": "array"
                    },
                    "transferLabel": {
                        "description": "A label associated with an activity transfer.",
                        "type": "string"
                    },
                    "workRule": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    }
                },
                "type": "object"
            },
            "ActivityStandard": {
                "description": "The Activity Standard model.",
                "properties": {
                    "activityId": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "effectiveEndDate": {
                        "description": "The effective end date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "readOnly": true,
                        "type": "string"
                    },
                    "effectiveStartDate": {
                        "description": "The effective start date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of an activity standard.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "laborStandardQuantity": {
                        "description": "The labor standard quantity of an activity standard.",
                        "type": "number"
                    },
                    "laborStandardSeconds": {
                        "description": "The labor standard time in seconds of an activity standard.",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "required": [
                    "effectiveStartDate",
                    "id",
                    "laborStandardQuantity",
                    "laborStandardSeconds"
                ],
                "type": "object"
            },
            "ActivityDataAccess": {
                "description": "The Activity Data Access model.",
                "properties": {
                    "dataAccessType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "genericJobs": {
                        "description": "A list of generic jobs associated with an activity.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    },
                    "laborCategories": {
                        "description": "A list of labor category entry lists containing the labor categories associated with an activity.",
                        "items": {
                            "$ref": "#/components/schemas/LaborCategoryEntryListRef"
                        },
                        "type": "array"
                    },
                    "orgSet": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "type": "object"
            },
            "ActivityEmployee": {
                "description": "The Activity Employee model.",
                "properties": {
                    "fullName": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of an employee. This is not a person number.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The person number of an employee. This is not an employee ID.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivityHeader": {
                "description": "The Activity Header model.",
                "properties": {
                    "activityType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "canBeStartedAfterEndDate": {
                        "description": "A Boolean indicator of whether or not activities can be started after the scheduled end date.",
                        "type": "boolean"
                    },
                    "canBeStartedBeforeStartDate": {
                        "description": "A Boolean indicator of whether or not activities can be started before the scheduled start date.",
                        "type": "boolean"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "id": {
                        "description": "The ID of an activity header.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "isAutoMoves": {
                        "description": "A Boolean indicator of whether or not to enable automatic moves.",
                        "type": "boolean"
                    },
                    "isExtendedCompletionStatus": {
                        "description": "A Boolean indicator of whether or not the completion status is extended.",
                        "type": "boolean"
                    },
                    "isHoldParent": {
                        "description": "A Boolean indicator of whether or not to hold the parent.",
                        "type": "boolean"
                    },
                    "isIncludedCompleteQuantity": {
                        "description": "A Boolean indicator of whether or not to include the complete quantity in efficiencies.",
                        "type": "boolean"
                    },
                    "isIncludedReworkedQuantity": {
                        "description": "A Boolean indicator of whether or not to include the reworked quantity in efficiencies.",
                        "type": "boolean"
                    },
                    "isIncludedScrappedQuantity": {
                        "description": "A Boolean indicator of whether or not to include the scrapped quantity in efficiencies.",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "The name of an activity header.",
                        "type": "string"
                    },
                    "sequenceValidationType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "required": [
                    "id",
                    "name"
                ],
                "type": "object"
            },
            "ActivityTransfer": {
                "description": "The Activity Transfer Type model.",
                "properties": {
                    "costCenter": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "expiredLocation": {
                        "description": "A Boolean indicator of whether or not a job's location is expired. This property is only returned if it is true.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "inactiveCostCenter": {
                        "description": "A Boolean indicator of whether or not the cost center is inactive. This property is only returned if it is true.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "inactiveLaborCategory": {
                        "description": "A Boolean indicator of whether or not a labor category in the list of labor categories is inactive. This property is only returned if it is true.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "isEmptyTransfer": {
                        "description": "A Boolean indicator of whether or not an activity transfer is empty.",
                        "type": "boolean"
                    },
                    "laborCategories": {
                        "description": "A list of labor category entry lists containing the labor categories associated with an activity transfer.",
                        "items": {
                            "$ref": "#/components/schemas/TransferLaborCategory"
                        },
                        "type": "array"
                    },
                    "locationJob": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "nonDefaultTransfers": {
                        "description": "A list of non-default activity transfers associated with an activity transfer.",
                        "items": {
                            "$ref": "#/components/schemas/ActivityTransfer"
                        },
                        "type": "array"
                    },
                    "transferLabel": {
                        "description": "A label associated with an activity transfer.",
                        "type": "string"
                    },
                    "workRule": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "type": "object"
            },
            "ActivityExportRequestOptions": {
                "description": "The Retrieve Activity Export Definitions request Options model.",
                "properties": {
                    "nextReadToken": {
                        "description": "A token which identifies the next section of paginated results to return.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivityExportRequestWhere": {
                "description": "The Retrieve Activity Export Definitions request Where model.",
                "properties": {
                    "query": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "type": "object"
            },
            "ActivityExportDefinition": {
                "description": "The Activity Export Definition model.",
                "properties": {
                    "activityType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "actualCompleteDate": {
                        "description": "The actual complete date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "actualStartDate": {
                        "description": "The actual start date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "combinedName": {
                        "description": "The combined name of an activity.",
                        "type": "string"
                    },
                    "completeStatus": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "description": {
                        "description": "The description of an activity.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of an activity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "priorityType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "processType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "relatedResultTemplate": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "scheduledCompleteDate": {
                        "description": "The scheduled complete date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "scheduledStartDate": {
                        "description": "The scheduled start date in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivityRefsWhere": {
                "description": "The Activity where clause model.",
                "properties": {
                    "activities": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    }
                },
                "required": [
                    "activities"
                ],
                "type": "object"
            },
            "Configuration": {
                "properties": {
                    "timeframe": {
                        "$ref": "#/components/schemas/SchedulingObjectRef"
                    },
                    "useAllHomeLocations": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ObjectRef_PartialPublicAPI": {
                "description": "The HCA object reference object model.",
                "properties": {
                    "id": {
                        "description": "The ID associated with an object reference.",
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier associated with an object reference.",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Configuration_PartialPublicAPI": {
                "description": "Timecard validation model.",
                "properties": {
                    "checkOrphanSpanCreation": {
                        "description": "A Boolean indicator of whether or not to validate user orphan span creation.",
                        "type": "boolean"
                    },
                    "futureValidation": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "overAllocation": {
                        "$ref": "#/components/schemas/Configuration_PartialPublicAPI"
                    },
                    "underAllocation": {
                        "$ref": "#/components/schemas/Configuration_PartialPublicAPI"
                    },
                    "varianceCheck": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    }
                },
                "required": [
                    "checkOrphanSpanCreation",
                    "futureValidation",
                    "overAllocation",
                    "underAllocation"
                ],
                "type": "object"
            },
            "ProfileRefsWhere": {
                "description": "The Profile where clause model.",
                "properties": {
                    "activityProfiles": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    }
                },
                "required": [
                    "activityProfiles"
                ],
                "type": "object"
            },
            "ActivityShiftMultiDeleteWhere": {
                "properties": {
                    "activitySegments": {
                        "description": "A list of activity segments associated with an activity shift.",
                        "items": {
                            "$ref": "#/components/schemas/Bulk_Activity_Segments_Delete_Context"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "BulkActivitySegmentIdentifier": {
                "description": "An activity segment identifier for resolving activity segments during import.",
                "properties": {
                    "accepted": {
                        "description": "A Boolean indicator of whether or not the segment is accepted.",
                        "type": "boolean"
                    },
                    "activity": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "durationDate": {
                        "description": "The duration date of the activity in ISO_LOCAL_DATE format (yyyy-MM-dd).",
                        "format": "date",
                        "type": "string"
                    },
                    "durationInSeconds": {
                        "description": "The duration in seconds of the activity.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "endDateTime": {
                        "description": "The date and time of the end of the activity in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "endTimezone": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "id": {
                        "description": "The ID of an activity segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "reordered": {
                        "description": "A Boolean indicator of whether or not type operation is reordered.",
                        "type": "boolean"
                    },
                    "startDateTime": {
                        "description": "The date and time of the start of the activity in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "startTimezone": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    }
                },
                "type": "object"
            },
            "BulkActivityResultSegment": {
                "description": "The bulk activity result segment object model.",
                "properties": {
                    "childResultSegments": {
                        "description": "A reference to a list of child Activity Result Segments.",
                        "items": {
                            "$ref": "#/components/schemas/BulkActivityResultSegment"
                        },
                        "type": "array"
                    },
                    "createdDateTime": {
                        "description": "The date and time this record was created in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "dataSourceId": {
                        "description": "The ID of the Data Source.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "dateTimeResult": {
                        "description": "The DateTime result for the Activity Result Segment.",
                        "type": "string"
                    },
                    "decimalResult": {
                        "description": "The decimal result for the Activity Result Segment.",
                        "format": "double",
                        "type": "number"
                    },
                    "effectiveDateTime": {
                        "description": "The effective date and time of this record in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "fieldDefinition": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "id": {
                        "description": "The ID of an Activity Result Segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "numericResult": {
                        "description": "The numeric result for the Activity Result Segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "resultCode": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "textResult": {
                        "description": "The text result for the Activity Result Segment.",
                        "type": "string"
                    },
                    "timeResult": {
                        "description": "The time result for the Activity Result Segment.",
                        "type": "string"
                    },
                    "updatedDateTime": {
                        "description": "The date and time this record was last updated in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "NetChangeBundle": {
                "description": "The net changes bundle model, which bundles current and previous states.",
                "properties": {
                    "current": {
                        "$ref": "#/components/schemas/NetChangeRevision"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/NetChangeRevision"
                    }
                },
                "type": "object"
            },
            "EmployeeContextForREST": {
                "properties": {
                    "employee": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "timezone": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    }
                },
                "type": "object"
            },
            "CustomerRefsWhere": {
                "description": "The Customer where clause model.",
                "properties": {
                    "customers": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    }
                },
                "required": [
                    "customers"
                ],
                "type": "object"
            },
            "ActivityEmployeeRefsWhere": {
                "description": "The Employee where clause model.",
                "properties": {
                    "employees": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    }
                },
                "required": [
                    "employees"
                ],
                "type": "object"
            },
            "AssignedActivity": {
                "description": "The Assigned Activity model.",
                "properties": {
                    "combinedName": {
                        "description": "The combined name of an activity.",
                        "type": "string"
                    },
                    "completeStatus": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "description": {
                        "description": "The description of an activity.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of an activity.",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "FieldDefinitionRefsWhere": {
                "description": "The Field Definition where clause model.",
                "properties": {
                    "fieldDefinitions": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    }
                },
                "required": [
                    "fieldDefinitions"
                ],
                "type": "object"
            },
            "FormProfileRefsWhere": {
                "description": "The Form Profile where clause model.",
                "properties": {
                    "formProfiles": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    }
                },
                "required": [
                    "formProfiles"
                ],
                "type": "object"
            },
            "ClocksSearchConfiguration_PublicAPI": {
                "description": "The Clocks Search Activity Configuration model.",
                "properties": {
                    "direct": {
                        "description": "A Boolean indicator of whether or not the activity search mode is direct.",
                        "type": "boolean"
                    },
                    "hierarchy": {
                        "description": "A Boolean indicator of whether or not the activity search mode is hierarchy.",
                        "type": "boolean"
                    },
                    "query": {
                        "description": "A Boolean indicator of whether or not the activity search mode is query.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "FormStep_PublicAPI": {
                "description": "The Form Step model.",
                "properties": {
                    "controlType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "dateDefaultValue": {
                        "description": "The default value of date type of a step.",
                        "format": "date",
                        "type": "string"
                    },
                    "decimalDefaultValue": {
                        "description": "The default value of decimal type of a step.",
                        "format": "double",
                        "type": "number"
                    },
                    "decimalMaxValue": {
                        "description": "The maximum value of step of decimal type.",
                        "format": "double",
                        "type": "number"
                    },
                    "decimalMinValue": {
                        "description": "The minimum value of step of decimal type.",
                        "format": "double",
                        "type": "number"
                    },
                    "defaultValue": {
                        "description": "The default value of string type of a step.",
                        "type": "string"
                    },
                    "entryType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "fieldDefinition": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "fieldLength": {
                        "description": "The field length of a step.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "fieldType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "id": {
                        "description": "The ID of a step.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "initialResult": {
                        "description": "A Boolean indicator of whether or not to treat this step as an initial result. This property is read-only when the step represents a decision answer.",
                        "type": "boolean"
                    },
                    "inputSourceType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "matchFieldLength": {
                        "description": "A Boolean indicator of whether or not to match field length.",
                        "type": "boolean"
                    },
                    "multiSelect": {
                        "description": "A Boolean indicator of whether or not this step allows multi-select as an option for result codes. This property is read-only.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "name": {
                        "description": "This property represents the prompt of the step and is read only.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "numericDefaultValue": {
                        "description": "The default value of numeric type of a step.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "numericMaxValue": {
                        "description": "The maximum value of step of numeric type.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "numericMinValue": {
                        "description": "The minimum value of step of numeric type.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "precision": {
                        "description": "The digits right of decimal count.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "preserveValue": {
                        "description": "A Boolean indicator of whether or not to preserve the value of a step.",
                        "type": "boolean"
                    },
                    "prompt": {
                        "description": "The prompt of a step. This property is read only when the prompt represents a control step.",
                        "type": "string"
                    },
                    "scale": {
                        "description": "The digits left of decimal count.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "sdmKey": {
                        "type": "string"
                    },
                    "timeDefaultValue": {
                        "description": "The default value of time type of a step.",
                        "type": "string"
                    },
                    "validationType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            },
            "ClocksSearchConfiguration": {
                "description": "The Clocks Search Activity Configuration model.",
                "properties": {
                    "direct": {
                        "description": "A Boolean indicator of whether or not the activity search mode is direct.",
                        "type": "boolean"
                    },
                    "hierarchy": {
                        "description": "A Boolean indicator of whether or not the activity search mode is hierarchy.",
                        "type": "boolean"
                    },
                    "query": {
                        "description": "A Boolean indicator of whether or not the activity search mode is query.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "FormStep": {
                "description": "The Form Step model.",
                "properties": {
                    "controlType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "dateDefaultValue": {
                        "description": "The default value of date type of a step.",
                        "format": "date",
                        "type": "string"
                    },
                    "decimalDefaultValue": {
                        "description": "The default value of decimal type of a step.",
                        "format": "double",
                        "type": "number"
                    },
                    "decimalMaxValue": {
                        "description": "The maximum value of step of decimal type.",
                        "format": "double",
                        "type": "number"
                    },
                    "decimalMinValue": {
                        "description": "The minimum value of step of decimal type.",
                        "format": "double",
                        "type": "number"
                    },
                    "defaultValue": {
                        "description": "The default value of string type of a step.",
                        "type": "string"
                    },
                    "entryType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "fieldDefinition": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "fieldLength": {
                        "description": "The field length of a step.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "fieldType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "id": {
                        "description": "The ID of a step.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "initialResult": {
                        "description": "A Boolean indicator of whether or not to treat this step as an initial result. This property is read-only when the step represents a decision answer.",
                        "type": "boolean"
                    },
                    "inputSourceType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "matchFieldLength": {
                        "description": "A Boolean indicator of whether or not to match field length.",
                        "type": "boolean"
                    },
                    "multiSelect": {
                        "description": "A Boolean indicator of whether or not this step allows multi-select as an option for result codes. This property is read-only.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "name": {
                        "description": "This property represents the prompt of the step and is read only.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "numericDefaultValue": {
                        "description": "The default value of numeric type of a step.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "numericMaxValue": {
                        "description": "The maximum value of step of numeric type.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "numericMinValue": {
                        "description": "The minimum value of step of numeric type.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "precision": {
                        "description": "The digits right of decimal count.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "preserveValue": {
                        "description": "A Boolean indicator of whether or not to preserve the value of a step.",
                        "type": "boolean"
                    },
                    "prompt": {
                        "description": "The prompt of a step. This property is read only when the prompt represents a control step.",
                        "type": "string"
                    },
                    "scale": {
                        "description": "The digits left of decimal count.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "sdmKey": {
                        "type": "string"
                    },
                    "timeDefaultValue": {
                        "description": "The default value of time type of a step.",
                        "type": "string"
                    },
                    "validationType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            },
            "ClocksSearchConfiguration_PartialPublicAPI": {
                "description": "The Clocks Search Activity Configuration model.",
                "properties": {
                    "direct": {
                        "description": "A Boolean indicator of whether or not the activity search mode is direct.",
                        "type": "boolean"
                    },
                    "hierarchy": {
                        "description": "A Boolean indicator of whether or not the activity search mode is hierarchy.",
                        "type": "boolean"
                    },
                    "query": {
                        "description": "A Boolean indicator of whether or not the activity search mode is query.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "FormStep_PartialPublicAPI": {
                "description": "The Form Step model.",
                "properties": {
                    "controlType": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "dateDefaultValue": {
                        "description": "The default value of date type of a step.",
                        "format": "date",
                        "type": "string"
                    },
                    "decimalDefaultValue": {
                        "description": "The default value of decimal type of a step.",
                        "format": "double",
                        "type": "number"
                    },
                    "decimalMaxValue": {
                        "description": "The maximum value of step of decimal type.",
                        "format": "double",
                        "type": "number"
                    },
                    "decimalMinValue": {
                        "description": "The minimum value of step of decimal type.",
                        "format": "double",
                        "type": "number"
                    },
                    "defaultValue": {
                        "description": "The default value of string type of a step.",
                        "type": "string"
                    },
                    "entryType": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "fieldDefinition": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "fieldLength": {
                        "description": "The field length of a step.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "fieldType": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "id": {
                        "description": "The ID of a step.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "initialResult": {
                        "description": "A Boolean indicator of whether or not to treat this step as an initial result. This property is read-only when the step represents a decision answer.",
                        "type": "boolean"
                    },
                    "inputSourceType": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "matchFieldLength": {
                        "description": "A Boolean indicator of whether or not to match field length.",
                        "type": "boolean"
                    },
                    "multiSelect": {
                        "description": "A Boolean indicator of whether or not this step allows multi-select as an option for result codes. This property is read-only.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "name": {
                        "description": "This property represents the prompt of the step and is read only.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "numericDefaultValue": {
                        "description": "The default value of numeric type of a step.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "numericMaxValue": {
                        "description": "The maximum value of step of numeric type.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "numericMinValue": {
                        "description": "The minimum value of step of numeric type.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "precision": {
                        "description": "The digits right of decimal count.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "preserveValue": {
                        "description": "A Boolean indicator of whether or not to preserve the value of a step.",
                        "type": "boolean"
                    },
                    "prompt": {
                        "description": "The prompt of a step. This property is read only when the prompt represents a control step.",
                        "type": "string"
                    },
                    "scale": {
                        "description": "The digits left of decimal count.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "sdmKey": {
                        "type": "string"
                    },
                    "timeDefaultValue": {
                        "description": "The default value of time type of a step.",
                        "type": "string"
                    },
                    "validationType": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            },
            "FormRefsWhere": {
                "description": "The Form where clause model.",
                "properties": {
                    "forms": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    }
                },
                "required": [
                    "forms"
                ],
                "type": "object"
            },
            "PayCodeActionRefsWhere": {
                "description": "The Paycode Action where clause model.",
                "properties": {
                    "payCodeActions": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    }
                },
                "required": [
                    "payCodeActions"
                ],
                "type": "object"
            },
            "ListQueryActivity_PublicAPI": {
                "description": "Model for Activity assigned to a List type Query.",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of an activity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "priorityType": {
                        "type": "string"
                    },
                    "qualifier": {
                        "description": "The combined name of an activity.",
                        "type": "string"
                    },
                    "scheduledCompleteDate": {
                        "format": "date",
                        "type": "string"
                    },
                    "scheduledStartDate": {
                        "format": "date",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "QueryDateRange_PublicAPI": {
                "description": "The Query Date Range References model.",
                "properties": {
                    "dateRangeType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "fromDays": {
                        "description": "The number of days before a query run date.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "toDays": {
                        "description": "The number of days after a query run date.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "dateRangeType",
                    "fromDays",
                    "toDays"
                ],
                "type": "object"
            },
            "ListQueryActivity": {
                "description": "Model for Activity assigned to a List type Query.",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of an activity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "priorityType": {
                        "type": "string"
                    },
                    "qualifier": {
                        "description": "The combined name of an activity.",
                        "type": "string"
                    },
                    "scheduledCompleteDate": {
                        "format": "date",
                        "type": "string"
                    },
                    "scheduledStartDate": {
                        "format": "date",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "QueryDateRange": {
                "description": "The Query Date Range References model.",
                "properties": {
                    "dateRangeType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "fromDays": {
                        "description": "The number of days before a query run date.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "toDays": {
                        "description": "The number of days after a query run date.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "dateRangeType",
                    "fromDays",
                    "toDays"
                ],
                "type": "object"
            },
            "ListQueryActivity_PartialPublicAPI": {
                "description": "Model for Activity assigned to a List type Query.",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of an activity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "priorityType": {
                        "type": "string"
                    },
                    "qualifier": {
                        "description": "The combined name of an activity.",
                        "type": "string"
                    },
                    "scheduledCompleteDate": {
                        "format": "date",
                        "type": "string"
                    },
                    "scheduledStartDate": {
                        "format": "date",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "QueryDateRange_PartialPublicAPI": {
                "description": "The Query Date Range References model.",
                "properties": {
                    "dateRangeType": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "fromDays": {
                        "description": "The number of days before a query run date.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "toDays": {
                        "description": "The number of days after a query run date.",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "dateRangeType",
                    "fromDays",
                    "toDays"
                ],
                "type": "object"
            },
            "QueryRefsWhere": {
                "description": "The Query where clause model.",
                "properties": {
                    "queries": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    }
                },
                "required": [
                    "queries"
                ],
                "type": "object"
            },
            "QueryProfileRefsWhere": {
                "description": "The Query Profile where clause model.",
                "properties": {
                    "queryProfiles": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    }
                },
                "required": [
                    "queryProfiles"
                ],
                "type": "object"
            },
            "FieldDefinitionResultCodeAssignment": {
                "description": "The Field Definition Result Code Assignments model.",
                "properties": {
                    "fieldDefinition": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "resultCodes": {
                        "description": "A collection of result codes assigned to field definition.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "fieldDefinition",
                    "resultCodes"
                ],
                "type": "object"
            },
            "FieldDefinitionResultCodeAssignment_PartialPublicAPI": {
                "description": "The Field Definition Result Code Assignments model.",
                "properties": {
                    "fieldDefinition": {
                        "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                    },
                    "resultCodes": {
                        "description": "A collection of result codes assigned to field definition.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef_PartialPublicAPI"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "fieldDefinition",
                    "resultCodes"
                ],
                "type": "object"
            },
            "ResultCodeProfileRefsWhere": {
                "description": "The Result Code Profile where clause model.",
                "properties": {
                    "resultCodeProfiles": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    }
                },
                "required": [
                    "resultCodeProfiles"
                ],
                "type": "object"
            },
            "ResultCodeRefsWhere": {
                "description": "The Result Code where clause model.",
                "properties": {
                    "resultCodes": {
                        "$ref": "#/components/schemas/ResultCodeRefList"
                    }
                },
                "required": [
                    "resultCodes"
                ],
                "type": "object"
            },
            "ResultsTemplateStep_PublicAPI": {
                "description": "The Results Template Step model.",
                "properties": {
                    "dateDefaultValue": {
                        "description": "The default value of date type of a step.",
                        "format": "date",
                        "type": "string"
                    },
                    "decimalDefaultValue": {
                        "description": "The default value of decimal type of a step.",
                        "format": "double",
                        "type": "number"
                    },
                    "decimalMaxValue": {
                        "description": "The maximum value of step of decimal type.",
                        "format": "double",
                        "type": "number"
                    },
                    "decimalMinValue": {
                        "description": "The minimum value of step of decimal type.",
                        "format": "double",
                        "type": "number"
                    },
                    "decisionAnswers": {
                        "description": "The answers for a results template step of type decision.",
                        "items": {
                            "$ref": "#/components/schemas/DecisionAnswer_PublicAPI"
                        },
                        "type": "array"
                    },
                    "defaultValue": {
                        "description": "The default value of string type of a step.",
                        "type": "string"
                    },
                    "entryType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "fieldDefinition": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "fieldLength": {
                        "description": "The field length of a step.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "fieldType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "id": {
                        "description": "The ID of a step.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "initialResult": {
                        "description": "A Boolean indicator of whether or not to treat this step as an initial result. This property is read-only when the step represents a decision answer.",
                        "type": "boolean"
                    },
                    "inputSourceType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "matchFieldLength": {
                        "description": "A Boolean indicator of whether or not to match field length.",
                        "type": "boolean"
                    },
                    "multiSelect": {
                        "description": "A Boolean indicator of whether or not this step allows multi-select as an option for result codes. This property is read-only.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "name": {
                        "description": "This property represents the prompt of the step and is read only.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "numericDefaultValue": {
                        "description": "The default value of numeric type of a step.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "numericMaxValue": {
                        "description": "The maximum value of step of numeric type.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "numericMinValue": {
                        "description": "The minimum value of step of numeric type.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "precision": {
                        "description": "The digits right of decimal count.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "preserveValue": {
                        "description": "A Boolean indicator of whether or not to preserve the value of a step.",
                        "type": "boolean"
                    },
                    "prompt": {
                        "description": "The prompt of a step. This property is read only when the prompt represents a control step.",
                        "type": "string"
                    },
                    "scale": {
                        "description": "The digits left of decimal count.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "sdmKey": {
                        "type": "string"
                    },
                    "stepType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "timeDefaultValue": {
                        "description": "The default value of time type of a step.",
                        "type": "string"
                    },
                    "validationType": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    }
                },
                "required": [
                    "id",
                    "stepType"
                ],
                "type": "object"
            },
            "ResultsTemplateStep": {
                "description": "The Results Template Step model.",
                "properties": {
                    "dateDefaultValue": {
                        "description": "The default value of date type of a step.",
                        "format": "date",
                        "type": "string"
                    },
                    "decimalDefaultValue": {
                        "description": "The default value of decimal type of a step.",
                        "format": "double",
                        "type": "number"
                    },
                    "decimalMaxValue": {
                        "description": "The maximum value of step of decimal type.",
                        "format": "double",
                        "type": "number"
                    },
                    "decimalMinValue": {
                        "description": "The minimum value of step of decimal type.",
                        "format": "double",
                        "type": "number"
                    },
                    "decisionAnswers": {
                        "description": "The answers for a results template step of type decision.",
                        "items": {
                            "$ref": "#/components/schemas/DecisionAnswer"
                        },
                        "type": "array"
                    },
                    "defaultValue": {
                        "description": "The default value of string type of a step.",
                        "type": "string"
                    },
                    "entryType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "fieldDefinition": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "fieldLength": {
                        "description": "The field length of a step.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "fieldType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "id": {
                        "description": "The ID of a step.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "initialResult": {
                        "description": "A Boolean indicator of whether or not to treat this step as an initial result. This property is read-only when the step represents a decision answer.",
                        "type": "boolean"
                    },
                    "inputSourceType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "matchFieldLength": {
                        "description": "A Boolean indicator of whether or not to match field length.",
                        "type": "boolean"
                    },
                    "multiSelect": {
                        "description": "A Boolean indicator of whether or not this step allows multi-select as an option for result codes. This property is read-only.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "name": {
                        "description": "This property represents the prompt of the step and is read only.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "numericDefaultValue": {
                        "description": "The default value of numeric type of a step.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "numericMaxValue": {
                        "description": "The maximum value of step of numeric type.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "numericMinValue": {
                        "description": "The minimum value of step of numeric type.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "precision": {
                        "description": "The digits right of decimal count.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "preserveValue": {
                        "description": "A Boolean indicator of whether or not to preserve the value of a step.",
                        "type": "boolean"
                    },
                    "prompt": {
                        "description": "The prompt of a step. This property is read only when the prompt represents a control step.",
                        "type": "string"
                    },
                    "scale": {
                        "description": "The digits left of decimal count.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "sdmKey": {
                        "type": "string"
                    },
                    "stepType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "timeDefaultValue": {
                        "description": "The default value of time type of a step.",
                        "type": "string"
                    },
                    "validationType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "required": [
                    "id",
                    "stepType"
                ],
                "type": "object"
            },
            "ResultsTemplateRefsWhere": {
                "description": "The Results Template where clause model.",
                "properties": {
                    "resultsTemplates": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    }
                },
                "required": [
                    "resultsTemplates"
                ],
                "type": "object"
            },
            "SettingRefsWhere": {
                "description": "The Setting where clause model.",
                "properties": {
                    "settings": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    }
                },
                "required": [
                    "settings"
                ],
                "type": "object"
            },
            "ActivityTeamDefinitionRefsWhere": {
                "description": "The Activity Team where clause model.",
                "properties": {
                    "teams": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    }
                },
                "required": [
                    "teams"
                ],
                "type": "object"
            },
            "UnitOfMeasureRefsWhere": {
                "description": "The Unit of Measure where clause model.",
                "properties": {
                    "unitsOfMeasure": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    }
                },
                "required": [
                    "unitsOfMeasure"
                ],
                "type": "object"
            },
            "LaborCategoryEntryListRef_PublicAPI": {
                "description": "The Activity Labor Category Entry lists model.",
                "properties": {
                    "id": {
                        "description": "The ID associated with an object reference.",
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "laborCategory": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "qualifier": {
                        "description": "The qualifier associated with an object reference.",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TransferLaborCategory_PublicAPI": {
                "properties": {
                    "laborCategoryDef": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "laborCategoryEntry": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    }
                },
                "type": "object"
            },
            "LaborCategoryEntryListRef": {
                "description": "The Activity Labor Category Entry lists model.",
                "properties": {
                    "id": {
                        "description": "The ID associated with an object reference.",
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "laborCategory": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "qualifier": {
                        "description": "The qualifier associated with an object reference.",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TransferLaborCategory": {
                "properties": {
                    "laborCategoryDef": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "laborCategoryEntry": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "type": "object"
            },
            "ObjectRefList": {
                "description": "Model describing a collection of object references.",
                "properties": {
                    "ids": {
                        "description": "The list of references by ID.",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "type": "array",
                        "uniqueItems": true
                    },
                    "qualifiers": {
                        "description": "The qualifier of the object reference, such as name.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "uniqueItems": true
                    },
                    "refs": {
                        "description": "The object references.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "SchedulingObjectRef": {
                "description": "The HCA object reference object model.",
                "properties": {
                    "id": {
                        "description": "The ID associated with an object reference.",
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "localizedQualifier": {
                        "description": "The localized qualifier of the object reference. The value of this property is imported from the Setup Data component by means of an XLS file.",
                        "type": "string"
                    },
                    "qualifier": {
                        "description": "The qualifier associated with an object reference.",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivityShiftDateRange": {
                "description": "The date range model.",
                "properties": {
                    "endDate": {
                        "description": "The inclusive end date for the timeperiod to be selected in ISO_LOCAL_DATE format (YYYY-MM-DD). Exclusive with symbolicPeriod.",
                        "format": "date",
                        "type": "string"
                    },
                    "startDate": {
                        "description": "The inclusive starting date for the timeperiod to be selected in ISO_LOCAL_DATE format (YYYY-MM-DD). Exclusive with symbolicPeriod.",
                        "format": "date",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivitySpan": {
                "description": "The activity span for export model.",
                "properties": {
                    "activityResultSegments": {
                        "description": "An array of activity result segments.",
                        "items": {
                            "$ref": "#/components/schemas/Timecard_Activity_Result_Segment"
                        },
                        "type": "array"
                    },
                    "efficiencies": {
                        "$ref": "#/components/schemas/Timecard_Activity_Efficiency"
                    },
                    "processedSegments": {
                        "description": "An array of processed segments.",
                        "items": {
                            "$ref": "#/components/schemas/Timecard_Activity_Processed_Segment"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "NetChangeRevision": {
                "description": "The net change revision model that unites activity processed segments, activity results, and activity totals.",
                "properties": {
                    "activityResultSegments": {
                        "description": "The result segments data for a particular state.",
                        "items": {
                            "$ref": "#/components/schemas/ActivityResultSegmentForNetChange"
                        },
                        "type": "array"
                    },
                    "activityTotals": {
                        "description": "A list of activity total segments.",
                        "items": {
                            "$ref": "#/components/schemas/ActivityTotalForNetChange"
                        },
                        "type": "array"
                    },
                    "processedSegments": {
                        "description": "A list of activity processed segments.",
                        "items": {
                            "$ref": "#/components/schemas/ActivityProcessedSegmentForNetChange"
                        },
                        "type": "array"
                    },
                    "status": {
                        "description": "The status of a net change. Possible values include ADDED, UPDATED, and DELETED.",
                        "enum": [
                            "ADDED",
                            "UPDATED",
                            "DELETED",
                            "NOT_CHANGED"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivityTotalDateRange": {
                "description": "Date range criteria.",
                "properties": {
                    "endDate": {
                        "description": "The end date of the date range in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "startDate": {
                        "description": "The start date of the date range in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "symbolicPeriod": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "type": "object"
            },
            "ResultCodeRefList": {
                "description": "A result code object reference list model.",
                "properties": {
                    "ids": {
                        "description": "A list of IDs of result codes.",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "type": "array",
                        "uniqueItems": true
                    },
                    "qualifiers": {
                        "description": "The qualifier of the result code including the result code name and field definition name.",
                        "items": {
                            "$ref": "#/components/schemas/ResultCodeQualifier"
                        },
                        "type": "array",
                        "uniqueItems": true
                    },
                    "refs": {
                        "description": "A list of references to result code objects.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DecisionAnswer_PublicAPI": {
                "description": "The Decision Answer model.",
                "properties": {
                    "resultCode": {
                        "$ref": "#/components/schemas/ObjectRef_PublicAPI"
                    },
                    "steps": {
                        "description": "The steps associated with the result code.",
                        "items": {
                            "$ref": "#/components/schemas/ResultsTemplateStep_PublicAPI"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "resultCode",
                    "steps"
                ],
                "type": "object"
            },
            "DecisionAnswer": {
                "description": "The Decision Answer model.",
                "properties": {
                    "resultCode": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "steps": {
                        "description": "The steps associated with the result code.",
                        "items": {
                            "$ref": "#/components/schemas/ResultsTemplateStep"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "resultCode",
                    "steps"
                ],
                "type": "object"
            },
            "ActivityResultSegmentForNetChange": {
                "description": "The Activity Result Segment for net changes model.",
                "properties": {
                    "activitySegmentId": {
                        "description": "The ID of an Activity Segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "childResultSegments": {
                        "description": "A reference to a list of child Activity Result Segments.",
                        "items": {
                            "$ref": "#/components/schemas/Timecard_Activity_Result_Segment"
                        },
                        "type": "array"
                    },
                    "createdDateTime": {
                        "description": "The date and time this record was created in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "dataSourceId": {
                        "description": "The ID of the Data Source.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "dateTimeResult": {
                        "description": "The DateTime result for the Activity Result Segment.",
                        "type": "string"
                    },
                    "decimalResult": {
                        "description": "The decimal result for the Activity Result Segment.",
                        "format": "double",
                        "type": "number"
                    },
                    "effectiveDateTime": {
                        "description": "The effective date and time associated with an Activity Result Segment in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "fieldDefinition": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "id": {
                        "description": "The ID of an Activity Result Segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "numericResult": {
                        "description": "The numeric result for the Activity Result Segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "resultCode": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "status": {
                        "description": "The Activity Result Segment status. Possible values include ADDED, UPDATED, and DELETED.",
                        "enum": [
                            "ADDED",
                            "UPDATED",
                            "DELETED",
                            "NOT_CHANGED"
                        ],
                        "type": "string"
                    },
                    "textResult": {
                        "description": "The text result for the Activity Result Segment.",
                        "type": "string"
                    },
                    "timeResult": {
                        "description": "The time result for the Activity Result Segment.",
                        "type": "string"
                    },
                    "updatedDateTime": {
                        "description": "The date and time this record was last updated in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ActivityTotalForNetChange": {
                "description": "The activity totals for net changes model.",
                "properties": {
                    "applyDate": {
                        "description": "The apply date for an activity total date range in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "costCenter": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "durationInSeconds": {
                        "description": "The duration in seconds of the total.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "endDateTime": {
                        "description": "The date and time of the end of the total in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "endTimezone": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "laborAccountId": {
                        "description": "The ID of the labor account, which combines the cost center and labor categories.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "laborCategory": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "moneyAmount": {
                        "description": "The amount (as a decimal value representing money) of the activity total.",
                        "format": "double",
                        "type": "number"
                    },
                    "orgJob": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "orgJobId": {
                        "description": "The ID of a job associated with an activity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "payCode": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "payCodeId": {
                        "description": "The ID of a pay code.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "startDateTime": {
                        "description": "The date and time of the start of the total in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "startTimezone": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "status": {
                        "description": "The status of an activity total. Possible values include ADDED, UPDATED, DELETED, and NOT_CHANGED.",
                        "enum": [
                            "ADDED",
                            "UPDATED",
                            "DELETED",
                            "NOT_CHANGED"
                        ],
                        "type": "string"
                    },
                    "transferLaborAccount": {
                        "description": "A Boolean indicator of whether or not the activity total is generated from a transfer labor account.",
                        "type": "boolean"
                    },
                    "transferOrgJob": {
                        "description": "A Boolean indicator of whether or not the activity total is generated from a transfer organizational job.",
                        "type": "boolean"
                    },
                    "transferWorkRule": {
                        "description": "A Boolean indicator of whether or not the activity total is generated from a transfer work rule.",
                        "type": "boolean"
                    },
                    "updatedDateTime": {
                        "description": "The date and time of the last update in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "workRule": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "workRuleId": {
                        "description": "The ID of a work rule.",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ActivityProcessedSegmentForNetChange": {
                "description": "The Activity Processed Segment for net changes model.",
                "properties": {
                    "accepted": {
                        "description": "A Boolean indicator of whether or not the segment is accepted.",
                        "type": "boolean"
                    },
                    "activity": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "activitySegmentId": {
                        "description": "A reference to an activity segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "activityTeam": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "activityTeamSegmentId": {
                        "description": "A reference to an activity team segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "allocatedSeconds": {
                        "description": "The number of seconds charged to the work processed segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "applyDate": {
                        "description": "The apply date for an activity processed segment date range in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "approvedByEmployee": {
                        "description": "A Boolean indicator whether or not the segment was approved by employee.",
                        "type": "boolean"
                    },
                    "approvedByManager": {
                        "description": "A Boolean indicator of whether or not an activity processed segment has been approved by a manager.",
                        "type": "boolean"
                    },
                    "concurrent": {
                        "description": "A Boolean indicator of whether or not an activity is concurrent.",
                        "type": "boolean"
                    },
                    "dayDivideState": {
                        "description": "The day divide indicator. Valid values include 0 - No Day Divide, 1 - Before Day Divide, 2 - After Day Divide, and -1 - Undetermined.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "deductedSeconds": {
                        "description": "The number of seconds deducted from the span for unpaid meals and breaks.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "durationInSeconds": {
                        "description": "The duration in seconds of the activity processed segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "endDateTime": {
                        "description": "The date and time of the end of the activity in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "endTimezone": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "eventTypeId": {
                        "description": "The ID of an event type.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "moneyAmount": {
                        "description": "The amount (as a decimal value representing money) of the activity processed segment.",
                        "format": "double",
                        "type": "number"
                    },
                    "orderNumber": {
                        "description": "The order number associated with an activity segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "orphan": {
                        "description": "A Boolean indicator of whether or not the activity is an orphan.",
                        "type": "boolean"
                    },
                    "overageDurationSeconds": {
                        "description": "The number of seconds of the activity processed segment that are not within the worked shift.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "roundedEndDateTime": {
                        "description": "An optional field containing the end date and time based on configured rounding rules.",
                        "type": "string"
                    },
                    "roundedEndTimezone": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "roundedStartDateTime": {
                        "description": "An optional field containing the start date and time based on configured rounding rules.",
                        "type": "string"
                    },
                    "roundedStartTimezone": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "shiftLocatorDateTime": {
                        "description": "The shift locator date time in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "startDateTime": {
                        "description": "The date and time of the start of the activity in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "startTimezone": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "systemGeneratedEnd": {
                        "description": "A Boolean indicator of whether or not the end time is system-generated.",
                        "type": "boolean"
                    },
                    "systemGeneratedStart": {
                        "description": "A Boolean indicator of whether or not the start time is system-generated.",
                        "type": "boolean"
                    },
                    "updatedDateTime": {
                        "description": "The date and time of the last update in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "workItemId": {
                        "description": "The Work Item ID associated with an activity processed segment.",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ResultCodeQualifier": {
                "description": "The Result Code qualifier model.",
                "properties": {
                    "fieldDefinitionName": {
                        "description": "The name of a field definition.",
                        "type": "string"
                    },
                    "resultCodeName": {
                        "description": "The name of a result code.",
                        "type": "string"
                    }
                },
                "required": [
                    "fieldDefinitionName",
                    "resultCodeName"
                ],
                "type": "object"
            },
            "Activity_Efficiency_Multi_Read_Criteria": {
                "description": "The Activity Efficiency retrieve model.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/Activity_Efficiency_Multi_Read_Where"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "Activity_Efficiency_Multi_Read_Result": {
                "description": "An object representing a collection of activity efficiencies for a particular employee.",
                "properties": {
                    "efficiencySegments": {
                        "description": "An object representing a collection of activity efficiencies.",
                        "items": {
                            "$ref": "#/components/schemas/Activity_Efficiency_DTO"
                        },
                        "type": "array"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "type": "object"
            },
            "Activity_Shift_Delete_Find_Criteria": {
                "description": "The Delete Activity Shifts request payload.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/ActivityShiftMultiDeleteWhere"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "Activity_Shift_find_criteria": {
                "description": "The activity shift multi-read request model.",
                "properties": {
                    "select": {
                        "description": "The select criteria for retrieving activity shifts. Possible values include SEGMENTS and SEGMENTS_WITH_RESULTS.",
                        "items": {
                            "enum": [
                                "SEGMENTS",
                                "SEGMENTS_WITH_RESULTS"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "where": {
                        "$ref": "#/components/schemas/Activity_Shift_Where"
                    }
                },
                "required": [
                    "select",
                    "where"
                ],
                "type": "object"
            },
            "Bulk_Activity_Segment_Context": {
                "description": "Entity containing necessary data to add and update Activity Segment context transactions.",
                "properties": {
                    "activitySegments": {
                        "description": "A list of the activity segments associated with a timecard.",
                        "items": {
                            "$ref": "#/components/schemas/BulkActivitySegmentForRest"
                        },
                        "type": "array"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    }
                },
                "type": "object"
            },
            "NetChange_find_criteria": {
                "description": "The Net Changes request model.",
                "properties": {
                    "select": {
                        "description": "The objects returned in the Retrieve Net Changes for Activity Shifts response. If the select list is empty, it will equal SEGMENT as default.",
                        "items": {
                            "enum": [
                                "SEGMENTS",
                                "SEGMENTS_WITH_RESULTS"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "where": {
                        "$ref": "#/components/schemas/NetChange_Where"
                    }
                },
                "required": [
                    "select",
                    "where"
                ],
                "type": "object"
            },
            "Employee_Activity_Total_response": {
                "description": "The activity total context transactions retrieve and update model.",
                "properties": {
                    "aggregatedTotals": {
                        "description": "A list of aggregated activity totals objects.",
                        "items": {
                            "$ref": "#/components/schemas/Aggregated_Activity_Total_Entity"
                        },
                        "type": "array"
                    },
                    "employeeContext": {
                        "$ref": "#/components/schemas/EmployeeContextForREST"
                    },
                    "totalAggregationType": {
                        "description": "The filtering criteria for activity totals. Valid values are: ALL, SHIFT, DAILY, and PERIOD_TO_DATE.",
                        "type": "string"
                    },
                    "totalGroupByType": {
                        "description": "An enumeration of types available for grouping the activity totals records. Valid values include TIMEITEM_DETAIL, COST_CENTER, LOCATION_AND_JOB, PAYCODE, and LABOR_CATEGORY.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Activity_Total_find_criteria": {
                "description": "The Activity Total retrieve model.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/Activity_Total_Where"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "Activity_Transactions_Export_criteria": {
                "description": "The Activity Transactions Export criteria.",
                "properties": {
                    "options": {
                        "$ref": "#/components/schemas/Transaction_Export_Request_Token_options"
                    },
                    "select": {
                        "description": "The secondary components returned in a transaction.",
                        "items": {
                            "enum": [
                                "RESULTS",
                                "EFFICIENCIES",
                                "SUB_EFFICIENCIES",
                                "TOTALS"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "where": {
                        "$ref": "#/components/schemas/Activity_Transactions_Export_find_criteria"
                    }
                },
                "type": "object"
            },
            "Activity_Transactions_Export_Response": {
                "description": "Activity Transactions Export Response",
                "properties": {
                    "activityTransactions": {
                        "description": "An array of activity transactions.",
                        "items": {
                            "$ref": "#/components/schemas/Activity_Transaction"
                        },
                        "type": "array"
                    },
                    "nextReadToken": {
                        "description": "The token which describes the next chunk of activity transactions.",
                        "type": "string"
                    },
                    "references": {
                        "$ref": "#/components/schemas/Activity_Transactions_Export_References"
                    }
                },
                "type": "object"
            },
            "Activity_Team_Segment_Request": {
                "description": "Activity Team Segments identifier model.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/Activity_Team_Segment_Multi_Delete_Where"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "Active_Team_Members_for_the_team_segment_identifier": {
                "description": "The Active Team Member List model, which contains a list of Active Team Members together with an Activity Team Segment identifier.",
                "properties": {
                    "activeTeamMembers": {
                        "description": "A list of Active Team Members.",
                        "items": {
                            "$ref": "#/components/schemas/Active_Team_Member"
                        },
                        "type": "array"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Activity_Team_Segment_Identifier"
                    }
                },
                "type": "object"
            },
            "Activity_Team_Event_Audits_Request_model": {
                "description": "Activity Team Event Audit Request model.",
                "properties": {
                    "select": {
                        "$ref": "#/components/schemas/Activity_Team_Event_Audits_Select_model"
                    },
                    "where": {
                        "$ref": "#/components/schemas/Activity_Team_Event_Audits_Where_model"
                    }
                },
                "type": "object"
            },
            "Activity_Team_Event_Audits_Response_model": {
                "description": "Activity Team Event Audits Response model.",
                "properties": {
                    "results": {
                        "description": "A list of activity team result segments associated with an audit.",
                        "items": {
                            "$ref": "#/components/schemas/Activity_Team_Result_Segment_Audit_model"
                        },
                        "type": "array"
                    },
                    "segments": {
                        "description": "A list of activity team segments associated with an audit.",
                        "items": {
                            "$ref": "#/components/schemas/Activity_Team_Segment_Audit_model"
                        },
                        "type": "array"
                    },
                    "team": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "type": "object"
            },
            "Activity_Team_Segment_Read_Request": {
                "description": "Activity Team Segment Read Request",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/Activity_Team_Segment_Multi_Read_Where"
                    }
                },
                "required": [
                    "where"
                ],
                "type": "object"
            },
            "Activity_Team_Segments_Read_Response": {
                "description": "Activity Team Segments Read Response",
                "properties": {
                    "identifier": {
                        "$ref": "#/components/schemas/Activity_Team_Segment_Identifier"
                    },
                    "team": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "teamResults": {
                        "description": "@v1.0.activityteamsegmentsreadresponse.apimodelproperty.results.description",
                        "items": {
                            "$ref": "#/components/schemas/Activity_Team_Segment_Result"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "teamSegment": {
                        "$ref": "#/components/schemas/Activity_Team_Segment"
                    },
                    "teamSegments": {
                        "description": "A list of Activity Team Segments.",
                        "items": {
                            "$ref": "#/components/schemas/Activity_Team_Segment"
                        },
                        "readOnly": true,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Activity_Team_Segments_Response": {
                "description": "Activity Team Segments Response",
                "properties": {
                    "activityTeamSegments": {
                        "description": "A list of Activity Team Segments.",
                        "items": {
                            "$ref": "#/components/schemas/Activity_Team_Segment"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Team_segment_net_change_find_criteria": {
                "description": "The Team Segment Net Changes request model.",
                "properties": {
                    "select": {
                        "description": "The objects returned in the Retrieve Net Changes for Team Segments.",
                        "items": {
                            "enum": [
                                "SEGMENTS",
                                "SEGMENTS_WITH_RESULTS"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "where": {
                        "$ref": "#/components/schemas/Team_Segment_NetChange_find_criteria"
                    }
                },
                "required": [
                    "select",
                    "where"
                ],
                "type": "object"
            },
            "Activity_Efficiency_Multi_Read_Where": {
                "description": "The activity efficiencies where clause model.",
                "properties": {
                    "activities": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    },
                    "dateRange": {
                        "$ref": "#/components/schemas/Activity_Efficiency_Date_Range"
                    },
                    "employees": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    }
                },
                "required": [
                    "dateRange",
                    "employees"
                ],
                "type": "object"
            },
            "Activity_Efficiency_DTO": {
                "description": "An object representing an Activity Efficiency.",
                "properties": {
                    "activity": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "activitySegmentId": {
                        "description": "A reference to an activity segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "allocatedSeconds": {
                        "description": "The number of allocated seconds used to calculate an efficiency.",
                        "type": "number"
                    },
                    "earnedSeconds": {
                        "description": "The calculated value of earned seconds for a particular activity span.",
                        "type": "number"
                    },
                    "efficiency": {
                        "description": "The calculated value of efficiency for a particular activity span.",
                        "type": "number"
                    },
                    "efficiencyQuantity": {
                        "description": "The quantity used to calculate an efficiency.",
                        "type": "number"
                    },
                    "efficiencySubSegments": {
                        "description": "An object representing a collection of sub-segment efficiencies.",
                        "items": {
                            "$ref": "#/components/schemas/Activity_Efficiency_DTO"
                        },
                        "type": "array"
                    },
                    "endDateTime": {
                        "description": "The date and time of the end of the activity efficiency in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "endTimezone": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "startDateTime": {
                        "description": "The date and time of the start of the activity efficiency in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "startTimezone": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "workItemId": {
                        "description": "A reference to a work item.",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ObjectRef_Entity": {
                "description": "ObjectRef contains an id and qualifier and either field should be able to uniquely identify an Object",
                "properties": {
                    "id": {
                        "description": "Object Ref Id",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "Object Ref Unique qualifier",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Timecard_Comment_Note": {
                "description": "Entity describing a set of Comments and attached Notes.",
                "properties": {
                    "comment": {
                        "$ref": "#/components/schemas/Timecard_Comment"
                    },
                    "id": {
                        "description": "The ID of this set of Comments and attached Notes.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "notes": {
                        "description": "The Notes associated with a Comment.",
                        "items": {
                            "$ref": "#/components/schemas/Timecard_Note"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Timecard_Activity_Segment_Bulk_Labor_Category_Transfer": {
                "description": "Entity containing information regarding a transfer of a labor category.",
                "properties": {
                    "laborCategoryDef": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "laborCategoryEntry": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    }
                },
                "type": "object"
            },
            "Activity_Shift_Where": {
                "description": "The ActivityShift where object model.",
                "properties": {
                    "activities": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    },
                    "dateRange": {
                        "$ref": "#/components/schemas/ActivityShiftDateRange"
                    },
                    "employees": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    },
                    "returnDataWithoutApplyDatesOnLastDay": {
                        "description": "A Boolean indicator of whether or not to return data without apply dates on the last day.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "employees"
                ],
                "type": "object"
            },
            "Activity_Shift": {
                "description": "The activity shift for export model.",
                "properties": {
                    "activitySpans": {
                        "description": "An array of activity spans.",
                        "items": {
                            "$ref": "#/components/schemas/ActivitySpan"
                        },
                        "type": "array"
                    },
                    "workShiftId": {
                        "description": "The ID of a Work shift.",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "NetChange_Where": {
                "description": "Entity defining the NetChange where object.",
                "properties": {
                    "activities": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    },
                    "employees": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    },
                    "endDateTime": {
                        "description": "The inclusive end date for the timeperiod to be selected in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "type": "string"
                    },
                    "futureDatedActivities": {
                        "description": "A Boolean indicator of whether or not to include activity segments which are in future (false by default).",
                        "type": "boolean"
                    },
                    "lastRunDateTime": {
                        "description": "The inclusive starting date for the timeperiod to be selected in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "type": "string"
                    }
                },
                "required": [
                    "endDateTime",
                    "lastRunDateTime"
                ],
                "type": "object"
            },
            "Aggregated_Activity_Total_Entity": {
                "description": "A list of aggregated totals objects.",
                "properties": {
                    "accepted": {
                        "description": "A Boolean indicator of whether or not the segment is accepted.",
                        "type": "boolean"
                    },
                    "activity": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "amount": {
                        "description": "The amount of time of a worked shift.",
                        "type": "number"
                    },
                    "applyDate": {
                        "description": "The date to which the totals are applied when totals are derived from more than one day.",
                        "type": "string"
                    },
                    "approvedByEmployee": {
                        "description": "A Boolean indicator of whether or not the totals have been approved by the employee.",
                        "type": "boolean"
                    },
                    "approvedByManager": {
                        "description": "A Boolean indicator of whether or not the totals have been approved by a manager.",
                        "type": "boolean"
                    },
                    "costCenter": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "currencyCode": {
                        "description": "A code of the wage currency.",
                        "type": "string"
                    },
                    "efficiency": {
                        "description": "The activity segment efficiency.",
                        "type": "number"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "endDateTime": {
                        "description": "The date and time of the end of the associated segment in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "isDuration": {
                        "description": "A Boolean indicator of whether or not the associated activity segment has the duration type.",
                        "type": "boolean"
                    },
                    "job": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "jobTransfer": {
                        "description": "A Boolean indicator of whether or not the totals object contains a job transfer.",
                        "type": "boolean"
                    },
                    "laborCategory": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "laborCategoryTransfer": {
                        "description": "A Boolean indicator of whether or not the totals object contains a labor category.",
                        "type": "boolean"
                    },
                    "location": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "payCode": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "payPeriodNumber": {
                        "description": "A number representing a pay period.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "payPeriodWeek": {
                        "description": "A number representing a pay period week.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "percentage": {
                        "description": "The percentage expression of the actual amount of time spent on the activity relative to the total time spent on all activities.",
                        "format": "double",
                        "type": "number"
                    },
                    "processedSegmentId": {
                        "description": "The ID of the associated processed segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "startDateTime": {
                        "description": "The date and time of the start of the associated segment in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "timeItemId": {
                        "description": "The ID of the time item.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "timeItemType": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "totalActual": {
                        "description": "The actual amount of time spent on the activity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "totalAllocated": {
                        "description": "The allocated amount of time spent on the activity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "totalVariance": {
                        "description": "The difference between the actual amount and the allocated amount of time spent on the activity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "wages": {
                        "description": "The money amount calculated in totals as wages.",
                        "type": "number"
                    },
                    "workRule": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    }
                },
                "type": "object"
            },
            "Activity_Total_Where": {
                "description": "The activity totals where clause model.",
                "properties": {
                    "activities": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    },
                    "dateRange": {
                        "$ref": "#/components/schemas/ActivityTotalDateRange"
                    },
                    "employees": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    },
                    "groupBy": {
                        "description": "An enumeration of types available for grouping the activity totals records. Valid values include TIMEITEM_DETAIL, COST_CENTER, LOCATION_AND_JOB, PAYCODE, and LABOR_CATEGORY.",
                        "type": "string"
                    },
                    "rollupType": {
                        "description": "The filtering criteria for activity totals. Valid values include TIMEITEM, ALL, and DAILY.",
                        "type": "string"
                    }
                },
                "required": [
                    "dateRange"
                ],
                "type": "object"
            },
            "Transaction_Export_Request_Token_options": {
                "description": "Model of the options of a Retrieve Transactions request in which special criteria for retrieving transactions is specified.",
                "properties": {
                    "nextReadToken": {
                        "description": "The token which describes the next chunk of transactions.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Activity_Transactions_Export_find_criteria": {
                "description": "The where criteria of a Retrieve Activity Transactions request in which the actual criteria for retrieving transactions is specified.",
                "properties": {
                    "activity": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "dateRange": {
                        "$ref": "#/components/schemas/Transaction_Export_Request_Date_Range"
                    },
                    "returnComponentsOnLastDay": {
                        "description": "A Boolean indicator of whether or not to return data without apply dates on the last day.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "activity"
                ],
                "type": "object"
            },
            "Activity_Transaction": {
                "description": "Activity Transaction object.",
                "properties": {
                    "activityResults": {
                        "description": "An array of activity results in the activity transaction.",
                        "items": {
                            "$ref": "#/components/schemas/Activity_Result"
                        },
                        "type": "array"
                    },
                    "activitySegmentEfficiency": {
                        "$ref": "#/components/schemas/Exportable_Activity_Efficiency"
                    },
                    "activitySubSegmentEfficiencies": {
                        "description": "An array of sub segment efficiencies in the activity transaction.",
                        "items": {
                            "$ref": "#/components/schemas/Exportable_Activity_Efficiency"
                        },
                        "type": "array"
                    },
                    "activityTotals": {
                        "description": "An array of totals in the activity transaction.",
                        "items": {
                            "$ref": "#/components/schemas/Exportable_Activity_Total_Entity"
                        },
                        "type": "array"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "processedSegment": {
                        "$ref": "#/components/schemas/Exportable_Activity_Processed_Segment"
                    }
                },
                "type": "object"
            },
            "Activity_Transactions_Export_References": {
                "description": "References for entities in activity transactions.",
                "properties": {
                    "activities": {
                        "description": "An array of activity references.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    },
                    "costCenters": {
                        "description": "An array of cost center references.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    },
                    "employees": {
                        "description": "An array of employee references.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    },
                    "jobs": {
                        "description": "An array of job references.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    },
                    "laborCategories": {
                        "description": "An array of labor category references.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    },
                    "locations": {
                        "description": "An array of location references.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    },
                    "payCodes": {
                        "description": "An array of pay code references.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    },
                    "teams": {
                        "description": "An array of team references.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    },
                    "workItemTypes": {
                        "description": "An array of Work Item types references.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    },
                    "workRules": {
                        "description": "An array of work rule references.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Activity_Team_Segment_Multi_Delete_Where": {
                "description": "Active team segments where clause model.",
                "properties": {
                    "activitySegmentIDs": {
                        "description": "An collection of team segments ids.",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "activitySegmentIdentifiers": {
                        "description": "An object representing a collection of team segments ids.",
                        "items": {
                            "$ref": "#/components/schemas/Activity_Teams_Segment_Identifier_Request"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Active_Team_Member": {
                "description": "The Active Team Member model, which is an effective-dated Activity team membership which overlaps an activity team segment.",
                "properties": {
                    "effectiveMembershipId": {
                        "description": "The ID of an effective team membership.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "endDateTime": {
                        "description": "The date and time of the end of the effective-dated activity team membership in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "endTimezone": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "membershipId": {
                        "description": "The ID of an activity team membership.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "startDateTime": {
                        "description": "The date and time of the start of the effective-dated activity team membership in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "startTimezone": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "workItemId": {
                        "description": "The ID of a work item.",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Activity_Team_Segment_Identifier": {
                "description": "The activity Team Segment Identifier model, which represents an object intended for the selection of a particular activity team segment.",
                "properties": {
                    "activity": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "id": {
                        "description": "The ID of a selected activity team segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "start": {
                        "description": "The start date and time of a selected activity team segment in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "startTimezone": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "team": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "type": "object"
            },
            "Activity_Team_Event_Audits_Select_model": {
                "description": "Activity Team Event Audits Select model.",
                "properties": {
                    "auditType": {
                        "description": "The type of data for which audits are returned.",
                        "items": {
                            "enum": [
                                "TEAM_SEGMENT",
                                "TEAM_SEGMENT_RESULT"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "auditType"
                ],
                "type": "object"
            },
            "Activity_Team_Event_Audits_Where_model": {
                "description": "Activity Team Event Audits Where model.",
                "properties": {
                    "endDateTime": {
                        "description": "The end date and time in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss).",
                        "type": "string"
                    },
                    "startDateTime": {
                        "description": "The start date and time in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss).",
                        "type": "string"
                    },
                    "teams": {
                        "description": "An object representing a collection of team references.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Activity_Team_Result_Segment_Audit_model": {
                "description": "Activity Team Result Segment Audit model.",
                "properties": {
                    "auditKey": {
                        "description": "The version key of an audit.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "childIndex": {
                        "description": "The child index of a result segment.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "createdDateTime": {
                        "description": "The date and time a team segment was created in ISO_LOCAL_DATE_TIME format (yyyy-MM-ddTHH:mm:ss).",
                        "type": "string"
                    },
                    "dataSource": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "dateResult": {
                        "description": "The date value of a result segment.",
                        "format": "date",
                        "type": "string"
                    },
                    "decimalResult": {
                        "description": "The decimal value of a result segment.",
                        "format": "double",
                        "type": "number"
                    },
                    "effectiveDateTime": {
                        "description": "The effective date and time of a result segment in ISO_LOCAL_DATE_TIME format (yyyy-MM-ddTHH:mm:ss).",
                        "type": "string"
                    },
                    "fieldDefinition": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "groupIndex": {
                        "description": "The group index of a result segment.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "id": {
                        "description": "The ID of an audit.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "numericResult": {
                        "description": "The numeric value of a result segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "resultCode": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "revisionDateTime": {
                        "description": "The date and time of the most recent update in ISO_LOCAL_DATE_TIME format (yyyy-MM-ddTHH:mm:ss).",
                        "type": "string"
                    },
                    "revisionId": {
                        "description": "The ID of the revision entity associated with an audit.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "revisionUser": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "teamSegmentId": {
                        "description": "The ID of a team segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "textResult": {
                        "description": "The text value of a result segment.",
                        "type": "string"
                    },
                    "timeResult": {
                        "description": "The time value of a result segment.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of an audit.",
                        "enum": [
                            "ADD",
                            "MOD",
                            "DEL"
                        ],
                        "type": "string"
                    },
                    "updatedDateTime": {
                        "description": "The date and time of the most recent update in ISO_LOCAL_DATE_TIME format (yyyy-MM-ddTHH:mm:ss).",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Activity_Team_Segment_Audit_model": {
                "description": "Activity Team Segment Audit model.",
                "properties": {
                    "accepted": {
                        "description": "A Boolean indicator of whether or not the segment is accepted.",
                        "type": "boolean"
                    },
                    "activity": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "auditKey": {
                        "description": "The version key of an audit.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "closable": {
                        "description": "A Boolean indicator of whether or not the segment is closable in the Activity Transaction Manager.",
                        "type": "boolean"
                    },
                    "costCenter": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "createdDateTime": {
                        "description": "The date and time a team segment was created in ISO_LOCAL_DATE_TIME format (yyyy-MM-ddTHH:mm:ss).",
                        "type": "string"
                    },
                    "dataSource": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "direct": {
                        "description": "A Boolean indicator of whether or not the activity is direct.",
                        "type": "boolean"
                    },
                    "emptyTransfer": {
                        "description": "@v1.0.teamsegmentauditdto.apimodelproperty.emptytransfer.description",
                        "type": "boolean"
                    },
                    "endDateTime": {
                        "description": "The end date and time of an activity in ISO_LOCAL_DATE_TIME format (yyyy-MM-ddTHH:mm:ss).",
                        "type": "string"
                    },
                    "endTimezone": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "eventType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "hoursAllocatedType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "id": {
                        "description": "The ID of an audit.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "laborAccount": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "orgJob": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "revisionDateTime": {
                        "description": "The date and time of the most recent update in ISO_LOCAL_DATE_TIME format (yyyy-MM-ddTHH:mm:ss).",
                        "type": "string"
                    },
                    "revisionId": {
                        "description": "The ID of the revision entity associated with an audit.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "revisionUser": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "startDateTime": {
                        "description": "The start date and time of an activity in ISO_LOCAL_DATE_TIME format (yyyy-MM-ddTHH:mm:ss).",
                        "type": "string"
                    },
                    "startTimezone": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "team": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "type": {
                        "description": "The type of an audit.",
                        "enum": [
                            "ADD",
                            "MOD",
                            "DEL"
                        ],
                        "type": "string"
                    },
                    "updatedDateTime": {
                        "description": "The date and time of the most recent update in ISO_LOCAL_DATE_TIME format (yyyy-MM-ddTHH:mm:ss).",
                        "type": "string"
                    },
                    "workRule": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "type": "object"
            },
            "Activity_Team_Segment_Multi_Read_Where": {
                "description": "Activity Team Segment Read Where Request",
                "properties": {
                    "endDate": {
                        "description": "The end date of the search date range in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "returnResults": {
                        "description": "@v1.0.activityteamsegmentsmultireadwhere.apimodelproperty.returnresults.description",
                        "type": "boolean"
                    },
                    "segments": {
                        "$ref": "#/components/schemas/Activity_Team_Segments_Multi_Read_by_Segments"
                    },
                    "startDate": {
                        "description": "The start date of the search date range in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "symbolicPeriod": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "teams": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    }
                },
                "type": "object"
            },
            "Activity_Team_Segment_Result": {
                "description": "@v1.0.activityteamsegmentresultforrest.apimodel.description",
                "properties": {
                    "activityTeamSegmentId": {
                        "description": "@v1.0.activityteamsegmentresultforrest.apimodelproperty.activityteamsegmentid.description",
                        "format": "int64",
                        "type": "integer"
                    },
                    "childResults": {
                        "description": "@v1.0.activityteamsegmentresultforrest.apimodelproperty.childresultsegments.description",
                        "items": {
                            "$ref": "#/components/schemas/Activity_Team_Segment_Result"
                        },
                        "type": "array"
                    },
                    "createdDateTime": {
                        "description": "@v1.0.activityteamsegmentresultforrest.apimodelproperty.createddatetime.description",
                        "type": "string"
                    },
                    "dataSource": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "dateResult": {
                        "description": "@v1.0.activityteamsegmentresultforrest.apimodelproperty.dateresult.description",
                        "format": "date",
                        "type": "string"
                    },
                    "decimalResult": {
                        "description": "@v1.0.activityteamsegmentresultforrest.apimodelproperty.decimalresult.description",
                        "format": "double",
                        "type": "number"
                    },
                    "effectiveDateTime": {
                        "description": "@v1.0.activityteamsegmentresultforrest.apimodelproperty.effectivedatetime.description",
                        "type": "string"
                    },
                    "fieldDefinition": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "id": {
                        "description": "@v1.0.activityteamsegmentresultforrest.apimodelproperty.id.description",
                        "format": "int64",
                        "type": "integer"
                    },
                    "numericResult": {
                        "description": "@v1.0.activityteamsegmentresultforrest.apimodelproperty.numericresult.description",
                        "format": "int64",
                        "type": "integer"
                    },
                    "resultCode": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "textResult": {
                        "description": "@v1.0.activityteamsegmentresultforrest.apimodelproperty.textresult.description",
                        "type": "string"
                    },
                    "timeResult": {
                        "description": "@v1.0.activityteamsegmentresultforrest.apimodelproperty.timeresult.description",
                        "type": "string"
                    },
                    "updatedDateTime": {
                        "description": "@v1.0.activityteamsegmentresultforrest.apimodelproperty.updateddatetime.description",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Activity_Team_Segment": {
                "description": "Activity Team Segment",
                "properties": {
                    "accepted": {
                        "description": "A Boolean indicator of whether or not the segment is accepted.",
                        "type": "boolean"
                    },
                    "activity": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "closable": {
                        "description": "A Boolean indicator of whether or not the segment is closable in ATM.",
                        "type": "boolean"
                    },
                    "costCenter": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "createdDateTime": {
                        "description": "The date and time this record was created in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "dataSource": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "deleted": {
                        "description": "A Boolean indicator of whether or not the segment is deleted.",
                        "type": "boolean"
                    },
                    "direct": {
                        "description": "A Boolean indicator of whether or not the activity is direct.",
                        "type": "boolean"
                    },
                    "emptyTransfer": {
                        "description": "A Boolean indicator of whether or not the activity team segment has an empty transfer.",
                        "type": "boolean"
                    },
                    "endDateTime": {
                        "description": "The date and time of the end of the activity in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "endTimezone": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "eventType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "hoursAllocatedType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "id": {
                        "description": "The ID of the activity team segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "laborCategories": {
                        "description": "A list of labor category entry lists containing the labor categories associated with an activity team segment transfer.",
                        "items": {
                            "$ref": "#/components/schemas/Activity_Team_Segment_Labor_Category_Transfer"
                        },
                        "type": "array"
                    },
                    "mismatchedResults": {
                        "description": "A Boolean indicator of whether or not an Activity Team Segment has Activity Results that do not match the Activity Results Template.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "missingResults": {
                        "description": "A Boolean indicator of whether or not an Activity Team Segment is missing Activity Results, which are required.",
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "orgJob": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "startDateTime": {
                        "description": "The date and time of the start of the activity in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "startTimezone": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "team": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "updatedDateTime": {
                        "description": "The date and time this record was last updated in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "workRule": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "type": "object"
            },
            "Team_Segment_NetChange_find_criteria": {
                "description": "The Team Segment Net Changes where clause model.",
                "properties": {
                    "activities": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    },
                    "endDateTime": {
                        "description": "The inclusive end date for the timeperiod in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "type": "string"
                    },
                    "lastRunDateTime": {
                        "description": "The inclusive starting date for the timeperiod in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "type": "string"
                    },
                    "teams": {
                        "$ref": "#/components/schemas/ObjectRefList"
                    }
                },
                "required": [
                    "endDateTime",
                    "lastRunDateTime"
                ],
                "type": "object"
            },
            "Activity_Efficiency_Date_Range": {
                "description": "The date range model.",
                "properties": {
                    "endDate": {
                        "description": "The end date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "startDate": {
                        "description": "The start date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Bulk_Activity_Segments_Delete_Context": {
                "description": "The Delete Activity Shifts execution context model.",
                "properties": {
                    "activitySegmentIdentifiers": {
                        "description": "A list of activity segment identifiers.",
                        "items": {
                            "$ref": "#/components/schemas/BulkActivitySegmentIdentifier"
                        },
                        "type": "array"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    }
                },
                "type": "object"
            },
            "Timecard_Comment": {
                "description": "Information necessary for using Comments.",
                "properties": {
                    "categories": {
                        "description": "A list of the categories assigned to a Comment. At least one category is required when creating a new Comment.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef_Entity"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The ID of a Comment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of a Comment.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Timecard_Note": {
                "description": "Entity describing a Note.",
                "properties": {
                    "dataSourceDisplayName": {
                        "description": "A string identifier that describes the data source, if one exists. Normally, this indicates that the context object came from a different source, such as a clock or device or an external data source import or interface.",
                        "type": "string"
                    },
                    "dataSourceId": {
                        "description": "The ID of the data source, if one exists. Normally, this indicates that the context object came from a different source, such as a clock, device, or an external data source such as an import or interface.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "text": {
                        "description": "The plaintext entered for a Note.",
                        "type": "string"
                    },
                    "timestamp": {
                        "description": "The timestamp associated with a Note.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Transaction_Export_Request_Date_Range": {
                "description": "The date range object for a transaction.",
                "properties": {
                    "endDate": {
                        "description": "The inclusive end date for the timeperiod to be selected in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "startDate": {
                        "description": "The inclusive starting date for the timeperiod to be selected in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Activity_Result": {
                "description": "Activity Result object.",
                "properties": {
                    "childResultSegments": {
                        "description": "A reference to a list of child Activity Result Segments.",
                        "items": {
                            "$ref": "#/components/schemas/Exportable_Activity_Result"
                        },
                        "type": "array"
                    },
                    "createdDateTime": {
                        "description": "The date and time this record was created in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "dataSourceId": {
                        "description": "The ID of the Data Source.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "dateTimeResult": {
                        "description": "The DateTime result for the Activity Result Segment.",
                        "type": "string"
                    },
                    "decimalResult": {
                        "description": "The decimal result for the Activity Result Segment.",
                        "format": "double",
                        "type": "number"
                    },
                    "effectiveDateTime": {
                        "description": "The effective date and time associated with an Activity Result Segment in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "fieldDefinition": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "id": {
                        "description": "The ID of an Activity Result Segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "numericResult": {
                        "description": "The numeric result for the Activity Result Segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "resultCode": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "textResult": {
                        "description": "The text result for the Activity Result Segment.",
                        "type": "string"
                    },
                    "timeResult": {
                        "description": "The time result for the Activity Result Segment.",
                        "type": "string"
                    },
                    "updatedDateTime": {
                        "description": "The date and time this record was last updated in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Exportable_Activity_Efficiency": {
                "description": "An object representing an Activity Efficiency.",
                "properties": {
                    "allocatedSeconds": {
                        "description": "The number of allocated seconds used to calculate an efficiency.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "earnedSeconds": {
                        "description": "The calculated value of earned seconds for a particular activity span.",
                        "type": "number"
                    },
                    "efficiency": {
                        "description": "The calculated value of efficiency for a particular activity span.",
                        "type": "number"
                    },
                    "efficiencyQuantity": {
                        "description": "The quantity used to calculate an efficiency.",
                        "type": "number"
                    },
                    "endDateTime": {
                        "description": "The date and time of the end of the activity efficiency in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "endTimezone": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "startDateTime": {
                        "description": "The date and time of the start of the activity efficiency in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "startTimezone": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "type": "object"
            },
            "Exportable_Activity_Total_Entity": {
                "description": "An object representing an Activity Total.",
                "properties": {
                    "amount": {
                        "description": "The amount of time of an activity total.",
                        "type": "number"
                    },
                    "applyDate": {
                        "description": "The date to which the totals are applied when totals are derived from more than one day.",
                        "format": "date",
                        "type": "string"
                    },
                    "costCenter": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "currencyCode": {
                        "description": "The currency code of a total.",
                        "type": "string"
                    },
                    "endDateTime": {
                        "description": "The date and time of the end of the total in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "endTimezone": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "job": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "jobTransfer": {
                        "description": "A Boolean indicator of whether or not the totals object contains a job transfer.",
                        "type": "boolean"
                    },
                    "laborCategory": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "laborCategoryTransfer": {
                        "description": "A Boolean indicator of whether or not the totals object contains a labor category.",
                        "type": "boolean"
                    },
                    "location": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "payCode": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "startDateTime": {
                        "description": "The date and time of the start of the total in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "startTimezone": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "wages": {
                        "description": "The money amount calculated in totals as wages.",
                        "type": "number"
                    },
                    "workRule": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "type": "object"
            },
            "Exportable_Activity_Processed_Segment": {
                "description": "Entity describing an Activity Processed Segment for an employee.",
                "properties": {
                    "accepted": {
                        "description": "A Boolean indicator of whether or not the segment is accepted.",
                        "type": "boolean"
                    },
                    "activity": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "activitySegmentId": {
                        "description": "A reference to an activity segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "activityTeam": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "activityTeamSegmentId": {
                        "description": "A reference to an activity team segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "allocatedSeconds": {
                        "description": "The number of seconds charged to the work processed segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "applyDate": {
                        "description": "The apply date for an activity processed segment date range in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "approvedByEmployee": {
                        "description": "A Boolean indicator of whether or not the activity is employee-approved.",
                        "type": "boolean"
                    },
                    "approvedByManager": {
                        "description": "A Boolean indicator of whether or not an activity processed segment has been approved by a manager.",
                        "type": "boolean"
                    },
                    "concurrent": {
                        "description": "A Boolean indicator of whether or not an activity is concurrent.",
                        "type": "boolean"
                    },
                    "deductedSeconds": {
                        "description": "The number of seconds deducted from the span for unpaid meals and breaks.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "durationInSeconds": {
                        "description": "The duration in seconds of the activity processed segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "endDateTime": {
                        "description": "The date and time of the end of the activity in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "endTimezone": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "eventTypeId": {
                        "description": "The ID of an event type.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "id": {
                        "description": "The ID of an activity processed segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "moneyAmount": {
                        "description": "The amount (as a decimal value representing money) of the activity processed segment.",
                        "format": "double",
                        "type": "number"
                    },
                    "orderNumber": {
                        "description": "The order number associated with an activity segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "orphan": {
                        "description": "A Boolean indicator of whether or not the activity is an orphan.",
                        "type": "boolean"
                    },
                    "overageDurationSeconds": {
                        "description": "The number of seconds of the activity processed segment that are not within the worked shift.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "roundedEndDateTime": {
                        "description": "An optional field containing the end date and time based on configured rounding rules.",
                        "type": "string"
                    },
                    "roundedEndTimezone": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "roundedStartDateTime": {
                        "description": "An optional field containing the start date and time based on configured rounding rules.",
                        "type": "string"
                    },
                    "roundedStartTimezone": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "startDateTime": {
                        "description": "The date and time of the start of the activity in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "startTimezone": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "systemGeneratedEnd": {
                        "description": "A Boolean indicator of whether or not the end time is system-generated.",
                        "type": "boolean"
                    },
                    "systemGeneratedStart": {
                        "description": "A Boolean indicator of whether or not the start time is system-generated.",
                        "type": "boolean"
                    },
                    "workItemId": {
                        "description": "The Work Item ID associated with an activity processed segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "workItemType": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "type": "object"
            },
            "Activity_Teams_Segment_Identifier_Request": {
                "description": "The activity Team Segment Identifier model, which represents an object intended for the selection of a particular activity team segment.",
                "properties": {
                    "activity": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "start": {
                        "description": "The start date and time of a selected activity team segment in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "startTimezone": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "team": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "type": "object"
            },
            "Activity_Team_Segments_Multi_Read_by_Segments": {
                "description": "Activity Team Segments by id and identifier retriever model.",
                "properties": {
                    "activitySegmentIDs": {
                        "description": "An collection of team segments ids.",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "activitySegmentIdentifiers": {
                        "description": "An object representing a collection of team segments ids.",
                        "items": {
                            "$ref": "#/components/schemas/Activity_Teams_Segment_Identifier_Request"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Activity_Team_Segment_Labor_Category_Transfer": {
                "description": "Entity containing information regarding a transfer of a labor category",
                "properties": {
                    "laborCategoryDef": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "laborCategoryEntry": {
                        "$ref": "#/components/schemas/ObjectRef"
                    }
                },
                "type": "object"
            },
            "Timecard_Activity_Result_Segment": {
                "description": "Entity describing an Activity Result Segment for an Activity Segment.",
                "properties": {
                    "activitySegmentId": {
                        "description": "The ID of an Activity Segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "childResultSegments": {
                        "description": "A reference to a list of child Activity Result Segments.",
                        "items": {
                            "$ref": "#/components/schemas/Timecard_Activity_Result_Segment"
                        },
                        "type": "array"
                    },
                    "createdDateTime": {
                        "description": "The date and time this record was created in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "dataSourceId": {
                        "description": "The ID of the Data Source.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "dateTimeResult": {
                        "description": "The DateTime result for the Activity Result Segment.",
                        "type": "string"
                    },
                    "decimalResult": {
                        "description": "The decimal result for the Activity Result Segment.",
                        "format": "double",
                        "type": "number"
                    },
                    "deleted": {
                        "description": "A Boolean indicator of whether or not the Activity Result Segment is deleted.",
                        "type": "boolean"
                    },
                    "effectiveDateTime": {
                        "description": "The effective date and time associated with an Activity Result Segment in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "fieldDefinition": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "id": {
                        "description": "The ID of an Activity Result Segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "numericResult": {
                        "description": "The numeric result for the Activity Result Segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "resultCode": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "textResult": {
                        "description": "The text result for the Activity Result Segment.",
                        "type": "string"
                    },
                    "timeResult": {
                        "description": "The time result for the Activity Result Segment.",
                        "type": "string"
                    },
                    "updatedDateTime": {
                        "description": "The date and time this record was last updated in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Timecard_Activity_Efficiency": {
                "description": "Entity describing Activity Efficiency for a particular activity span.",
                "properties": {
                    "earnedSeconds": {
                        "description": "The calculated value of earned seconds for a particular activity span.",
                        "type": "number"
                    },
                    "efficiency": {
                        "description": "The calculated value of efficiency for a particular activity span.",
                        "type": "number"
                    },
                    "efficiencyQuantity": {
                        "description": "The quantity used to calculate an efficiency.",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "Timecard_Activity_Processed_Segment": {
                "description": "Entity describing an Activity Processed Segment for an employee.",
                "properties": {
                    "accepted": {
                        "description": "A Boolean indicator of whether or not the segment is accepted.",
                        "type": "boolean"
                    },
                    "activity": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "activityId": {
                        "description": "The ID of an activity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "activitySegmentId": {
                        "description": "A reference to an activity segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "activityTeam": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "activityTeamSegmentId": {
                        "description": "A reference to an activity team segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "allocatedSeconds": {
                        "description": "The number of seconds charged to the work processed segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "applyDate": {
                        "description": "The apply date for an activity processed segment date range in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "approvedByEmployee": {
                        "description": "A Boolean indicator whether or not the segment was approved by employee.",
                        "type": "boolean"
                    },
                    "approvedByManager": {
                        "description": "A Boolean indicator of whether or not an activity processed segment has been approved by a manager.",
                        "type": "boolean"
                    },
                    "concurrent": {
                        "description": "A Boolean indicator of whether or not an activity is concurrent.",
                        "type": "boolean"
                    },
                    "dayDivideState": {
                        "description": "The day divide indicator. Valid values include 0 - No Day Divide, 1 - Before Day Divide, 2 - After Day Divide, and -1 - Undetermined.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "deductedSeconds": {
                        "description": "The number of seconds deducted from the span for unpaid meals and breaks.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "durationInSeconds": {
                        "description": "The duration in seconds of the activity processed segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "endDateTime": {
                        "description": "The date and time of the end of the activity in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "endTimezone": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "eventTypeId": {
                        "description": "The ID of an event type.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "id": {
                        "description": "The ID of an activity processed segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "moneyAmount": {
                        "description": "The amount (as a decimal value representing money) of the activity processed segment.",
                        "format": "double",
                        "type": "number"
                    },
                    "orderNumber": {
                        "description": "The order number associated with an activity segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "orphan": {
                        "description": "A Boolean indicator of whether or not the activity is an orphan.",
                        "type": "boolean"
                    },
                    "overageDurationSeconds": {
                        "description": "The number of seconds of the activity processed segment that are not within the worked shift.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "roundedEndDateTime": {
                        "description": "An optional field containing the end date and time based on configured rounding rules.",
                        "type": "string"
                    },
                    "roundedEndTimezone": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "roundedStartDateTime": {
                        "description": "An optional field containing the start date and time based on configured rounding rules.",
                        "type": "string"
                    },
                    "roundedStartTimezone": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "shiftLocatorDateTime": {
                        "description": "The shift locator date time in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "startDateTime": {
                        "description": "The date and time of the start of the activity in ISO_LOCAL_DATE_TIME format (yyyy-MM-dd HH:mm:ss.SSS).",
                        "type": "string"
                    },
                    "startTimezone": {
                        "$ref": "#/components/schemas/ObjectRef_Entity"
                    },
                    "systemGeneratedEnd": {
                        "description": "A Boolean indicator of whether or not the end time is system-generated.",
                        "type": "boolean"
                    },
                    "systemGeneratedStart": {
                        "description": "A Boolean indicator of whether or not the start time is system-generated.",
                        "type": "boolean"
                    },
                    "workItemId": {
                        "description": "The Work Item ID associated with an activity processed segment.",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Exportable_Activity_Result": {
                "description": "Entity describing an Activity Result Segment for an Activity Segment.",
                "properties": {
                    "childResultSegments": {
                        "description": "A reference to a list of child Activity Result Segments.",
                        "items": {
                            "$ref": "#/components/schemas/Exportable_Activity_Result"
                        },
                        "type": "array"
                    },
                    "createdDateTime": {
                        "description": "The date and time this record was created in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "dataSourceId": {
                        "description": "The ID of the Data Source.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "dateTimeResult": {
                        "description": "The DateTime result for the Activity Result Segment.",
                        "type": "string"
                    },
                    "decimalResult": {
                        "description": "The decimal result for the Activity Result Segment.",
                        "format": "double",
                        "type": "number"
                    },
                    "effectiveDateTime": {
                        "description": "The effective date and time associated with an Activity Result Segment in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "fieldDefinition": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "id": {
                        "description": "The ID of an Activity Result Segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "numericResult": {
                        "description": "The numeric result for the Activity Result Segment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "resultCode": {
                        "$ref": "#/components/schemas/ObjectRef"
                    },
                    "textResult": {
                        "description": "The text result for the Activity Result Segment.",
                        "type": "string"
                    },
                    "timeResult": {
                        "description": "The time result for the Activity Result Segment.",
                        "type": "string"
                    },
                    "updatedDateTime": {
                        "description": "The date and time this record was last updated in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    }
}
