{
    "openapi": "3.0.0",
    "info": {
        "description": "Rest APIs",
        "title": "Rest APIs",
        "version": "1.0"
    },
    "tags": [
        {
            "description": "<p markdown=\"1\">From here you may browse our library of API resources, organized hierarchically by domain, or major functional area, logical subgroup, API resource, and all available operations against that resource. For more information about the concepts and technology behind our API, refer to the [Getting started](C:636f581c-50a8-41a7-af43-e5057f9c20bd) documentation.</p><p>Our platform provides a powerful application programming interface and documentation to help you develop secure, scalable, and high-performance applications that leverage the full breadth of capabilities offered by our backend services.</p><p markdown=\"1\">The Workforce Management suite's API is founded on a pragmatic implementation of the [representational state transfer](http://en.wikipedia.org/wiki/Representational_State_Transfer) architectural style and allows access to your organization's workforce management data using common HTTP methods and the [JSON](http://www.json.org) interchange format.</p>",
            "name": "API"
        },
        {
            "description": "<p>This resource allows you to view and manipulate Attendance Actions, which are a configured list of entities that each represent an Attendance consequence.</p><p>Actions in Attendance are symbolic. They represent an informational flag to a human being informing him or her that they need to go do something, such as a manager delivering a verbal warning to an employee. Actions are an output of the Attendance Processor. An Action Definition refers to configuration, while an Action Transaction refers to the output of the Attendance Processor.</p>",
            "name": "Actions",
            "x-parent": "Attendance"
        },
        {
            "description": "<p>Attendance automates the process of tracking and enforcing the types of policies that might typically be found in an employee handbook. Missing a punch, being absent, punching in or out too early or too late, or consistently taking longer breaks than allowed are all common examples of the types of employee policies Attendance can be configured to support.</p><p>Attendance works with rules and policies. For example, if an employee is absent three times in a month, your policy might state such an employee is then on probation. A fourth absence in that time period could result in a final warning, and a fifth in termination. Attendance automates the enforcement of such rules in a very configurable way.</p><p markdown=\"1\">Refer to the [Attendance overview](C:64f8248f-e8ee-4c0e-8fb1-c1be60991354) topic in [Domain overviews](C:f2ccfb74-38e7-466a-a7c7-acddc3d2d00c) for more information.</p>",
            "name": "Attendance",
            "x-parent": "API"
        },
        {
            "description": "This resource allows you to access auditing records for the Attendance domain.",
            "name": "Attendance Audit Records",
            "x-parent": "Attendance"
        },
        {
            "description": "<p>This resource allows you to retrieve attendance profiles.</p>",
            "name": "Attendance Profiles",
            "x-parent": "Attendance"
        },
        {
            "description": "<p>This resource allows you to retrieve, update, and delete adjustments to an employee's balances.</p><p>In Attendance, balance adjustments are measured in terms of points or time.</p>",
            "name": "Balance Adjustments",
            "x-parent": "Attendance"
        },
        {
            "description": "<p>This resource allows you to access information about an employee's expiring balances.</p><p>In Attendance, balances are measured in terms of points or time.</p>",
            "name": "Balance Expirations",
            "x-parent": "Attendance"
        },
        {
            "description": "<p>This resource allows you to delete, reset, and retrieve resets to an employee's balances.</p><p>In Attendance, balance resets are measured in terms of points or time.</p>",
            "name": "Balance Resets",
            "x-parent": "Attendance"
        },
        {
            "description": "<p>This resource allows you to access information about an employee's balances.</p><p>In Attendance, balances are measured in terms of points or time.</p>",
            "name": "Balances",
            "x-parent": "Attendance"
        },
        {
            "description": "<p>This resource allows you to access information about discipline levels, which are configurable entities in Attendance through which you can group a set of policies in an Attendance profile.</p><p>When a profile is assigned to an employee, that employee can be in only one discipline level at any point of time.</p>",
            "name": "Discipline Levels",
            "x-parent": "Attendance"
        },
        {
            "description": "<p>This resource allows you to access Events, a basic component of Attendance.</p><p>Attendance Events determine which data imported from Timekeeping is significant to your organization's policies. Each Event maps to one of the elements Attendance consumes from Timekeeping. Events can map to input from outside the suite as well. For example, a company might choose to track traffic violations for employees who drive company trucks. Events are input for the series of Attendance rules enforced by all active policies.</p>",
            "name": "Events",
            "x-parent": "Attendance"
        },
        {
            "description": "This resource allows you to create, retrieve, and delete markers, which represent dates that influence the functionality of the Attendance Processor.",
            "name": "Markers",
            "x-parent": "Attendance"
        },
        {
            "description": "<p>This resource allows you to access Perfect Attendance transactions.</p><p>As Discipline Levels measure violations of acceptable behavior, Perfect Attendance provides a way to measure and reward an employee's good behavior.</p>",
            "name": "Perfect Attendance",
            "x-parent": "Attendance"
        },
        {
            "description": "<p>This resource allows you to access Perfect Attendance deductions.</p><p>As Discipline Levels measure violations of acceptable behavior, Perfect Attendance provides a way to measure and reward an employee's good behavior.</p>",
            "name": "Perfect Attendance Deductions",
            "x-parent": "Attendance"
        },
        {
            "description": "<p>This resource allows you to create, retrieve, update, and delete scheduled requests for the Attendance Processor.</p><p>The Attendance Processor is responsible for extracting data from Timekeeping as well as enforcing the rules that are defined within Attendance Policies. The Attendance Processor runs at defined points in an organization's workflow.</p>",
            "name": "Processor Requests",
            "x-parent": "Attendance"
        },
        {
            "description": "This resource allows you to peform general Attendance transactions, such as retrieving Attendance profile assignments for a group of employees within a date range.",
            "name": "Profile Assignments",
            "x-parent": "Attendance"
        },
        {
            "description": "<p>This resource allows you to execute Attendance rules.</p><p>Rules in Attendance always evaluate to true or false when executed and serve as the building blocks of Attendance policies. An Attendance consequence occurs for each rule that is evaluated as false.</p>",
            "name": "Rules",
            "x-parent": "Attendance"
        }
    ],
    "paths": {
        "/v1/attendance/actions/complete": {
            "post": {
                "description": "This operation completes actions for a list of employees whose actions fall within a date range. When an action is completed, this operation sets a completion date for each such action.",
                "operationId": "CompleteActions",
                "parameters": [
                    {
                        "description": "Complete Action request context: contains list of employees, start date, end date, and completion date.",
                        "in": "header",
                        "name": "request id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompleteActionsRequestContext"
                            }
                        }
                    },
                    "description": "Complete Action request context: contains list of employees, start date, end date, and completion date.",
                    "required": true
                },
                "responses": {
                    "100": {
                        "description": "Trying 100 response."
                    },
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "X-RateLimit-Limit": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Request limit per hour."
                            },
                            "X-RateLimit-Remaining": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "The number of requests left for the time window."
                            },
                            "X-RateLimit-Reset": {
                                "schema": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "description": "The UTC date/time at which the current rate limit window resets."
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ActionDocument"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "300": {
                        "description": "Trying 300 response."
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101000] - The date format is invalid.</li><li>[WAT-101104] - Start date is required.</li><li>[WAT-101103] - End date is required.</li><li>[WAT-101002] - The date range is invalid. The start date must be on or before the end date.</li><li>[WAT-101105] - An employee ID list is required.</li><li>[WAT-100017] - Complete date is a required field.</li><li>[WAT-100034] - A conflict occurred. The following parameters are mutually exclusive: ids, qualifiers, refs.</li><li>[WAT-101109] - Employee reference list cannot be null or empty.</li><li>[WAT-101110] - The employee parameter {parameterName} cannot be null.</li></ul>"
                    },
                    "413": {
                        "description": "<ul><li>[WFP-90001] - The service limit has been exceeded by the API operation on {resource} for {X} employees and {Y} days.</li><li>[WFP-90002] - The service limit has been exceeded by the API operation on {resource} for {X} employees.</li></ul>"
                    },
                    "500": {
                        "description": "Trying 500 response."
                    }
                },
                "summary": "Completes actions for one or more employees.",
                "x-tagGroups": [
                    {
                        "name": "Customers",
                        "tags": [
                            "Customers",
                            "Customer Authentication",
                            "AML",
                            "Customers Timeline"
                        ]
                    }
                ]
            }
        },
        "/v1/attendance/actions/documents/multi_read": {
            "post": {
                "description": "This operation returns all documents associated with a group of actions for a list of employees within a date range.",
                "operationId": "RetrieveActions'Documents",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessControlledRequestContext"
                            }
                        }
                    },
                    "description": "Retrieve Action request context: contains a list of employees and a date range.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ActionDocument"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "300": {
                        "description": "Trying.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ActionDocument"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101000] - The date format is invalid.</li><li>[WAT-101104] - Start date is required.</li><li>[WAT-101103] - End date is required.</li><li>[WAT-101002] - The date range is invalid. The start date must be on or before the end date.</li><li>[WAT-101105] - An employee ID list is required.</li><li>[WAT-100034] - A conflict occurred. The following parameters are mutually exclusive: ids, qualifiers, refs.</li><li>[WAT-101109] - Employee reference list cannot be null or empty.</li><li>[WAT-101110] - The employee parameter {parameterName} cannot be null.</li></ul>"
                    },
                    "413": {
                        "description": "<ul><li>[WFP-90001] - The service limit has been exceeded by the API operation on {resource} for {X} employees and {Y} days.</li><li>[WFP-90002] - The service limit has been exceeded by the API operation on {resource} for {X} employees.</li></ul>"
                    }
                },
                "summary": "Returns all documents associated with a group of actions.",
                "tags": [
                    "Actions"
                ]
            }
        },
        "/v1/attendance/actions/multi_read": {
            "post": {
                "description": "This operation returns all actions for a list of employees within a date range irrespective of their status. Optionally, this operation returns only required actions with an initiated or triggered status for a list of employees within a date range.",
                "operationId": "RetrieveMultipleActions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActionRequestContext"
                            }
                        }
                    },
                    "description": "Action request context: contains list of employees, start date, end date and optional find required only or completed flag.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Action"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101000] - The date format is invalid.</li><li>[WAT-101104] - Start date is required.</li><li>[WAT-101103] - End date is required.</li><li>[WAT-101002] - The date range is invalid. The start date must be on or before the end date.</li><li>[WAT-100034] - A conflict occurred. The following parameters are mutually exclusive: ids, qualifiers, refs.</li><li>[WAT-101109] - Employee reference list cannot be null or empty.</li><li>[WAT-101110] - The employee parameter {parameterName} cannot be null.</li></ul>"
                    },
                    "413": {
                        "description": "<ul><li>[WFP-90001] - The service limit has been exceeded by the API operation on {resource} for {X} employees and {Y} days.</li><li>[WFP-90002] - The service limit has been exceeded by the API operation on {resource} for {X} employees.</li></ul>"
                    }
                },
                "summary": "Returns all or only the required actions for multiple employees.",
                "tags": [
                    "Actions"
                ]
            }
        },
        "/v1/attendance/actions/{id}": {
            "get": {
                "description": "This operation returns information about an action by ID. You can choose to execute this operation either from the manager or employee perspective.",
                "operationId": "RetrieveActionbyID",
                "parameters": [
                    {
                        "description": " Header with query and path param",
                        "in": "header",
                        "name": "Accept-Language",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "An identifier representing an Attendance Action.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "description": "<em>[Optional]</em>A Boolean indicator of whether or not the operation is executed with a manager role. When false, the operation is executed with an employee role.",
                        "in": "query",
                        "name": "is_manager_role",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Action"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "[WAT-100202] - The following action ID does not exist: {id}."
                    }
                },
                "summary": "Returns information about an action.",
                "tags": [
                    "Actions"
                ]
            },
            "post": {
                "description": "This operation updates an action's completion date and user note by ID. If no completion date is provided, this operation deletes the existing date and returns the action to the initiated status.",
                "operationId": "UpdateActionbyID",
                "parameters": [
                    {
                        "description": "The ID of an Attendance action.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActionUpdateRequestContext"
                            }
                        }
                    },
                    "description": "Update Action request context: ID of the action to update, completion date, and user note.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Action"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-100202] - The following action ID does not exist: {id}.</li><li>[WAT-101000] - The date format is invalid.</li><li>[WAT-101106] - Parameter is required: {parameterName}.</li></ul>"
                    },
                    "409": {
                        "description": "[WAT-101014] - The object has been already modified by another person, update version and try again."
                    }
                },
                "summary": "Updates an action's completion date and user note.",
                "tags": [
                    "Actions"
                ]
            }
        },
        "/v1/attendance/actions/{id}/documents": {
            "get": {
                "description": "This operation returns all the documents associated with an action by ID. You can choose to execute this operation either from the manager or employee perspective.",
                "operationId": "RetrieveActionDocumentsbyID",
                "parameters": [
                    {
                        "description": "The ID of an Attendance action.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "description": "<em>[Optional]</em>A Boolean indicator of whether or not the operation is executed with a manager role. When false, the operation is executed with an employee role.",
                        "in": "query",
                        "name": "is_manager_role",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/DocumentSingleBinaryResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "[WAT-100202] - The following action ID does not exist: {id}."
                    }
                },
                "summary": "Returns all documents associated with an action.",
                "tags": [
                    "Actions"
                ]
            }
        },
        "/v1/attendance/attendance_profiles": {
            "get": {
                "description": "<p>This operation returns all attendance profiles.</p><br /><p>The associated Access Control Point is WORKFORCE_ATTENDANCE_SETUP.</p>",
                "operationId": "RetrieveAllAttendanceProfiles",
                "parameters": [
                    {
                        "description": "A Boolean indicator of whether or not the response returns all details of each attendance profile. When false, the response returns only the ID and name of each attendance profile.",
                        "in": "query",
                        "name": "all_details",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/AttendanceProfile"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns all attendance profiles.",
                "tags": [
                    "Attendance Profiles"
                ]
            }
        },
        "/v1/attendance/attendance_profiles/multi_read": {
            "post": {
                "description": "<p>This operation returns attendance profiles by object references.</p><br /><p>The associated Access Control Point is WORKFORCE_ATTENDANCE_SETUP.</p>",
                "operationId": "RetrieveAttendanceProfiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Multi_Read_Request_for_attendance_Profiles"
                            }
                        }
                    },
                    "description": "Attendance Profile request: contains a list of ids, qualifiers, persistentId or refs.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttendanceProfile"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WAT-100228] - Some of the attendance profiles were not exported because of errors in the source data. Correct those errors and try again.</li></ul>"
                    },
                    "300": {
                        "description": "Trying 300.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Action"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<p>Bad Request:</p><ul><li>[WAT-101005] - A request cannot be empty.</li><li>[WAT-101106] - Parameter is required: {parameterName}.</li><li>[WAT-100224] - Request contains multiple parameters.</li><li>[WAT-100225] - Attendance Profile does not exist.</li><li>[WAT-100226] - Attendance Profile by given name does not exist.</li><li>[WAT-100227] - Attendance Profile by given persistent id does not exist.</li><li>[WAT-100228] - Multi-Read request is partially successful.</li><li>[WAT-100229] - Atleast one parameter from id/qualifier/persistentId/ref is required.</li></ul>"
                    }
                },
                "summary": "Returns attendance profiles.",
                "tags": [
                    "Attendance Profiles"
                ]
            }
        },
        "/v1/attendance/attendance_profiles/{id}": {
            "get": {
                "description": "<p>This operation returns an attendance profile by ID.</p><br /><p>The associated Access Control Point is WORKFORCE_ATTENDANCE_SETUP.</p>",
                "operationId": "RetrieveAttendanceProfilebyID",
                "parameters": [
                    {
                        "description": "The ID of an attendance profile.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttendanceProfile"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<p>Bad Request:</p><ul><li>[WAT-100225] - Attendance Profile does not exist.</li><ul>"
                    }
                },
                "summary": "Returns an attendance profile.",
                "tags": [
                    "Attendance Profiles"
                ]
            }
        },
        "/v1/attendance/audit_records/multi_read": {
            "post": {
                "description": "This operation returns auditing records for the specified auditing entities and employees within a date range. If auditing entities are not specified in a request, all entities are returned. Note that the start date and end date may have different meanings for different entity types, and that entities of different types may contain different properties.",
                "operationId": "RetrieveAttendanceAuditRecords",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttendanceAuditDataRequestContext"
                            }
                        }
                    },
                    "description": "Retrieve Audit Records request context: contains list of employees, start date, end date. and a list of auditing entities.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/AttendanceAuditData"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101005] - A request cannot be empty.</li><li>[WAT-101001] - The date or time format is invalid.</li><li>[WAT-101104] - Start date is required.</li><li>[WAT-101103] - End date is required.</li><li>[WAT-101002] - The date range is invalid. The start date must be on or before the end date.</li><li>[WAT-101105] - An employee ID list is required.</li><li>[WAT-101024] - The entity type {entityType} is not supported. Supported types include the following: {supportedEntityTypes}.</li><li>[WAT-100034] - A conflict occurred. The following parameters are mutually exclusive: ids, qualifiers, refs.</li><li>[WAT-101109] - Employee reference list cannot be null or empty.</li><li>[WAT-101110] - The employee parameter {parameterName} cannot be null.</li></ul>"
                    },
                    "413": {
                        "description": "<ul><li>[WFP-90001] - The service limit has been exceeded by the API operation on {resource} for {X} employees and {Y} days.</li><li>[WFP-90002] - The service limit has been exceeded by the API operation on {resource} for {X} employees.</li></ul>"
                    }
                },
                "summary": "Returns auditing records for auditing entities and employees within a date range.",
                "tags": [
                    "Attendance Audit Records"
                ]
            }
        },
        "/v1/attendance/balance_adjustments": {
            "post": {
                "description": "This operation updates balances for a list of employees within a date range based on a balance type and returns a list of balance adjustment IDs.",
                "operationId": "UpdateandReturnBalances",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBalanceRequestContext"
                            }
                        }
                    },
                    "description": "Update and Return Balances request context: contains a list of employees, balance type, and update date.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/PointTransaction"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101000] - The date format is invalid.</li><li>[WAT-101105] - An employee ID list is required.</li><li>[WAT-100102] - A Balance Update date is required.</li><li>[WAT-101101] - An amount is required.</li><li>[WAT-100002] - The amount exceeds the min/max value specified for the Balance type.</li><li>[WAT-100103] - Starting Balance is required for Balance type: {type}.</li></ul>"
                    }
                },
                "summary": "Updates balances for employees.",
                "tags": [
                    "Balance Adjustments"
                ]
            }
        },
        "/v1/attendance/balance_adjustments/multi_read": {
            "post": {
                "description": "This operation returns point balance adjustments for a list of employees within a date range.",
                "operationId": "RetrieveBalanceAdjustments",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetBalancesRequestContext"
                            }
                        }
                    },
                    "description": "Retrieve Balance Adjustments request context: contains a list of employees, start date, and end date.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/BalanceAdjustment_DomainService"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101000] - The date format is invalid.</li><li>[WAT-101104] - Start date is required.</li><li>[WAT-101103] - End date is required.</li><li>[WAT-101002] - The date range is invalid. The start date must be on or before the end date.</li><li>[WAT-101105] - An employee ID list is required.</li><li>[WAT-100218] - The following Balance type category does not exist: {type}.</li></ul>"
                    },
                    "413": {
                        "description": "<ul><li>[WFP-90001] - The service limit has been exceeded by the API operation on {resource} for {X} employees and {Y} days.</li><li>[WFP-90002] - The service limit has been exceeded by the API operation on {resource} for {X} employees.</li></ul>"
                    }
                },
                "summary": "Returns point balance adjustments.",
                "tags": [
                    "Balance Adjustments"
                ]
            }
        },
        "/v1/attendance/balance_adjustments/multi_update": {
            "post": {
                "description": "This operation updates balances for a list of employees within a date range based on a balance type and returns a list of balance adjustment IDs.",
                "operationId": "BulkUpdateandReturnBalances",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/UpdateBalanceRequestContext"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "Update and Return Balances request contexts: each context contains a list of employees, balance type, and update date.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/PointTransaction"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-100221] - Bulk import operation completed with error(s).</li><li>[WAT-101000] - The date format is invalid.</li><li>[WAT-101105] - An employee ID list is required.</li><li>[WAT-100102] - A Balance Update date is required.</li><li>[WAT-101101] - An amount is required.</li><li>[WAT-100002] - The amount exceeds the min/max value specified for the Balance type.</li><li>[WAT-100103] - Starting Balance is required for Balance type: {type}.</li></ul>"
                    }
                },
                "summary": "Updates balances for employees for multiple balance types.",
                "tags": [
                    "Balance Adjustments"
                ]
            }
        },
        "/v1/attendance/balance_adjustments/{id}/mark_deleted": {
            "post": {
                "description": "This operation marks point balance adjustments for deletion by ID.",
                "operationId": "MarkBalanceAdjustmentsforDeletionbyID",
                "parameters": [
                    {
                        "description": "The ID of a point balance adjustment.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "<ul><li>[WAT-100006] - Only manual Point Balance Adjustments can be deleted.</li><li>[WAT-100205] - The following Point Balance Adjustment ID does not exist: {id}.</li></ul>"
                    }
                },
                "summary": "Marks point balance adjustments for deletion.",
                "tags": [
                    "Balance Adjustments"
                ]
            }
        },
        "/v1/attendance/balance_expirations/multi_read": {
            "post": {
                "description": "This operation returns expiring points for a list of employees within a date range.",
                "operationId": "RetrieveExpiringBalances",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessControlledRequestContext"
                            }
                        }
                    },
                    "description": "Retrieve Expiring Balances request context contains a list of employees, start date, and end date.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/AttendanceExpiringBalance_DomainService"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101000] - The date format is invalid.</li><li>[WAT-101104] - Start date is required.</li><li>[WAT-101103] - End date is required.</li><li>[WAT-101002] - The date range is invalid. The start date must be on or before the end date.</li><li>[WAT-101105] - An employee ID list is required.</li></ul>"
                    },
                    "413": {
                        "description": "<ul><li>[WFP-90001] - The service limit has been exceeded by the API operation on {resource} for {X} employees and {Y} days.</li><li>[WFP-90002] - The service limit has been exceeded by the API operation on {resource} for {X} employees.</li></ul>"
                    }
                },
                "summary": "Returns expiring points for employees.",
                "tags": [
                    "Balance Expirations"
                ]
            }
        },
        "/v1/attendance/balance_resets": {
            "post": {
                "description": "This operation resets the balances for a list of employees within a date range and based on a balance type and returns a list of the reset balances.",
                "operationId": "ResetBalances",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetBalanceRequestContext"
                            }
                        }
                    },
                    "description": "Reset Balances request context contains a list of employees, balance types, and reset date.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/PointBalance"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101000] - The date format is invalid.</li><li>[WAT-101105] - An employee ID list is required.</li><li>[WAT-100101] - A Balance Reset date is required.</li><li>[WAT-100002] - The amount exceeds the min/max value specified for the Balance type.</li><li>[WAT-100210] - The following Balance definition does not exist: {type}.</li></ul>"
                    }
                },
                "summary": "Resets balances for employees.",
                "tags": [
                    "Balance Resets"
                ]
            }
        },
        "/v1/attendance/balance_resets/multi_read": {
            "post": {
                "description": "This operation returns balance resets for a list of employees within a date range.",
                "operationId": "RetrieveBalanceResets",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetBalancesRequestContext"
                            }
                        }
                    },
                    "description": "Retrieve Balance Resets request context contains a list of employees, start date, end date, and balance types.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/BalanceReset"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101000] - The date format is invalid.</li><li>[WAT-101104] - Start date is required.</li><li>[WAT-101000] - The date format is invalid.</li><li>[WAT-101002] - The date range is invalid. The start date must be on or before the end date.</li><li>[WAT-101105] - An employee ID list is required.</li><li>[WAT-100218] - The following Balance type category does not exist: {type}.</li></ul>"
                    },
                    "413": {
                        "description": "<ul><li>[WFP-90001] - The service limit has been exceeded by the API operation on {resource} for {X} employees and {Y} days.</li><li>[WFP-90002] - The service limit has been exceeded by the API operation on {resource} for {X} employees.</li></ul>"
                    }
                },
                "summary": "Returns point balance resets for employees.",
                "tags": [
                    "Balance Resets"
                ]
            }
        },
        "/v1/attendance/balance_resets/multi_update": {
            "post": {
                "description": "This operation resets the balances for a list of employees within a date range and based on a balance type and returns a list of the reset balances.",
                "operationId": "BulkResetBalances",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/ResetBalanceRequestContext"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "Reset Balances request contexts: each context contains a list of employees, balance types, and reset date.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/PointBalance"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-100221] - Bulk import operation completed with error(s).</li><li>[WAT-101000] - The date format is invalid.</li><li>[WAT-101105] - An employee ID list is required.</li><li>[WAT-100101] - A Balance Reset date is required.</li><li>[WAT-100002] - The amount exceeds the min/max value specified for the Balance type.</li><li>[WAT-100210] - The following Balance definition does not exist: {type}.</li></ul>"
                    }
                },
                "summary": "Resets balances for employees for multiple balance types.",
                "tags": [
                    "Balance Resets"
                ]
            }
        },
        "/v1/attendance/balance_resets/{id}/mark_deleted": {
            "post": {
                "description": "This operation marks point balance resets for deletion by ID.",
                "operationId": "MarkBalanceResetsforDeletionbyID",
                "parameters": [
                    {
                        "description": "The ID of a point balance reset.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "<ul><li>[WAT-100007] - Only manual Point Balance Resets can be deleted.</li></ul>"
                    }
                },
                "summary": "Marks point balance resets for deletion.",
                "tags": [
                    "Balance Resets"
                ]
            }
        },
        "/v1/attendance/balances/multi_read": {
            "post": {
                "description": "This operation returns point balance summaries for a list of employees within a date range.",
                "operationId": "RetrieveBalances",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessControlledRequestContext"
                            }
                        }
                    },
                    "description": "Retrieve Balances request context contains a list of employees, start date, and end date.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/DayBalance"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101000] - The date format is invalid.</li><li>[WAT-101104] - Start date is required.</li><li>[WAT-101103] - End date is required.</li><li>[WAT-101002] - The date range is invalid. The start date must be on or before the end date.</li><li>[WAT-101105] - An employee ID list is required.</li><li>[WAT-100034] - A conflict occurred. The following parameters are mutually exclusive: ids, qualifiers, refs.</li><li>[WAT-101109] - Employee reference list cannot be null or empty.</li><li>[WAT-101110] - The employee parameter {parameterName} cannot be null.</li></ul>"
                    },
                    "413": {
                        "description": "<ul><li>[WFP-90001] - The service limit has been exceeded by the API operation on {resource} for {X} employees and {Y} days.</li><li>[WFP-90002] - The service limit has been exceeded by the API operation on {resource} for {X} employees.</li></ul>"
                    }
                },
                "summary": "Returns point balance summaries for employees.",
                "tags": [
                    "Balances"
                ]
            }
        },
        "/v1/attendance/discipline_levels/multi_read": {
            "post": {
                "description": "This operation returns the discipline levels for a list of employees within a date range. If <code>includeDailyDiscLevels</code> is true, the discipline level for every day in the date range is returned. If <code>includeDailyDiscLevels</code> is false, only discipline level changes are returned.",
                "operationId": "RetrieveDisciplineLevels",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DisciplineLevelTransactionRequestContext"
                            }
                        }
                    },
                    "description": "Retrieve Discipline Levels request context contains a list of employees, date range, and daily value flag.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Resource found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/DisciplineLevelTransaction"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101000] - The date format is invalid.</li><li>[WAT-101104] - Start date is required.</li><li>[WAT-101103] - End date is required.</li><li>[WAT-101002] - The date range is invalid. The start date must be on or before the end date.</li><li>[WAT-101105] - An employee ID list is required.</li><li>[WAT-100034] - A conflict occurred. The following parameters are mutually exclusive: ids, qualifiers, refs.</li><li>[WAT-101109] - Employee reference list cannot be null or empty.</li><li>[WAT-101110] - The employee parameter {parameterName} cannot be null.</li></ul>"
                    },
                    "413": {
                        "description": "<ul><li>[WFP-90001] - The service limit has been exceeded by the API operation on {resource} for {X} employees and {Y} days.</li><li>[WFP-90002] - The service limit has been exceeded by the API operation on {resource} for {X} employees.</li></ul>"
                    }
                },
                "summary": "Returns discipline levels for employees.",
                "tags": [
                    "Discipline Levels"
                ]
            }
        },
        "/v1/attendance/events": {
            "get": {
                "description": "<p>This operation returns events that resulted in a specified action.</p><p><strong>Note:</strong> Perfect Attendance actions return an empty event list.</p>",
                "operationId": "RetrieveEventsbyAction",
                "parameters": [
                    {
                        "description": "The ID of an Attendance Action.",
                        "in": "query",
                        "name": "action_id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "description": "The pagination index, which represents the particular page of events to return in the response.",
                        "in": "query",
                        "name": "index",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The pagination count, which represents the number of schedule groups to return per page. This parameter has no upper limit.",
                        "in": "query",
                        "name": "count",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "A Boolean indicator of whether or not the operation is executed with a manager role. When false, the operation is executed with an employee role.",
                        "in": "query",
                        "name": "is_manager_role",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/AttenandaceEvent_DomainService"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "[WAT-100202] - The following Action ID does not exist: {id}."
                    }
                },
                "summary": "Returns events that resulted in a specified action.",
                "tags": [
                    "Events"
                ]
            }
        },
        "/v1/attendance/events/multi_create": {
            "post": {
                "description": "This operation creates basic Attendance events for one or more employees.",
                "operationId": "CreateEvents",
                "parameters": [
                    {
                        "description": "A Boolean indicator of whether or not processing continues if errors are encountered. Defaults to false.",
                        "in": "query",
                        "name": "partial_success",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/AttenandaceEvent"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "Events to create.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/AttenandaceEvent_DomainService"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "<ul><li>[WAT-100222] - Some Unknown Error Occurred. Error Details Not Available</li></ul>",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/AttenandaceEvent_DomainService"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101011] - Invalid parameter:{parameterName}.</li><li>[WAT-101100] - A date is required.</li><li>[WAT-100100] - An Event time is required.</li><li>[WAT-101102] - An employee ID is required.</li><li>[WAT-100211] - Event definition ID is required.</li><li>[WAT-100006] - The following Event definition does not exist: {id}.</li><li>[WAT-100000] - An Event cannot have both a day and time amount..</li><li>[WAT-101101] - An amount is required.</li><li>[WAT-101001] - The date or time format is invalid.</li><li>[WAT-100200] - The following Event ID does not exist: {id}.</li></ul>"
                    }
                },
                "summary": "Creates events for one or more employees.",
                "tags": [
                    "Events"
                ]
            }
        },
        "/v1/attendance/events/multi_read": {
            "post": {
                "description": "This operation returns events for a list of employees within a date range.",
                "operationId": "RetrieveEvents",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EventRequestContext"
                            }
                        }
                    },
                    "description": "Retrieve Events request context contains a list of employees, start date, end date, and an Exclude Inconsequential Events flag.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/AttenandaceEvent_DomainService"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101000] - The date format is invalid.</li><li>[WAT-101104] - Start date is required.</li><li>[WAT-101103] - End date is required.</li><li>[WAT-101104] - Start date is required.</li><li>[WAT-101105] - An employee ID list is required.</li><li>[WAT-101002] - The date range is invalid. The start date must be on or before the end date.</li><li>[WAT-100034] - A conflict occurred. The following parameters are mutually exclusive: ids, qualifiers, refs.</li><li>[WAT-101109] - Employee reference list cannot be null or empty.</li><li>[WAT-101110] - The employee parameter {parameterName} cannot be null.</li></ul>"
                    },
                    "413": {
                        "description": "<ul><li>[WFP-90001] - The service limit has been exceeded by the API operation on {resource} for {X} employees and {Y} days.</li><li>[WFP-90002] - The service limit has been exceeded by the API operation on {resource} for {X} employees.</li></ul>"
                    }
                },
                "summary": "Returns events.",
                "tags": [
                    "Events"
                ]
            }
        },
        "/v1/attendance/events/types": {
            "get": {
                "description": "This operation returns a list of the following event types: basic, pattern, combined, lost_time, and perfect_attendance.",
                "operationId": "RetrieveEventTypes",
                "parameters": [
                    {
                        "description": "<em>[Optional]</em>A Boolean indicator of whether or not the operation is executed with a manager role. When false, the operation is executed with an employee role.",
                        "in": "query",
                        "name": "is_manager_role",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/EventGroup"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                },
                "summary": "Returns a list of event types.",
                "tags": [
                    "Events"
                ]
            }
        },
        "/v1/attendance/events/{id}": {
            "delete": {
                "description": "This operation deletes a basic Attendance event by ID. The following event types cannot be deleted: patterns, combined events, lost time events, and perfect Attendance events.",
                "operationId": "DeleteEventbyID",
                "parameters": [
                    {
                        "description": "The ID of an Attendance event.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "[WAT-100200] - The following Event ID does not exist: {id}."
                    }
                },
                "summary": "Deletes a basic event.",
                "tags": [
                    "Events"
                ]
            },
            "post": {
                "description": "This operation updates a basic attendance event by ID.",
                "operationId": "UpdateEventbyID",
                "parameters": [
                    {
                        "description": "The ID of an Attendance event.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttenandaceEvent"
                            }
                        }
                    },
                    "description": "Event to be updated",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttenandaceEvent_DomainService"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101000] - A date must be provided.</li><li>[WAT-100004] - An event time must be provided.</li><li>[WAT-101102] - An employee ID is required.</li><li>[WAT-100211] - Event definition ID is required.</li><li>[WAT-100006] - The following Event definition ID does not exist: {id}.</li><li>[WAT-100000] - An Event cannot have both a day and time amount.</li><li>[WAT-100001] - Deleted Events cannot be modified.</li><li>[WAT-101001] - The date or time format is invalid.</li><li>[WAT-100200] - The following Event ID does not exist: {id}.</li></ul>"
                    }
                },
                "summary": "Updates an event.",
                "tags": [
                    "Events"
                ]
            }
        },
        "/v1/attendance/events/{id}/mark_deleted": {
            "post": {
                "description": "This operation marks a basic attendance event as deleted by ID. The following event types cannot be marked as deleted: patterns, combined events, lost time events, and perfect Attendance events.",
                "operationId": "MarkEventasDeletedbyID",
                "parameters": [
                    {
                        "description": "The ID of an Attendance Event.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "[WAT-100200] - The following Event ID does not exist: {id}."
                    }
                },
                "summary": "Marks an event as deleted.",
                "tags": [
                    "Events"
                ]
            }
        },
        "/v1/attendance/events/{type}/{id}": {
            "get": {
                "description": "This operation returns an event by an ID and type. The following are valid values for type: basic, pattern, combined, lost_time, and perfect_attendance.",
                "operationId": "RetrieveEventbyID",
                "parameters": [
                    {
                        "description": "The ID of an Attendance event.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "description": "Type of an Attendance event.",
                        "in": "path",
                        "name": "type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "<em>[Optional]</em>A Boolean indicator of whether or not the operation is executed with a manager role. When false, the operation is executed with an employee role.",
                        "in": "query",
                        "name": "is_manager_role",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttenandaceEvent_DomainService"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-100201] - The following Event type does not exist: {type}.</li><li>[WAT-100200] - The following Event ID does not exist: {id}.</li></ul>"
                    }
                },
                "summary": "Returns an event.",
                "tags": [
                    "Events"
                ]
            }
        },
        "/v1/attendance/markers/multi_create": {
            "post": {
                "description": "This operation creates or updates Ignore History Markers or Ignore Timecard Markers for a list of employees. When an Ignore History Marker is added to an employee record, Attendance events earlier that the Ignore History Marker date are not processed. When an Ignore Timecard Marker is added to an employee record, Attendance events earlier than the Ignore Timecard Marker date are not processed.",
                "operationId": "CreateorUpdateIgnoreMarkers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpsertDateMarkerRequestContext"
                            }
                        }
                    },
                    "description": "The request context for the Create or Update Ignore Markers operation contains marker type, a list of employees, and a date.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/EmployeeProcInfo"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101105] - An employee id list is required.</li><li>[WAT-101000] - The date format is invalid.</li><li>[WAT-101023] - The marker type {markerType} is not valid.</li><li>[WAT-101107] - A A marker type is required.</li></ul>"
                    }
                },
                "summary": "Creates or updates Ignore History Markers or Ignore Timecard Markers for employees.",
                "tags": [
                    "Markers"
                ]
            }
        },
        "/v1/attendance/markers/multi_delete": {
            "post": {
                "description": "This operation removes Ignore History Markers or Ignore Timecard Markers for a list of employees. When an Ignore History Marker is removed from an employee record, all Attendance events are processed. When an Ignore Timecard Marker is removed from an employee record, the Attendance Processor no longer ignores Timecard data preceding the Ignore Timecard Marker date.",
                "operationId": "RemoveIgnoreMarkers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteDateMarkerRequestContext"
                            }
                        }
                    },
                    "description": "The request context for the Remove Ignore Markers operation contains marker type and a list of employees.",
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101105] - An employee id list is required.</li><li>[WAT-101023] - The marker type {markerType} is not valid.</li><li>[WAT-101107] - A A marker type is required.</li><li>[WAT-100208] - Ignore History Marker does not exist for the following employees: {ids}</li><li>[WAT-100209] - Ignore Timecard Data Marker does not exist for the following employees: {ids}.</li></ul>"
                    }
                },
                "summary": "Removes Ignore History Markers or Ignore Timecard Markers for employees.",
                "tags": [
                    "Markers"
                ]
            }
        },
        "/v1/attendance/markers/multi_read": {
            "post": {
                "description": "This operation returns history and Timecard data markers for a list of employees.",
                "operationId": "RetrieveMarkers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessControlledRequestContext"
                            }
                        }
                    },
                    "description": "The request context for the Retrieve Markers operation contains a list of employees and an optional start date and end date.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/EmployeeProcInfo"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101105] - An employee ID list is required.</li><li>[WAT-100034] - A conflict occurred. The following parameters are mutually exclusive: ids, qualifiers, refs.</li><li>[WAT-101109] - Employee reference list cannot be null or empty.</li><li>[WAT-101110] - The employee parameter {parameterName} cannot be null.</li></ul>"
                    },
                    "413": {
                        "description": "<ul><li>[WFP-90001] - The service limit has been exceeded by the API operation on {resource} for {X} employees and {Y} days.</li><li>[WFP-90002] - The service limit has been exceeded by the API operation on {resource} for {X} employees.</li></ul>"
                    }
                },
                "summary": "Returns history and Timecard data markers.",
                "tags": [
                    "Markers"
                ]
            }
        },
        "/v1/attendance/perfect_attendance/multi_read": {
            "post": {
                "description": "This operation returns Perfect Attendance awards and violations for a list of employees within a date range.",
                "operationId": "RetrievePerfectAttendanceTransactions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessControlledRequestContext"
                            }
                        }
                    },
                    "description": "The request context for the Retrieve Perfect Attendance Transactions operation contains a list of employees, a start date, and an end date.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/PerfectAttendance"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101000] - The date format is invalid</li> <li> [WAt-101104] - Start date is required</li> <li> [101103] - End date is required </li> <li>[WAT-101002] - The date range is invalid. The start date must be on or before the end date</li> <li> [WAT-101105] - An employee ID list is required</li> <li>[WAT-100034] - A conflict occurred. The following parameters are mutually exclusive: ids, qualifiers, refs.</li><li>[WAT-101109] - Employee reference list cannot be null or empty.</li><li>[WAT-101110] - The employee parameter {parameterName} cannot be null.</li></ul>"
                    },
                    "413": {
                        "description": "<ul><li>[WFP-90001] - The service limit has been exceeded by the API operation on {resource} for {X} employees and {Y} days.</li><li>[WFP-90002] - The service limit has been exceeded by the API operation on {resource} for {X} employees.</li></ul>"
                    }
                },
                "summary": "Returns Perfect Attendance awards and violations.",
                "tags": [
                    "Perfect Attendance"
                ]
            }
        },
        "/v1/attendance/perfect_attendance_deductions/multi_read": {
            "post": {
                "description": "This operation returns Perfect Attendance deductions for a list of employees within a date range.",
                "operationId": "RetrievePerfectAttendanceDeductions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessControlledRequestContext"
                            }
                        }
                    },
                    "description": "The request context for the Retrieve Perfect Attendance Deductions operation contains a list of employees, a start date, and an end date.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/PerfectAttendanceDeduction"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101000] - The date format is invalid.</li><li>[WAT-101104] - Start date is required.</li><li>[WAT-101103] - End date is required.</li><li>[WAT-101002] - The date range is invalid. The start date must be on or before the end date.</li><li>[WAT-101105] - An employee ID list is required.</li><li>[WAT-100034] - A conflict occurred. The following parameters are mutually exclusive: ids, qualifiers, refs.</li><li>[WAT-101109] - Employee reference list cannot be null or empty.</li><li>[WAT-101110] - The employee parameter {parameterName} cannot be null.</li></ul>"
                    },
                    "413": {
                        "description": "<ul><li>[WFP-90001] - The service limit has been exceeded by the API operation on {resource} for {X} employees and {Y} days.</li><li>[WFP-90002] - The service limit has been exceeded by the API operation on {resource} for {X} employees.</li></ul>"
                    }
                },
                "summary": "Returns Perfect Attendance deductions.",
                "tags": [
                    "Perfect Attendance Deductions"
                ]
            }
        },
        "/v1/attendance/processor_requests": {
            "get": {
                "description": "This operation returns all Attendance Processor requests.",
                "operationId": "RetrieveAttendanceProcessorRequests",
                "x-codeSamples": [
                    {
                        "lang": "cURL",
                        "label": "CLI",
                        "source": "curl --request POST \\\n--url 'https://data.apiexample.com/api/example/batch_query/json?format=json' \\\n--header 'content-type: application/octet-stream: ' \\\n--data '{}'\n"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success."
                    }
                },
                "summary": "Returns all Attendance Processor requests.",
                "tags": [
                    "Processor Requests"
                ]
            },
            "post": {
                "description": "This operation creates an Attendance Processor request.",
                "operationId": "CreateAttendanceProcessorRequest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProcessorRequest"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/ProcessorRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProcessorRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProcessorRequest"
                            }
                        }
                    },
                    "description": "Data Transfer Object (DTO) for the Create Attendance Processor Request operation.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessorRequest"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessorRequest"
                                }
                            },
                            "application/x-www-form-urlencoded": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessorRequest"
                                }
                            },
                            "multipart/form-data": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessorRequest"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-100112] - A processor request name is required.</li><li>[WAT-100018] - The processor request qualifier must be less than 200 symbols.</li><li>[WAT-100021] - A processor request with the specified name already exists: {name}.</li><li>[WAT-100114] - A processor request days to trancate parameter is required.</li><li>[WAT-100020] - The processor request days-to-truncate value must be between 0 and 365 days.</li><li>[WAT-100115] - A processor request schedule is required.</li><li>[WAT-100117] - A processor request schedule frequency type is required.</li><li>[WAT-100112] - A processor request schedule dates are required.</li><li>[WAT-100113] - A processor request hyperfind query id is required.</li><li>[WAT-100022] - The processor request Hyperfind query {id} is not valid for user {name}.</li><li>[WAT-101200] - The following employee id does not exist: {id}.</li></ul>"
                    }
                },
                "summary": "Creates an Attendance Processor request.",
                "tags": [
                    "Processor Requests"
                ]
            }
        },
        "/v1/attendance/processor_requests/{id}": {
            "delete": {
                "description": "This operation deletes an Attendance Processor request by ID.",
                "operationId": "DeleteAttendanceProcessorRequestbyID",
                "parameters": [
                    {
                        "description": "The ID of an Attendance Processor request.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "<ul><li>[WAT-100213] - The following Attendance Processor Request does not exist: {id}.</li><li>[WAT-100214] - The following related processor request event does not exist: {id}.</li></ul>"
                    }
                },
                "summary": "Deletes an Attendance Processor request.",
                "tags": [
                    "Processor Requests"
                ]
            },
            "get": {
                "description": "This operation returns an Attendance Processor request by ID.",
                "operationId": "RetrieveAttendanceProcessorRequestbyID",
                "parameters": [
                    {
                        "description": "The ID of an Attendance Processor request.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessorRequest"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-100213] - The following Attendance Processor Request does not exist: {id}.</li><li>[WAT-100214] - The following related processor request event does not exist: {id}.</li></ul>"
                    }
                },
                "summary": "Returns an Attendance Processor request.",
                "tags": [
                    "Processor Requests"
                ]
            },
            "put": {
                "description": "This operation updates an existing Attendance Processor request by ID.",
                "operationId": "UpdateAttendanceProcessorRequestbyID",
                "parameters": [
                    {
                        "description": "The ID of an Attendance Processor request.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProcessorRequest"
                            }
                        }
                    },
                    "description": "Data Transfer Object (DTO) for the Update Attendance Processor Request operation.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessorRequest"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-100018] - The processor request qualifier must be less than 200 symbols.</li><li>[WAT-100021] - A processor request with the specified name already exists: {name}.</li><li>[WAT-100020] - The processor request days-to-truncate value must be between 0 and 365 days.</li><li>[WAT-100117] - A processor request schedule frequency type is required.</li><li>[WAT-100112] - A processor request schedule dates are required.</li><li>[WAT-100022] - The processor request Hyperfind query {id} is not valid for user {name}.\"</li><li>[WAT-100213] - The following Attendance Processor Request does not exist: {id}.</li><li>[WAT-100214] - The following related processor request event does not exist: {id}.</li><li>[WAT-101200] - The following employee id does not exist: {id}.</li></ul>"
                    }
                },
                "summary": "Updates an Attendance Processor request.",
                "tags": [
                    "Processor Requests"
                ]
            }
        },
        "/v1/attendance/profiles_assignments/multi_read": {
            "post": {
                "description": "This operation returns profile assignments for a list of employees within a date range.",
                "operationId": "RetrieveProfileAssignments",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessControlledRequestContext"
                            }
                        }
                    },
                    "description": "Attendance employee profile assignments request context: contains list of employees, start date, and end date.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ProfileAssignment"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101000] - The date format is invalid.</li><li>[WAT-101104] - Start date is required.</li><li>[WAT-101103] - End date is required.</li><li>[WAT-101002] - The date range is invalid. The start date must be on or before the end date.</li><li>[WAT-101105] - An employee ID list is required.</li><li>[WAT-100034] - A conflict occurred. The following parameters are mutually exclusive: ids, qualifiers, refs.</li><li>[WAT-101109] - Employee reference list cannot be null or empty.</li><li>[WAT-101110] - The employee parameter {parameterName} cannot be null.</li></ul>"
                    },
                    "413": {
                        "description": "<ul><li>[WFP-90001] - The service limit has been exceeded by the API operation on {resource} for {X} employees and {Y} days.</li><li>[WFP-90002] - The service limit has been exceeded by the API operation on {resource} for {X} employees.</li></ul>"
                    }
                },
                "summary": "Returns profile assignments for employees.",
                "tags": [
                    "Profile Assignments"
                ]
            }
        },
        "/v1/attendance/rules/execute": {
            "post": {
                "description": "This operation executes Attendance rules for a list of employees within a date range. The Attendance Processor runs the rules and generates any resulting actions for each employee.",
                "operationId": "ExecuteAttendanceRulesforEmployees",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplyRuleRequestContext"
                            }
                        }
                    },
                    "description": "Contains a list of employees, start date, end date, and Use Default Start Date flag.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "<ul><li>[WAT-101000] - The date format is invalid.</li><li>[WAT-101105] - An employee ID list is required.</li><li>[WAT-101103] - End date is required.</li><li>[WAT-101104] - Start date is required.</li><li>[WAT-101002] - The date range is invalid. The start date must be on or before the end date.</li><li>[WAT-101007] - End date should be no later than today.</li><li>[WAT-100034] - A conflict occurred. The following parameters are mutually exclusive: ids, qualifiers, refs.</li><li>[WAT-101109] - Employee reference list cannot be null or empty.</li><li>[WAT-101110] - The employee parameter {parameterName} cannot be null.</li></ul>"
                    }
                },
                "summary": "Executes rules for employees.",
                "tags": [
                    "Rules"
                ]
            }
        }
    },
    "servers": [
        {
            "url": "/"
        }
    ],
	$include#cvixapi: ./cvixapi.json
    "components": {
        "schemas": {
            "CompleteActionsRequestContext": {
                "description": "Request Context object for action completion.",
                "properties": {
                    "completionDateTime": {
                        "description": "Date of completion.",
                        "type": "string"
                    },
                    "dateRange": {
                        "$ref": "#/components/schemas/AttendanceDateRange"
                    },
                    "employees": {
                        "$ref": "#/components/schemas/ObjectReferenceList"
                    },
                    "note": {
                        "description": "User Note.",
                        "type": "string"
                    }
                },
                "required": [
                    "completionDateTime",
                    "dateRange",
                    "employees",
                    "note"
                ],
                "type": "object"
            },
            "AccessControlledRequestContext": {
                "description": "Parent for other Attendance Request Contexts with flag manager role.",
                "properties": {
                    "dateRange": {
                        "$ref": "#/components/schemas/AttendanceDateRange"
                    },
                    "employees": {
                        "$ref": "#/components/schemas/ObjectReferenceList"
                    },
                    "isManagerRole": {
                        "description": "A flag that indicates whether user has a manager role.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "dateRange",
                    "employees"
                ],
                "type": "object"
            },
            "ActionDocument": {
                "description": "Model for documents associated with an Action.",
                "properties": {
                    "applyDateTime": {
                        "description": "Apply date of the action transaction.",
                        "type": "string"
                    },
                    "documents": {
                        "description": "Documents associated to the action transaction.",
                        "items": {
                            "$ref": "#/components/schemas/DocumentSingleBinaryResponse"
                        },
                        "type": "array"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the attendance action.",
                        "type": "string"
                    }
                },
                "required": [
                    "applyDateTime",
                    "documents",
                    "employee",
                    "name"
                ],
                "type": "object"
            },
            "ActionRequestContext": {
                "description": "Request context object for Action.",
                "properties": {
                    "completed": {
                        "description": "A flag if set to true returns only completed actions.",
                        "type": "boolean"
                    },
                    "dateRange": {
                        "$ref": "#/components/schemas/AttendanceDateRange"
                    },
                    "employees": {
                        "$ref": "#/components/schemas/ObjectReferenceList"
                    },
                    "isManagerRole": {
                        "description": "A flag that indicates whether user has a manager role.",
                        "type": "boolean"
                    },
                    "requiredOnly": {
                        "description": "A flag if set to true returns only required actions.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "dateRange",
                    "employees"
                ],
                "type": "object"
            },
            "Action": {
                "description": "Model for Action Transaction.",
                "properties": {
                    "actionStatusDateTime": {
                        "description": "Depending whether the action is initiated or completed, this date equals to its initiateddate/completeddate accordingly.",
                        "type": "string"
                    },
                    "balance": {
                        "$ref": "#/components/schemas/PointBalance"
                    },
                    "code": {
                        "description": "Action code.",
                        "type": "string"
                    },
                    "completed": {
                        "description": "A flag that indicates whether action transaction is completed.",
                        "type": "boolean"
                    },
                    "completionDateTime": {
                        "description": "Action completed date and time.",
                        "type": "string"
                    },
                    "description": {
                        "description": "Action description.",
                        "type": "string"
                    },
                    "disciplineLevel": {
                        "$ref": "#/components/schemas/DisciplineLevel"
                    },
                    "effectiveDateId": {
                        "description": "Corresponds to effective date setting for the action definition. equals to 1 if action effective date is action triggered date, equals to 2 if action effective date is action completed date.",
                        "enum": [
                            1,
                            2
                        ],
                        "format": "int64",
                        "type": "integer"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto"
                    },
                    "hasDocuments": {
                        "description": "Indicates whether the action has documents.",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "initiatedDateTime": {
                        "description": "Action initiated date and time.",
                        "type": "string"
                    },
                    "lastRuleEnforceDateTime": {
                        "description": "Last rule enforced date and time.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name associated with an object reference.",
                        "type": "string"
                    },
                    "perfectAttendance": {
                        "description": "A flag that indicates whether this action belongs to perfect attendance policy.",
                        "type": "boolean"
                    },
                    "policyDefinition": {
                        "$ref": "#/components/schemas/PolicyDefinition"
                    },
                    "processedThroughDateTime": {
                        "description": "Processed through date and time.",
                        "type": "string"
                    },
                    "ruleDefinition": {
                        "$ref": "#/components/schemas/RuleDefinition"
                    },
                    "status": {
                        "$ref": "#/components/schemas/AttendanceLocalizedObject"
                    },
                    "transactionId": {
                        "description": "Action transaction id.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "triggeredBalance": {
                        "$ref": "#/components/schemas/PointBalance"
                    },
                    "triggeredDateTime": {
                        "description": "Action triggerred date and time.",
                        "type": "string"
                    },
                    "userNote": {
                        "description": "User note.",
                        "type": "string"
                    },
                    "versionNumber": {
                        "description": "Version.",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "required": [
                    "actionStatusDateTime",
                    "balance",
                    "code",
                    "completed",
                    "completionDateTime",
                    "description",
                    "disciplineLevel",
                    "effectiveDateId",
                    "employee",
                    "hasDocuments",
                    "initiatedDateTime",
                    "lastRuleEnforceDateTime",
                    "name",
                    "perfectAttendance",
                    "policyDefinition",
                    "processedThroughDateTime",
                    "ruleDefinition",
                    "status",
                    "transactionId",
                    "triggeredBalance",
                    "triggeredDateTime",
                    "userNote",
                    "versionNumber"
                ],
                "type": "object"
            },
            "ActionUpdateRequestContext": {
                "description": "Request Context for updating an Action.",
                "properties": {
                    "completionDateTime": {
                        "description": "Action completion date",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of the action to be updated.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "note": {
                        "description": "User text note.",
                        "type": "string"
                    },
                    "versionNumber": {
                        "description": "Version of Action",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "required": [
                    "completionDateTime",
                    "id",
                    "note",
                    "versionNumber"
                ],
                "type": "object"
            },
            "DocumentSingleBinaryResponse": {
                "description": "Model for the Document resource.",
                "properties": {
                    "binary": {
                        "type": "boolean"
                    },
                    "contentType": {
                        "description": "The content type of a binary data response.",
                        "enum": [
                            "ZIP",
                            "XML",
                            "XHTML",
                            "DOC",
                            "DOCX",
                            "PDF",
                            "TXT",
                            "HTML",
                            "HTM",
                            "JPG",
                            "XLS",
                            "XLSX"
                        ],
                        "type": "string"
                    },
                    "creationDateTime": {
                        "description": "The date and time a document management entity was created.",
                        "format": "date",
                        "type": "string"
                    },
                    "data": {
                        "description": "The binary data response content.",
                        "items": {
                            "format": "byte",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "domain": {
                        "$ref": "#/components/schemas/ObjectReference"
                    },
                    "entityId": {
                        "description": "The ID of an entity associated with a document binary response.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "fileName": {
                        "description": "The file name of the binary data response.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of a document management entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "locale": {
                        "$ref": "#/components/schemas/LocalePolicy"
                    },
                    "name": {
                        "description": "The name of a document management entity.",
                        "type": "string"
                    },
                    "size": {
                        "description": "The size of a document management entity.",
                        "format": "double",
                        "type": "number"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "object"
                        },
                        "description": "The tags associated with a document binary response.",
                        "type": "object"
                    }
                },
                "required": [
                    "contentType",
                    "creationDateTime",
                    "data",
                    "domain",
                    "entityId",
                    "fileName",
                    "id",
                    "locale",
                    "name",
                    "size",
                    "tags"
                ],
                "type": "object"
            },
            "AttendanceProfile": {
                "description": "Model for Attendance Profile.",
                "properties": {
                    "activeSwitch": {
                        "description": "A Boolean indicator of whether or not an attendance profile is active.",
                        "type": "boolean"
                    },
                    "description": {
                        "description": "The description of an attendance profile.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of an attendance profile.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of an attendance profile.",
                        "type": "string"
                    },
                    "persistentId": {
                        "description": "The persistent ID of an attendance profile.",
                        "type": "string"
                    },
                    "versions": {
                        "description": "A list of the profile policies associated with each attendance profile.",
                        "items": {
                            "$ref": "#/components/schemas/ProfilePolicyAssignmentDTOList"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "activeSwitch",
                    "description",
                    "id",
                    "name",
                    "persistentId",
                    "versions"
                ],
                "type": "object"
            },
            "AttendanceAuditDataRequestContext": {
                "description": "The audit records common data model.",
                "properties": {
                    "dateRange": {
                        "$ref": "#/components/schemas/AttendanceDateRange"
                    },
                    "employees": {
                        "$ref": "#/components/schemas/ObjectReferenceList"
                    },
                    "entityTypes": {
                        "description": "Case insensitive auditing entity types.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "dateRange",
                    "employees"
                ],
                "type": "object"
            },
            "AttendanceAuditData": {
                "description": "The audit records common data model.",
                "properties": {
                    "entityType": {
                        "$ref": "#/components/schemas/AttendanceLocalizedObject"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "type": "string"
                    },
                    "revisionDate": {
                        "description": "The date and time of changes",
                        "readOnly": true,
                        "type": "string"
                    },
                    "revisionInfo": {
                        "description": "revision unique identifier",
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "revisionType": {
                        "$ref": "#/components/schemas/AttendanceLocalizedObject"
                    },
                    "user": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto"
                    }
                },
                "type": "object"
            },
            "UpdateBalanceRequestContext": {
                "description": "Request Context for Balance Update.",
                "properties": {
                    "amount": {
                        "description": "The balance amount to update.",
                        "type": "number"
                    },
                    "balanceDefinition": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto"
                    },
                    "employees": {
                        "$ref": "#/components/schemas/ObjectReferenceList"
                    },
                    "isManagerRole": {
                        "description": "A flag that indicates whether user has a manager role.",
                        "type": "boolean"
                    },
                    "updateDateTime": {
                        "description": "The date and time of a balance update in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    }
                },
                "required": [
                    "amount",
                    "balanceDefinition",
                    "employees",
                    "updateDateTime"
                ],
                "type": "object"
            },
            "PointTransaction": {
                "description": "Model for Point Transaction.",
                "properties": {
                    "applyDateTime": {
                        "description": "Apply date and time of point transaction.",
                        "type": "string"
                    },
                    "balanceChange": {
                        "description": "Balance change amount.",
                        "format": "double",
                        "type": "number"
                    },
                    "decimalPlaceNum": {
                        "description": "Number of decimal places.",
                        "type": "number"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name associated with an object reference.",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/AttendanceLocalizedObject"
                    }
                },
                "required": [
                    "applyDateTime",
                    "balanceChange",
                    "employee",
                    "name",
                    "type"
                ],
                "type": "object"
            },
            "GetBalancesRequestContext": {
                "description": "Request Context for Get Balance Resets and Adjustments",
                "properties": {
                    "balanceTypes": {
                        "description": "A list of balance type categories for filtering",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "dateRange": {
                        "$ref": "#/components/schemas/AttendanceDateRange"
                    },
                    "employees": {
                        "$ref": "#/components/schemas/ObjectReferenceList"
                    },
                    "isManagerRole": {
                        "description": "A flag that indicates whether user has a manager role.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "dateRange",
                    "employees"
                ],
                "type": "object"
            },
            "BalanceAdjustment_DomainService": {
                "description": "Model for Balance Adjustment.",
                "properties": {
                    "applyDateTime": {
                        "description": "Apply date and time of point transaction.",
                        "type": "string"
                    },
                    "balanceChange": {
                        "description": "Balance change amount.",
                        "format": "double",
                        "type": "number"
                    },
                    "decimalPlaceNum": {
                        "description": "Number of decimal places.",
                        "type": "number"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto_DomainService"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name associated with an object reference.",
                        "type": "string"
                    },
                    "pointBalanceType": {
                        "$ref": "#/components/schemas/PointBalanceType_DomainService"
                    },
                    "policyDefinition": {
                        "$ref": "#/components/schemas/PolicyDefinition_DomainService"
                    },
                    "ruleDefinition": {
                        "$ref": "#/components/schemas/RuleDefinition_DomainService"
                    },
                    "type": {
                        "$ref": "#/components/schemas/AttendanceLocalizedObject_DomainService"
                    },
                    "updatedByUser": {
                        "description": "The ID of the user who performed this balance adjustment.",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "required": [
                    "applyDateTime",
                    "balanceChange",
                    "employee",
                    "name",
                    "pointBalanceType",
                    "policyDefinition",
                    "ruleDefinition",
                    "type",
                    "updatedByUser"
                ],
                "type": "object"
            },
            "AttendanceExpiringBalance_DomainService": {
                "description": "Model for Balance Expiration.",
                "properties": {
                    "awardDateTime": {
                        "description": "The date and time on which expired event was generated.",
                        "type": "string"
                    },
                    "balanceChange": {
                        "description": "Balance change amount.",
                        "format": "double",
                        "type": "number"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto_DomainService"
                    },
                    "expirationDateTime": {
                        "description": "The date and time of when this balance is going to be expired.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name associated with an object reference.",
                        "type": "string"
                    },
                    "pointBalanceType": {
                        "$ref": "#/components/schemas/PointBalanceType_DomainService"
                    },
                    "policyDefinition": {
                        "$ref": "#/components/schemas/PolicyDefinition_DomainService"
                    },
                    "resetDateTime": {
                        "description": "The date and time of reset that leaded to the balance not being changed by expiration.",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/AttendanceLocalizedObject_DomainService"
                    }
                },
                "required": [
                    "awardDateTime",
                    "balanceChange",
                    "employee",
                    "expirationDateTime",
                    "name",
                    "pointBalanceType",
                    "policyDefinition",
                    "resetDateTime",
                    "type"
                ],
                "type": "object"
            },
            "ResetBalanceRequestContext": {
                "description": "The request payload model for a balance reset.",
                "properties": {
                    "amount": {
                        "description": "The reset amount of a balance reset.",
                        "type": "number"
                    },
                    "balanceDefinition": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto"
                    },
                    "dateRange": {
                        "$ref": "#/components/schemas/AttendanceDateRange"
                    },
                    "employees": {
                        "$ref": "#/components/schemas/ObjectReferenceList"
                    },
                    "isManagerRole": {
                        "description": "A flag that indicates whether user has a manager role.",
                        "type": "boolean"
                    },
                    "resetDateTime": {
                        "description": "The date and time of a balance reset in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    }
                },
                "required": [
                    "amount",
                    "balanceDefinition",
                    "dateRange",
                    "employees",
                    "resetDateTime"
                ],
                "type": "object"
            },
            "PointBalance": {
                "description": "Model for Point Balance.",
                "properties": {
                    "balanceAmount": {
                        "description": "Balance amount.",
                        "format": "double",
                        "type": "number"
                    },
                    "decimalPlaceNum": {
                        "description": "Number of decimal places.",
                        "type": "number"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name associated with an object reference.",
                        "type": "string"
                    },
                    "startDateTime": {
                        "description": "The start date and time of this balance.",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/AttendanceLocalizedObject"
                    }
                },
                "required": [
                    "balanceAmount",
                    "employee",
                    "name",
                    "startDateTime",
                    "type"
                ],
                "type": "object"
            },
            "BalanceReset": {
                "description": "Model for Balance Reset.",
                "properties": {
                    "balanceAmount": {
                        "description": "Balance amount.",
                        "format": "double",
                        "type": "number"
                    },
                    "decimalPlaceNum": {
                        "description": "Number of decimal places.",
                        "type": "number"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name associated with an object reference.",
                        "type": "string"
                    },
                    "pointBalanceType": {
                        "$ref": "#/components/schemas/PointBalanceType"
                    },
                    "policyDefinition": {
                        "$ref": "#/components/schemas/PolicyDefinition"
                    },
                    "ruleDefinition": {
                        "$ref": "#/components/schemas/RuleDefinition"
                    },
                    "startDateTime": {
                        "description": "The start date and time of this balance.",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/AttendanceLocalizedObject"
                    },
                    "updatedByUser": {
                        "description": "The ID of the user who performed the reset.",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "required": [
                    "balanceAmount",
                    "employee",
                    "name",
                    "pointBalanceType",
                    "policyDefinition",
                    "ruleDefinition",
                    "startDateTime",
                    "type",
                    "updatedByUser"
                ],
                "type": "object"
            },
            "DayBalance": {
                "description": "Model for Day Balance.",
                "properties": {
                    "dateTime": {
                        "description": "The date and time associated with a balance.",
                        "type": "string"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto"
                    },
                    "endBalanceAmount": {
                        "description": "The ending balance amount.",
                        "format": "double",
                        "type": "number"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "isChanged": {
                        "description": "A Boolean indicator of whether or not a change in points occurred for this balance transaction.",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "The name associated with an object reference.",
                        "type": "string"
                    },
                    "pointBalanceType": {
                        "$ref": "#/components/schemas/PointBalanceType"
                    },
                    "startBalanceAmount": {
                        "description": "The starting balance amount.",
                        "format": "double",
                        "type": "number"
                    },
                    "type": {
                        "$ref": "#/components/schemas/AttendanceLocalizedObject"
                    }
                },
                "required": [
                    "dateTime",
                    "employee",
                    "endBalanceAmount",
                    "isChanged",
                    "name",
                    "pointBalanceType",
                    "startBalanceAmount",
                    "type"
                ],
                "type": "object"
            },
            "DisciplineLevelTransactionRequestContext": {
                "description": "Request Context for Discipline Level Transaction.",
                "properties": {
                    "dateRange": {
                        "$ref": "#/components/schemas/AttendanceDateRange"
                    },
                    "employees": {
                        "$ref": "#/components/schemas/ObjectReferenceList"
                    },
                    "includeDailyDiscLevels": {
                        "description": "If false, returns only discipline level changes, otherwise returns all the dates within date range with corresponding discipline levels on every day.",
                        "type": "boolean"
                    },
                    "isManagerRole": {
                        "description": "A flag that indicates whether user has a manager role.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "dateRange",
                    "employees"
                ],
                "type": "object"
            },
            "DisciplineLevelTransaction": {
                "description": "Model for Discipline Level Transaction.",
                "properties": {
                    "balance": {
                        "$ref": "#/components/schemas/PointBalance"
                    },
                    "dateTime": {
                        "description": "The date and time of discipline level change or daily discipline level.",
                        "type": "string"
                    },
                    "discipline": {
                        "$ref": "#/components/schemas/DisciplineLevel"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto"
                    },
                    "endDateTime": {
                        "description": "The end date and time of discipline level.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "policy": {
                        "$ref": "#/components/schemas/PolicyDefinition"
                    },
                    "profile": {
                        "$ref": "#/components/schemas/ProfileDefinition"
                    },
                    "rule": {
                        "$ref": "#/components/schemas/RuleDefinition"
                    },
                    "startDateTime": {
                        "description": "The start date and time of discipline level.",
                        "type": "string"
                    }
                },
                "required": [
                    "balance",
                    "dateTime",
                    "discipline",
                    "employee",
                    "endDateTime",
                    "policy",
                    "profile",
                    "rule",
                    "startDateTime"
                ],
                "type": "object"
            },
            "AttenandaceEvent_DomainService": {
                "description": "Model for event publish history search response.",
                "properties": {
                    "amount": {
                        "description": "The amount in seconds.",
                        "type": "number"
                    },
                    "applyDate": {
                        "description": "Date when event was generated.",
                        "format": "date",
                        "type": "string"
                    },
                    "dayAmount": {
                        "description": "The amount in days.",
                        "type": "number"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto_DomainService"
                    },
                    "employeeCurrency": {
                        "description": "Currency code of event's employee.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "eventDefinition": {
                        "$ref": "#/components/schemas/EventDefinition_DomainService"
                    },
                    "eventTime": {
                        "description": "Time when event was generated.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "isSystem": {
                        "description": "A flag that indicates whether this event is a system generated one.",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "The name associated with an object reference.",
                        "type": "string"
                    },
                    "pointTransaction": {
                        "$ref": "#/components/schemas/PointTransaction_DomainService"
                    },
                    "policyDefinition": {
                        "$ref": "#/components/schemas/PolicyDefinition_DomainService"
                    },
                    "ruleDefinition": {
                        "$ref": "#/components/schemas/RuleDefinition_DomainService"
                    },
                    "timeZoneId": {
                        "description": "Time zone identifier.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": {
                        "$ref": "#/components/schemas/AttendanceLocalizedObject_DomainService"
                    },
                    "updatedByUserId": {
                        "description": "The ID of user who updated the event.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "userCurrency": {
                        "description": "Currency code of logged in user.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "wageLiability": {
                        "description": "Wage liability amount calculated based on TimeKeeping Wage Rate.",
                        "format": "double",
                        "readOnly": true,
                        "type": "number"
                    }
                },
                "required": [
                    "amount",
                    "applyDate",
                    "dayAmount",
                    "employee",
                    "eventDefinition",
                    "eventTime",
                    "isSystem",
                    "name",
                    "pointTransaction",
                    "policyDefinition",
                    "ruleDefinition",
                    "timeZoneId",
                    "type",
                    "updatedByUserId"
                ],
                "type": "object"
            },
            "AttenandaceEvent": {
                "description": "Model for event publish history search response.",
                "properties": {
                    "amount": {
                        "description": "The amount in seconds.",
                        "type": "number"
                    },
                    "applyDate": {
                        "description": "Date when event was generated.",
                        "format": "date",
                        "type": "string"
                    },
                    "dayAmount": {
                        "description": "The amount in days.",
                        "type": "number"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto"
                    },
                    "employeeCurrency": {
                        "description": "Currency code of event's employee.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "eventDefinition": {
                        "$ref": "#/components/schemas/EventDefinition"
                    },
                    "eventTime": {
                        "description": "Time when event was generated.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "incidentDate": {
                        "description": "Included only for incident requests, equals to apply date.",
                        "format": "date",
                        "readOnly": true,
                        "type": "string"
                    },
                    "incidentType": {
                        "description": "Included only for incident requests, has EVENT value for a such dto type.",
                        "enum": [
                            "EVENT",
                            "EXPIRING_POINT",
                            "BALANCE_UPDATE"
                        ],
                        "readOnly": true,
                        "type": "string"
                    },
                    "isSystem": {
                        "description": "A flag that indicates whether this event is a system generated one.",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "The name associated with an object reference.",
                        "type": "string"
                    },
                    "pointTransaction": {
                        "$ref": "#/components/schemas/PointTransaction"
                    },
                    "policyDefinition": {
                        "$ref": "#/components/schemas/PolicyDefinition"
                    },
                    "ruleDefinition": {
                        "$ref": "#/components/schemas/RuleDefinition"
                    },
                    "timeZoneId": {
                        "description": "Time zone identifier.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": {
                        "$ref": "#/components/schemas/AttendanceLocalizedObject"
                    },
                    "updatedByUserId": {
                        "description": "The ID of user who updated the event.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "userCurrency": {
                        "description": "Currency code of logged in user.",
                        "readOnly": true,
                        "type": "string"
                    },
                    "wageLiability": {
                        "description": "Wage liability amount calculated based on TimeKeeping Wage Rate.",
                        "format": "double",
                        "readOnly": true,
                        "type": "number"
                    }
                },
                "required": [
                    "amount",
                    "applyDate",
                    "dayAmount",
                    "employee",
                    "eventDefinition",
                    "eventTime",
                    "isSystem",
                    "name",
                    "pointTransaction",
                    "policyDefinition",
                    "ruleDefinition",
                    "timeZoneId",
                    "type",
                    "updatedByUserId"
                ],
                "type": "object"
            },
            "EventRequestContext": {
                "description": "Request Context for Event.",
                "properties": {
                    "actionId": {
                        "description": "Action Identifier.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "dateRange": {
                        "$ref": "#/components/schemas/AttendanceDateRange"
                    },
                    "employeeId": {
                        "description": "A reference to the Employee object.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "employees": {
                        "$ref": "#/components/schemas/ObjectReferenceList"
                    },
                    "eventTypes": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "excludeInconsequentialEvents": {
                        "description": "If false - returns all events even without consequences.",
                        "type": "boolean"
                    },
                    "isManagerRole": {
                        "description": "A flag that indicates whether user has a manager role.",
                        "type": "boolean"
                    },
                    "wageLiabilityCalculated": {
                        "description": "Flag that indicates whether Wage Liability attribute should be calculated and included in the response.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "actionId",
                    "dateRange",
                    "employeeId",
                    "employees"
                ],
                "type": "object"
            },
            "EventGroup": {
                "description": "Model for Event Group.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "UpsertDateMarkerRequestContext": {
                "description": "Request Context to create/update Ignore History Marker and Ignore Timecard Marker.",
                "properties": {
                    "dateTime": {
                        "description": "Date.",
                        "type": "string"
                    },
                    "employees": {
                        "$ref": "#/components/schemas/ObjectReferenceList"
                    },
                    "markerType": {
                        "description": "The type of marker involved in the operation. Possible values are \"HISTORY\" or \"TIMECARD\".",
                        "type": "string"
                    }
                },
                "required": [
                    "dateTime",
                    "employees",
                    "markerType"
                ],
                "type": "object"
            },
            "EmployeeProcInfo": {
                "description": "Model for EmployeeProcInfo.",
                "properties": {
                    "amnestyMarkerDateTime": {
                        "description": "ignore history marker.",
                        "type": "string"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "procStartDateTime": {
                        "description": "date&time from which rules were applied.",
                        "type": "string"
                    },
                    "procThroughDateTime": {
                        "description": "date&time to which rules were applied.",
                        "type": "string"
                    },
                    "startupDateTime": {
                        "description": "ignore timecard marker.",
                        "type": "string"
                    }
                },
                "required": [
                    "amnestyMarkerDateTime",
                    "employee",
                    "procStartDateTime",
                    "procThroughDateTime",
                    "startupDateTime"
                ],
                "type": "object"
            },
            "DeleteDateMarkerRequestContext": {
                "description": "Request Context to delete Ignore History Marker and Ignore Timecard Marker.\")",
                "properties": {
                    "employees": {
                        "$ref": "#/components/schemas/ObjectReferenceList"
                    },
                    "markerType": {
                        "description": "The type of marker involved in the operation. Possible values are \"HISTORY\" or \"TIMECARD\".",
                        "type": "string"
                    }
                },
                "required": [
                    "employees",
                    "markerType"
                ],
                "type": "object"
            },
            "PerfectAttendance": {
                "description": "Model for Perfect Attendance.",
                "properties": {
                    "applyDateTime": {
                        "description": "Apply date and time of a perfect attendance transaction.",
                        "type": "string"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name associated with an object reference.",
                        "type": "string"
                    },
                    "perfectAttendanceDefinition": {
                        "$ref": "#/components/schemas/PerfectAttendanceDefinition"
                    },
                    "pointTransaction": {
                        "$ref": "#/components/schemas/PointTransaction"
                    },
                    "policyDefinition": {
                        "$ref": "#/components/schemas/PolicyDefinition"
                    },
                    "type": {
                        "$ref": "#/components/schemas/AttendanceLocalizedObject"
                    }
                },
                "required": [
                    "applyDateTime",
                    "employee",
                    "name",
                    "perfectAttendanceDefinition",
                    "pointTransaction",
                    "policyDefinition",
                    "type"
                ],
                "type": "object"
            },
            "PerfectAttendanceDeduction": {
                "description": "Model for Perfect Attendance Deduction.",
                "properties": {
                    "balanceChange": {
                        "description": "Balance change amount.",
                        "format": "double",
                        "type": "number"
                    },
                    "deductionDateTime": {
                        "description": "date&time of pa deduction's generation .",
                        "type": "string"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name associated with an object reference.",
                        "type": "string"
                    },
                    "perfectAttendanceDateTime": {
                        "description": "date&time of pa award's generation .",
                        "type": "string"
                    },
                    "pointBalanceType": {
                        "$ref": "#/components/schemas/PointBalanceType"
                    },
                    "policyDefinition": {
                        "$ref": "#/components/schemas/PolicyDefinition"
                    },
                    "type": {
                        "$ref": "#/components/schemas/AttendanceLocalizedObject"
                    }
                },
                "required": [
                    "balanceChange",
                    "deductionDateTime",
                    "employee",
                    "name",
                    "perfectAttendanceDateTime",
                    "pointBalanceType",
                    "policyDefinition",
                    "type"
                ],
                "type": "object"
            },
            "ProcessorRequest": {
                "description": "Model for Processor Request.",
                "properties": {
                    "daysToTruncate": {
                        "description": "number of days to truncate for end date calculation.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "description": "description of processor request.",
                        "type": "string"
                    },
                    "hyperfindQuery": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name associated with an object reference.",
                        "type": "string"
                    },
                    "nextRun": {
                        "description": "next attendance processor run info",
                        "type": "string"
                    },
                    "scheduledByUserId": {
                        "description": "The ID of user by which the event is being scheduled.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "scheduledForUserId": {
                        "description": "The ID of user for which the event is being scheduled",
                        "format": "int64",
                        "type": "integer"
                    },
                    "schedulingInfo": {
                        "$ref": "#/components/schemas/SchedulingEventDetails"
                    }
                },
                "required": [
                    "daysToTruncate",
                    "hyperfindQuery",
                    "name",
                    "schedulingInfo"
                ],
                "type": "object"
            },
            "ProfileAssignment": {
                "description": "Model for Profile Assignment.",
                "properties": {
                    "dateTime": {
                        "description": "date&time of profile assignment.",
                        "type": "string"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "profileDefinition": {
                        "$ref": "#/components/schemas/ProfileDefinition"
                    },
                    "type": {
                        "$ref": "#/components/schemas/AttendanceLocalizedObject"
                    }
                },
                "required": [
                    "dateTime",
                    "employee",
                    "profileDefinition",
                    "type"
                ],
                "type": "object"
            },
            "ApplyRuleRequestContext": {
                "description": "Request Context for applying rules.",
                "properties": {
                    "employees": {
                        "$ref": "#/components/schemas/ObjectReferenceList"
                    },
                    "endDate": {
                        "description": "The end date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "type": "string"
                    },
                    "startDate": {
                        "description": "The start date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "type": "string"
                    },
                    "useDefaultStartDate": {
                        "description": "A flag that specifies whether default start date should be used.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "employees",
                    "endDate",
                    "startDate"
                ],
                "type": "object"
            },
            "AttendanceDateRange": {
                "description": "The date range with symbolic period model.",
                "properties": {
                    "endDate": {
                        "description": "The end date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "type": "string"
                    },
                    "startDate": {
                        "description": "The start date of a date range in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "type": "string"
                    },
                    "symbolicPeriod": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto"
                    }
                },
                "required": [
                    "endDate",
                    "startDate",
                    "symbolicPeriod"
                ],
                "type": "object"
            },
            "ObjectReferenceList": {
                "description": "A list of object reference objects.",
                "properties": {
                    "ids": {
                        "description": "A list of IDs.",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "qualifiers": {
                        "description": "A list of qualifiers.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "refs": {
                        "description": "A list of reference objects. Reference objects contain ID and qualifier.",
                        "items": {
                            "$ref": "#/components/schemas/AttendanceObjectReferenceDto"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "ids",
                    "qualifiers",
                    "refs"
                ],
                "type": "object"
            },
            "AttendanceObjectReferenceDto": {
                "description": "The leave object reference model.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "DisciplineLevel": {
                "description": "Model for Discipline Level.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "PolicyDefinition": {
                "description": "Model for Policy Definition.",
                "properties": {
                    "detailLabel": {
                        "description": "Attendance policy definition name.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "detailLabel",
                    "qualifier"
                ],
                "type": "object"
            },
            "RuleDefinition": {
                "description": "Model for Rule Definition.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "AttendanceLocalizedObject": {
                "description": "Model for Localized Object.",
                "properties": {
                    "displayName": {
                        "description": "Name (Localized field).",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name (Non localized field).",
                        "type": "string"
                    }
                },
                "required": [
                    "displayName",
                    "name"
                ],
                "type": "object"
            },
            "ObjectReference": {
                "description": "This model is used as a reference to the target entity.",
                "properties": {
                    "id": {
                        "description": "The ID of the entity being referred by the object.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name of an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name"
                ],
                "type": "object"
            },
            "LocalePolicy": {
                "description": "Model for Locale Policy.",
                "properties": {
                    "countryCode": {
                        "description": "The country code of a locale policy.",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of a locale policy.",
                        "type": "string"
                    },
                    "displayName": {
                        "description": "The display name of a locale policy.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of a locale policy.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "languageCode": {
                        "description": "The language code of a locale policy.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of a locale policy.",
                        "type": "string"
                    },
                    "tenantDefault": {
                        "description": "A Boolean indicator of whether or not a given locale policy is the default locale policy for a tenant.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "countryCode",
                    "description",
                    "displayName",
                    "id",
                    "languageCode",
                    "name",
                    "tenantDefault"
                ],
                "type": "object"
            },
            "ProfilePolicyAssignmentDTOList": {
                "description": "The profile policy assignment array model.",
                "properties": {
                    "effectiveDate": {
                        "description": "The effective date of a profile policy assignment in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "expirationDate": {
                        "description": "The expiration date of a profile policy assignment in ISO_LOCAL_DATE format (YYYY-MM-DD).",
                        "format": "date",
                        "type": "string"
                    },
                    "profilePolicyAssignments": {
                        "description": "An array of profile policy assignments.",
                        "items": {
                            "$ref": "#/components/schemas/ProfilePolicyAssignmentDTO"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "AttendanceObjectReferenceDto_DomainService": {
                "description": "The leave object reference model.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "PointBalanceType_DomainService": {
                "description": "Model for Point Balance.",
                "properties": {
                    "decimalPlaceNum": {
                        "description": "Number of decimal places.",
                        "type": "number"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "maxBalanceAmount": {
                        "description": "Maximum balance amount an employee can have.",
                        "type": "number"
                    },
                    "minBalanceAmount": {
                        "description": "Minimum balance amount an employee can have.",
                        "type": "number"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    },
                    "startingBalanceAmount": {
                        "description": "Starting balance amount for the specified point type.",
                        "type": "number"
                    },
                    "type": {
                        "$ref": "#/components/schemas/AttendanceLocalizedObject_DomainService"
                    }
                },
                "required": [
                    "decimalPlaceNum",
                    "maxBalanceAmount",
                    "minBalanceAmount",
                    "qualifier",
                    "startingBalanceAmount",
                    "type"
                ],
                "type": "object"
            },
            "PolicyDefinition_DomainService": {
                "description": "Model for Policy Definition.",
                "properties": {
                    "detailLabel": {
                        "description": "Attendance policy definition name.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "detailLabel",
                    "qualifier"
                ],
                "type": "object"
            },
            "RuleDefinition_DomainService": {
                "description": "Model for Rule Definition.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "AttendanceLocalizedObject_DomainService": {
                "description": "Model for Localized Object.",
                "properties": {
                    "displayName": {
                        "description": "Name (Localized field).",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name (Non localized field).",
                        "type": "string"
                    }
                },
                "required": [
                    "displayName",
                    "name"
                ],
                "type": "object"
            },
            "PointBalanceType": {
                "description": "Model for Point Balance.",
                "properties": {
                    "decimalPlaceNum": {
                        "description": "Number of decimal places.",
                        "type": "number"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "maxBalanceAmount": {
                        "description": "Maximum balance amount an employee can have.",
                        "type": "number"
                    },
                    "minBalanceAmount": {
                        "description": "Minimum balance amount an employee can have.",
                        "type": "number"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    },
                    "startingBalanceAmount": {
                        "description": "Starting balance amount for the specified point type.",
                        "type": "number"
                    },
                    "type": {
                        "$ref": "#/components/schemas/AttendanceLocalizedObject"
                    }
                },
                "required": [
                    "decimalPlaceNum",
                    "maxBalanceAmount",
                    "minBalanceAmount",
                    "qualifier",
                    "startingBalanceAmount",
                    "type"
                ],
                "type": "object"
            },
            "ProfileDefinition": {
                "description": "Model for Profile Definition.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "EventDefinition_DomainService": {
                "description": "Model for Event Definition.",
                "properties": {
                    "active": {
                        "description": "A Boolean indicator of whether or not an event definition is active.",
                        "type": "boolean"
                    },
                    "amountUnit": {
                        "$ref": "#/components/schemas/AmountUnit_DomainService"
                    },
                    "comment": {
                        "$ref": "#/components/schemas/AttendanceComment_DomainService"
                    },
                    "dayBased": {
                        "description": "A Boolean indicator of whether or not the amount of an event should be measured in days.",
                        "type": "boolean"
                    },
                    "displayName": {
                        "description": "Display name.",
                        "type": "string"
                    },
                    "exceptionType": {
                        "$ref": "#/components/schemas/ExceptionType_DomainService"
                    },
                    "extendedData": {
                        "description": "Shows whether this scheduled or worked pay code event has shift or daily.",
                        "type": "string"
                    },
                    "group": {
                        "$ref": "#/components/schemas/EventGroup_DomainService"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "lowerThresholdAmount": {
                        "description": "Low threshold amount in hours for which events are triggered.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "lowerThresholdDayAmount": {
                        "description": "Low threshold amount in days for which events are triggered.",
                        "type": "number"
                    },
                    "paycode": {
                        "$ref": "#/components/schemas/Paycode_DomainService"
                    },
                    "paycodeAmountType": {
                        "$ref": "#/components/schemas/PaycodeAmountType_DomainService"
                    },
                    "punchType": {
                        "$ref": "#/components/schemas/PunchType_DomainService"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    },
                    "shortName": {
                        "description": "Short name.",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/AttendanceLocalizedObject_DomainService"
                    },
                    "upperThresholdAmount": {
                        "description": "Upper threshold amount in hours for which events are triggered.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "upperThresholdDayAmount": {
                        "description": "Upper threshold amount in days for which events are triggered.",
                        "type": "number"
                    },
                    "usedType": {
                        "$ref": "#/components/schemas/EventUsedType_DomainService"
                    }
                },
                "required": [
                    "active",
                    "amountUnit",
                    "comment",
                    "dayBased",
                    "displayName",
                    "exceptionType",
                    "extendedData",
                    "group",
                    "lowerThresholdAmount",
                    "lowerThresholdDayAmount",
                    "paycode",
                    "paycodeAmountType",
                    "punchType",
                    "qualifier",
                    "shortName",
                    "type",
                    "upperThresholdAmount",
                    "upperThresholdDayAmount",
                    "usedType"
                ],
                "type": "object"
            },
            "PointTransaction_DomainService": {
                "description": "Model for Point Transaction.",
                "properties": {
                    "applyDateTime": {
                        "description": "Apply date and time of point transaction.",
                        "type": "string"
                    },
                    "balanceChange": {
                        "description": "Balance change amount.",
                        "format": "double",
                        "type": "number"
                    },
                    "decimalPlaceNum": {
                        "description": "Number of decimal places.",
                        "type": "number"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/AttendanceObjectReferenceDto_DomainService"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The name associated with an object reference.",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/AttendanceLocalizedObject_DomainService"
                    }
                },
                "required": [
                    "applyDateTime",
                    "balanceChange",
                    "employee",
                    "name",
                    "type"
                ],
                "type": "object"
            },
            "EventDefinition": {
                "description": "Model for Event Definition.",
                "properties": {
                    "active": {
                        "description": "A Boolean indicator of whether or not an event definition is active.",
                        "type": "boolean"
                    },
                    "amountUnit": {
                        "$ref": "#/components/schemas/AmountUnit"
                    },
                    "comment": {
                        "$ref": "#/components/schemas/AttendanceComment"
                    },
                    "dayBased": {
                        "description": "A Boolean indicator of whether or not the amount of an event should be measured in days.",
                        "type": "boolean"
                    },
                    "displayName": {
                        "description": "Display name.",
                        "type": "string"
                    },
                    "exceptionType": {
                        "$ref": "#/components/schemas/ExceptionType"
                    },
                    "extendedData": {
                        "description": "Shows whether this scheduled or worked pay code event has shift or daily.",
                        "type": "string"
                    },
                    "group": {
                        "$ref": "#/components/schemas/EventGroup"
                    },
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "lowerThresholdAmount": {
                        "description": "Low threshold amount in hours for which events are triggered.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "lowerThresholdDayAmount": {
                        "description": "Low threshold amount in days for which events are triggered.",
                        "type": "number"
                    },
                    "paycode": {
                        "$ref": "#/components/schemas/Paycode"
                    },
                    "paycodeAmountType": {
                        "$ref": "#/components/schemas/PaycodeAmountType"
                    },
                    "punchType": {
                        "$ref": "#/components/schemas/PunchType"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    },
                    "shortName": {
                        "description": "Short name.",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/AttendanceLocalizedObject"
                    },
                    "upperThresholdAmount": {
                        "description": "Upper threshold amount in hours for which events are triggered.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "upperThresholdDayAmount": {
                        "description": "Upper threshold amount in days for which events are triggered.",
                        "type": "number"
                    },
                    "usedType": {
                        "$ref": "#/components/schemas/EventUsedType"
                    }
                },
                "required": [
                    "active",
                    "amountUnit",
                    "comment",
                    "dayBased",
                    "displayName",
                    "exceptionType",
                    "extendedData",
                    "group",
                    "lowerThresholdAmount",
                    "lowerThresholdDayAmount",
                    "paycode",
                    "paycodeAmountType",
                    "punchType",
                    "qualifier",
                    "shortName",
                    "type",
                    "upperThresholdAmount",
                    "upperThresholdDayAmount",
                    "usedType"
                ],
                "type": "object"
            },
            "PerfectAttendanceDefinition": {
                "description": "Model for Perfect Attendance Definition.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "SchedulingEventDetails": {
                "description": "Context for Scheduling details.",
                "properties": {
                    "endDateTime": {
                        "description": "The end date and time of an event in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "endTime": {
                        "description": "The end time of an event.",
                        "type": "string"
                    },
                    "forever": {
                        "description": "A Boolean indicator of whether or not an event is forever.",
                        "type": "boolean"
                    },
                    "frequency": {
                        "description": "The frequency of an event.",
                        "type": "string"
                    },
                    "frequencyType": {
                        "description": "The frequency type of an event, such as monthly.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "interval": {
                        "description": "The interval between events.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "startDateTime": {
                        "description": "The start date and time of an event in ISO_LOCAL_DATE_TIME format (yyyy-mm-ddThh:mm:ss.sss).",
                        "type": "string"
                    },
                    "startTime": {
                        "description": "The start time of an event.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProfilePolicyAssignmentDTO": {
                "description": "The profile policy assignment model.",
                "properties": {
                    "id": {
                        "description": "The ID of a profile policy assignment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "orderNum": {
                        "description": "The order number of a profile policy assignment.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier of a profile policy assignment.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "AmountUnit_DomainService": {
                "description": "Model for Amount Unit of Event Definition.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "AttendanceComment_DomainService": {
                "description": "Model for Comment of Event Definition.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "text": {
                        "description": "text.",
                        "type": "string"
                    }
                },
                "required": [
                    "text"
                ],
                "type": "object"
            },
            "ExceptionType_DomainService": {
                "description": "Model for Exception Type.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "EventGroup_DomainService": {
                "description": "Model for Event Group.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "Paycode_DomainService": {
                "description": "Model for Paycode.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "PaycodeAmountType_DomainService": {
                "description": "Model for Paycode Amount Type.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "PunchType_DomainService": {
                "description": "Model for Punch Type.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "EventUsedType_DomainService": {
                "description": "Model for EventUsedType.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "AmountUnit": {
                "description": "Model for Amount Unit of Event Definition.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "AttendanceComment": {
                "description": "Model for Comment of Event Definition.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "text": {
                        "description": "text.",
                        "type": "string"
                    }
                },
                "required": [
                    "text"
                ],
                "type": "object"
            },
            "ExceptionType": {
                "description": "Model for Exception Type.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "Paycode": {
                "description": "Model for Paycode.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "PaycodeAmountType": {
                "description": "Model for Paycode Amount Type.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "PunchType": {
                "description": "Model for Punch Type.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "EventUsedType": {
                "description": "Model for EventUsedType.",
                "properties": {
                    "id": {
                        "description": "The ID of a leave domain entity.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "The qualifier which resolves an object reference.",
                        "type": "string"
                    }
                },
                "required": [
                    "qualifier"
                ],
                "type": "object"
            },
            "Multi_Read_Request_for_attendance_Profiles": {
                "description": "The Retrieve Employee Groups request payload's where model.",
                "properties": {
                    "where": {
                        "$ref": "#/components/schemas/Multi_Read_Criteria_to_fetch_attendance_profile."
                    }
                },
                "type": "object"
            },
            "Multi_Read_Criteria_to_fetch_attendance_profile.": {
                "description": "The Retrieve Employee Groups request payload model.",
                "properties": {
                    "allDetails": {
                        "description": "A Boolean indicator of whether or not the response returns all of the details of each Hyperfind query.",
                        "type": "boolean"
                    },
                    "attendanceProfiles": {
                        "$ref": "#/components/schemas/Multi_Read_References_which_contains_actual_criterias"
                    }
                },
                "type": "object"
            },
            "Multi_Read_References_which_contains_actual_criterias": {
                "description": "The multi_read references which contain the actual criteria for retrieving employee groups.",
                "properties": {
                    "ids": {
                        "description": "An array of employee group IDs. Employee groups are retrieved for valid identifiers specified in this array.",
                        "items": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "persistentIds": {
                        "description": "An array of persistent IDs of Hyperfind queries.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "qualifiers": {
                        "description": "An array of employee group names. Employee groups are retrieved for valid names specified in this array.",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "refs": {
                        "description": "An array of references to employee group objects. Employee groups are retrieved for valid IDs or names specified in this array of object references.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectRef_Entity"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "ObjectRef_Entity": {
                "description": "ObjectRef contains an id and qualifier and either field should be able to uniquely identify an Object",
                "properties": {
                    "id": {
                        "description": "Object Ref Id",
                        "format": "int64",
                        "type": "integer"
                    },
                    "qualifier": {
                        "description": "Object Ref Unique qualifier",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    }
	
}